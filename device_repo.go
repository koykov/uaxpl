// Code generated by "uaxplc -module=device -input=~/dev/php/device-detector/regexes/device". DO NOT EDIT.

package uaxpl

import (
	"regexp"
)

var (
	__dr_idx = [8][]deviceTuple{
		// cameras.yml
		{
			deviceTuple{type64: 0x50000000b, brand64: 0x00000005, matchRI: -0x0001, match64: 0xb00000018, modelSI: 0x0000, models64: 0x00000000},
			deviceTuple{type64: 0x50000000b, brand64: 0x180000001f, matchRI: 0x0000, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000006},
		},
		// car_browsers.yml
		{
			deviceTuple{type64: 0x8e00000099, brand64: 0x8b0000008e, matchRI: 0x0002, match64: 0x00000000, modelSI: -0x0001, models64: 0x600000007},
			deviceTuple{type64: 0x8e00000099, brand64: 0xa3000000a7, matchRI: 0x0004, match64: 0x00000000, modelSI: -0x0001, models64: 0x700000008},
			deviceTuple{type64: 0x8e00000099, brand64: 0xaf000000b8, matchRI: -0x0001, match64: 0xb8000000c6, modelSI: -0x0001, models64: 0x800000009},
			deviceTuple{type64: 0x8e00000099, brand64: 0xcf000000d4, matchRI: 0x0006, match64: 0x00000000, modelSI: -0x0001, models64: 0x90000000b},
			deviceTuple{type64: 0x8e00000099, brand64: 0xe7000000ed, matchRI: -0x0001, match64: 0xed000000fd, modelSI: -0x0001, models64: 0xb0000000c},
		},
		// consoles.yml
		{
			deviceTuple{type64: 0x1060000010d, brand64: 0x10000000106, matchRI: 0x0008, match64: 0x00000000, modelSI: 0x000c, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1170000011a, matchRI: -0x0001, match64: 0x11a00000126, modelSI: 0x000d, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x12f00000138, matchRI: -0x0001, match64: 0x1380000013c, modelSI: -0x0001, models64: 0xe00000013},
			deviceTuple{type64: 0x1060000010d, brand64: 0x17800000180, matchRI: 0x0009, match64: 0x00000000, modelSI: 0x0013, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x18200000186, matchRI: -0x0001, match64: 0x18200000186, modelSI: 0x0014, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x18600000194, matchRI: -0x0001, match64: 0x18600000194, modelSI: -0x0001, models64: 0x1500000017},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1b4000001b9, matchRI: -0x0001, match64: 0x1b9000001c4, modelSI: 0x0017, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1cb000001cf, matchRI: 0x000b, match64: 0x00000000, modelSI: -0x0001, models64: 0x180000001a},
			deviceTuple{type64: 0x1060000010d, brand64: 0x1ee000001f2, matchRI: 0x000c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0000001e},
		},
		// mobiles.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x23c00000243, matchRI: 0x0010, match64: 0x00000000, modelSI: 0x001e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24500000247, matchRI: 0x0011, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f00000021},
			deviceTuple{type64: 0x24700000251, brand64: 0x2680000026b, matchRI: 0x0014, match64: 0x00000000, modelSI: -0x0001, models64: 0x210000002d},
			deviceTuple{type64: 0x24700000251, brand64: 0x29d000002a2, matchRI: 0x0021, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0000002f},
			deviceTuple{type64: 0x24700000251, brand64: 0x2a6000002a9, matchRI: 0x0024, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f00000030},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2b7000002b9, matchRI: 0x0026, match64: 0x00000000, modelSI: -0x0001, models64: 0x3000000038},
			deviceTuple{type64: 0x24700000251, brand64: 0x31000000315, matchRI: 0x002e, match64: 0x00000000, modelSI: -0x0001, models64: 0x380000003f},
			deviceTuple{type64: 0x24300000245, brand64: 0x34100000345, matchRI: 0x0035, match64: 0x00000000, modelSI: 0x003f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x34500000349, matchRI: 0x0036, match64: 0x00000000, modelSI: 0x0040, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3520000035a, matchRI: 0x0037, match64: 0x00000000, modelSI: -0x0001, models64: 0x4100000045},
			deviceTuple{type64: 0x24700000251, brand64: 0x37d00000381, matchRI: 0x0038, match64: 0x00000000, modelSI: 0x0045, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x38100000384, matchRI: 0x0039, match64: 0x00000000, modelSI: 0x0046, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x39100000393, matchRI: 0x003a, match64: 0x00000000, modelSI: -0x0001, models64: 0x470000004c},
			deviceTuple{type64: 0x24300000245, brand64: 0x3c6000003ca, matchRI: -0x0001, match64: 0x3c6000003ca, modelSI: -0x0001, models64: 0x4c00000055},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x43200000436, matchRI: 0x003f, match64: 0x00000000, modelSI: 0x0055, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4390000043e, matchRI: 0x0040, match64: 0x00000000, modelSI: 0x0056, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x43e00000443, matchRI: 0x0041, match64: 0x00000000, modelSI: -0x0001, models64: 0x5700000058},
			deviceTuple{type64: 0x24700000251, brand64: 0x45f00000468, matchRI: 0x0042, match64: 0x00000000, modelSI: 0x0058, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4680000046b, matchRI: 0x0043, match64: 0x00000000, modelSI: -0x0001, models64: 0x5900000061},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4990000049f, matchRI: 0x004b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6100000064},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4bf000004c4, matchRI: 0x004d, match64: 0x00000000, modelSI: 0x0064, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4d2000004d5, matchRI: 0x004e, match64: 0x00000000, modelSI: -0x0001, models64: 0x6500000067},
			deviceTuple{type64: 0x24300000245, brand64: 0x50800000511, matchRI: 0x004f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5110000051a, matchRI: 0x0050, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x51a00000525, matchRI: 0x0051, match64: 0x00000000, modelSI: 0x0067, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x52a0000052d, matchRI: 0x0052, match64: 0x00000000, modelSI: 0x0068, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x52d00000531, matchRI: 0x0053, match64: 0x00000000, modelSI: 0x0069, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x53100000536, matchRI: 0x0054, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a00000079},
			deviceTuple{type64: 0x1060000010d, brand64: 0x5a8000005b0, matchRI: 0x0057, match64: 0x00000000, modelSI: 0x0079, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5b0000005b5, matchRI: -0x0001, match64: 0x5b0000005b5, modelSI: -0x0001, models64: 0x7a0000007b},
			deviceTuple{type64: 0x24700000251, brand64: 0x5b5000005b8, matchRI: 0x0059, match64: 0x00000000, modelSI: -0x0001, models64: 0x7b0000007e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5d2000005d9, matchRI: 0x005a, match64: 0x00000000, modelSI: 0x007e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5d9000005dc, matchRI: 0x005b, match64: 0x00000000, modelSI: -0x0001, models64: 0x7f00000080},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5dc000005e3, matchRI: -0x0001, match64: 0x5dc000005e3, modelSI: -0x0001, models64: 0x8000000081},
			deviceTuple{type64: 0x5e8000005f5, brand64: 0x5e3000005e8, matchRI: 0x005e, match64: 0x00000000, modelSI: 0x0081, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5fd00000602, matchRI: -0x0001, match64: 0x5fd00000602, modelSI: -0x0001, models64: 0x8200000084},
			deviceTuple{type64: 0x24700000251, brand64: 0x60200000606, matchRI: 0x0061, match64: 0x00000000, modelSI: 0x0084, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6060000060a, matchRI: 0x0062, match64: 0x00000000, modelSI: -0x0001, models64: 0x850000009b},
			deviceTuple{type64: 0x24700000251, brand64: 0x70000000705, matchRI: 0x0076, match64: 0x00000000, modelSI: 0x009b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7050000070a, matchRI: 0x0077, match64: 0x00000000, modelSI: 0x009c, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x70f00000713, matchRI: 0x0078, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d000000a0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x75100000755, matchRI: 0x007a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa0000000a1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x76000000765, matchRI: 0x007c, match64: 0x00000000, modelSI: 0x00a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x76500000768, matchRI: 0x007d, match64: 0x00000000, modelSI: 0x00a2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7680000076b, matchRI: 0x007e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3000000a7},
			deviceTuple{type64: 0x24300000245, brand64: 0x79100000795, matchRI: 0x0083, match64: 0x00000000, modelSI: -0x0001, models64: 0xa7000000a9},
			deviceTuple{type64: 0x24300000245, brand64: 0x79500000799, matchRI: 0x0086, match64: 0x00000000, modelSI: 0x00a9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7990000079d, matchRI: 0x0087, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa000000ac},
			deviceTuple{type64: 0x24700000251, brand64: 0x79d000007a1, matchRI: 0x008a, match64: 0x00000000, modelSI: -0x0001, models64: 0xac000000ae},
			deviceTuple{type64: 0x24700000251, brand64: 0x7b0000007b4, matchRI: 0x008c, match64: 0x00000000, modelSI: -0x0001, models64: 0xae000000af},
			deviceTuple{type64: 0x24700000251, brand64: 0x7bb000007c1, matchRI: 0x008d, match64: 0x00000000, modelSI: -0x0001, models64: 0xaf000000bc},
			deviceTuple{type64: 0x24300000245, brand64: 0x8420000084c, matchRI: 0x009b, match64: 0x00000000, modelSI: 0x00bc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x84c0000084f, matchRI: 0x009c, match64: 0x00000000, modelSI: -0x0001, models64: 0xbd000000c9},
			deviceTuple{type64: 0x24300000245, brand64: 0x8ee000008f5, matchRI: 0x00a6, match64: 0x00000000, modelSI: 0x00c9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8f5000008fb, matchRI: 0x00a7, match64: 0x00000000, modelSI: -0x0001, models64: 0xca000000cb},
			deviceTuple{type64: 0x24700000251, brand64: 0x90400000908, matchRI: 0x00a9, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb00000113},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xc1200000c18, matchRI: 0x00e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x11300000115},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xc3400000c3c, matchRI: 0x00e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x11500000117},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xc4e00000c55, matchRI: 0x00e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x11700000119},
			deviceTuple{type64: 0x24700000251, brand64: 0xc6200000c67, matchRI: 0x00ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x1190000012c},
			deviceTuple{type64: 0x24700000251, brand64: 0xce000000ce7, matchRI: 0x00fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x12c00000132},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd2300000d30, matchRI: 0x0101, match64: 0x00000000, modelSI: 0x0132, models64: 0x00000000},
			deviceTuple{type64: 0xd3700000d3e, brand64: 0xd3000000d37, matchRI: 0x0102, match64: 0x00000000, modelSI: -0x0001, models64: 0x13300000137},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xd6200000d67, matchRI: 0x0107, match64: 0x00000000, modelSI: -0x0001, models64: 0x1370000014a},
			deviceTuple{type64: 0x8e00000099, brand64: 0xeab00000eb3, matchRI: -0x0001, match64: 0xeb300000ec7, modelSI: -0x0001, models64: 0x14a0000014b},
			deviceTuple{type64: 0x24700000251, brand64: 0xee500000eea, matchRI: 0x0111, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b0000014d},
			deviceTuple{type64: 0x38400000391, brand64: 0xefc00000f03, matchRI: 0x0113, match64: 0x00000000, modelSI: 0x014d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf0300000f09, matchRI: 0x0114, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e0000014f},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1300000f19, matchRI: 0x0116, match64: 0x00000000, modelSI: -0x0001, models64: 0x14f00000151},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf3300000f38, matchRI: 0x0118, match64: 0x00000000, modelSI: 0x0151, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3800000f3c, matchRI: 0x0119, match64: 0x00000000, modelSI: -0x0001, models64: 0x1520000015a},
			deviceTuple{type64: 0x24700000251, brand64: 0xf7700000f7b, matchRI: -0x0001, match64: 0xf7b00000f80, modelSI: -0x0001, models64: 0x15a0000015c},
			deviceTuple{type64: 0x24700000251, brand64: 0xf8400000f88, matchRI: 0x0122, match64: 0x00000000, modelSI: -0x0001, models64: 0x15c0000016a},
			deviceTuple{type64: 0x24700000251, brand64: 0xffb00000fff, matchRI: 0x012d, match64: 0x00000000, modelSI: -0x0001, models64: 0x16a0000016e},
			deviceTuple{type64: 0x24700000251, brand64: 0x101b00001022, matchRI: 0x0130, match64: 0x00000000, modelSI: -0x0001, models64: 0x16e00000247},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1c7a00001c7f, matchRI: 0x01b7, match64: 0x00000000, modelSI: 0x0247, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1c7f00001c87, matchRI: 0x01b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2480000024b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1c8e00001c96, matchRI: 0x01bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x24b0000024d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ca800001cb0, matchRI: 0x01be, match64: 0x00000000, modelSI: 0x024d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1cb000001cb7, matchRI: 0x01bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x24e0000025b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1d5500001d5e, matchRI: 0x01c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x25b0000026e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e0000001e07, matchRI: 0x01d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x26e000002c3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x23620000236b, matchRI: 0x01fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c3000002cd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x244400002448, matchRI: 0x01ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cd000002cf},
			deviceTuple{type64: 0x24300000245, brand64: 0x24480000244f, matchRI: -0x0001, match64: 0x24480000244f, modelSI: 0x02cf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24570000245d, matchRI: 0x0202, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d0000002d2},
			deviceTuple{type64: 0x24300000245, brand64: 0x245d00002462, matchRI: 0x0205, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x246200002468, matchRI: 0x0206, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d200000311},
			deviceTuple{type64: 0x24300000245, brand64: 0x288700002894, matchRI: 0x0243, match64: 0x00000000, modelSI: -0x0001, models64: 0x31100000313},
			deviceTuple{type64: 0x24700000251, brand64: 0x28b3000028b9, matchRI: 0x0246, match64: 0x00000000, modelSI: 0x0313, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x28b9000028be, matchRI: 0x0247, match64: 0x00000000, modelSI: -0x0001, models64: 0x31400000316},
			deviceTuple{type64: 0x24700000251, brand64: 0x28da000028de, matchRI: 0x0248, match64: 0x00000000, modelSI: -0x0001, models64: 0x3160000031d},
			deviceTuple{type64: 0x24300000245, brand64: 0x290c00002912, matchRI: 0x024d, match64: 0x00000000, modelSI: 0x031d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x29120000291b, matchRI: 0x024e, match64: 0x00000000, modelSI: 0x031e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x291e00002927, matchRI: 0x024f, match64: 0x00000000, modelSI: -0x0001, models64: 0x31f00000321},
			deviceTuple{type64: 0x24300000245, brand64: 0x292e00002933, matchRI: 0x0252, match64: 0x00000000, modelSI: -0x0001, models64: 0x32100000324},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x296000002964, matchRI: 0x0256, match64: 0x00000000, modelSI: 0x0324, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x296400002969, matchRI: 0x0257, match64: 0x00000000, modelSI: 0x0325, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x29690000296f, matchRI: 0x0258, match64: 0x00000000, modelSI: -0x0001, models64: 0x32600000327},
			deviceTuple{type64: 0x24700000251, brand64: 0x297200002976, matchRI: 0x025a, match64: 0x00000000, modelSI: 0x0327, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x29760000297b, matchRI: 0x025b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3280000032d},
			deviceTuple{type64: 0x2700000027, brand64: 0x29a3000029a8, matchRI: 0x0261, match64: 0x00000000, modelSI: -0x0001, models64: 0x32d00000427},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x39460000394e, matchRI: 0x0353, match64: 0x00000000, modelSI: -0x0001, models64: 0x4270000042b},
			deviceTuple{type64: 0x24700000251, brand64: 0x10000000106, matchRI: 0x0357, match64: 0x00000000, modelSI: -0x0001, models64: 0x42b0000044b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3b3200003b3d, matchRI: -0x0001, match64: 0x3b3200003b3d, modelSI: -0x0001, models64: 0x44b0000044f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3b7300003b79, matchRI: 0x0370, match64: 0x00000000, modelSI: 0x044f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3b8400003b87, matchRI: 0x0371, match64: 0x00000000, modelSI: -0x0001, models64: 0x45000000459},
			deviceTuple{type64: 0x24700000251, brand64: 0x3bdb00003be3, matchRI: 0x037b, match64: 0x00000000, modelSI: 0x0459, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3be300003be9, matchRI: 0x037c, match64: 0x00000000, modelSI: -0x0001, models64: 0x45a00000478},
			deviceTuple{type64: 0x24300000245, brand64: 0x3d2200003d29, matchRI: 0x0382, match64: 0x00000000, modelSI: 0x0478, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3d2900003d2e, matchRI: 0x0383, match64: 0x00000000, modelSI: -0x0001, models64: 0x47900000485},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x3d5f00003d67, matchRI: 0x0390, match64: 0x00000000, modelSI: -0x0001, models64: 0x48500000488},
			deviceTuple{type64: 0x24300000245, brand64: 0x3d7400003d7c, matchRI: -0x0001, match64: 0x3d7c00003d83, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x3d8300003d88, matchRI: 0x0394, match64: 0x00000000, modelSI: -0x0001, models64: 0x48800000489},
			deviceTuple{type64: 0x24700000251, brand64: 0x3d9200003d98, matchRI: 0x0396, match64: 0x00000000, modelSI: -0x0001, models64: 0x4890000048b},
			deviceTuple{type64: 0x24700000251, brand64: 0x3d9f00003da2, matchRI: 0x0399, match64: 0x00000000, modelSI: -0x0001, models64: 0x48b0000048d},
			deviceTuple{type64: 0x24700000251, brand64: 0x3daa00003db0, matchRI: 0x039c, match64: 0x00000000, modelSI: -0x0001, models64: 0x48d00000490},
			deviceTuple{type64: 0x24700000251, brand64: 0x3dba00003dc3, matchRI: 0x03a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x490000004a6},
			deviceTuple{type64: 0x24700000251, brand64: 0x3e4400003e4e, matchRI: 0x03b7, match64: 0x00000000, modelSI: 0x04a6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x3e4e00003e52, matchRI: 0x03b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x4a700000524},
			deviceTuple{type64: 0x24700000251, brand64: 0x44ee000044f4, matchRI: 0x042a, match64: 0x00000000, modelSI: -0x0001, models64: 0x52400000525},
			deviceTuple{type64: 0x24300000245, brand64: 0x44f400004505, matchRI: -0x0001, match64: 0x45050000450c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x450c00004510, matchRI: 0x042c, match64: 0x00000000, modelSI: 0x0525, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x451000004516, matchRI: 0x042d, match64: 0x00000000, modelSI: -0x0001, models64: 0x52600000528},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x451d00004523, matchRI: 0x0430, match64: 0x00000000, modelSI: -0x0001, models64: 0x5280000052c},
			deviceTuple{type64: 0x24700000251, brand64: 0x455b00004561, matchRI: 0x0432, match64: 0x00000000, modelSI: 0x052c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x456100004566, matchRI: 0x0433, match64: 0x00000000, modelSI: 0x052d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x45660000456e, matchRI: 0x0434, match64: 0x00000000, modelSI: -0x0001, models64: 0x52e00000532},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x457400004579, matchRI: 0x0439, match64: 0x00000000, modelSI: -0x0001, models64: 0x53200000533},
			deviceTuple{type64: 0x7130000071d, brand64: 0x45790000457e, matchRI: 0x043b, match64: 0x00000000, modelSI: 0x0533, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x458a00004590, matchRI: 0x043c, match64: 0x00000000, modelSI: -0x0001, models64: 0x53400000536},
			deviceTuple{type64: 0x24700000251, brand64: 0x45a4000045a9, matchRI: 0x043f, match64: 0x00000000, modelSI: -0x0001, models64: 0x5360000053b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x45ec000045f0, matchRI: 0x0442, match64: 0x00000000, modelSI: -0x0001, models64: 0x53b0000053c},
			deviceTuple{type64: 0x24700000251, brand64: 0x45f0000045f5, matchRI: 0x0444, match64: 0x00000000, modelSI: -0x0001, models64: 0x53c00000540},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46280000462e, matchRI: 0x0448, match64: 0x00000000, modelSI: -0x0001, models64: 0x54000000541},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46350000463b, matchRI: 0x044a, match64: 0x00000000, modelSI: 0x0541, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x463b00004647, matchRI: 0x044b, match64: 0x00000000, modelSI: -0x0001, models64: 0x5420000054c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46ba000046c0, matchRI: -0x0001, match64: 0x46ba000046c0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x46c0000046c4, matchRI: 0x0452, match64: 0x00000000, modelSI: -0x0001, models64: 0x54c0000054e},
			deviceTuple{type64: 0x24700000251, brand64: 0x46d1000046d7, matchRI: -0x0001, match64: 0x46d7000046dd, modelSI: -0x0001, models64: 0x54e0000054f},
			deviceTuple{type64: 0x24700000251, brand64: 0x46e6000046ea, matchRI: 0x0456, match64: 0x00000000, modelSI: 0x054f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x46ea000046ef, matchRI: 0x0457, match64: 0x00000000, modelSI: -0x0001, models64: 0x55000000551},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x46fd00004706, matchRI: 0x0458, match64: 0x00000000, modelSI: -0x0001, models64: 0x5510000055c},
			deviceTuple{type64: 0x24300000245, brand64: 0x47fa000047fd, matchRI: 0x0464, match64: 0x00000000, modelSI: -0x0001, models64: 0x55c0000055f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x481d00004820, matchRI: 0x0468, match64: 0x00000000, modelSI: -0x0001, models64: 0x55f00000563},
			deviceTuple{type64: 0x24700000251, brand64: 0x483300004836, matchRI: 0x046c, match64: 0x00000000, modelSI: -0x0001, models64: 0x56300000565},
			deviceTuple{type64: 0x24700000251, brand64: 0x484f00004858, matchRI: -0x0001, match64: 0x485800004861, modelSI: 0x0565, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x486100004864, matchRI: 0x046d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5660000056b},
			deviceTuple{type64: 0x24700000251, brand64: 0x48850000488a, matchRI: 0x0471, match64: 0x00000000, modelSI: -0x0001, models64: 0x56b0000056c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x488a0000488f, matchRI: 0x0473, match64: 0x00000000, modelSI: -0x0001, models64: 0x56c0000056e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48990000489d, matchRI: 0x0475, match64: 0x00000000, modelSI: -0x0001, models64: 0x56e00000571},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48c3000048c7, matchRI: 0x0479, match64: 0x00000000, modelSI: -0x0001, models64: 0x57100000573},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48c7000048cc, matchRI: 0x047c, match64: 0x00000000, modelSI: 0x0573, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x48cc000048d0, matchRI: 0x047d, match64: 0x00000000, modelSI: 0x0574, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x48d0000048d9, matchRI: 0x047e, match64: 0x00000000, modelSI: -0x0001, models64: 0x57500000576},
			deviceTuple{type64: 0x8e00000099, brand64: 0x48e0000048e3, matchRI: -0x0001, match64: 0x48e3000048ef, modelSI: 0x0576, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48f5000048fb, matchRI: 0x0480, match64: 0x00000000, modelSI: -0x0001, models64: 0x57700000578},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x48fb00004901, matchRI: 0x0482, match64: 0x00000000, modelSI: -0x0001, models64: 0x57800000579},
			deviceTuple{type64: 0x24700000251, brand64: 0x490c00004914, matchRI: 0x0484, match64: 0x00000000, modelSI: 0x0579, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x491400004922, matchRI: 0x0485, match64: 0x00000000, modelSI: -0x0001, models64: 0x57a0000057d},
			deviceTuple{type64: 0x24700000251, brand64: 0x49290000492f, matchRI: 0x0489, match64: 0x00000000, modelSI: -0x0001, models64: 0x57d0000057f},
			deviceTuple{type64: 0x38400000391, brand64: 0x493a00004940, matchRI: 0x048c, match64: 0x00000000, modelSI: 0x057f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x494000004947, matchRI: 0x048d, match64: 0x00000000, modelSI: -0x0001, models64: 0x5800000058c},
			deviceTuple{type64: 0x24300000245, brand64: 0x498b00004992, matchRI: 0x0498, match64: 0x00000000, modelSI: -0x0001, models64: 0x58c00000594},
			deviceTuple{type64: 0x38400000391, brand64: 0x49c9000049cf, matchRI: 0x04a1, match64: 0x00000000, modelSI: 0x0594, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x49cf000049d5, matchRI: 0x04a2, match64: 0x00000000, modelSI: 0x0595, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x49d5000049d9, matchRI: 0x04a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x49d9000049dd, matchRI: 0x04a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x59600000598},
			deviceTuple{type64: 0x24700000251, brand64: 0x49eb000049f4, matchRI: 0x04a5, match64: 0x00000000, modelSI: 0x0598, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x4a0100004a05, matchRI: 0x04a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x5990000059c},
			deviceTuple{type64: 0x38400000391, brand64: 0x4a0900004a15, matchRI: 0x04a9, match64: 0x00000000, modelSI: 0x059c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4a1500004a1b, matchRI: 0x04aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x59d0000059f},
			deviceTuple{type64: 0x24700000251, brand64: 0x4a2100004a26, matchRI: 0x04ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x59f000005aa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4a8f00004a96, matchRI: 0x04ae, match64: 0x00000000, modelSI: 0x05aa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4a9600004a9b, matchRI: 0x04af, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ab000005ad},
			deviceTuple{type64: 0x24700000251, brand64: 0x4aad00004ab3, matchRI: 0x04b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x5ad000005b0},
			deviceTuple{type64: 0x24700000251, brand64: 0x4ad200004ad8, matchRI: 0x04b4, match64: 0x00000000, modelSI: 0x05b0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4ad800004adf, matchRI: 0x04b5, match64: 0x00000000, modelSI: 0x05b1, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4ae200004ae8, matchRI: 0x04b6, match64: 0x00000000, modelSI: 0x05b2, models64: 0x00000000},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x4af300004afc, matchRI: 0x04b7, match64: 0x00000000, modelSI: 0x05b3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4b0a00004b11, matchRI: 0x04b8, match64: 0x00000000, modelSI: 0x05b4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x4b1d00004b23, matchRI: 0x04b9, match64: 0x00000000, modelSI: 0x05b5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4b2300004b2c, matchRI: 0x04ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b6000005b8},
			deviceTuple{type64: 0x38400000391, brand64: 0x4b4700004b4b, matchRI: 0x04bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x5b8000005bb},
			deviceTuple{type64: 0x24700000251, brand64: 0x4b4b00004b50, matchRI: 0x04c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x5bb000005be},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4b5500004b5c, matchRI: 0x04c4, match64: 0x00000000, modelSI: -0x0001, models64: 0x5be000005c1},
			deviceTuple{type64: 0x24700000251, brand64: 0x4b7b00004b82, matchRI: -0x0001, match64: 0x4b7b00004b82, modelSI: -0x0001, models64: 0x5c1000005c2},
			deviceTuple{type64: 0x24700000251, brand64: 0x4b9000004b94, matchRI: 0x04c9, match64: 0x00000000, modelSI: 0x05c2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4b9d00004ba7, matchRI: 0x04ca, match64: 0x00000000, modelSI: 0x05c3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x4ba700004bb0, matchRI: -0x0001, match64: 0x4ba700004bb0, modelSI: -0x0001, models64: 0x5c4000005c5},
			deviceTuple{type64: 0x24700000251, brand64: 0x4bb600004bbf, matchRI: 0x04cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x5c5000005d6},
			deviceTuple{type64: 0x24300000245, brand64: 0x4c7800004c80, matchRI: 0x04d1, match64: 0x00000000, modelSI: 0x05d6, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x4c8500004c8f, matchRI: 0x04d2, match64: 0x00000000, modelSI: 0x05d7, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x4c9300004c9b, matchRI: 0x04d3, match64: 0x00000000, modelSI: 0x05d8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x4ca000004ca9, matchRI: 0x04d4, match64: 0x00000000, modelSI: -0x0001, models64: 0x5d9000005fa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4d9c00004da5, matchRI: 0x04ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x5fa0000060b},
			deviceTuple{type64: 0x24700000251, brand64: 0xc2f00000c34, matchRI: 0x04f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x60b0000060d},
			deviceTuple{type64: 0x24700000251, brand64: 0x4e9400004e99, matchRI: 0x04f8, match64: 0x00000000, modelSI: 0x060d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x4e9900004e9d, matchRI: 0x04f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x60e00000615},
			deviceTuple{type64: 0x24700000251, brand64: 0x4f6000004f63, matchRI: 0x04fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x61500000676},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x54670000546f, matchRI: 0x0526, match64: 0x00000000, modelSI: 0x0676, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x54840000548a, matchRI: 0x0527, match64: 0x00000000, modelSI: -0x0001, models64: 0x67700000683},
			deviceTuple{type64: 0x24700000251, brand64: 0x54d7000054de, matchRI: 0x052e, match64: 0x00000000, modelSI: 0x0683, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x54e3000054eb, matchRI: 0x052f, match64: 0x00000000, modelSI: 0x0684, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x54eb000054f2, matchRI: 0x0530, match64: 0x00000000, modelSI: -0x0001, models64: 0x68500000687},
			deviceTuple{type64: 0x24700000251, brand64: 0x54f2000054fa, matchRI: -0x0001, match64: 0x54fa00005502, modelSI: -0x0001, models64: 0x68700000688},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x55040000550c, matchRI: 0x0533, match64: 0x00000000, modelSI: -0x0001, models64: 0x6880000068d},
			deviceTuple{type64: 0x24700000251, brand64: 0x55540000555b, matchRI: 0x0535, match64: 0x00000000, modelSI: -0x0001, models64: 0x68d0000069f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x55d3000055da, matchRI: 0x0544, match64: 0x00000000, modelSI: 0x069f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x55e0000055e5, matchRI: 0x0545, match64: 0x00000000, modelSI: 0x06a0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x55ee000055f5, matchRI: 0x0546, match64: 0x00000000, modelSI: 0x06a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x55f5000055fa, matchRI: 0x0547, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a2000006a5},
			deviceTuple{type64: 0x24300000245, brand64: 0x560f00005615, matchRI: 0x054a, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a5000006a7},
			deviceTuple{type64: 0x24700000251, brand64: 0x56280000562d, matchRI: 0x054b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6a7000006aa},
			deviceTuple{type64: 0x24700000251, brand64: 0x562d00005636, matchRI: 0x054f, match64: 0x00000000, modelSI: -0x0001, models64: 0x6aa000006ac},
			deviceTuple{type64: 0x24700000251, brand64: 0x56570000565d, matchRI: 0x0550, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ac000006ae},
			deviceTuple{type64: 0x24700000251, brand64: 0x567000005676, matchRI: 0x0552, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ae000006d0},
			deviceTuple{type64: 0x24300000245, brand64: 0x584b00005855, matchRI: -0x0001, match64: 0x584b00005855, modelSI: -0x0001, models64: 0x6d0000006d1},
			deviceTuple{type64: 0x24700000251, brand64: 0x58550000585d, matchRI: -0x0001, match64: 0x585d00005862, modelSI: -0x0001, models64: 0x6d1000006d2},
			deviceTuple{type64: 0x24700000251, brand64: 0x587200005878, matchRI: 0x0560, match64: 0x00000000, modelSI: -0x0001, models64: 0x6d2000006de},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x590a00005913, matchRI: 0x056c, match64: 0x00000000, modelSI: 0x06de, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x591300005918, matchRI: 0x056d, match64: 0x00000000, modelSI: -0x0001, models64: 0x6df000006e2},
			deviceTuple{type64: 0x24700000251, brand64: 0x595200005956, matchRI: 0x0570, match64: 0x00000000, modelSI: -0x0001, models64: 0x6e2000006ea},
			deviceTuple{type64: 0x24300000245, brand64: 0x599d000059a3, matchRI: 0x0577, match64: 0x00000000, modelSI: 0x06ea, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x59a3000059a9, matchRI: 0x0578, match64: 0x00000000, modelSI: -0x0001, models64: 0x6eb000006ed},
			deviceTuple{type64: 0x24700000251, brand64: 0x59b4000059bd, matchRI: 0x057b, match64: 0x00000000, modelSI: -0x0001, models64: 0x6ed000006f1},
			deviceTuple{type64: 0x24300000245, brand64: 0x5a0000005a06, matchRI: 0x057c, match64: 0x00000000, modelSI: -0x0001, models64: 0x6f1000006f2},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a0600005a0a, matchRI: -0x0001, match64: 0x5a0a00005a0f, modelSI: -0x0001, models64: 0x6f2000006f4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a1900005a1d, matchRI: 0x057f, match64: 0x00000000, modelSI: -0x0001, models64: 0x6f4000006f8},
			deviceTuple{type64: 0x24300000245, brand64: 0x5a3700005a3d, matchRI: 0x0584, match64: 0x00000000, modelSI: 0x06f8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5a4200005a48, matchRI: 0x0585, match64: 0x00000000, modelSI: 0x06f9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a4800005a51, matchRI: 0x0586, match64: 0x00000000, modelSI: -0x0001, models64: 0x6fa000006ff},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a8300005a86, matchRI: 0x058c, match64: 0x00000000, modelSI: 0x06ff, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a8600005a8c, matchRI: 0x058d, match64: 0x00000000, modelSI: -0x0001, models64: 0x70000000701},
			deviceTuple{type64: 0x24700000251, brand64: 0x5a8c00005a96, matchRI: 0x058f, match64: 0x00000000, modelSI: -0x0001, models64: 0x70100000704},
			deviceTuple{type64: 0x24700000251, brand64: 0x5aa300005aa6, matchRI: 0x0593, match64: 0x00000000, modelSI: 0x0704, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5aad00005ab6, matchRI: 0x0594, match64: 0x00000000, modelSI: 0x0705, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5ab600005abe, matchRI: 0x0595, match64: 0x00000000, modelSI: -0x0001, models64: 0x70600000707},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5acd00005ad4, matchRI: 0x0596, match64: 0x00000000, modelSI: 0x0707, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5ad400005ada, matchRI: -0x0001, match64: 0x5ad400005ada, modelSI: -0x0001, models64: 0x70800000709},
			deviceTuple{type64: 0x24700000251, brand64: 0x5ae300005ae7, matchRI: 0x0598, match64: 0x00000000, modelSI: -0x0001, models64: 0x70900000711},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5b2600005b2c, matchRI: 0x05a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x71100000712},
			deviceTuple{type64: 0x8e00000099, brand64: 0x5b4000005b48, matchRI: 0x05a1, match64: 0x00000000, modelSI: 0x0712, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5b5500005b5a, matchRI: 0x05a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x7130000073d},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d7700005d7a, matchRI: 0x05ba, match64: 0x00000000, modelSI: 0x073d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5d8100005d85, matchRI: 0x05bb, match64: 0x00000000, modelSI: 0x073e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d8500005d87, matchRI: 0x05bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x73f00000740},
			deviceTuple{type64: 0x24700000251, brand64: 0x5d8d00005d94, matchRI: 0x05bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x74000000743},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5da100005da8, matchRI: 0x05c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x74300000744},
			deviceTuple{type64: 0x24300000245, brand64: 0x5da800005db5, matchRI: 0x05c2, match64: 0x00000000, modelSI: 0x0744, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x5dbd00005dc3, matchRI: -0x0001, match64: 0x5dc300005dcd, modelSI: -0x0001, models64: 0x74500000746},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5dd300005dda, matchRI: 0x05c4, match64: 0x00000000, modelSI: 0x0746, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x5dda00005de1, matchRI: 0x05c5, match64: 0x00000000, modelSI: 0x0747, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5de100005de8, matchRI: 0x05c6, match64: 0x00000000, modelSI: 0x0748, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5dee00005dfb, matchRI: -0x0001, match64: 0x5dfb00005e0b, modelSI: 0x0749, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5e1600005e1f, matchRI: 0x05c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x74a0000074d},
			deviceTuple{type64: 0x24700000251, brand64: 0x5e3900005e3e, matchRI: 0x05ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x74d00000750},
			deviceTuple{type64: 0x24700000251, brand64: 0x5e7000005e76, matchRI: 0x05ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x75000000758},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5ead00005eb0, matchRI: 0x05d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x75800000762},
			deviceTuple{type64: 0x24700000251, brand64: 0x5ed800005ede, matchRI: 0x05dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x7620000076c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x5f9400005f9a, matchRI: 0x05e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x76c00000772},
			deviceTuple{type64: 0x24300000245, brand64: 0x5fea00005ff0, matchRI: 0x05e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5ff000005ff6, matchRI: 0x05e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x7720000077e},
			deviceTuple{type64: 0x24700000251, brand64: 0x604000006046, matchRI: 0x05f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x77e00000782},
			deviceTuple{type64: 0x24700000251, brand64: 0x60650000606f, matchRI: 0x05f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x78200000785},
			deviceTuple{type64: 0x24700000251, brand64: 0x60970000609f, matchRI: 0x05f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x78500000788},
			deviceTuple{type64: 0x24700000251, brand64: 0x60b4000060bd, matchRI: 0x05fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x7880000078b},
			deviceTuple{type64: 0x24700000251, brand64: 0x60d6000060dd, matchRI: 0x05fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x78b00000791},
			deviceTuple{type64: 0x24700000251, brand64: 0x60e8000060f0, matchRI: 0x0604, match64: 0x00000000, modelSI: -0x0001, models64: 0x79100000792},
			deviceTuple{type64: 0x24700000251, brand64: 0x60f0000060f9, matchRI: 0x0606, match64: 0x00000000, modelSI: -0x0001, models64: 0x79200000798},
			deviceTuple{type64: 0x24700000251, brand64: 0x611700006124, matchRI: 0x060b, match64: 0x00000000, modelSI: -0x0001, models64: 0x798000007cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x644f0000645b, matchRI: 0x062a, match64: 0x00000000, modelSI: -0x0001, models64: 0x7cf000007e1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x65b3000065bd, matchRI: 0x062d, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e1000007e2},
			deviceTuple{type64: 0x24700000251, brand64: 0x65c7000065d3, matchRI: 0x062f, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e2000007e7},
			deviceTuple{type64: 0x24700000251, brand64: 0x65f400006601, matchRI: 0x0631, match64: 0x00000000, modelSI: -0x0001, models64: 0x7e7000007ee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x669200006697, matchRI: 0x0632, match64: 0x00000000, modelSI: -0x0001, models64: 0x7ee00000807},
			deviceTuple{type64: 0x24700000251, brand64: 0x67520000675b, matchRI: 0x064b, match64: 0x00000000, modelSI: 0x0807, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x675b00006763, matchRI: 0x064c, match64: 0x00000000, modelSI: 0x0808, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x67630000676b, matchRI: 0x064d, match64: 0x00000000, modelSI: -0x0001, models64: 0x8090000080c},
			deviceTuple{type64: 0x24700000251, brand64: 0x67760000677d, matchRI: 0x0651, match64: 0x00000000, modelSI: -0x0001, models64: 0x80c00000810},
			deviceTuple{type64: 0x24700000251, brand64: 0x67a2000067ac, matchRI: -0x0001, match64: 0x67a2000067ac, modelSI: -0x0001, models64: 0x81000000811},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x67ac000067b6, matchRI: 0x0654, match64: 0x00000000, modelSI: -0x0001, models64: 0x81100000817},
			deviceTuple{type64: 0x24700000251, brand64: 0x681100006816, matchRI: 0x0658, match64: 0x00000000, modelSI: -0x0001, models64: 0x8170000081a},
			deviceTuple{type64: 0x24700000251, brand64: 0x68360000683f, matchRI: 0x065b, match64: 0x00000000, modelSI: -0x0001, models64: 0x81a0000082b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x690800006910, matchRI: 0x0669, match64: 0x00000000, modelSI: -0x0001, models64: 0x82b0000082d},
			deviceTuple{type64: 0x24700000251, brand64: 0x691b00006920, matchRI: 0x066c, match64: 0x00000000, modelSI: -0x0001, models64: 0x82d00000834},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x69650000696e, matchRI: 0x0674, match64: 0x00000000, modelSI: 0x0834, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x696e00006971, matchRI: -0x0001, match64: 0x697100006975, modelSI: -0x0001, models64: 0x83500000836},
			deviceTuple{type64: 0x24700000251, brand64: 0x698000006986, matchRI: 0x0676, match64: 0x00000000, modelSI: -0x0001, models64: 0x83600000839},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6998000069a2, matchRI: 0x067a, match64: 0x00000000, modelSI: 0x0839, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x69a2000069a8, matchRI: 0x067b, match64: 0x00000000, modelSI: -0x0001, models64: 0x83a00000841},
			deviceTuple{type64: 0x24700000251, brand64: 0x69d8000069e6, matchRI: 0x0683, match64: 0x00000000, modelSI: -0x0001, models64: 0x8410000085b},
			deviceTuple{type64: 0x24700000251, brand64: 0x6ae400006ae9, matchRI: 0x0695, match64: 0x00000000, modelSI: -0x0001, models64: 0x85b0000085f},
			deviceTuple{type64: 0x24300000245, brand64: 0x6b0a00006b13, matchRI: 0x0697, match64: 0x00000000, modelSI: 0x085f, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x6b1a00006b20, matchRI: 0x0698, match64: 0x00000000, modelSI: 0x0860, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6b2000006b26, matchRI: 0x0699, match64: 0x00000000, modelSI: -0x0001, models64: 0x86100000863},
			deviceTuple{type64: 0x24700000251, brand64: 0x6b2600006b2e, matchRI: 0x069c, match64: 0x00000000, modelSI: -0x0001, models64: 0x86300000867},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6b3800006b41, matchRI: 0x06a1, match64: 0x00000000, modelSI: 0x0867, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x6b4100006b48, matchRI: 0x06a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x8680000086e},
			deviceTuple{type64: 0x24700000251, brand64: 0x6ba500006bab, matchRI: 0x06a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x86e000008ae},
			deviceTuple{type64: 0x24700000251, brand64: 0x6e1800006e21, matchRI: 0x06d6, match64: 0x00000000, modelSI: 0x08ae, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6e2f00006e35, matchRI: 0x06d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x8af000008b1},
			deviceTuple{type64: 0x24700000251, brand64: 0x6e5400006e5c, matchRI: 0x06d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x8b1000008b3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x6e6c00006e73, matchRI: 0x06db, match64: 0x00000000, modelSI: -0x0001, models64: 0x8b3000008be},
			deviceTuple{type64: 0x24700000251, brand64: 0x6eff00006f06, matchRI: 0x06e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x8be000008ee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x705000007057, matchRI: 0x0712, match64: 0x00000000, modelSI: 0x08ee, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x70570000705e, matchRI: -0x0001, match64: 0x70570000705e, modelSI: -0x0001, models64: 0x8ef000008f1},
			deviceTuple{type64: 0x24700000251, brand64: 0x707c00007081, matchRI: 0x0714, match64: 0x00000000, modelSI: 0x08f1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x708100007089, matchRI: 0x0715, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f2000008f5},
			deviceTuple{type64: 0x5e8000005f5, brand64: 0x70a8000070b0, matchRI: -0x0001, match64: 0x70a8000070b0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x70b0000070b7, matchRI: 0x0717, match64: 0x00000000, modelSI: -0x0001, models64: 0x8f50000090b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x71e6000071ef, matchRI: 0x071b, match64: 0x00000000, modelSI: 0x090b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x71ef000071f4, matchRI: 0x071c, match64: 0x00000000, modelSI: 0x090c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x71f800007201, matchRI: 0x071d, match64: 0x00000000, modelSI: -0x0001, models64: 0x90d00000919},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x728300007288, matchRI: 0x0728, match64: 0x00000000, modelSI: -0x0001, models64: 0x9190000091b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x729f000072a6, matchRI: 0x072a, match64: 0x00000000, modelSI: -0x0001, models64: 0x91b0000091c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x44c0000044c4, matchRI: 0x072b, match64: 0x00000000, modelSI: -0x0001, models64: 0x91c00000932},
			deviceTuple{type64: 0x24700000251, brand64: 0x73850000738a, matchRI: -0x0001, match64: 0x738a0000738f, modelSI: -0x0001, models64: 0x93200000934},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x73a5000073ad, matchRI: 0x073c, match64: 0x00000000, modelSI: -0x0001, models64: 0x93400000935},
			deviceTuple{type64: 0x24700000251, brand64: 0x73ad000073b2, matchRI: 0x073e, match64: 0x00000000, modelSI: -0x0001, models64: 0x93500000939},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x73bf000073c5, matchRI: 0x0743, match64: 0x00000000, modelSI: 0x0939, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x73c5000073cb, matchRI: 0x0744, match64: 0x00000000, modelSI: -0x0001, models64: 0x93a0000093d},
			deviceTuple{type64: 0x24700000251, brand64: 0x73e0000073e4, matchRI: 0x0747, match64: 0x00000000, modelSI: 0x093d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x73e4000073eb, matchRI: 0x0748, match64: 0x00000000, modelSI: 0x093e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x73eb000073ef, matchRI: 0x0749, match64: 0x00000000, modelSI: -0x0001, models64: 0x93f0000095a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x74c4000074c8, matchRI: 0x0762, match64: 0x00000000, modelSI: 0x095a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x74c8000074ca, matchRI: 0x0763, match64: 0x00000000, modelSI: -0x0001, models64: 0x95b0000095f},
			deviceTuple{type64: 0x24700000251, brand64: 0x750300007508, matchRI: 0x0765, match64: 0x00000000, modelSI: -0x0001, models64: 0x95f00000960},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x751200007517, matchRI: 0x0767, match64: 0x00000000, modelSI: 0x0960, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x751f00007526, matchRI: 0x0768, match64: 0x00000000, modelSI: -0x0001, models64: 0x96100000963},
			deviceTuple{type64: 0x24300000245, brand64: 0x752a00007532, matchRI: 0x076b, match64: 0x00000000, modelSI: 0x0963, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x753200007539, matchRI: 0x076c, match64: 0x00000000, modelSI: -0x0001, models64: 0x96400000967},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x75490000754d, matchRI: 0x076f, match64: 0x00000000, modelSI: 0x0967, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x754d00007556, matchRI: 0x0770, match64: 0x00000000, modelSI: 0x0968, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x75560000755a, matchRI: 0x0771, match64: 0x00000000, modelSI: -0x0001, models64: 0x9690000096e},
			deviceTuple{type64: 0x24700000251, brand64: 0x75a0000075a5, matchRI: 0x0775, match64: 0x00000000, modelSI: -0x0001, models64: 0x96e00000974},
			deviceTuple{type64: 0x24700000251, brand64: 0x75db000075dd, matchRI: 0x0779, match64: 0x00000000, modelSI: -0x0001, models64: 0x97400000979},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x76280000762d, matchRI: 0x077d, match64: 0x00000000, modelSI: -0x0001, models64: 0x9790000097a},
			deviceTuple{type64: 0x24700000251, brand64: 0x762d00007630, matchRI: 0x077f, match64: 0x00000000, modelSI: -0x0001, models64: 0x97a0000097f},
			deviceTuple{type64: 0x24700000251, brand64: 0x764f00007656, matchRI: 0x0785, match64: 0x00000000, modelSI: 0x097f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x765600007659, matchRI: 0x0786, match64: 0x00000000, modelSI: -0x0001, models64: 0x98000000982},
			deviceTuple{type64: 0x24300000245, brand64: 0x76650000766b, matchRI: 0x0788, match64: 0x00000000, modelSI: 0x0982, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x766b00007674, matchRI: 0x0789, match64: 0x00000000, modelSI: 0x0983, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x767400007678, matchRI: 0x078a, match64: 0x00000000, modelSI: 0x0984, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x767800007681, matchRI: 0x078b, match64: 0x00000000, modelSI: 0x0985, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x768700007693, matchRI: 0x078c, match64: 0x00000000, modelSI: -0x0001, models64: 0x98600000988},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x769300007699, matchRI: 0x078f, match64: 0x00000000, modelSI: -0x0001, models64: 0x9880000098b},
			deviceTuple{type64: 0x24700000251, brand64: 0x76a3000076a8, matchRI: 0x0793, match64: 0x00000000, modelSI: -0x0001, models64: 0x98b0000098f},
			deviceTuple{type64: 0x24300000245, brand64: 0x76d9000076e2, matchRI: -0x0001, match64: 0x76d9000076e2, modelSI: -0x0001, models64: 0x98f00000990},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x76e8000076ec, matchRI: 0x0797, match64: 0x00000000, modelSI: -0x0001, models64: 0x99000000993},
			deviceTuple{type64: 0x24700000251, brand64: 0x77280000772d, matchRI: 0x0799, match64: 0x00000000, modelSI: 0x0993, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x772d00007736, matchRI: 0x079a, match64: 0x00000000, modelSI: 0x0994, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x773e00007746, matchRI: 0x079b, match64: 0x00000000, modelSI: 0x0995, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x77460000774c, matchRI: -0x0001, match64: 0x774c00007752, modelSI: -0x0001, models64: 0x99600000998},
			deviceTuple{type64: 0x24700000251, brand64: 0x77520000775a, matchRI: 0x079e, match64: 0x00000000, modelSI: -0x0001, models64: 0x9980000099a},
			deviceTuple{type64: 0x24700000251, brand64: 0x777e00007784, matchRI: -0x0001, match64: 0x77840000778a, modelSI: -0x0001, models64: 0x99a0000099c},
			deviceTuple{type64: 0x24700000251, brand64: 0x77ac000077b1, matchRI: -0x0001, match64: 0x77b1000077b6, modelSI: -0x0001, models64: 0x99c0000099d},
			deviceTuple{type64: 0x24700000251, brand64: 0x77b8000077bf, matchRI: -0x0001, match64: 0x77bf000077c6, modelSI: 0x099d, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x77ce000077d3, matchRI: 0x07a0, match64: 0x00000000, modelSI: 0x099e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x77d3000077d8, matchRI: 0x07a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x99f000009a8},
			deviceTuple{type64: 0x24700000251, brand64: 0x783200007838, matchRI: 0x07a7, match64: 0x00000000, modelSI: 0x09a8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x78380000783c, matchRI: 0x07a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x9a9000009b6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x78770000787d, matchRI: 0x07b5, match64: 0x00000000, modelSI: 0x09b6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x78850000788b, matchRI: 0x07b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x9b7000009bb},
			deviceTuple{type64: 0x24700000251, brand64: 0x78970000789c, matchRI: -0x0001, match64: 0x78970000789c, modelSI: -0x0001, models64: 0x9bb000009bd},
			deviceTuple{type64: 0x24700000251, brand64: 0x789c000078a2, matchRI: 0x07bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x9bd000009bf},
			deviceTuple{type64: 0x38400000391, brand64: 0x78a2000078a7, matchRI: 0x07c0, match64: 0x00000000, modelSI: 0x09bf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x78a7000078ab, matchRI: 0x07c1, match64: 0x00000000, modelSI: 0x09c0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x78ab000078b2, matchRI: 0x07c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x9c1000009c7},
			deviceTuple{type64: 0x24700000251, brand64: 0x78ea000078f4, matchRI: 0x07c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x9c7000009c8},
			deviceTuple{type64: 0x24300000245, brand64: 0x78f4000078fc, matchRI: 0x07c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x78fc00007904, matchRI: 0x07c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x9c8000009cc},
			deviceTuple{type64: 0x24700000251, brand64: 0x790b00007912, matchRI: 0x07cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x9cc000009d7},
			deviceTuple{type64: 0x24700000251, brand64: 0x79590000795e, matchRI: 0x07d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x9d700000a29},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e0e00007e16, matchRI: -0x0001, match64: 0x7e1600007e1e, modelSI: -0x0001, models64: 0xa2900000a2a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e1e00007e23, matchRI: 0x07fc, match64: 0x00000000, modelSI: 0x0a2a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e2b00007e31, matchRI: 0x07fd, match64: 0x00000000, modelSI: -0x0001, models64: 0xa2b00000a2d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e4300007e4a, matchRI: 0x07ff, match64: 0x00000000, modelSI: 0x0a2d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x7e4a00007e4e, matchRI: 0x0800, match64: 0x00000000, modelSI: 0x0a2e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e4e00007e56, matchRI: -0x0001, match64: 0x7e4e00007e56, modelSI: -0x0001, models64: 0xa2f00000a30},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e6000007e67, matchRI: 0x0802, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3000000a34},
			deviceTuple{type64: 0x38400000391, brand64: 0x7e8b00007e91, matchRI: 0x0806, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3400000a38},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e9100007e98, matchRI: 0x080b, match64: 0x00000000, modelSI: 0x0a38, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e9800007e9f, matchRI: 0x080c, match64: 0x00000000, modelSI: 0x0a39, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x7e9f00007ea5, matchRI: 0x080d, match64: 0x00000000, modelSI: 0x0a3a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x7ea500007eab, matchRI: 0x080e, match64: 0x00000000, modelSI: -0x0001, models64: 0xa3b00000a7f},
			deviceTuple{type64: 0x24700000251, brand64: 0x81760000817c, matchRI: 0x082f, match64: 0x00000000, modelSI: 0x0a7f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x817e00008182, matchRI: 0x0830, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8000000a84},
			deviceTuple{type64: 0x38400000391, brand64: 0x819400008199, matchRI: 0x0835, match64: 0x00000000, modelSI: 0x0a84, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x81990000819f, matchRI: 0x0836, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8500000a88},
			deviceTuple{type64: 0x24300000245, brand64: 0x81aa000081ae, matchRI: 0x083a, match64: 0x00000000, modelSI: 0x0a88, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x81ae000081b2, matchRI: 0x083b, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8900000a8e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x81bf000081cb, matchRI: 0x0841, match64: 0x00000000, modelSI: -0x0001, models64: 0xa8e00000a92},
			deviceTuple{type64: 0x24300000245, brand64: 0x81f800008201, matchRI: -0x0001, match64: 0x82010000820a, modelSI: -0x0001, models64: 0xa9200000a93},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x820a00008212, matchRI: 0x0844, match64: 0x00000000, modelSI: 0x0a93, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82120000821b, matchRI: 0x0845, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9400000a95},
			deviceTuple{type64: 0x24300000245, brand64: 0x82210000822b, matchRI: 0x0847, match64: 0x00000000, modelSI: 0x0a95, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x822b00008231, matchRI: 0x0848, match64: 0x00000000, modelSI: 0x0a96, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x823100008235, matchRI: 0x0849, match64: 0x00000000, modelSI: 0x0a97, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x823d00008244, matchRI: 0x084a, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9800000a9b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x824b00008253, matchRI: 0x084e, match64: 0x00000000, modelSI: 0x0a9b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x825300008259, matchRI: 0x084f, match64: 0x00000000, modelSI: 0x0a9c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x825900008261, matchRI: 0x0850, match64: 0x00000000, modelSI: 0x0a9d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x827100008275, matchRI: 0x0851, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9e00000a9f},
			deviceTuple{type64: 0x24700000251, brand64: 0x828c00008292, matchRI: 0x0852, match64: 0x00000000, modelSI: -0x0001, models64: 0xa9f00000aa3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x82a8000082af, matchRI: 0x0856, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa300000aa5},
			deviceTuple{type64: 0x24700000251, brand64: 0x82c6000082cd, matchRI: 0x0859, match64: 0x00000000, modelSI: 0x0aa5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82d4000082d9, matchRI: 0x085a, match64: 0x00000000, modelSI: -0x0001, models64: 0xaa600000aaa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x82ed000082f1, matchRI: 0x085f, match64: 0x00000000, modelSI: 0x0aaa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82f1000082f6, matchRI: -0x0001, match64: 0x82f1000082f6, modelSI: -0x0001, models64: 0xaab00000aad},
			deviceTuple{type64: 0x24300000245, brand64: 0x82f6000082fa, matchRI: 0x0862, match64: 0x00000000, modelSI: 0x0aad, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x82fa000082fe, matchRI: 0x0863, match64: 0x00000000, modelSI: -0x0001, models64: 0xaae00000ab1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x830f00008312, matchRI: 0x0867, match64: 0x00000000, modelSI: -0x0001, models64: 0xab100000ab5},
			deviceTuple{type64: 0x24700000251, brand64: 0x832400008326, matchRI: 0x086c, match64: 0x00000000, modelSI: -0x0001, models64: 0xab500000ab8},
			deviceTuple{type64: 0x7130000071d, brand64: 0x832a0000832d, matchRI: 0x0870, match64: 0x00000000, modelSI: 0x0ab8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x832d00008330, matchRI: -0x0001, match64: 0x833000008338, modelSI: -0x0001, models64: 0xab900000aba},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x833d00008343, matchRI: 0x0871, match64: 0x00000000, modelSI: 0x0aba, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x834300008349, matchRI: 0x0872, match64: 0x00000000, modelSI: -0x0001, models64: 0xabb00000abc},
			deviceTuple{type64: 0x24700000251, brand64: 0x83590000835c, matchRI: 0x0873, match64: 0x00000000, modelSI: -0x0001, models64: 0xabc00000ac1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x838400008387, matchRI: 0x0878, match64: 0x00000000, modelSI: -0x0001, models64: 0xac100000ac3},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x838c00008391, matchRI: 0x087b, match64: 0x00000000, modelSI: -0x0001, models64: 0xac300000ac5},
			deviceTuple{type64: 0x24300000245, brand64: 0x83ba000083c2, matchRI: 0x087c, match64: 0x00000000, modelSI: 0x0ac5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x83c2000083c8, matchRI: 0x087d, match64: 0x00000000, modelSI: 0x0ac6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x83c8000083cc, matchRI: 0x087e, match64: 0x00000000, modelSI: -0x0001, models64: 0xac700000ac9},
			deviceTuple{type64: 0x24300000245, brand64: 0x83d7000083db, matchRI: 0x0880, match64: 0x00000000, modelSI: 0x0ac9, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x83e0000083e7, matchRI: 0x0881, match64: 0x00000000, modelSI: -0x0001, models64: 0xaca00000acb},
			deviceTuple{type64: 0x24300000245, brand64: 0x83e7000083ec, matchRI: 0x0883, match64: 0x00000000, modelSI: -0x0001, models64: 0xacb00000ace},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x841000008414, matchRI: 0x0886, match64: 0x00000000, modelSI: -0x0001, models64: 0xace00000ad0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x844200008448, matchRI: 0x0887, match64: 0x00000000, modelSI: 0x0ad0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x84480000844b, matchRI: 0x0888, match64: 0x00000000, modelSI: -0x0001, models64: 0xad100000ad3},
			deviceTuple{type64: 0x24700000251, brand64: 0x84590000845c, matchRI: 0x088b, match64: 0x00000000, modelSI: 0x0ad3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x845c00008461, matchRI: 0x088c, match64: 0x00000000, modelSI: 0x0ad4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x84610000846a, matchRI: 0x088d, match64: 0x00000000, modelSI: 0x0ad5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x846a00008471, matchRI: 0x088e, match64: 0x00000000, modelSI: -0x0001, models64: 0xad600000ad8},
			deviceTuple{type64: 0x24700000251, brand64: 0x847b00008487, matchRI: 0x0891, match64: 0x00000000, modelSI: -0x0001, models64: 0xad800000add},
			deviceTuple{type64: 0x24300000245, brand64: 0x84c4000084cc, matchRI: 0x0895, match64: 0x00000000, modelSI: -0x0001, models64: 0xadd00000adf},
			deviceTuple{type64: 0x24700000251, brand64: 0x84cc000084d1, matchRI: 0x0898, match64: 0x00000000, modelSI: -0x0001, models64: 0xadf00000ae0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x84e9000084f1, matchRI: 0x0899, match64: 0x00000000, modelSI: 0x0ae0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x84f1000084fd, matchRI: 0x089a, match64: 0x00000000, modelSI: -0x0001, models64: 0xae100000ae3},
			deviceTuple{type64: 0x24700000251, brand64: 0x850c00008513, matchRI: 0x089c, match64: 0x00000000, modelSI: 0x0ae3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x851e00008529, matchRI: 0x089d, match64: 0x00000000, modelSI: 0x0ae4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x85290000852f, matchRI: 0x089e, match64: 0x00000000, modelSI: -0x0001, models64: 0xae500000ae9},
			deviceTuple{type64: 0x24300000245, brand64: 0x85850000858c, matchRI: 0x08a3, match64: 0x00000000, modelSI: 0x0ae9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x859d000085a5, matchRI: 0x08a4, match64: 0x00000000, modelSI: -0x0001, models64: 0xaea00000aec},
			deviceTuple{type64: 0x24700000251, brand64: 0x85a5000085ad, matchRI: 0x08a7, match64: 0x00000000, modelSI: -0x0001, models64: 0xaec00000afe},
			deviceTuple{type64: 0x24700000251, brand64: 0x86060000860d, matchRI: 0x08ba, match64: 0x00000000, modelSI: -0x0001, models64: 0xafe00000b01},
			deviceTuple{type64: 0x24300000245, brand64: 0x862000008626, matchRI: 0x08be, match64: 0x00000000, modelSI: 0x0b01, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x862600008632, matchRI: 0x08bf, match64: 0x00000000, modelSI: 0x0b02, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x863200008637, matchRI: 0x08c0, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0300000b06},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x864d00008653, matchRI: 0x08c4, match64: 0x00000000, modelSI: 0x0b06, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x86530000865a, matchRI: 0x08c5, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0700000b0a},
			deviceTuple{type64: 0x24700000251, brand64: 0x86740000867d, matchRI: 0x08c7, match64: 0x00000000, modelSI: -0x0001, models64: 0xb0a00000b13},
			deviceTuple{type64: 0x24700000251, brand64: 0x86df000086ec, matchRI: 0x08cf, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1300000b17},
			deviceTuple{type64: 0x24300000245, brand64: 0x872200008727, matchRI: 0x08d3, match64: 0x00000000, modelSI: 0x0b17, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x87270000872b, matchRI: 0x08d4, match64: 0x00000000, modelSI: 0x0b18, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x872b00008731, matchRI: 0x08d5, match64: 0x00000000, modelSI: 0x0b19, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x873a00008741, matchRI: 0x08d6, match64: 0x00000000, modelSI: 0x0b1a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x874f00008755, matchRI: 0x08d7, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1b00000b1d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x876b0000876f, matchRI: 0x08d8, match64: 0x00000000, modelSI: 0x0b1d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x876f00008777, matchRI: 0x08d9, match64: 0x00000000, modelSI: -0x0001, models64: 0xb1e00000b37},
			deviceTuple{type64: 0x7130000071d, brand64: 0x88950000889a, matchRI: 0x08da, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3700000b39},
			deviceTuple{type64: 0x24700000251, brand64: 0x88c3000088ca, matchRI: 0x08db, match64: 0x00000000, modelSI: 0x0b39, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x88ce000088d2, matchRI: 0x08dc, match64: 0x00000000, modelSI: -0x0001, models64: 0xb3a00000b5a},
			deviceTuple{type64: 0x38400000391, brand64: 0x8a4e00008a56, matchRI: 0x08ec, match64: 0x00000000, modelSI: -0x0001, models64: 0xb5a00000b5c},
			deviceTuple{type64: 0x38400000391, brand64: 0x8a5a00008a5f, matchRI: 0x08ef, match64: 0x00000000, modelSI: 0x0b5c, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x8a5f00008a66, matchRI: 0x08f0, match64: 0x00000000, modelSI: 0x0b5d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a6600008a6f, matchRI: 0x08f1, match64: 0x00000000, modelSI: -0x0001, models64: 0xb5e00000b5f},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a7300008a7d, matchRI: 0x08f2, match64: 0x00000000, modelSI: -0x0001, models64: 0xb5f00000b63},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a9a00008a9e, matchRI: -0x0001, match64: 0x8a9a00008a9e, modelSI: -0x0001, models64: 0xb6300000b65},
			deviceTuple{type64: 0x24700000251, brand64: 0x8a9e00008aa5, matchRI: 0x08f9, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6500000b67},
			deviceTuple{type64: 0x24700000251, brand64: 0x8aa500008aab, matchRI: 0x08fc, match64: 0x00000000, modelSI: 0x0b67, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8ab200008aba, matchRI: 0x08fd, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6800000b69},
			deviceTuple{type64: 0x24700000251, brand64: 0x8ae700008aef, matchRI: 0x08fe, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6900000b6d},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b0800008b10, matchRI: 0x0902, match64: 0x00000000, modelSI: -0x0001, models64: 0xb6d00000b76},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8b4700008b4e, matchRI: 0x090b, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7600000b77},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8b5b00008b61, matchRI: 0x090d, match64: 0x00000000, modelSI: 0x0b77, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x8b6800008b70, matchRI: 0x090e, match64: 0x00000000, modelSI: 0x0b78, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8b7000008b76, matchRI: 0x090f, match64: 0x00000000, modelSI: 0x0b79, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8b7600008b7d, matchRI: 0x0910, match64: 0x00000000, modelSI: -0x0001, models64: 0xb7a00000b82},
			deviceTuple{type64: 0x24700000251, brand64: 0x8bc200008bc8, matchRI: 0x0918, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8200000b85},
			deviceTuple{type64: 0x24700000251, brand64: 0x8be900008bf0, matchRI: 0x091a, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8500000b8d},
			deviceTuple{type64: 0x24700000251, brand64: 0x8c7e00008c82, matchRI: 0x0920, match64: 0x00000000, modelSI: 0x0b8d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8c8200008c8b, matchRI: 0x0921, match64: 0x00000000, modelSI: -0x0001, models64: 0xb8e00000b94},
			deviceTuple{type64: 0x24700000251, brand64: 0x8d2d00008d35, matchRI: 0x0922, match64: 0x00000000, modelSI: -0x0001, models64: 0xb9400000b96},
			deviceTuple{type64: 0x24700000251, brand64: 0x8d4600008d4c, matchRI: 0x0925, match64: 0x00000000, modelSI: 0x0b96, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8d4c00008d52, matchRI: 0x0926, match64: 0x00000000, modelSI: -0x0001, models64: 0xb9700000bb3},
			deviceTuple{type64: 0x7130000071d, brand64: 0x8e3100008e3a, matchRI: 0x093f, match64: 0x00000000, modelSI: 0x0bb3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8e4c00008e52, matchRI: 0x0940, match64: 0x00000000, modelSI: -0x0001, models64: 0xbb400000bb6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8e6b00008e71, matchRI: -0x0001, match64: 0x8e7100008e7d, modelSI: 0x0bb6, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x8e8a00008e8e, matchRI: 0x0942, match64: 0x00000000, modelSI: 0x0bb7, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x8e8e00008e92, matchRI: 0x0943, match64: 0x00000000, modelSI: -0x0001, models64: 0xbb800000bba},
			deviceTuple{type64: 0x24700000251, brand64: 0x8e9600008e98, matchRI: 0x0946, match64: 0x00000000, modelSI: -0x0001, models64: 0xbba00000bbf},
			deviceTuple{type64: 0x24700000251, brand64: 0x8ec000008ec4, matchRI: 0x094a, match64: 0x00000000, modelSI: -0x0001, models64: 0xbbf00000bc4},
			deviceTuple{type64: 0x24700000251, brand64: 0x8edb00008ee4, matchRI: 0x094f, match64: 0x00000000, modelSI: -0x0001, models64: 0xbc400000bcb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8f4b00008f51, matchRI: 0x0951, match64: 0x00000000, modelSI: 0x0bcb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8f5100008f5e, matchRI: 0x0952, match64: 0x00000000, modelSI: 0x0bcc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8f6600008f6b, matchRI: 0x0953, match64: 0x00000000, modelSI: 0x0bcd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8f7900008f7d, matchRI: -0x0001, match64: 0x8f7d00008f82, modelSI: -0x0001, models64: 0xbce00000bcf},
			deviceTuple{type64: 0x24700000251, brand64: 0x8f8b00008f91, matchRI: -0x0001, match64: 0x8f8b00008f91, modelSI: -0x0001, models64: 0xbcf00000bd1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x8fa400008fab, matchRI: 0x0957, match64: 0x00000000, modelSI: 0x0bd1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x8fab00008fae, matchRI: 0x0958, match64: 0x00000000, modelSI: -0x0001, models64: 0xbd200000bdb},
			deviceTuple{type64: 0x24700000251, brand64: 0x903600009039, matchRI: 0x095a, match64: 0x00000000, modelSI: -0x0001, models64: 0xbdb00000be0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x90680000906b, matchRI: 0x095b, match64: 0x00000000, modelSI: -0x0001, models64: 0xbe000000be5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x90b5000090bb, matchRI: 0x095f, match64: 0x00000000, modelSI: 0x0be5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x90bb000090c0, matchRI: 0x0960, match64: 0x00000000, modelSI: 0x0be6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x90c0000090c5, matchRI: 0x0961, match64: 0x00000000, modelSI: -0x0001, models64: 0xbe700000be9},
			deviceTuple{type64: 0x24700000251, brand64: 0x90cc000090d4, matchRI: 0x0964, match64: 0x00000000, modelSI: -0x0001, models64: 0xbe900000bee},
			deviceTuple{type64: 0x24700000251, brand64: 0x90ec000090ef, matchRI: 0x0968, match64: 0x00000000, modelSI: 0x0bee, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x90ef000090f8, matchRI: 0x0969, match64: 0x00000000, modelSI: 0x0bef, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x90f800009100, matchRI: -0x0001, match64: 0x910000009108, modelSI: 0x0bf0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x911100009118, matchRI: 0x096a, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf100000bf4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x912300009129, matchRI: 0x096e, match64: 0x00000000, modelSI: 0x0bf4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x913000009139, matchRI: 0x096f, match64: 0x00000000, modelSI: 0x0bf5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x91390000913f, matchRI: 0x0970, match64: 0x00000000, modelSI: 0x0bf6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x913f00009145, matchRI: 0x0971, match64: 0x00000000, modelSI: -0x0001, models64: 0xbf700000bfc},
			deviceTuple{type64: 0x24700000251, brand64: 0x91790000917f, matchRI: 0x0974, match64: 0x00000000, modelSI: 0x0bfc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x91840000918e, matchRI: 0x0975, match64: 0x00000000, modelSI: 0x0bfd, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x918e00009196, matchRI: 0x0976, match64: 0x00000000, modelSI: 0x0bfe, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x91960000919f, matchRI: 0x0977, match64: 0x00000000, modelSI: 0x0bff, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x919f000091a5, matchRI: 0x0978, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0000000c01},
			deviceTuple{type64: 0x24700000251, brand64: 0x91a5000091a9, matchRI: 0x097a, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0100000c08},
			deviceTuple{type64: 0x24700000251, brand64: 0x920000009204, matchRI: 0x097d, match64: 0x00000000, modelSI: -0x0001, models64: 0xc0800000c15},
			deviceTuple{type64: 0x24700000251, brand64: 0x92d2000092d6, matchRI: 0x0980, match64: 0x00000000, modelSI: -0x0001, models64: 0xc1500000c20},
			deviceTuple{type64: 0x24700000251, brand64: 0x932100009328, matchRI: -0x0001, match64: 0x932100009328, modelSI: -0x0001, models64: 0xc2000000c21},
			deviceTuple{type64: 0x24300000245, brand64: 0x93280000932e, matchRI: -0x0001, match64: 0x93280000932e, modelSI: -0x0001, models64: 0xc2100000c22},
			deviceTuple{type64: 0x24700000251, brand64: 0x93340000933d, matchRI: 0x098a, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2200000c24},
			deviceTuple{type64: 0x24300000245, brand64: 0x933d00009343, matchRI: -0x0001, match64: 0x934300009349, modelSI: -0x0001, models64: 0xc2400000c25},
			deviceTuple{type64: 0x24700000251, brand64: 0x934900009357, matchRI: 0x098e, match64: 0x00000000, modelSI: -0x0001, models64: 0xc2500000c42},
			deviceTuple{type64: 0x24700000251, brand64: 0x94c8000094cc, matchRI: 0x09ab, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4200000c44},
			deviceTuple{type64: 0x24700000251, brand64: 0x94e0000094e3, matchRI: 0x09ac, match64: 0x00000000, modelSI: -0x0001, models64: 0xc4400000cb4},
			deviceTuple{type64: 0x24300000245, brand64: 0x994400009949, matchRI: -0x0001, match64: 0x99490000994f, modelSI: -0x0001, models64: 0xcb400000cb5},
			deviceTuple{type64: 0x24700000251, brand64: 0x995a0000995f, matchRI: 0x09f3, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb500000cb8},
			deviceTuple{type64: 0x24700000251, brand64: 0x995f00009964, matchRI: 0x09f7, match64: 0x00000000, modelSI: -0x0001, models64: 0xcb800000cba},
			deviceTuple{type64: 0x7130000071d, brand64: 0x99660000996e, matchRI: -0x0001, match64: 0x996e00009973, modelSI: -0x0001, models64: 0xcba00000cbb},
			deviceTuple{type64: 0x24300000245, brand64: 0x99730000997b, matchRI: 0x09fb, match64: 0x00000000, modelSI: -0x0001, models64: 0xcbb00000cbd},
			deviceTuple{type64: 0x24700000251, brand64: 0x99860000998d, matchRI: 0x09fe, match64: 0x00000000, modelSI: -0x0001, models64: 0xcbd00000cbe},
			deviceTuple{type64: 0x24700000251, brand64: 0x99970000999d, matchRI: 0x0a00, match64: 0x00000000, modelSI: 0x0cbe, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x999d000099a8, matchRI: 0x0a01, match64: 0x00000000, modelSI: 0x0cbf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x99af000099ba, matchRI: 0x0a02, match64: 0x00000000, modelSI: -0x0001, models64: 0xcc000000cc6},
			deviceTuple{type64: 0x24700000251, brand64: 0x99fc00009a02, matchRI: 0x0a06, match64: 0x00000000, modelSI: -0x0001, models64: 0xcc600000cc7},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a1000009a17, matchRI: 0x0a08, match64: 0x00000000, modelSI: -0x0001, models64: 0xcc700000cc8},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a2200009a27, matchRI: 0x0a0a, match64: 0x00000000, modelSI: -0x0001, models64: 0xcc800000cc9},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a2700009a2f, matchRI: 0x0a0c, match64: 0x00000000, modelSI: -0x0001, models64: 0xcc900000ccd},
			deviceTuple{type64: 0x24700000251, brand64: 0x9a5700009a5e, matchRI: 0x0a0d, match64: 0x00000000, modelSI: -0x0001, models64: 0xccd00000ce3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9b8500009b8b, matchRI: 0x0a16, match64: 0x00000000, modelSI: 0x0ce3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x56b00000570, matchRI: 0x0a17, match64: 0x00000000, modelSI: -0x0001, models64: 0xce400000ce5},
			deviceTuple{type64: 0x24700000251, brand64: 0x9b9600009b9d, matchRI: 0x0a18, match64: 0x00000000, modelSI: -0x0001, models64: 0xce500000d18},
			deviceTuple{type64: 0x24300000245, brand64: 0x9eae00009eb3, matchRI: 0x0a4a, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1800000d1a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9ec400009ecb, matchRI: 0x0a4d, match64: 0x00000000, modelSI: -0x0001, models64: 0xd1a00000d1f},
			deviceTuple{type64: 0x24700000251, brand64: 0x9eeb00009f03, matchRI: 0x0a53, match64: 0x00000000, modelSI: 0x0d1f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f0300009f08, matchRI: 0x0a54, match64: 0x00000000, modelSI: 0x0d20, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x9f0e00009f15, matchRI: -0x0001, match64: 0x9f1500009f1c, modelSI: -0x0001, models64: 0xd2100000d22},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f2400009f2a, matchRI: 0x0a55, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2200000d23},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f3300009f39, matchRI: 0x0a56, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2300000d2a},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f6b00009f72, matchRI: 0x0a5a, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2a00000d2c},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f8100009f84, matchRI: 0x0a5d, match64: 0x00000000, modelSI: 0x0d2c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x9f8400009f8a, matchRI: 0x0a5e, match64: 0x00000000, modelSI: 0x0d2d, models64: 0x00000000},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x9f8f00009f95, matchRI: 0x0a5f, match64: 0x00000000, modelSI: 0x0d2e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x9f9500009f9a, matchRI: 0x0a60, match64: 0x00000000, modelSI: -0x0001, models64: 0xd2f00000d3c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa0730000a07b, matchRI: 0x0a69, match64: 0x00000000, modelSI: 0x0d3c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa07f0000a085, matchRI: 0x0a6a, match64: 0x00000000, modelSI: 0x0d3d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa08e0000a091, matchRI: 0x0a6b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd3e00000d44},
			deviceTuple{type64: 0x24700000251, brand64: 0xa0bc0000a0c4, matchRI: 0x0a6f, match64: 0x00000000, modelSI: -0x0001, models64: 0xd4400000d5c},
			deviceTuple{type64: 0x24700000251, brand64: 0xa1da0000a1e2, matchRI: 0x0a83, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5c00000d5d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa1f00000a1f7, matchRI: 0x0a84, match64: 0x00000000, modelSI: -0x0001, models64: 0xd5d00000d5f},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2020000a206, matchRI: 0x0a86, match64: 0x00000000, modelSI: 0x0d5f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2060000a20d, matchRI: 0x0a87, match64: 0x00000000, modelSI: 0x0d60, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa20d0000a210, matchRI: 0x0a88, match64: 0x00000000, modelSI: 0x0d61, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2170000a21e, matchRI: 0x0a89, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6200000d64},
			deviceTuple{type64: 0x24700000251, brand64: 0xa21e0000a226, matchRI: 0x0a8c, match64: 0x00000000, modelSI: 0x0d64, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2260000a22d, matchRI: 0x0a8d, match64: 0x00000000, modelSI: 0x0d65, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa22d0000a23f, matchRI: 0x0a8e, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6600000d6a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa27b0000a280, matchRI: 0x0a8f, match64: 0x00000000, modelSI: 0x0d6a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2800000a28b, matchRI: 0x0a90, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6b00000d6e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa2980000a29f, matchRI: 0x0a94, match64: 0x00000000, modelSI: -0x0001, models64: 0xd6e00000d6f},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2a90000a2ae, matchRI: 0x0a96, match64: 0x00000000, modelSI: 0x0d6f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xa2ae0000a2b3, matchRI: -0x0001, match64: 0xa2b30000a2bb, modelSI: 0x0d70, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa2bb0000a2c1, matchRI: 0x0a97, match64: 0x00000000, modelSI: 0x0d71, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2c10000a2c6, matchRI: 0x0a98, match64: 0x00000000, modelSI: 0x0d72, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa2c60000a2d1, matchRI: 0x0a99, match64: 0x00000000, modelSI: 0x0d73, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa2d10000a2d7, matchRI: 0x0a9a, match64: 0x00000000, modelSI: 0x0d74, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa2d70000a2e5, matchRI: 0x0a9b, match64: 0x00000000, modelSI: -0x0001, models64: 0xd7500000d93},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa4320000a439, matchRI: 0x0aa3, match64: 0x00000000, modelSI: 0x0d93, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xa4390000a442, matchRI: 0x0aa4, match64: 0x00000000, modelSI: -0x0001, models64: 0xd9400000d96},
			deviceTuple{type64: 0x24700000251, brand64: 0xa4460000a44c, matchRI: 0x0aa7, match64: 0x00000000, modelSI: -0x0001, models64: 0xd9600000d99},
			deviceTuple{type64: 0x24300000245, brand64: 0xa4550000a45b, matchRI: 0x0aaa, match64: 0x00000000, modelSI: 0x0d99, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa45b0000a462, matchRI: 0x0aab, match64: 0x00000000, modelSI: 0x0d9a, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xa4620000a467, matchRI: 0x0aac, match64: 0x00000000, modelSI: 0x0d9b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa4670000a46b, matchRI: 0x0aad, match64: 0x00000000, modelSI: -0x0001, models64: 0xd9c00000db2},
			deviceTuple{type64: 0x24700000251, brand64: 0xa59c0000a5a1, matchRI: 0x0ab4, match64: 0x00000000, modelSI: 0x0db2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa5a10000a5a6, matchRI: 0x0ab5, match64: 0x00000000, modelSI: -0x0001, models64: 0xdb300000db4},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5a90000a5b1, matchRI: 0x0ab7, match64: 0x00000000, modelSI: -0x0001, models64: 0xdb400000db9},
			deviceTuple{type64: 0x24700000251, brand64: 0xa5df0000a5e6, matchRI: 0x0abb, match64: 0x00000000, modelSI: -0x0001, models64: 0xdb900000dca},
			deviceTuple{type64: 0x24700000251, brand64: 0xa69c0000a6a0, matchRI: 0x0ac2, match64: 0x00000000, modelSI: -0x0001, models64: 0xdca00000dcf},
			deviceTuple{type64: 0x24700000251, brand64: 0xa6b20000a6b8, matchRI: 0x0ac7, match64: 0x00000000, modelSI: -0x0001, models64: 0xdcf00000dd3},
			deviceTuple{type64: 0x24700000251, brand64: 0xa6c30000a6c9, matchRI: 0x0acc, match64: 0x00000000, modelSI: -0x0001, models64: 0xdd300000df4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa7be0000a7c4, matchRI: 0x0adf, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf400000df7},
			deviceTuple{type64: 0x24300000245, brand64: 0xa7cd0000a7d5, matchRI: 0x0ae3, match64: 0x00000000, modelSI: 0x0df7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa7d50000a7dd, matchRI: 0x0ae4, match64: 0x00000000, modelSI: 0x0df8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa7e10000a7e9, matchRI: 0x0ae5, match64: 0x00000000, modelSI: -0x0001, models64: 0xdf900000dfb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa8070000a811, matchRI: -0x0001, match64: 0xa8110000a817, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa8170000a81f, matchRI: 0x0ae6, match64: 0x00000000, modelSI: -0x0001, models64: 0xdfb00000e00},
			deviceTuple{type64: 0x29be000029c6, brand64: 0xa8690000a870, matchRI: -0x0001, match64: 0xa8700000a87c, modelSI: 0x0e00, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa87e0000a888, matchRI: 0x0ae8, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0100000e05},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xa8c40000a8ce, matchRI: 0x0ae9, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0500000e0a},
			deviceTuple{type64: 0x24300000245, brand64: 0xa9060000a90e, matchRI: 0x0aec, match64: 0x00000000, modelSI: 0x0e0a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xa90e0000a912, matchRI: 0x0aed, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0b00000e0d},
			deviceTuple{type64: 0x24700000251, brand64: 0xa9120000a916, matchRI: 0x0af0, match64: 0x00000000, modelSI: -0x0001, models64: 0xe0d00000e18},
			deviceTuple{type64: 0x24700000251, brand64: 0xa92e0000a934, matchRI: 0x0afc, match64: 0x00000000, modelSI: -0x0001, models64: 0xe1800000e4d},
			deviceTuple{type64: 0x24700000251, brand64: 0xab390000ab41, matchRI: 0x0b1e, match64: 0x00000000, modelSI: -0x0001, models64: 0xe4d00000e55},
			deviceTuple{type64: 0x24700000251, brand64: 0xab650000ab6c, matchRI: 0x0b27, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5500000e57},
			deviceTuple{type64: 0x24700000251, brand64: 0xab6c0000ab71, matchRI: 0x0b29, match64: 0x00000000, modelSI: -0x0001, models64: 0xe5700000e5c},
			deviceTuple{type64: 0x38400000391, brand64: 0xab940000ab9d, matchRI: -0x0001, match64: 0xab9d0000aba6, modelSI: -0x0001, models64: 0xe5c00000e5e},
			deviceTuple{type64: 0x24300000245, brand64: 0xaba60000abac, matchRI: 0x0b2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xabac0000abb1, matchRI: 0x0b2f, match64: 0x00000000, modelSI: 0x0e5e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xabb80000abc2, matchRI: 0x0b30, match64: 0x00000000, modelSI: 0x0e5f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xabc20000abc6, matchRI: 0x0b31, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6000000e63},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xabe20000abec, matchRI: 0x0b33, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6300000e65},
			deviceTuple{type64: 0x24700000251, brand64: 0xabfe0000ac0a, matchRI: 0x0b36, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6500000e66},
			deviceTuple{type64: 0x24700000251, brand64: 0xac170000ac1f, matchRI: 0x0b37, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6600000e67},
			deviceTuple{type64: 0x24700000251, brand64: 0xac2b0000ac31, matchRI: 0x0b39, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6700000e69},
			deviceTuple{type64: 0x24700000251, brand64: 0xac460000ac4c, matchRI: 0x0b3b, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6900000e6b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xac4c0000ac56, matchRI: 0x0b3e, match64: 0x00000000, modelSI: 0x0e6b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xac560000ac5d, matchRI: 0x0b3f, match64: 0x00000000, modelSI: -0x0001, models64: 0xe6c00000e73},
			deviceTuple{type64: 0x24300000245, brand64: 0xaca90000acb2, matchRI: 0x0b44, match64: 0x00000000, modelSI: 0x0e73, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xacb20000acb6, matchRI: 0x0b45, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7400000e7a},
			deviceTuple{type64: 0x24700000251, brand64: 0xacfd0000ad05, matchRI: 0x0b4b, match64: 0x00000000, modelSI: 0x0e7a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xad050000ad09, matchRI: 0x0b4c, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7b00000e7c},
			deviceTuple{type64: 0x24300000245, brand64: 0xad110000ad14, matchRI: 0x0b4e, match64: 0x00000000, modelSI: -0x0001, models64: 0xe7c00000e83},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad340000ad3a, matchRI: 0x0b56, match64: 0x00000000, modelSI: 0x0e83, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad3a0000ad3f, matchRI: 0x0b57, match64: 0x00000000, modelSI: 0x0e84, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0xad3f0000ad44, matchRI: -0x0001, match64: 0xad3f0000ad44, modelSI: -0x0001, models64: 0xe8500000e86},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xad560000ad59, matchRI: 0x0b58, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8600000e87},
			deviceTuple{type64: 0x24300000245, brand64: 0xad670000ad6a, matchRI: -0x0001, match64: 0xad6a0000ad7b, modelSI: 0x0e87, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xad840000ad88, matchRI: 0x0b59, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8800000e89},
			deviceTuple{type64: 0x24300000245, brand64: 0xad8e0000ad93, matchRI: 0x0b5b, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8900000e8d},
			deviceTuple{type64: 0x24300000245, brand64: 0xadc00000adc3, matchRI: -0x0001, match64: 0xadc30000adc7, modelSI: -0x0001, models64: 0xe8d00000e8e},
			deviceTuple{type64: 0x24300000245, brand64: 0xadd50000adda, matchRI: 0x0b60, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xadda0000adde, matchRI: 0x0b61, match64: 0x00000000, modelSI: 0x0e8e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xadde0000ade1, matchRI: 0x0b62, match64: 0x00000000, modelSI: -0x0001, models64: 0xe8f00000e95},
			deviceTuple{type64: 0x24300000245, brand64: 0xae150000ae1e, matchRI: 0x0b63, match64: 0x00000000, modelSI: 0x0e95, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xae280000ae30, matchRI: 0x0b64, match64: 0x00000000, modelSI: 0x0e96, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xae300000ae38, matchRI: -0x0001, match64: 0xae300000ae38, modelSI: -0x0001, models64: 0xe9700000e98},
			deviceTuple{type64: 0x24700000251, brand64: 0xae470000ae49, matchRI: 0x0b66, match64: 0x00000000, modelSI: -0x0001, models64: 0xe9800000ead},
			deviceTuple{type64: 0x24700000251, brand64: 0xaf4c0000af4f, matchRI: 0x0b72, match64: 0x00000000, modelSI: -0x0001, models64: 0xead00000f09},
			deviceTuple{type64: 0x24700000251, brand64: 0xb2740000b27a, matchRI: 0x0bc6, match64: 0x00000000, modelSI: -0x0001, models64: 0xf0900000f0b},
			deviceTuple{type64: 0x24700000251, brand64: 0xb27e0000b283, matchRI: 0x0bc9, match64: 0x00000000, modelSI: -0x0001, models64: 0xf0b00000f28},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3a00000b3a6, matchRI: -0x0001, match64: 0xb3a00000b3a6, modelSI: -0x0001, models64: 0xf2800000f29},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3ae0000b3b3, matchRI: 0x0bd8, match64: 0x00000000, modelSI: 0x0f29, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb3b30000b3b9, matchRI: 0x0bd9, match64: 0x00000000, modelSI: -0x0001, models64: 0xf2a00000f2b},
			deviceTuple{type64: 0x24700000251, brand64: 0xb3c50000b3cb, matchRI: 0x0bdb, match64: 0x00000000, modelSI: -0x0001, models64: 0xf2b00000f3d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb48b0000b493, matchRI: 0x0bea, match64: 0x00000000, modelSI: -0x0001, models64: 0xf3d00000f3f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb4930000b49c, matchRI: 0x0bed, match64: 0x00000000, modelSI: -0x0001, models64: 0xf3f00000f46},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb4d20000b4d8, matchRI: 0x0bf0, match64: 0x00000000, modelSI: 0x0f46, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0xb4d80000b4e2, matchRI: 0x0bf1, match64: 0x00000000, modelSI: 0x0f47, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xb4eb0000b4f1, matchRI: 0x0bf2, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4800000f4a},
			deviceTuple{type64: 0x24300000245, brand64: 0xb4f10000b4f8, matchRI: 0x0bf5, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4a00000f4c},
			deviceTuple{type64: 0x24700000251, brand64: 0xb50c0000b511, matchRI: -0x0001, match64: 0xb50c0000b511, modelSI: -0x0001, models64: 0xf4c00000f4e},
			deviceTuple{type64: 0x24300000245, brand64: 0xb5110000b518, matchRI: 0x0bfa, match64: 0x00000000, modelSI: 0x0f4e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb5180000b520, matchRI: 0x0bfb, match64: 0x00000000, modelSI: -0x0001, models64: 0xf4f00000f52},
			deviceTuple{type64: 0x24300000245, brand64: 0xb5310000b537, matchRI: 0x0bff, match64: 0x00000000, modelSI: 0x0f52, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb5370000b53c, matchRI: 0x0c00, match64: 0x00000000, modelSI: 0x0f53, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb53c0000b544, matchRI: 0x0c01, match64: 0x00000000, modelSI: 0x0f54, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb5500000b558, matchRI: 0x0c02, match64: 0x00000000, modelSI: 0x0f55, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb55a0000b560, matchRI: 0x0c03, match64: 0x00000000, modelSI: 0x0f56, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb5600000b562, matchRI: 0x0c04, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5700000f5e},
			deviceTuple{type64: 0x24700000251, brand64: 0xb5960000b59d, matchRI: 0x0c0b, match64: 0x00000000, modelSI: -0x0001, models64: 0xf5e00000f66},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb5f30000b5fb, matchRI: 0x0c0d, match64: 0x00000000, modelSI: 0x0f66, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0xb6020000b606, matchRI: 0x0c0e, match64: 0x00000000, modelSI: 0x0f67, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb6250000b62c, matchRI: 0x0c0f, match64: 0x00000000, modelSI: 0x0f68, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb62c0000b630, matchRI: -0x0001, match64: 0xb6300000b635, modelSI: -0x0001, models64: 0xf6900000f6a},
			deviceTuple{type64: 0x24700000251, brand64: 0xb6400000b646, matchRI: 0x0c11, match64: 0x00000000, modelSI: -0x0001, models64: 0xf6a00000f6d},
			deviceTuple{type64: 0x24700000251, brand64: 0xb64f0000b654, matchRI: 0x0c14, match64: 0x00000000, modelSI: -0x0001, models64: 0xf6d00000f70},
			deviceTuple{type64: 0x24300000245, brand64: 0xb6720000b678, matchRI: 0x0c17, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7000000f74},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb68f0000b695, matchRI: 0x0c1c, match64: 0x00000000, modelSI: 0x0f74, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xb6950000b69f, matchRI: 0x0c1d, match64: 0x00000000, modelSI: -0x0001, models64: 0xf7500000f9f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xb81a0000b823, matchRI: 0x0c44, match64: 0x00000000, modelSI: -0x0001, models64: 0xf9f00000fa2},
			deviceTuple{type64: 0x24300000245, brand64: 0xb8230000b82a, matchRI: 0x0c48, match64: 0x00000000, modelSI: -0x0001, models64: 0xfa200000fa6},
			deviceTuple{type64: 0x24700000251, brand64: 0xb8570000b85e, matchRI: 0x0c4a, match64: 0x00000000, modelSI: -0x0001, models64: 0xfa600000fe6},
			deviceTuple{type64: 0x24300000245, brand64: 0xba850000ba8c, matchRI: 0x0c75, match64: 0x00000000, modelSI: -0x0001, models64: 0xfe600000fe7},
			deviceTuple{type64: 0x24700000251, brand64: 0xba8c0000ba92, matchRI: 0x0c77, match64: 0x00000000, modelSI: 0x0fe7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xba920000ba9a, matchRI: 0x0c78, match64: 0x00000000, modelSI: -0x0001, models64: 0xfe800000feb},
			deviceTuple{type64: 0x24300000245, brand64: 0xba9e0000baa6, matchRI: 0x0c7c, match64: 0x00000000, modelSI: 0x0feb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xbaa60000baae, matchRI: 0x0c7d, match64: 0x00000000, modelSI: -0x0001, models64: 0xfec00000ff1},
			deviceTuple{type64: 0x24700000251, brand64: 0xbae50000baeb, matchRI: 0x0c82, match64: 0x00000000, modelSI: -0x0001, models64: 0xff100000ff6},
			deviceTuple{type64: 0x24700000251, brand64: 0xbb010000bb0a, matchRI: 0x0c86, match64: 0x00000000, modelSI: -0x0001, models64: 0xff600000ffa},
			deviceTuple{type64: 0x24300000245, brand64: 0xbb300000bb37, matchRI: -0x0001, match64: 0xbb300000bb37, modelSI: -0x0001, models64: 0xffa00000ffc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xbb530000bb58, matchRI: 0x0c8a, match64: 0x00000000, modelSI: -0x0001, models64: 0xffc00001000},
			deviceTuple{type64: 0x7130000071d, brand64: 0xbb5b0000bb63, matchRI: 0x0c8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x100000001001},
			deviceTuple{type64: 0x24300000245, brand64: 0xbb670000bb6d, matchRI: 0x0c91, match64: 0x00000000, modelSI: 0x1001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xbb6d0000bb75, matchRI: 0x0c92, match64: 0x00000000, modelSI: 0x1002, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xbb750000bb7a, matchRI: 0x0c93, match64: 0x00000000, modelSI: -0x0001, models64: 0x100300001005},
			deviceTuple{type64: 0x24700000251, brand64: 0xbb7a0000bb84, matchRI: 0x0c96, match64: 0x00000000, modelSI: -0x0001, models64: 0x10050000100b},
			deviceTuple{type64: 0x24700000251, brand64: 0xbbc30000bbc9, matchRI: 0x0c97, match64: 0x00000000, modelSI: -0x0001, models64: 0x100b00001023},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xbc9f0000bca2, matchRI: 0x0ca6, match64: 0x00000000, modelSI: -0x0001, models64: 0x102300001026},
			deviceTuple{type64: 0x24700000251, brand64: 0xbcb70000bcbd, matchRI: 0x0caa, match64: 0x00000000, modelSI: -0x0001, models64: 0x102600001028},
			deviceTuple{type64: 0x24700000251, brand64: 0xbcc10000bcc7, matchRI: 0x0cad, match64: 0x00000000, modelSI: -0x0001, models64: 0x102800001029},
			deviceTuple{type64: 0x24700000251, brand64: 0xbcc70000bccc, matchRI: 0x0caf, match64: 0x00000000, modelSI: -0x0001, models64: 0x10290000102b},
			deviceTuple{type64: 0x24700000251, brand64: 0xbceb0000bcf1, matchRI: 0x0cb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x102b0000129e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xde460000de4e, matchRI: 0x0e85, match64: 0x00000000, modelSI: -0x0001, models64: 0x129e000012a0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xde620000de6b, matchRI: -0x0001, match64: 0xde6b0000de76, modelSI: -0x0001, models64: 0x12a0000012a2},
			deviceTuple{type64: 0x24300000245, brand64: 0xde9d0000dea2, matchRI: 0x0e89, match64: 0x00000000, modelSI: -0x0001, models64: 0x12a2000012a5},
			deviceTuple{type64: 0x24700000251, brand64: 0xdea20000deab, matchRI: 0x0e8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x12a5000012b9},
			deviceTuple{type64: 0x24700000251, brand64: 0xdf4a0000df50, matchRI: 0x0e92, match64: 0x00000000, modelSI: -0x0001, models64: 0x12b9000012bb},
			deviceTuple{type64: 0x24700000251, brand64: 0xdf5e0000df64, matchRI: 0x0e94, match64: 0x00000000, modelSI: 0x12bb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xdf6c0000df72, matchRI: -0x0001, match64: 0xdf720000df80, modelSI: 0x12bc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xdf870000df8d, matchRI: 0x0e95, match64: 0x00000000, modelSI: -0x0001, models64: 0x12bd000012be},
			deviceTuple{type64: 0x24700000251, brand64: 0xdf8d0000df94, matchRI: 0x0e97, match64: 0x00000000, modelSI: -0x0001, models64: 0x12be000012e9},
			deviceTuple{type64: 0x24700000251, brand64: 0xe1c20000e1c6, matchRI: 0x0ea7, match64: 0x00000000, modelSI: -0x0001, models64: 0x12e9000012eb},
			deviceTuple{type64: 0x24700000251, brand64: 0xe1dc0000e1e2, matchRI: -0x0001, match64: 0xe1e20000e1e7, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe1e70000e1ec, matchRI: 0x0ea8, match64: 0x00000000, modelSI: 0x12eb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2000000e206, matchRI: 0x0ea9, match64: 0x00000000, modelSI: -0x0001, models64: 0x12ec000012ee},
			deviceTuple{type64: 0x38400000391, brand64: 0xe20e0000e211, matchRI: 0x0eab, match64: 0x00000000, modelSI: 0x12ee, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2190000e223, matchRI: 0x0eac, match64: 0x00000000, modelSI: -0x0001, models64: 0x12ef000012f4},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2610000e26b, matchRI: 0x0eaf, match64: 0x00000000, modelSI: -0x0001, models64: 0x12f4000012f8},
			deviceTuple{type64: 0x24700000251, brand64: 0xe2700000e27a, matchRI: 0x0eb4, match64: 0x00000000, modelSI: -0x0001, models64: 0x12f80000130c},
			deviceTuple{type64: 0x8e00000099, brand64: 0xe30e0000e313, matchRI: 0x0ec9, match64: 0x00000000, modelSI: 0x130c, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xe3130000e316, matchRI: 0x0eca, match64: 0x00000000, modelSI: -0x0001, models64: 0x130d0000130f},
			deviceTuple{type64: 0x24700000251, brand64: 0xe3160000e31b, matchRI: 0x0ecd, match64: 0x00000000, modelSI: -0x0001, models64: 0x130f00001313},
			deviceTuple{type64: 0x24300000245, brand64: 0xe3460000e34b, matchRI: 0x0ecf, match64: 0x00000000, modelSI: 0x1313, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xe3520000e355, matchRI: 0x0ed0, match64: 0x00000000, modelSI: -0x0001, models64: 0x131400001317},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe3620000e365, matchRI: 0x0ed4, match64: 0x00000000, modelSI: -0x0001, models64: 0x131700001319},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe3760000e378, matchRI: 0x0ed6, match64: 0x00000000, modelSI: -0x0001, models64: 0x13190000131b},
			deviceTuple{type64: 0x24700000251, brand64: 0xe38d0000e391, matchRI: 0x0ed8, match64: 0x00000000, modelSI: -0x0001, models64: 0x131b0000131c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe3910000e398, matchRI: 0x0eda, match64: 0x00000000, modelSI: -0x0001, models64: 0x131c00001335},
			deviceTuple{type64: 0x24300000245, brand64: 0xe6070000e611, matchRI: 0x0edd, match64: 0x00000000, modelSI: 0x1335, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xe6110000e615, matchRI: -0x0001, match64: 0xe6150000e619, modelSI: -0x0001, models64: 0x133600001337},
			deviceTuple{type64: 0x24700000251, brand64: 0xe61e0000e623, matchRI: -0x0001, match64: 0xe6230000e629, modelSI: 0x1337, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe6290000e633, matchRI: 0x0edf, match64: 0x00000000, modelSI: -0x0001, models64: 0x13380000133d},
			deviceTuple{type64: 0x24700000251, brand64: 0xe6450000e64c, matchRI: 0x0ee5, match64: 0x00000000, modelSI: -0x0001, models64: 0x133d00001348},
			deviceTuple{type64: 0x24700000251, brand64: 0xe6bb0000e6c1, matchRI: 0x0ee9, match64: 0x00000000, modelSI: -0x0001, models64: 0x13480000134b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xe6ef0000e6f3, matchRI: 0x0eeb, match64: 0x00000000, modelSI: -0x0001, models64: 0x134b0000134d},
			deviceTuple{type64: 0x24700000251, brand64: 0xe6f60000e6fa, matchRI: 0x0eee, match64: 0x00000000, modelSI: -0x0001, models64: 0x134d00001354},
			deviceTuple{type64: 0x24700000251, brand64: 0xe7360000e73f, matchRI: 0x0ef3, match64: 0x00000000, modelSI: -0x0001, models64: 0x135400001357},
			deviceTuple{type64: 0x24700000251, brand64: 0xe7610000e768, matchRI: -0x0001, match64: 0xe7610000e768, modelSI: -0x0001, models64: 0x1357000013f7},
			deviceTuple{type64: 0x24300000245, brand64: 0xec4d0000ec54, matchRI: 0x0f94, match64: 0x00000000, modelSI: 0x13f7, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xec540000ec5b, matchRI: 0x0f95, match64: 0x00000000, modelSI: 0x13f8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xec5b0000ec60, matchRI: 0x0f96, match64: 0x00000000, modelSI: 0x13f9, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xec600000ec64, matchRI: 0x0f97, match64: 0x00000000, modelSI: 0x13fa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xec6c0000ec71, matchRI: 0x0f98, match64: 0x00000000, modelSI: 0x13fb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xec710000ec77, matchRI: 0x0f99, match64: 0x00000000, modelSI: -0x0001, models64: 0x13fc00001415},
			deviceTuple{type64: 0x24700000251, brand64: 0xedbf0000edc4, matchRI: 0x0fa6, match64: 0x00000000, modelSI: 0x1415, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xedc40000edce, matchRI: 0x0fa7, match64: 0x00000000, modelSI: 0x1416, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xedd40000edd8, matchRI: 0x0fa8, match64: 0x00000000, modelSI: -0x0001, models64: 0x141700001428},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xee6b0000ee73, matchRI: 0x0fb5, match64: 0x00000000, modelSI: -0x0001, models64: 0x142800001430},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0xeef20000eef7, matchRI: -0x0001, match64: 0xeef70000ef01, modelSI: -0x0001, models64: 0x143000001431},
			deviceTuple{type64: 0x24700000251, brand64: 0xef070000ef0c, matchRI: 0x0fb8, match64: 0x00000000, modelSI: -0x0001, models64: 0x143100001453},
			deviceTuple{type64: 0x24700000251, brand64: 0xf0950000f09b, matchRI: 0x0fd9, match64: 0x00000000, modelSI: -0x0001, models64: 0x145300001455},
			deviceTuple{type64: 0x24300000245, brand64: 0xf09b0000f0a0, matchRI: 0x0fdc, match64: 0x00000000, modelSI: -0x0001, models64: 0x145500001458},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf0ad0000f0b2, matchRI: 0x0fdf, match64: 0x00000000, modelSI: -0x0001, models64: 0x14580000145b},
			deviceTuple{type64: 0x24700000251, brand64: 0xf0b20000f0b6, matchRI: 0x0fe3, match64: 0x00000000, modelSI: -0x0001, models64: 0x145b0000146c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf1a10000f1a9, matchRI: 0x0feb, match64: 0x00000000, modelSI: -0x0001, models64: 0x146c00001471},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1e80000f1ed, matchRI: 0x0ff0, match64: 0x00000000, modelSI: 0x1471, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf1ed0000f1f0, matchRI: 0x0ff1, match64: 0x00000000, modelSI: 0x1472, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf1f00000f1f4, matchRI: 0x0ff2, match64: 0x00000000, modelSI: 0x1473, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf1f40000f1f8, matchRI: 0x0ff3, match64: 0x00000000, modelSI: 0x1474, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xf1f80000f1fb, matchRI: 0x0ff4, match64: 0x00000000, modelSI: -0x0001, models64: 0x14750000147d},
			deviceTuple{type64: 0x24700000251, brand64: 0xf22e0000f233, matchRI: 0x0ffd, match64: 0x00000000, modelSI: 0x147d, models64: 0x00000000},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0xf23d0000f241, matchRI: 0x0ffe, match64: 0x00000000, modelSI: -0x0001, models64: 0x147e00001480},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf2540000f258, matchRI: 0x0fff, match64: 0x00000000, modelSI: -0x0001, models64: 0x148000001482},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2650000f269, matchRI: 0x1002, match64: 0x00000000, modelSI: -0x0001, models64: 0x148200001484},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2770000f27c, matchRI: 0x1004, match64: 0x00000000, modelSI: 0x1484, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2810000f286, matchRI: 0x1005, match64: 0x00000000, modelSI: -0x0001, models64: 0x148500001488},
			deviceTuple{type64: 0x7130000071d, brand64: 0xf2900000f296, matchRI: 0x1009, match64: 0x00000000, modelSI: 0x1488, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf2960000f29b, matchRI: 0x100a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1489000014a0},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3390000f33c, matchRI: 0x1022, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a0000014a2},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3490000f34d, matchRI: 0x1025, match64: 0x00000000, modelSI: -0x0001, models64: 0x14a2000014aa},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3ab0000f3b0, matchRI: -0x0001, match64: 0xf3ab0000f3b0, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3b00000f3b3, matchRI: 0x102c, match64: 0x00000000, modelSI: -0x0001, models64: 0x14aa000014ab},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf3b30000f3ba, matchRI: 0x102e, match64: 0x00000000, modelSI: 0x14ab, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf3be0000f3c4, matchRI: 0x102f, match64: 0x00000000, modelSI: 0x14ac, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3cc0000f3db, matchRI: -0x0001, match64: 0xf3db0000f3e4, modelSI: -0x0001, models64: 0x14ad000014ae},
			deviceTuple{type64: 0x24700000251, brand64: 0xf3f00000f3f5, matchRI: 0x1030, match64: 0x00000000, modelSI: -0x0001, models64: 0x14ae000014b6},
			deviceTuple{type64: 0x24700000251, brand64: 0xf4500000f456, matchRI: 0x1035, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b6000014b8},
			deviceTuple{type64: 0x24700000251, brand64: 0xf4840000f48b, matchRI: 0x1036, match64: 0x00000000, modelSI: -0x0001, models64: 0x14b8000014c2},
			deviceTuple{type64: 0x24300000245, brand64: 0xf5040000f509, matchRI: 0x1039, match64: 0x00000000, modelSI: 0x14c2, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0xf5090000f50d, matchRI: 0x103a, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c3000014c7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf5270000f52d, matchRI: 0x103f, match64: 0x00000000, modelSI: -0x0001, models64: 0x14c7000014cc},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5550000f55c, matchRI: 0x1042, match64: 0x00000000, modelSI: 0x14cc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf55c0000f564, matchRI: 0x1043, match64: 0x00000000, modelSI: -0x0001, models64: 0x14cd000014cf},
			deviceTuple{type64: 0x24300000245, brand64: 0xf56c0000f56f, matchRI: 0x1046, match64: 0x00000000, modelSI: 0x14cf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf56f0000f578, matchRI: 0x1047, match64: 0x00000000, modelSI: 0x14d0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5780000f57c, matchRI: 0x1048, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d1000014d3},
			deviceTuple{type64: 0x24700000251, brand64: 0xf57c0000f580, matchRI: 0x104b, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d3000014d5},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5800000f584, matchRI: 0x104e, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d5000014d6},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5870000f58c, matchRI: 0x1050, match64: 0x00000000, modelSI: -0x0001, models64: 0x14d6000014dc},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5d70000f5de, matchRI: 0x1053, match64: 0x00000000, modelSI: 0x14dc, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf5de0000f5e4, matchRI: -0x0001, match64: 0xf5e40000f5eb, modelSI: -0x0001, models64: 0x14dd000014de},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5f40000f5f7, matchRI: 0x1054, match64: 0x00000000, modelSI: 0x14de, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf5f70000f5fb, matchRI: 0x1055, match64: 0x00000000, modelSI: 0x14df, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf5fb0000f601, matchRI: 0x1056, match64: 0x00000000, modelSI: 0x14e0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf60c0000f612, matchRI: 0x1057, match64: 0x00000000, modelSI: -0x0001, models64: 0x14e1000014f2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xf7110000f716, matchRI: 0x1060, match64: 0x00000000, modelSI: -0x0001, models64: 0x14f2000014f9},
			deviceTuple{type64: 0x24700000251, brand64: 0xf7530000f759, matchRI: 0x1066, match64: 0x00000000, modelSI: 0x14f9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xf7590000f760, matchRI: 0x1067, match64: 0x00000000, modelSI: -0x0001, models64: 0x14fa00001529},
			deviceTuple{type64: 0x24700000251, brand64: 0xf9db0000f9df, matchRI: 0x107a, match64: 0x00000000, modelSI: -0x0001, models64: 0x15290000152e},
			deviceTuple{type64: 0x24700000251, brand64: 0xf9ee0000f9f3, matchRI: 0x1080, match64: 0x00000000, modelSI: -0x0001, models64: 0x152e00001533},
			deviceTuple{type64: 0x24700000251, brand64: 0xfa240000fa2a, matchRI: -0x0001, match64: 0xfa2a0000fa31, modelSI: -0x0001, models64: 0x153300001534},
			deviceTuple{type64: 0x24700000251, brand64: 0xfa3d0000fa4e, matchRI: 0x1084, match64: 0x00000000, modelSI: -0x0001, models64: 0x15340000153f},
			deviceTuple{type64: 0x24700000251, brand64: 0xfae70000faec, matchRI: 0x1089, match64: 0x00000000, modelSI: -0x0001, models64: 0x153f00001542},
			deviceTuple{type64: 0x24700000251, brand64: 0xfb010000fb08, matchRI: 0x108b, match64: 0x00000000, modelSI: -0x0001, models64: 0x154200001549},
			deviceTuple{type64: 0x24700000251, brand64: 0xfb170000fb1f, matchRI: 0x1093, match64: 0x00000000, modelSI: 0x1549, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xfb320000fb38, matchRI: 0x1094, match64: 0x00000000, modelSI: 0x154a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfb380000fb3d, matchRI: 0x1095, match64: 0x00000000, modelSI: -0x0001, models64: 0x154b00001553},
			deviceTuple{type64: 0x24300000245, brand64: 0xfbac0000fbb3, matchRI: -0x0001, match64: 0xfbac0000fbb3, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfbb30000fbbb, matchRI: -0x0001, match64: 0xfbb30000fbbb, modelSI: -0x0001, models64: 0x155300001554},
			deviceTuple{type64: 0x24700000251, brand64: 0xfbbb0000fbc2, matchRI: 0x109e, match64: 0x00000000, modelSI: -0x0001, models64: 0x155400001556},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xfbc20000fbca, matchRI: 0x10a1, match64: 0x00000000, modelSI: 0x1556, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfbca0000fbcf, matchRI: 0x10a2, match64: 0x00000000, modelSI: -0x0001, models64: 0x155700001559},
			deviceTuple{type64: 0x24300000245, brand64: 0xfbe90000fbed, matchRI: 0x10a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x15590000155c},
			deviceTuple{type64: 0x24700000251, brand64: 0xfbf30000fbf9, matchRI: 0x10a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x155c00001560},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xfc120000fc18, matchRI: 0x10ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x15600000156f},
			deviceTuple{type64: 0x24700000251, brand64: 0xfc430000fc48, matchRI: 0x10bc, match64: 0x00000000, modelSI: -0x0001, models64: 0x156f00001576},
			deviceTuple{type64: 0x24700000251, brand64: 0xfc8a0000fc8f, matchRI: 0x10c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x15760000157e},
			deviceTuple{type64: 0x24700000251, brand64: 0xfcca0000fcce, matchRI: 0x10c7, match64: 0x00000000, modelSI: -0x0001, models64: 0x157e00001580},
			deviceTuple{type64: 0x24700000251, brand64: 0xfcce0000fcd3, matchRI: 0x10ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x15800000158a},
			deviceTuple{type64: 0x24700000251, brand64: 0xfd200000fd26, matchRI: 0x10cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x158a0000159a},
			deviceTuple{type64: 0x24700000251, brand64: 0xfd870000fd8d, matchRI: 0x10e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x159a0000159f},
			deviceTuple{type64: 0x24700000251, brand64: 0xfd9e0000fda5, matchRI: 0x10e5, match64: 0x00000000, modelSI: 0x159f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfda50000fdab, matchRI: 0x10e6, match64: 0x00000000, modelSI: 0x15a0, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xfdb60000fdbb, matchRI: 0x10e7, match64: 0x00000000, modelSI: 0x15a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfdbb0000fdc1, matchRI: 0x10e8, match64: 0x00000000, modelSI: 0x15a2, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xfdc10000fdc7, matchRI: 0x10e9, match64: 0x00000000, modelSI: 0x15a3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xfdc70000fdcc, matchRI: 0x10ea, match64: 0x00000000, modelSI: 0x15a4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xfdd20000fdde, matchRI: 0x10eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x15a5000015c1},
			deviceTuple{type64: 0x24700000251, brand64: 0xfefd0000ff03, matchRI: 0x1105, match64: 0x00000000, modelSI: 0x15c1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xff030000ff07, matchRI: 0x1106, match64: 0x00000000, modelSI: 0x15c2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xff070000ff0c, matchRI: 0x1107, match64: 0x00000000, modelSI: -0x0001, models64: 0x15c3000015c5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0xff0c0000ff11, matchRI: 0x110a, match64: 0x00000000, modelSI: -0x0001, models64: 0x15c5000015c8},
			deviceTuple{type64: 0x24700000251, brand64: 0xff220000ff29, matchRI: 0x110e, match64: 0x00000000, modelSI: -0x0001, models64: 0x15c80000161b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1025b00010261, matchRI: 0x1159, match64: 0x00000000, modelSI: 0x161b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1026100010265, matchRI: 0x115a, match64: 0x00000000, modelSI: -0x0001, models64: 0x161c00001623},
			deviceTuple{type64: 0x24700000251, brand64: 0x102bd000102c2, matchRI: 0x115c, match64: 0x00000000, modelSI: -0x0001, models64: 0x162300001625},
			deviceTuple{type64: 0x24700000251, brand64: 0x102d9000102dd, matchRI: 0x115f, match64: 0x00000000, modelSI: -0x0001, models64: 0x162500001626},
			deviceTuple{type64: 0x38400000391, brand64: 0x102dd000102e0, matchRI: 0x1161, match64: 0x00000000, modelSI: 0x1626, models64: 0x00000000},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x102e0000102e5, matchRI: 0x1162, match64: 0x00000000, modelSI: -0x0001, models64: 0x162700001629},
			deviceTuple{type64: 0x24700000251, brand64: 0x102e5000102e7, matchRI: 0x1165, match64: 0x00000000, modelSI: -0x0001, models64: 0x162900001773},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10ee500010eeb, matchRI: 0x124a, match64: 0x00000000, modelSI: 0x1773, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x10eeb00010ef0, matchRI: 0x124b, match64: 0x00000000, modelSI: 0x1774, models64: 0x00000000},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x10ef000010ef6, matchRI: 0x124c, match64: 0x00000000, modelSI: 0x1775, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x10ef600010efb, matchRI: -0x0001, match64: 0x10efb00010f04, modelSI: -0x0001, models64: 0x177600001777},
			deviceTuple{type64: 0x24700000251, brand64: 0x10f1800010f21, matchRI: 0x124d, match64: 0x00000000, modelSI: -0x0001, models64: 0x17770000178d},
			deviceTuple{type64: 0x24300000245, brand64: 0x10f6000010f63, matchRI: 0x1263, match64: 0x00000000, modelSI: 0x178d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x10f6300010f65, matchRI: 0x1264, match64: 0x00000000, modelSI: 0x178e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x10f6500010f68, matchRI: 0x1265, match64: 0x00000000, modelSI: -0x0001, models64: 0x178f000017b0},
			deviceTuple{type64: 0x24700000251, brand64: 0x111200001112c, matchRI: 0x1269, match64: 0x00000000, modelSI: 0x17b0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x111330001113d, matchRI: 0x126a, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b1000017b6},
			deviceTuple{type64: 0x24700000251, brand64: 0x111680001116e, matchRI: 0x126e, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b6000017b8},
			deviceTuple{type64: 0x24700000251, brand64: 0x1118000011185, matchRI: 0x1270, match64: 0x00000000, modelSI: 0x17b8, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x111850001118a, matchRI: 0x1271, match64: 0x00000000, modelSI: -0x0001, models64: 0x17b9000017c3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x111fe00011202, matchRI: 0x1279, match64: 0x00000000, modelSI: -0x0001, models64: 0x17c3000017d3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x112f4000112f9, matchRI: 0x1285, match64: 0x00000000, modelSI: -0x0001, models64: 0x17d3000017d4},
			deviceTuple{type64: 0x24700000251, brand64: 0x113080001130c, matchRI: 0x1287, match64: 0x00000000, modelSI: -0x0001, models64: 0x17d40000182a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x115b8000115be, matchRI: 0x12cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x182a0000182e},
			deviceTuple{type64: 0x24700000251, brand64: 0x115e0000115e6, matchRI: 0x12cf, match64: 0x00000000, modelSI: 0x182e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x115e6000115eb, matchRI: 0x12d0, match64: 0x00000000, modelSI: -0x0001, models64: 0x182f00001841},
			deviceTuple{type64: 0x24700000251, brand64: 0x1165f0001166b, matchRI: 0x12e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x18410000184f},
			deviceTuple{type64: 0x24700000251, brand64: 0x117460001174c, matchRI: 0x12e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x184f00001861},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x117ff00011806, matchRI: 0x12f2, match64: 0x00000000, modelSI: 0x1861, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1181000011817, matchRI: 0x12f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x186200001864},
			deviceTuple{type64: 0x24300000245, brand64: 0x118330001183a, matchRI: 0x12f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x186400001865},
			deviceTuple{type64: 0x24300000245, brand64: 0x1183a0001183e, matchRI: 0x12f8, match64: 0x00000000, modelSI: 0x1865, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1183e00011844, matchRI: 0x12f9, match64: 0x00000000, modelSI: 0x1866, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1184400011848, matchRI: 0x12fa, match64: 0x00000000, modelSI: 0x1867, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1184e00011853, matchRI: 0x12fb, match64: 0x00000000, modelSI: 0x1868, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x118530001185a, matchRI: -0x0001, match64: 0x118530001185a, modelSI: -0x0001, models64: 0x18690000186a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1185a0001185f, matchRI: 0x12fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x186a0000186d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1188100011887, matchRI: 0x12ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x186d0000192b},
			deviceTuple{type64: 0x24700000251, brand64: 0x120740001207a, matchRI: 0x1398, match64: 0x00000000, modelSI: -0x0001, models64: 0x192b00001932},
			deviceTuple{type64: 0x24700000251, brand64: 0x120ed000120f4, matchRI: 0x139b, match64: 0x00000000, modelSI: -0x0001, models64: 0x193200001936},
			deviceTuple{type64: 0x24700000251, brand64: 0x1210000012105, matchRI: 0x139f, match64: 0x00000000, modelSI: 0x1936, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1210d00012113, matchRI: 0x13a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x193700001946},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x121a4000121ac, matchRI: 0x13a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x19460000195d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1238d00012395, matchRI: 0x13a8, match64: 0x00000000, modelSI: 0x195d, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x123950001239d, matchRI: 0x13a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1239d000123a1, matchRI: 0x13aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x195e00001960},
			deviceTuple{type64: 0x24700000251, brand64: 0x123ab000123b1, matchRI: 0x13ac, match64: 0x00000000, modelSI: -0x0001, models64: 0x196000001965},
			deviceTuple{type64: 0x24700000251, brand64: 0x123e0000123e7, matchRI: 0x13af, match64: 0x00000000, modelSI: -0x0001, models64: 0x196500001967},
			deviceTuple{type64: 0x24700000251, brand64: 0x123e7000123ed, matchRI: 0x13b2, match64: 0x00000000, modelSI: 0x1967, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x123f2000123f8, matchRI: 0x13b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x19680000196a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x123f8000123fd, matchRI: 0x13b6, match64: 0x00000000, modelSI: 0x196a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x124060001240b, matchRI: 0x13b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x196b0000196c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1241400012419, matchRI: 0x13b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x196c00001972},
			deviceTuple{type64: 0x24700000251, brand64: 0x1242a0001243a, matchRI: 0x13bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x197200001976},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1246f00012476, matchRI: 0x13c1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1976000019ae},
			deviceTuple{type64: 0x24300000245, brand64: 0x126c9000126ce, matchRI: 0x13e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x126ce000126d6, matchRI: 0x13e8, match64: 0x00000000, modelSI: 0x19ae, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x126dd000126e3, matchRI: -0x0001, match64: 0x126dd000126e3, modelSI: -0x0001, models64: 0x19af000019b0},
			deviceTuple{type64: 0x24700000251, brand64: 0x126e8000126ed, matchRI: 0x13ea, match64: 0x00000000, modelSI: 0x19b0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x126ed000126f4, matchRI: 0x13eb, match64: 0x00000000, modelSI: 0x19b1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x126f4000126fb, matchRI: 0x13ec, match64: 0x00000000, modelSI: 0x19b2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x126fb00012700, matchRI: 0x13ed, match64: 0x00000000, modelSI: -0x0001, models64: 0x19b3000019b7},
			deviceTuple{type64: 0x24700000251, brand64: 0x1271100012715, matchRI: 0x13f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x19b7000019b9},
			deviceTuple{type64: 0x24300000245, brand64: 0x127150001271a, matchRI: 0x13f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1271a00012720, matchRI: 0x13f6, match64: 0x00000000, modelSI: 0x19b9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1272000012727, matchRI: 0x13f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ba000019be},
			deviceTuple{type64: 0x24700000251, brand64: 0x1274d00012753, matchRI: -0x0001, match64: 0x1274d00012753, modelSI: -0x0001, models64: 0x19be000019bf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1275300012759, matchRI: 0x13fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x19bf000019c9},
			deviceTuple{type64: 0x24700000251, brand64: 0x127b6000127bc, matchRI: 0x1401, match64: 0x00000000, modelSI: -0x0001, models64: 0x19c9000019cc},
			deviceTuple{type64: 0x7130000071d, brand64: 0x127d2000127db, matchRI: 0x1404, match64: 0x00000000, modelSI: -0x0001, models64: 0x19cc000019cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x127fd00012802, matchRI: 0x1405, match64: 0x00000000, modelSI: -0x0001, models64: 0x19cf000019e8},
			deviceTuple{type64: 0x24300000245, brand64: 0x129190001291c, matchRI: 0x1409, match64: 0x00000000, modelSI: 0x19e8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1291c00012921, matchRI: 0x140a, match64: 0x00000000, modelSI: 0x19e9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1292100012926, matchRI: 0x140b, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ea000019ee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1294000012944, matchRI: 0x140f, match64: 0x00000000, modelSI: 0x19ee, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1294400012947, matchRI: 0x1410, match64: 0x00000000, modelSI: 0x19ef, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x129470001294a, matchRI: 0x1411, match64: 0x00000000, modelSI: 0x19f0, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1294a0001294e, matchRI: 0x1412, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1294e00012957, matchRI: 0x1413, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f1000019f6},
			deviceTuple{type64: 0x24300000245, brand64: 0x1297400012978, matchRI: 0x1417, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x129780001297c, matchRI: 0x1418, match64: 0x00000000, modelSI: -0x0001, models64: 0x19f6000019f8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1297c00012983, matchRI: 0x141b, match64: 0x00000000, modelSI: 0x19f8, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1298300012986, matchRI: 0x141c, match64: 0x00000000, modelSI: 0x19f9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x129860001298c, matchRI: 0x141d, match64: 0x00000000, modelSI: 0x19fa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1298c0001298f, matchRI: 0x141e, match64: 0x00000000, modelSI: 0x19fb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1298f00012993, matchRI: 0x141f, match64: 0x00000000, modelSI: -0x0001, models64: 0x19fc000019fe},
			deviceTuple{type64: 0x24700000251, brand64: 0x129a1000129a7, matchRI: 0x1422, match64: 0x00000000, modelSI: 0x19fe, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x129a7000129ab, matchRI: 0x1423, match64: 0x00000000, modelSI: -0x0001, models64: 0x19ff00001a01},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x129ab000129af, matchRI: 0x1426, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0100001a02},
			deviceTuple{type64: 0x24700000251, brand64: 0x129b7000129bc, matchRI: 0x1428, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0200001a04},
			deviceTuple{type64: 0x24700000251, brand64: 0x129bc000129bf, matchRI: 0x142b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a0400001a40},
			deviceTuple{type64: 0x24300000245, brand64: 0x12c1000012c13, matchRI: 0x1468, match64: 0x00000000, modelSI: 0x1a40, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12c1300012c1a, matchRI: 0x1469, match64: 0x00000000, modelSI: 0x1a41, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12c1a00012c1d, matchRI: 0x146a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4200001a45},
			deviceTuple{type64: 0x24300000245, brand64: 0x12c2500012c2a, matchRI: 0x146d, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12c2a00012c2d, matchRI: 0x146e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a4500001a57},
			deviceTuple{type64: 0x24700000251, brand64: 0x12d0600012d09, matchRI: 0x147c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a5700001a60},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12d8000012d85, matchRI: -0x0001, match64: 0x12d8500012d8c, modelSI: 0x1a60, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12d9500012d9b, matchRI: 0x1481, match64: 0x00000000, modelSI: 0x1a61, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12da500012da9, matchRI: 0x1482, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6200001a64},
			deviceTuple{type64: 0x24300000245, brand64: 0x12dbc00012dc4, matchRI: 0x1484, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6400001a67},
			deviceTuple{type64: 0x24700000251, brand64: 0x12de700012ded, matchRI: 0x1486, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6700001a69},
			deviceTuple{type64: 0x24700000251, brand64: 0x12e0000012e08, matchRI: 0x1489, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a6900001a78},
			deviceTuple{type64: 0x24700000251, brand64: 0x12e7100012e77, matchRI: 0x1497, match64: 0x00000000, modelSI: 0x1a78, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12e7700012e7c, matchRI: 0x1498, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7900001a7b},
			deviceTuple{type64: 0x24700000251, brand64: 0x12e9600012e9a, matchRI: 0x149a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7b00001a7d},
			deviceTuple{type64: 0x24700000251, brand64: 0x12e9a00012eaa, matchRI: 0x149d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a7d00001a88},
			deviceTuple{type64: 0x7130000071d, brand64: 0x12f2b00012f31, matchRI: 0x14a1, match64: 0x00000000, modelSI: 0x1a88, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f3100012f35, matchRI: 0x14a2, match64: 0x00000000, modelSI: 0x1a89, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f3500012f3c, matchRI: 0x14a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a8a00001a8c},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f4100012f47, matchRI: 0x14a6, match64: 0x00000000, modelSI: 0x1a8c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f4700012f4d, matchRI: 0x14a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a8d00001a8f},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f5200012f59, matchRI: 0x14aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a8f00001a9a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12faf00012fb7, matchRI: 0x14b5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9a00001a9c},
			deviceTuple{type64: 0x24300000245, brand64: 0x12fcc00012fd6, matchRI: 0x14b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9c00001a9e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12fd600012fe1, matchRI: 0x14ba, match64: 0x00000000, modelSI: 0x1a9e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x12fe100012fe7, matchRI: 0x14bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1a9f00001aa2},
			deviceTuple{type64: 0x24300000245, brand64: 0x130030001300b, matchRI: 0x14be, match64: 0x00000000, modelSI: 0x1aa2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1300b00013011, matchRI: 0x14bf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aa300001aa9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1303000013037, matchRI: 0x14c5, match64: 0x00000000, modelSI: 0x1aa9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x130370001303e, matchRI: 0x14c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aaa00001aae},
			deviceTuple{type64: 0x24700000251, brand64: 0x1304d00013054, matchRI: 0x14ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x1aae00001ab1},
			deviceTuple{type64: 0x24300000245, brand64: 0x1305900013060, matchRI: 0x14ce, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1306000013067, matchRI: 0x14cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ab100001ac4},
			deviceTuple{type64: 0x24700000251, brand64: 0x131670001316b, matchRI: 0x14dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ac400001ac7},
			deviceTuple{type64: 0x24700000251, brand64: 0x131720001317c, matchRI: 0x14e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ac700001aca},
			deviceTuple{type64: 0x24300000245, brand64: 0x131960001319c, matchRI: 0x14e3, match64: 0x00000000, modelSI: 0x1aca, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1319c000131a4, matchRI: 0x14e4, match64: 0x00000000, modelSI: 0x1acb, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x131ac000131b1, matchRI: 0x14e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1acc00001ad6},
			deviceTuple{type64: 0x24300000245, brand64: 0x1328d00013293, matchRI: 0x14ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ad600001ae5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x132f7000132ff, matchRI: 0x14fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1ae500001b29},
			deviceTuple{type64: 0x24700000251, brand64: 0x1379d000137a3, matchRI: 0x153e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b2900001b30},
			deviceTuple{type64: 0x24700000251, brand64: 0x137b4000137bb, matchRI: 0x1546, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b3000001b38},
			deviceTuple{type64: 0x24300000245, brand64: 0x137f3000137fc, matchRI: 0x154d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b3800001b39},
			deviceTuple{type64: 0x24700000251, brand64: 0x1380f00013814, matchRI: 0x154e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b3900001b44},
			deviceTuple{type64: 0x24700000251, brand64: 0x1381f00013824, matchRI: 0x155a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b4400001b72},
			deviceTuple{type64: 0x24700000251, brand64: 0x138fb00013902, matchRI: 0x1585, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7200001b75},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1391d00013922, matchRI: 0x1589, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7500001b79},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x139580001395c, matchRI: 0x158e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b7900001b7f},
			deviceTuple{type64: 0x24300000245, brand64: 0x1398d00013991, matchRI: -0x0001, match64: 0x139910001399b, modelSI: 0x1b7f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1399b000139a0, matchRI: 0x1590, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8000001b84},
			deviceTuple{type64: 0x24700000251, brand64: 0x139c1000139c9, matchRI: 0x1595, match64: 0x00000000, modelSI: -0x0001, models64: 0x1b8400001bc4},
			deviceTuple{type64: 0x24700000251, brand64: 0x12f00000138, matchRI: 0x15c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bc400001be2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x13e7d00013e86, matchRI: 0x15d2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1be200001be4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x13ea100013ea9, matchRI: 0x15d4, match64: 0x00000000, modelSI: 0x1be4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x13ea900013eae, matchRI: 0x15d5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1be500001bf1},
			deviceTuple{type64: 0x24700000251, brand64: 0x137e8000137ec, matchRI: 0x15db, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bf100001bf6},
			deviceTuple{type64: 0x24700000251, brand64: 0x13f6200013f67, matchRI: 0x15e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bf600001bfb},
			deviceTuple{type64: 0x24700000251, brand64: 0x13f8d00013f90, matchRI: 0x15e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bfb00001bfe},
			deviceTuple{type64: 0x24700000251, brand64: 0x13fc400013fc9, matchRI: 0x15e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1bfe00001c09},
			deviceTuple{type64: 0x24700000251, brand64: 0x1401200014017, matchRI: 0x15f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c0900001c0d},
			deviceTuple{type64: 0x24300000245, brand64: 0x1403600014046, matchRI: 0x15f6, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x140460001404a, matchRI: 0x15f7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c0d00001c11},
			deviceTuple{type64: 0x38400000391, brand64: 0x1405900014063, matchRI: 0x15fc, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c1100001c14},
			deviceTuple{type64: 0x24700000251, brand64: 0x1406300014069, matchRI: 0x1600, match64: 0x00000000, modelSI: 0x1c14, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x140690001406f, matchRI: 0x1601, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c1500001c17},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1407d00014084, matchRI: 0x1603, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c1700001c19},
			deviceTuple{type64: 0x24700000251, brand64: 0x1409c000140a4, matchRI: 0x1606, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c1900001c1e},
			deviceTuple{type64: 0x24700000251, brand64: 0x140cf000140d6, matchRI: 0x1609, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c1e00001c5d},
			deviceTuple{type64: 0x24700000251, brand64: 0x143aa000143b3, matchRI: 0x1617, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c5d00001c7a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1456400014572, matchRI: 0x162b, match64: 0x00000000, modelSI: 0x1c7a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1457e00014585, matchRI: 0x162c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c7b00001c8a},
			deviceTuple{type64: 0x24700000251, brand64: 0x146730001467b, matchRI: 0x162e, match64: 0x00000000, modelSI: 0x1c8a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1467b0001467f, matchRI: 0x162f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c8b00001c8c},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x1467f00014685, matchRI: 0x1631, match64: 0x00000000, modelSI: 0x1c8c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x146900001469b, matchRI: 0x1632, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c8d00001c8e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x146ad000146b4, matchRI: 0x1633, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c8e00001c94},
			deviceTuple{type64: 0x24700000251, brand64: 0x146ec000146f1, matchRI: -0x0001, match64: 0x146ec000146f1, modelSI: -0x0001, models64: 0x1c9400001c96},
			deviceTuple{type64: 0x24700000251, brand64: 0x146f1000146f9, matchRI: 0x163b, match64: 0x00000000, modelSI: 0x1c96, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x146ff00014707, matchRI: 0x163c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9700001c98},
			deviceTuple{type64: 0x24700000251, brand64: 0x1471300014718, matchRI: 0x163d, match64: 0x00000000, modelSI: 0x1c98, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1471800014720, matchRI: 0x163e, match64: 0x00000000, modelSI: -0x0001, models64: 0x1c9900001d7d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1522400015236, matchRI: 0x16f4, match64: 0x00000000, modelSI: 0x1d7d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x152360001523b, matchRI: 0x16f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d7e00001d81},
			deviceTuple{type64: 0x24700000251, brand64: 0x1523b00015242, matchRI: 0x16f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8100001d82},
			deviceTuple{type64: 0x24700000251, brand64: 0x1524200015247, matchRI: 0x16fb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8200001d84},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1525a0001525f, matchRI: 0x16fd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8400001d89},
			deviceTuple{type64: 0x7130000071d, brand64: 0x152740001527c, matchRI: 0x1703, match64: 0x00000000, modelSI: 0x1d89, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1527c00015286, matchRI: 0x1704, match64: 0x00000000, modelSI: -0x0001, models64: 0x1d8a00001dac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x153aa000153b5, matchRI: 0x1724, match64: 0x00000000, modelSI: 0x1dac, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x153b5000153bb, matchRI: 0x1725, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dad00001db0},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x153f6000153fe, matchRI: 0x1728, match64: 0x00000000, modelSI: 0x1db0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x153fe0001540a, matchRI: 0x1729, match64: 0x00000000, modelSI: -0x0001, models64: 0x1db100001dbf},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1548100015486, matchRI: 0x1735, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dbf00001dc2},
			deviceTuple{type64: 0x24700000251, brand64: 0x154960001549c, matchRI: -0x0001, match64: 0x1549c000154a3, modelSI: -0x0001, models64: 0x1dc200001dc5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x154c2000154c8, matchRI: 0x173a, match64: 0x00000000, modelSI: 0x1dc5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x154c8000154ce, matchRI: 0x173b, match64: 0x00000000, modelSI: 0x1dc6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x154ce000154d3, matchRI: 0x173c, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dc700001dce},
			deviceTuple{type64: 0x24700000251, brand64: 0x1551d00015522, matchRI: 0x1740, match64: 0x00000000, modelSI: 0x1dce, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1552200015529, matchRI: 0x1741, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dcf00001dd1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1552f00015534, matchRI: 0x1744, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd100001dd7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1556a0001556f, matchRI: 0x1749, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd700001dd9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1558d00015590, matchRI: 0x174a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dd900001de7},
			deviceTuple{type64: 0x24300000245, brand64: 0x156380001563c, matchRI: 0x1759, match64: 0x00000000, modelSI: -0x0001, models64: 0x1de700001de8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1564100015647, matchRI: 0x175b, match64: 0x00000000, modelSI: 0x1de8, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x156470001564c, matchRI: 0x175c, match64: 0x00000000, modelSI: 0x1de9, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1564c00015652, matchRI: 0x175d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dea00001ded},
			deviceTuple{type64: 0x24300000245, brand64: 0x1567400015679, matchRI: 0x175f, match64: 0x00000000, modelSI: 0x1ded, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x156790001567d, matchRI: 0x1760, match64: 0x00000000, modelSI: 0x1dee, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1567d00015686, matchRI: 0x1761, match64: 0x00000000, modelSI: 0x1def, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1568600015689, matchRI: 0x1762, match64: 0x00000000, modelSI: -0x0001, models64: 0x1df000001df7},
			deviceTuple{type64: 0x24300000245, brand64: 0x156cb000156d0, matchRI: 0x1768, match64: 0x00000000, modelSI: 0x1df7, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x156d0000156d7, matchRI: -0x0001, match64: 0x156d0000156d7, modelSI: -0x0001, models64: 0x1df800001dfa},
			deviceTuple{type64: 0x24700000251, brand64: 0x156f4000156fe, matchRI: 0x1769, match64: 0x00000000, modelSI: 0x1dfa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x156fe00015701, matchRI: 0x176a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1dfb00001e0f},
			deviceTuple{type64: 0x24700000251, brand64: 0x157a5000157aa, matchRI: 0x177a, match64: 0x00000000, modelSI: 0x1e0f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x157b8000157bc, matchRI: 0x177b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1000001e16},
			deviceTuple{type64: 0x24700000251, brand64: 0x157f8000157fc, matchRI: 0x1781, match64: 0x00000000, modelSI: 0x1e16, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x157fc00015804, matchRI: 0x1782, match64: 0x00000000, modelSI: 0x1e17, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x158110001581b, matchRI: 0x1783, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e1800001e2b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1589f000158a9, matchRI: 0x1789, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e2b00001e43},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x159970001599b, matchRI: 0x178d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4300001e49},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a1c00015a21, matchRI: 0x1790, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4900001e4a},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a2500015a30, matchRI: 0x1792, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4a00001e4c},
			deviceTuple{type64: 0x24300000245, brand64: 0x15a3b00015a43, matchRI: 0x1795, match64: 0x00000000, modelSI: 0x1e4c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15a4300015a4a, matchRI: 0x1796, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e4d00001e52},
			deviceTuple{type64: 0x24700000251, brand64: 0x15aa300015aaa, matchRI: 0x1797, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e5200001e53},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15abb00015ac3, matchRI: 0x1798, match64: 0x00000000, modelSI: 0x1e53, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15ac300015aca, matchRI: 0x1799, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e5400001e59},
			deviceTuple{type64: 0x24700000251, brand64: 0x15ae400015ae9, matchRI: 0x179f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e5900001e6f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15c0600015c0c, matchRI: 0x17b5, match64: 0x00000000, modelSI: 0x1e6f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15c0c00015c15, matchRI: 0x17b6, match64: 0x00000000, modelSI: 0x1e70, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15c1500015c1b, matchRI: 0x17b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7100001e76},
			deviceTuple{type64: 0x24700000251, brand64: 0x15c3900015c3f, matchRI: 0x17bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7600001e79},
			deviceTuple{type64: 0x24700000251, brand64: 0x15c4100015c46, matchRI: 0x17bf, match64: 0x00000000, modelSI: 0x1e79, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15c4600015c4d, matchRI: 0x17c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e7a00001e7e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15c7500015c7e, matchRI: 0x17c4, match64: 0x00000000, modelSI: 0x1e7e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x15c8400015c8a, matchRI: -0x0001, match64: 0x15c8a00015c90, modelSI: -0x0001, models64: 0x1e7f00001e81},
			deviceTuple{type64: 0x24300000245, brand64: 0x15c9700015c9e, matchRI: -0x0001, match64: 0x15c9e00015ca4, modelSI: -0x0001, models64: 0x1e8100001e82},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15caf00015cb5, matchRI: 0x17c7, match64: 0x00000000, modelSI: 0x1e82, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15cbd00015cc5, matchRI: -0x0001, match64: 0x15cc500015cc9, modelSI: -0x0001, models64: 0x1e8300001e84},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15cc900015ccf, matchRI: 0x17c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8400001e85},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x15ccf00015cda, matchRI: 0x17cb, match64: 0x00000000, modelSI: 0x1e85, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15cda00015ce4, matchRI: 0x17cc, match64: 0x00000000, modelSI: 0x1e86, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x15ce400015ce9, matchRI: 0x17cd, match64: 0x00000000, modelSI: 0x1e87, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x15ce900015cef, matchRI: 0x17ce, match64: 0x00000000, modelSI: 0x1e88, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15cef00015cf6, matchRI: 0x17cf, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8900001e8c},
			deviceTuple{type64: 0x24700000251, brand64: 0x15d3500015d3b, matchRI: 0x17d0, match64: 0x00000000, modelSI: 0x1e8c, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x15d3b00015d41, matchRI: 0x17d1, match64: 0x00000000, modelSI: 0x1e8d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15d4100015d48, matchRI: 0x17d2, match64: 0x00000000, modelSI: 0x1e8e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15d4800015d4c, matchRI: 0x17d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e8f00001e91},
			deviceTuple{type64: 0x24700000251, brand64: 0x15d4c00015d52, matchRI: 0x17d6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9100001e93},
			deviceTuple{type64: 0x24300000245, brand64: 0x15d5200015d61, matchRI: 0x17d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9300001e9e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15dc900015dd1, matchRI: 0x17dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x1e9e00001eae},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x15ebf00015ec6, matchRI: 0x17e0, match64: 0x00000000, modelSI: 0x1eae, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15ec600015ecd, matchRI: 0x17e1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eaf00001eb0},
			deviceTuple{type64: 0x24700000251, brand64: 0x15ecd00015ed2, matchRI: -0x0001, match64: 0x15ed200015ed7, modelSI: -0x0001, models64: 0x1eb000001eb2},
			deviceTuple{type64: 0x24700000251, brand64: 0x15ed700015edc, matchRI: 0x17e5, match64: 0x00000000, modelSI: 0x1eb2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x15edc00015ee2, matchRI: 0x17e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb300001eb7},
			deviceTuple{type64: 0x24700000251, brand64: 0x15ee200015ee7, matchRI: 0x17eb, match64: 0x00000000, modelSI: -0x0001, models64: 0x1eb700001f09},
			deviceTuple{type64: 0x24700000251, brand64: 0x161ce000161d2, matchRI: 0x1821, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f0900001f3e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1635100016355, matchRI: 0x1856, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f3e00001f45},
			deviceTuple{type64: 0x24300000245, brand64: 0x163630001636a, matchRI: -0x0001, match64: 0x1636a00016372, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x163720001637b, matchRI: 0x185e, match64: 0x00000000, modelSI: 0x1f45, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1637b00016384, matchRI: 0x185f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4600001f47},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x163840001638d, matchRI: 0x1861, match64: 0x00000000, modelSI: 0x1f47, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1639b0001639e, matchRI: 0x1862, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4800001f4e},
			deviceTuple{type64: 0x24700000251, brand64: 0x163bc000163c3, matchRI: 0x1869, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f4e00001f52},
			deviceTuple{type64: 0x24700000251, brand64: 0x163e4000163e8, matchRI: 0x186d, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5200001f54},
			deviceTuple{type64: 0x24300000245, brand64: 0x163ee000163f5, matchRI: -0x0001, match64: 0x163f5000163fe, modelSI: -0x0001, models64: 0x1f5400001f56},
			deviceTuple{type64: 0x24300000245, brand64: 0x164190001641e, matchRI: 0x1872, match64: 0x00000000, modelSI: 0x1f56, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1641e00016423, matchRI: 0x1873, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5700001f5b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1643b00016442, matchRI: 0x1877, match64: 0x00000000, modelSI: 0x1f5b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1644200016447, matchRI: 0x1878, match64: 0x00000000, modelSI: 0x1f5c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x164530001645b, matchRI: 0x1879, match64: 0x00000000, modelSI: 0x1f5d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1645b00016460, matchRI: 0x187a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1f5e00001fa1},
			deviceTuple{type64: 0x24700000251, brand64: 0x167ac000167b0, matchRI: 0x1887, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fa100001fa4},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x167b4000167ba, matchRI: 0x188b, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fa400001fab},
			deviceTuple{type64: 0x24700000251, brand64: 0x1684500016847, matchRI: 0x188f, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fab00001fb5},
			deviceTuple{type64: 0x24700000251, brand64: 0x1689400016896, matchRI: 0x189a, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fb500001fbb},
			deviceTuple{type64: 0x7130000071d, brand64: 0x168960001689b, matchRI: 0x18a1, match64: 0x00000000, modelSI: 0x1fbb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1689b000168a0, matchRI: 0x18a2, match64: 0x00000000, modelSI: 0x1fbc, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x168a0000168a4, matchRI: 0x18a3, match64: 0x00000000, modelSI: 0x1fbd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x168a4000168a8, matchRI: 0x18a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fbe00001fc0},
			deviceTuple{type64: 0x24300000245, brand64: 0x168b4000168b8, matchRI: 0x18a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc000001fc1},
			deviceTuple{type64: 0x24700000251, brand64: 0x168b8000168bc, matchRI: 0x18a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc100001fc3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x168c4000168c7, matchRI: 0x18aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc300001fc6},
			deviceTuple{type64: 0x24300000245, brand64: 0x168dd000168e1, matchRI: 0x18ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fc600001fca},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x168ef000168f8, matchRI: 0x18b1, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fca00001fde},
			deviceTuple{type64: 0x24700000251, brand64: 0x16a2900016a2d, matchRI: 0x18b8, match64: 0x00000000, modelSI: -0x0001, models64: 0x1fde00002102},
			deviceTuple{type64: 0x24700000251, brand64: 0x172c7000172cc, matchRI: 0x199e, match64: 0x00000000, modelSI: -0x0001, models64: 0x21020000210c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1732100017325, matchRI: 0x19a4, match64: 0x00000000, modelSI: 0x210c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x173250001732a, matchRI: -0x0001, match64: 0x173250001732a, modelSI: -0x0001, models64: 0x210d00002111},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1734f00017355, matchRI: 0x19a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x211100002112},
			deviceTuple{type64: 0x24700000251, brand64: 0x1735e00017363, matchRI: 0x19a9, match64: 0x00000000, modelSI: 0x2112, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1736300017367, matchRI: 0x19aa, match64: 0x00000000, modelSI: -0x0001, models64: 0x211300002115},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1736e00017374, matchRI: 0x19ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x211500002117},
			deviceTuple{type64: 0x24700000251, brand64: 0x173740001737a, matchRI: 0x19b0, match64: 0x00000000, modelSI: -0x0001, models64: 0x211700002119},
			deviceTuple{type64: 0x24700000251, brand64: 0x1738400017388, matchRI: 0x19b2, match64: 0x00000000, modelSI: 0x2119, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x173880001738b, matchRI: 0x19b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x211a0000212b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x173e7000173ee, matchRI: 0x19c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x212b0000212d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1740e00017412, matchRI: 0x19c8, match64: 0x00000000, modelSI: -0x0001, models64: 0x212d0000216a},
			deviceTuple{type64: 0x24700000251, brand64: 0x178ce000178d3, matchRI: 0x19dd, match64: 0x00000000, modelSI: -0x0001, models64: 0x216a0000216c},
			deviceTuple{type64: 0x24700000251, brand64: 0x178f2000178f8, matchRI: 0x19df, match64: 0x00000000, modelSI: -0x0001, models64: 0x216c00002171},
			deviceTuple{type64: 0x24700000251, brand64: 0x1791000017915, matchRI: 0x19e5, match64: 0x00000000, modelSI: -0x0001, models64: 0x217100002173},
			deviceTuple{type64: 0x24700000251, brand64: 0x179270001792b, matchRI: 0x19e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x217300002175},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1793b00017940, matchRI: 0x19ea, match64: 0x00000000, modelSI: 0x2175, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1794000017945, matchRI: 0x19eb, match64: 0x00000000, modelSI: 0x2176, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1794d00017954, matchRI: 0x19ec, match64: 0x00000000, modelSI: -0x0001, models64: 0x217700002178},
			deviceTuple{type64: 0x24700000251, brand64: 0x179580001795c, matchRI: 0x19ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x21780000218f},
			deviceTuple{type64: 0x24700000251, brand64: 0x17ab600017abe, matchRI: 0x1a00, match64: 0x00000000, modelSI: -0x0001, models64: 0x218f00002192},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17aef00017af6, matchRI: 0x1a03, match64: 0x00000000, modelSI: 0x2192, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x17af600017afd, matchRI: 0x1a04, match64: 0x00000000, modelSI: -0x0001, models64: 0x2193000021dc},
			deviceTuple{type64: 0x24700000251, brand64: 0x17cdd00017ce2, matchRI: 0x1a4c, match64: 0x00000000, modelSI: -0x0001, models64: 0x21dc000021df},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x17cf000017cf4, matchRI: 0x1a50, match64: 0x00000000, modelSI: -0x0001, models64: 0x21df000021e2},
			deviceTuple{type64: 0x24700000251, brand64: 0x17d0000017d05, matchRI: 0x1a54, match64: 0x00000000, modelSI: -0x0001, models64: 0x21e2000021e4},
			deviceTuple{type64: 0x24700000251, brand64: 0x17d0500017d0a, matchRI: -0x0001, match64: 0x17d0a00017d12, modelSI: 0x21e4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x17d1200017d19, matchRI: 0x1a57, match64: 0x00000000, modelSI: 0x21e5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x17d1900017d23, matchRI: 0x1a58, match64: 0x00000000, modelSI: -0x0001, models64: 0x21e6000021eb},
			deviceTuple{type64: 0x24300000245, brand64: 0x17d9d00017da4, matchRI: 0x1a59, match64: 0x00000000, modelSI: -0x0001, models64: 0x21eb000021f3},
			deviceTuple{type64: 0x24700000251, brand64: 0x17e0f00017e15, matchRI: 0x1a5f, match64: 0x00000000, modelSI: -0x0001, models64: 0x21f3000021f6},
			deviceTuple{type64: 0x24700000251, brand64: 0x17e4300017e49, matchRI: 0x1a61, match64: 0x00000000, modelSI: -0x0001, models64: 0x21f6000021fa},
			deviceTuple{type64: 0x7130000071d, brand64: 0x17e5100017e57, matchRI: 0x1a66, match64: 0x00000000, modelSI: -0x0001, models64: 0x21fa000021fb},
			deviceTuple{type64: 0x24700000251, brand64: 0x17e6600017e6c, matchRI: 0x1a67, match64: 0x00000000, modelSI: -0x0001, models64: 0x21fb0000220f},
			deviceTuple{type64: 0x7130000071d, brand64: 0x17f5700017f60, matchRI: 0x1a72, match64: 0x00000000, modelSI: 0x220f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x17f6000017f65, matchRI: 0x1a73, match64: 0x00000000, modelSI: -0x0001, models64: 0x221000002218},
			deviceTuple{type64: 0x24300000245, brand64: 0x17fb300017fb9, matchRI: 0x1a74, match64: 0x00000000, modelSI: 0x2218, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x17fb900017fc1, matchRI: 0x1a75, match64: 0x00000000, modelSI: -0x0001, models64: 0x22190000221a},
			deviceTuple{type64: 0x24700000251, brand64: 0x17fc100017fca, matchRI: 0x1a77, match64: 0x00000000, modelSI: 0x221a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x13f5d00013f62, matchRI: 0x1a78, match64: 0x00000000, modelSI: -0x0001, models64: 0x221b0000221d},
			deviceTuple{type64: 0x24700000251, brand64: 0x17fd300017fd7, matchRI: 0x1a7b, match64: 0x00000000, modelSI: -0x0001, models64: 0x221d00002222},
			deviceTuple{type64: 0x24700000251, brand64: 0x17fdf00017fe6, matchRI: 0x1a80, match64: 0x00000000, modelSI: -0x0001, models64: 0x222200002234},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x180450001804c, matchRI: 0x1a8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x22340000223d},
			deviceTuple{type64: 0x24700000251, brand64: 0x180b9000180bd, matchRI: -0x0001, match64: 0x180bd000180c5, modelSI: 0x223d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x180c5000180c9, matchRI: 0x1a94, match64: 0x00000000, modelSI: -0x0001, models64: 0x223e00002240},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x180d4000180db, matchRI: 0x1a97, match64: 0x00000000, modelSI: -0x0001, models64: 0x22400000224f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1815a0001815e, matchRI: 0x1aa4, match64: 0x00000000, modelSI: 0x224f, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x181640001816b, matchRI: 0x1aa5, match64: 0x00000000, modelSI: 0x2250, models64: 0x00000000},
			deviceTuple{type64: 0xd3700000d3e, brand64: 0x1816b0001816f, matchRI: 0x1aa6, match64: 0x00000000, modelSI: -0x0001, models64: 0x225100002254},
			deviceTuple{type64: 0x24700000251, brand64: 0x1818e00018195, matchRI: 0x1aaa, match64: 0x00000000, modelSI: -0x0001, models64: 0x225400002256},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x181a3000181a9, matchRI: 0x1aac, match64: 0x00000000, modelSI: -0x0001, models64: 0x225600002257},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x181b1000181b9, matchRI: -0x0001, match64: 0x181b9000181c6, modelSI: 0x2257, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x181d3000181d8, matchRI: 0x1aae, match64: 0x00000000, modelSI: -0x0001, models64: 0x225800002260},
			deviceTuple{type64: 0x24700000251, brand64: 0x182490001824c, matchRI: 0x1ab1, match64: 0x00000000, modelSI: -0x0001, models64: 0x226000002262},
			deviceTuple{type64: 0x24700000251, brand64: 0x182600001826d, matchRI: 0x1ab3, match64: 0x00000000, modelSI: -0x0001, models64: 0x226200002264},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1826d00018271, matchRI: 0x1ab6, match64: 0x00000000, modelSI: -0x0001, models64: 0x226400002266},
			deviceTuple{type64: 0x7130000071d, brand64: 0x182770001827b, matchRI: 0x1ab9, match64: 0x00000000, modelSI: 0x2266, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1827b00018282, matchRI: 0x1aba, match64: 0x00000000, modelSI: -0x0001, models64: 0x22670000226b},
			deviceTuple{type64: 0x24700000251, brand64: 0x182b6000182bc, matchRI: 0x1abd, match64: 0x00000000, modelSI: -0x0001, models64: 0x226b0000226c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x182c2000182c6, matchRI: 0x1abe, match64: 0x00000000, modelSI: -0x0001, models64: 0x226c0000226d},
			deviceTuple{type64: 0x24700000251, brand64: 0x182d0000182d4, matchRI: 0x1ac0, match64: 0x00000000, modelSI: -0x0001, models64: 0x226d0000229f},
			deviceTuple{type64: 0x24700000251, brand64: 0x183f3000183f9, matchRI: 0x1aec, match64: 0x00000000, modelSI: -0x0001, models64: 0x229f000022a1},
			deviceTuple{type64: 0x24700000251, brand64: 0x1840200018406, matchRI: 0x1aef, match64: 0x00000000, modelSI: 0x22a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x184060001840b, matchRI: 0x1af0, match64: 0x00000000, modelSI: 0x22a2, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1840b00018411, matchRI: -0x0001, match64: 0x184110001841a, modelSI: -0x0001, models64: 0x22a3000022a4},
			deviceTuple{type64: 0x24300000245, brand64: 0x1842a00018431, matchRI: 0x1af2, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1843100018436, matchRI: 0x1af3, match64: 0x00000000, modelSI: -0x0001, models64: 0x22a4000022a7},
			deviceTuple{type64: 0x24300000245, brand64: 0x184360001843b, matchRI: -0x0001, match64: 0x1843b00018447, modelSI: 0x22a7, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1844d00018466, matchRI: -0x0001, match64: 0x1846600018475, modelSI: 0x22a8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1847500018481, matchRI: 0x1af7, match64: 0x00000000, modelSI: -0x0001, models64: 0x22a9000022ae},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x184c4000184ca, matchRI: -0x0001, match64: 0x184ca000184d4, modelSI: 0x22ae, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x184e0000184e7, matchRI: -0x0001, match64: 0x184e7000184f1, modelSI: 0x22af, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x184f1000184f5, matchRI: 0x1afa, match64: 0x00000000, modelSI: -0x0001, models64: 0x22b0000022b6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1851000018517, matchRI: -0x0001, match64: 0x185170001851e, modelSI: 0x22b6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1851e00018527, matchRI: 0x1aff, match64: 0x00000000, modelSI: -0x0001, models64: 0x22b7000022d1},
			deviceTuple{type64: 0x24300000245, brand64: 0x185ee000185f5, matchRI: -0x0001, match64: 0x185ee000185f5, modelSI: -0x0001, models64: 0x22d1000022d2},
			deviceTuple{type64: 0x24700000251, brand64: 0x185f5000185f9, matchRI: 0x1b17, match64: 0x00000000, modelSI: 0x22d2, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x185f900018600, matchRI: 0x1b18, match64: 0x00000000, modelSI: 0x22d3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1860000018609, matchRI: 0x1b19, match64: 0x00000000, modelSI: 0x22d4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1860900018610, matchRI: 0x1b1a, match64: 0x00000000, modelSI: -0x0001, models64: 0x22d5000022e0},
			deviceTuple{type64: 0x24700000251, brand64: 0x1864c00018659, matchRI: 0x1b22, match64: 0x00000000, modelSI: 0x22e0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1865900018667, matchRI: 0x1b23, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e1000022e3},
			deviceTuple{type64: 0x24700000251, brand64: 0x186750001867b, matchRI: 0x1b25, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e3000022e5},
			deviceTuple{type64: 0x24300000245, brand64: 0x186a3000186a9, matchRI: 0x1b26, match64: 0x00000000, modelSI: -0x0001, models64: 0x22e5000022ec},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x186cd000186d2, matchRI: 0x1b2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x22ec000022ee},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x186f6000186ff, matchRI: 0x1b2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x22ee000022f4},
			deviceTuple{type64: 0x24300000245, brand64: 0x1872c00018732, matchRI: -0x0001, match64: 0x1872c00018732, modelSI: -0x0001, models64: 0x22f4000022f7},
			deviceTuple{type64: 0x24700000251, brand64: 0x1876f00018776, matchRI: 0x1b34, match64: 0x00000000, modelSI: -0x0001, models64: 0x22f7000022fd},
			deviceTuple{type64: 0x24700000251, brand64: 0x187a4000187aa, matchRI: 0x1b3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x22fd00002304},
			deviceTuple{type64: 0x24700000251, brand64: 0x187d4000187db, matchRI: 0x1b42, match64: 0x00000000, modelSI: -0x0001, models64: 0x23040000231a},
			deviceTuple{type64: 0x24700000251, brand64: 0x188730001887b, matchRI: 0x1b56, match64: 0x00000000, modelSI: -0x0001, models64: 0x231a0000231f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1888e00018892, matchRI: 0x1b5c, match64: 0x00000000, modelSI: -0x0001, models64: 0x231f00002322},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x1889b0001889f, matchRI: 0x1b5f, match64: 0x00000000, modelSI: -0x0001, models64: 0x232200002325},
			deviceTuple{type64: 0x24700000251, brand64: 0x188b2000188b9, matchRI: 0x1b62, match64: 0x00000000, modelSI: -0x0001, models64: 0x23250000232d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x188d7000188e8, matchRI: 0x1b69, match64: 0x00000000, modelSI: 0x232d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x188e8000188ee, matchRI: 0x1b6a, match64: 0x00000000, modelSI: 0x232e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x188f900018903, matchRI: 0x1b6b, match64: 0x00000000, modelSI: 0x232f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1890300018908, matchRI: 0x1b6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x233000002344},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x189a6000189b6, matchRI: 0x1b7b, match64: 0x00000000, modelSI: -0x0001, models64: 0x234400002346},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x189bf000189c6, matchRI: 0x1b7e, match64: 0x00000000, modelSI: 0x2346, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x189c6000189ce, matchRI: -0x0001, match64: 0x189ce000189d7, modelSI: -0x0001, models64: 0x234700002348},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x189df000189e5, matchRI: 0x1b80, match64: 0x00000000, modelSI: -0x0001, models64: 0x23480000234b},
			deviceTuple{type64: 0x24700000251, brand64: 0x18a1a00018a1e, matchRI: 0x1b82, match64: 0x00000000, modelSI: -0x0001, models64: 0x234b00002353},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18a7e00018a87, matchRI: 0x1b83, match64: 0x00000000, modelSI: 0x2353, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18a8700018a8c, matchRI: 0x1b84, match64: 0x00000000, modelSI: 0x2354, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18a8c00018a96, matchRI: 0x1b85, match64: 0x00000000, modelSI: -0x0001, models64: 0x23550000235c},
			deviceTuple{type64: 0x7130000071d, brand64: 0x18ac400018ad0, matchRI: -0x0001, match64: 0x18ad000018ad4, modelSI: -0x0001, models64: 0x235c0000235d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18ad400018ae1, matchRI: 0x1b8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x235d0000236a},
			deviceTuple{type64: 0x24300000245, brand64: 0x18c0700018c0c, matchRI: 0x1b92, match64: 0x00000000, modelSI: -0x0001, models64: 0x236a0000236b},
			deviceTuple{type64: 0x24300000245, brand64: 0x18c0c00018c15, matchRI: 0x1b94, match64: 0x00000000, modelSI: 0x236b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18c1500018c1d, matchRI: 0x1b95, match64: 0x00000000, modelSI: -0x0001, models64: 0x236c0000238f},
			deviceTuple{type64: 0x8e00000099, brand64: 0x18dc700018dcf, matchRI: 0x1b9f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18dcf00018dd6, matchRI: 0x1ba0, match64: 0x00000000, modelSI: -0x0001, models64: 0x238f00002391},
			deviceTuple{type64: 0x24700000251, brand64: 0x18dd600018dde, matchRI: 0x1ba3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2391000023b8},
			deviceTuple{type64: 0x24700000251, brand64: 0x18f9c00018fa0, matchRI: 0x1bbd, match64: 0x00000000, modelSI: -0x0001, models64: 0x23b8000023ba},
			deviceTuple{type64: 0x24700000251, brand64: 0x18fa000018fa6, matchRI: -0x0001, match64: 0x18fa600018faf, modelSI: 0x23ba, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x18faf00018fb6, matchRI: -0x0001, match64: 0x18fb600018fd5, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x18fd500018fde, matchRI: 0x1bc0, match64: 0x00000000, modelSI: 0x23bb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x18fde00018fe6, matchRI: 0x1bc1, match64: 0x00000000, modelSI: -0x0001, models64: 0x23bc000023c8},
			deviceTuple{type64: 0x24700000251, brand64: 0x190620001906e, matchRI: 0x1bc5, match64: 0x00000000, modelSI: -0x0001, models64: 0x23c8000023d8},
			deviceTuple{type64: 0x24700000251, brand64: 0x1088a00010891, matchRI: 0x1bd6, match64: 0x00000000, modelSI: -0x0001, models64: 0x23d8000023d9},
			deviceTuple{type64: 0x24700000251, brand64: 0x191090001910f, matchRI: 0x1bd7, match64: 0x00000000, modelSI: -0x0001, models64: 0x23d9000023e2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x191740001917d, matchRI: 0x1bda, match64: 0x00000000, modelSI: -0x0001, models64: 0x23e20000242d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x196c3000196cb, matchRI: 0x1bec, match64: 0x00000000, modelSI: -0x0001, models64: 0x242d0000242f},
			deviceTuple{type64: 0x24700000251, brand64: 0x196db000196e1, matchRI: 0x1bef, match64: 0x00000000, modelSI: -0x0001, models64: 0x242f0000243a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x197270001972d, matchRI: 0x1bfb, match64: 0x00000000, modelSI: -0x0001, models64: 0x243a00002442},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1978b00019792, matchRI: 0x1bfe, match64: 0x00000000, modelSI: -0x0001, models64: 0x244200002444},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1979200019799, matchRI: 0x1c01, match64: 0x00000000, modelSI: -0x0001, models64: 0x244400002446},
			deviceTuple{type64: 0x24300000245, brand64: 0x197a4000197ad, matchRI: 0x1c04, match64: 0x00000000, modelSI: 0x2446, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x197ad000197b4, matchRI: 0x1c05, match64: 0x00000000, modelSI: -0x0001, models64: 0x24470000244a},
			deviceTuple{type64: 0x8e00000099, brand64: 0x197c9000197d0, matchRI: 0x1c08, match64: 0x00000000, modelSI: 0x244a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x197d0000197d8, matchRI: 0x1c09, match64: 0x00000000, modelSI: 0x244b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x197d8000197dd, matchRI: 0x1c0a, match64: 0x00000000, modelSI: 0x244c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x197dd000197e3, matchRI: -0x0001, match64: 0x197e3000197eb, modelSI: -0x0001, models64: 0x244d0000244e},
			deviceTuple{type64: 0x24300000245, brand64: 0x197eb000197f0, matchRI: 0x1c0b, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x197f0000197f7, matchRI: 0x1c0c, match64: 0x00000000, modelSI: -0x0001, models64: 0x244e0000244f},
			deviceTuple{type64: 0x24700000251, brand64: 0x197f7000197fd, matchRI: 0x1c0e, match64: 0x00000000, modelSI: -0x0001, models64: 0x244f00002451},
			deviceTuple{type64: 0x24700000251, brand64: 0x1980500019808, matchRI: 0x1c10, match64: 0x00000000, modelSI: 0x2451, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x198080001980b, matchRI: 0x1c11, match64: 0x00000000, modelSI: -0x0001, models64: 0x245200002454},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1980b00019810, matchRI: 0x1c14, match64: 0x00000000, modelSI: -0x0001, models64: 0x245400002455},
			deviceTuple{type64: 0x24700000251, brand64: 0x1981900019820, matchRI: 0x1c16, match64: 0x00000000, modelSI: -0x0001, models64: 0x24550000248c},
			deviceTuple{type64: 0x24700000251, brand64: 0x19a8800019a8d, matchRI: 0x1c2f, match64: 0x00000000, modelSI: -0x0001, models64: 0x248c0000248d},
			deviceTuple{type64: 0x24300000245, brand64: 0x19a9300019a98, matchRI: 0x1c31, match64: 0x00000000, modelSI: 0x248d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19a9800019a9e, matchRI: 0x1c32, match64: 0x00000000, modelSI: -0x0001, models64: 0x248e000024a8},
			deviceTuple{type64: 0x24700000251, brand64: 0x19be400019bef, matchRI: 0x1c3a, match64: 0x00000000, modelSI: -0x0001, models64: 0x24a8000024af},
			deviceTuple{type64: 0x24700000251, brand64: 0x19c3800019c3c, matchRI: 0x1c41, match64: 0x00000000, modelSI: 0x24af, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19c3c00019c43, matchRI: 0x1c42, match64: 0x00000000, modelSI: -0x0001, models64: 0x24b0000024ba},
			deviceTuple{type64: 0x24700000251, brand64: 0x19c8200019c88, matchRI: 0x1c4d, match64: 0x00000000, modelSI: 0x24ba, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19c8800019c8c, matchRI: 0x1c4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x24bb000024bf},
			deviceTuple{type64: 0x24700000251, brand64: 0x19ca400019cab, matchRI: -0x0001, match64: 0x19cab00019cba, modelSI: 0x24bf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x5cd400005cd9, matchRI: 0x1c52, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c0000024c1},
			deviceTuple{type64: 0x24700000251, brand64: 0x19cc600019ccc, matchRI: 0x1c53, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c1000024c2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19cd100019cd5, matchRI: 0x1c55, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c2000024c7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19cf200019cf7, matchRI: 0x1c5b, match64: 0x00000000, modelSI: -0x0001, models64: 0x24c7000024cc},
			deviceTuple{type64: 0x24300000245, brand64: 0x19d2b00019d2f, matchRI: 0x1c5d, match64: 0x00000000, modelSI: 0x24cc, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x19d3500019d39, matchRI: 0x1c5e, match64: 0x00000000, modelSI: 0x24cd, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x19d3e00019d42, matchRI: 0x1c5f, match64: 0x00000000, modelSI: 0x24ce, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19d4200019d4d, matchRI: 0x1c60, match64: 0x00000000, modelSI: -0x0001, models64: 0x24cf000024df},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19e3c00019e3f, matchRI: 0x1c6a, match64: 0x00000000, modelSI: 0x24df, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e3f00019e42, matchRI: 0x1c6b, match64: 0x00000000, modelSI: 0x24e0, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e4e00019e53, matchRI: -0x0001, match64: 0x19e5300019e59, modelSI: -0x0001, models64: 0x24e1000024e2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19e5f00019e64, matchRI: 0x1c6d, match64: 0x00000000, modelSI: -0x0001, models64: 0x24e2000024e5},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e6400019e69, matchRI: 0x1c71, match64: 0x00000000, modelSI: -0x0001, models64: 0x24e5000024e6},
			deviceTuple{type64: 0x24700000251, brand64: 0x19e7000019e73, matchRI: 0x1c73, match64: 0x00000000, modelSI: -0x0001, models64: 0x24e6000024fd},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x19f5400019f5b, matchRI: 0x1c83, match64: 0x00000000, modelSI: -0x0001, models64: 0x24fd000024fe},
			deviceTuple{type64: 0x24300000245, brand64: 0x19f6900019f6d, matchRI: 0x1c84, match64: 0x00000000, modelSI: 0x24fe, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x19f6d00019f71, matchRI: 0x1c85, match64: 0x00000000, modelSI: 0x24ff, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19f7100019f7b, matchRI: 0x1c86, match64: 0x00000000, modelSI: -0x0001, models64: 0x250000002502},
			deviceTuple{type64: 0x24700000251, brand64: 0x19f9200019f95, matchRI: 0x1c88, match64: 0x00000000, modelSI: 0x2502, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x19f9c00019fa3, matchRI: 0x1c89, match64: 0x00000000, modelSI: -0x0001, models64: 0x250300002508},
			deviceTuple{type64: 0x24700000251, brand64: 0x19fd500019fda, matchRI: 0x1c8a, match64: 0x00000000, modelSI: -0x0001, models64: 0x25080000250d},
			deviceTuple{type64: 0x7130000071d, brand64: 0x19ffc0001a005, matchRI: 0x1c8e, match64: 0x00000000, modelSI: 0x250d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0050001a00a, matchRI: 0x1c8f, match64: 0x00000000, modelSI: 0x250e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a00a0001a012, matchRI: 0x1c90, match64: 0x00000000, modelSI: -0x0001, models64: 0x250f00002510},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a02a0001a02f, matchRI: 0x1c91, match64: 0x00000000, modelSI: -0x0001, models64: 0x251000002512},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0430001a048, matchRI: 0x1c92, match64: 0x00000000, modelSI: 0x2512, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a0480001a04f, matchRI: 0x1c93, match64: 0x00000000, modelSI: -0x0001, models64: 0x251300002516},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a05d0001a063, matchRI: 0x1c97, match64: 0x00000000, modelSI: 0x2516, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a0630001a069, matchRI: 0x1c98, match64: 0x00000000, modelSI: -0x0001, models64: 0x2517000025d3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a7490001a750, matchRI: 0x1cf1, match64: 0x00000000, modelSI: -0x0001, models64: 0x25d3000025d6},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a7600001a767, matchRI: 0x1cf5, match64: 0x00000000, modelSI: 0x25d6, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a7670001a76d, matchRI: 0x1cf6, match64: 0x00000000, modelSI: -0x0001, models64: 0x25d7000025d8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a77d0001a783, matchRI: 0x1cf8, match64: 0x00000000, modelSI: -0x0001, models64: 0x25d8000025db},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a7aa0001a7b0, matchRI: 0x1cf9, match64: 0x00000000, modelSI: -0x0001, models64: 0x25db000025fa},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a9a70001a9ad, matchRI: 0x1d01, match64: 0x00000000, modelSI: 0x25fa, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1a9ad0001a9b4, matchRI: 0x1d02, match64: 0x00000000, modelSI: 0x25fb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a9b40001a9ba, matchRI: 0x1d03, match64: 0x00000000, modelSI: -0x0001, models64: 0x25fc000025fd},
			deviceTuple{type64: 0x24300000245, brand64: 0x1a9be0001a9c4, matchRI: 0x1d05, match64: 0x00000000, modelSI: 0x25fd, models64: 0x00000000},
			deviceTuple{type64: 0x1060000010d, brand64: 0x18600000194, matchRI: -0x0001, match64: 0x18600000194, modelSI: -0x0001, models64: 0x25fe00002600},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a9c40001a9c8, matchRI: 0x1d07, match64: 0x00000000, modelSI: -0x0001, models64: 0x260000002602},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a9dc0001a9e5, matchRI: 0x1d09, match64: 0x00000000, modelSI: -0x0001, models64: 0x260200002603},
			deviceTuple{type64: 0x24700000251, brand64: 0x1a9ed0001a9f2, matchRI: 0x1d0a, match64: 0x00000000, modelSI: 0x2603, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1a9f90001a9fe, matchRI: -0x0001, match64: 0x1a9fe0001aa04, modelSI: -0x0001, models64: 0x260400002605},
			deviceTuple{type64: 0x24300000245, brand64: 0x1aa140001aa1d, matchRI: 0x1d0b, match64: 0x00000000, modelSI: 0x2605, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aa210001aa2e, matchRI: -0x0001, match64: 0x1aa2e0001aa3b, modelSI: -0x0001, models64: 0x260600002607},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aa500001aa55, matchRI: 0x1d0c, match64: 0x00000000, modelSI: 0x2607, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1aa550001aa5b, matchRI: 0x1d0d, match64: 0x00000000, modelSI: -0x0001, models64: 0x26080000260a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aa670001aa6f, matchRI: 0x1d10, match64: 0x00000000, modelSI: 0x260a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aa740001aa7b, matchRI: 0x1d11, match64: 0x00000000, modelSI: -0x0001, models64: 0x260b0000260c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aa7b0001aa7f, matchRI: 0x1d13, match64: 0x00000000, modelSI: -0x0001, models64: 0x260c00002611},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1aacb0001aad1, matchRI: 0x1d17, match64: 0x00000000, modelSI: 0x2611, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1aad10001aada, matchRI: -0x0001, match64: 0x1aada0001aaed, modelSI: 0x2612, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aaf60001aafe, matchRI: 0x1d18, match64: 0x00000000, modelSI: 0x2613, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x881e00008824, matchRI: 0x1d19, match64: 0x00000000, modelSI: 0x2614, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aafe0001ab03, matchRI: 0x1d1a, match64: 0x00000000, modelSI: -0x0001, models64: 0x261500002619},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ab1b0001ab1f, matchRI: 0x1d1b, match64: 0x00000000, modelSI: -0x0001, models64: 0x26190000261c},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ab4d0001ab54, matchRI: 0x1d1c, match64: 0x00000000, modelSI: -0x0001, models64: 0x261c00002620},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ab7a0001ab80, matchRI: 0x1d20, match64: 0x00000000, modelSI: 0x2620, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ab800001ab89, matchRI: 0x1d21, match64: 0x00000000, modelSI: 0x2621, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x1ab900001ab95, matchRI: 0x1d22, match64: 0x00000000, modelSI: 0x2622, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ab950001ab9d, matchRI: 0x1d23, match64: 0x00000000, modelSI: -0x0001, models64: 0x262300002628},
			deviceTuple{type64: 0x24700000251, brand64: 0x1abbf0001abc7, matchRI: 0x1d29, match64: 0x00000000, modelSI: -0x0001, models64: 0x26280000262b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1abd90001abdf, matchRI: -0x0001, match64: 0x1abd90001abdf, modelSI: -0x0001, models64: 0x262b0000262d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1abef0001abf6, matchRI: 0x1d2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x262d0000262f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1abfb0001ac04, matchRI: 0x1d2e, match64: 0x00000000, modelSI: -0x0001, models64: 0x262f00002630},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac040001ac0a, matchRI: 0x1d30, match64: 0x00000000, modelSI: -0x0001, models64: 0x263000002631},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac150001ac19, matchRI: 0x1d32, match64: 0x00000000, modelSI: -0x0001, models64: 0x263100002635},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac260001ac2b, matchRI: 0x1d36, match64: 0x00000000, modelSI: -0x0001, models64: 0x263500002638},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ac370001ac3b, matchRI: 0x1d38, match64: 0x00000000, modelSI: -0x0001, models64: 0x26380000263a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac460001ac4a, matchRI: 0x1d3a, match64: 0x00000000, modelSI: -0x0001, models64: 0x263a0000263c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ac4a0001ac51, matchRI: 0x1d3d, match64: 0x00000000, modelSI: 0x263c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac510001ac57, matchRI: 0x1d3e, match64: 0x00000000, modelSI: -0x0001, models64: 0x263d0000263f},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac570001ac5c, matchRI: 0x1d41, match64: 0x00000000, modelSI: -0x0001, models64: 0x263f00002640},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac5c0001ac61, matchRI: 0x1d43, match64: 0x00000000, modelSI: 0x2640, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac680001ac6c, matchRI: -0x0001, match64: 0x1ac6c0001ac73, modelSI: -0x0001, models64: 0x264100002643},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ac840001ac89, matchRI: 0x1d44, match64: 0x00000000, modelSI: 0x2643, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1ac890001ac8e, matchRI: 0x1d45, match64: 0x00000000, modelSI: 0x2644, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ac8e0001ac91, matchRI: 0x1d46, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ac910001ac99, matchRI: 0x1d47, match64: 0x00000000, modelSI: -0x0001, models64: 0x264500002649},
			deviceTuple{type64: 0x24300000245, brand64: 0x1acb10001acb6, matchRI: 0x1d4c, match64: 0x00000000, modelSI: 0x2649, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1acb60001acbb, matchRI: 0x1d4d, match64: 0x00000000, modelSI: 0x264a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1acc10001acc4, matchRI: 0x1d4e, match64: 0x00000000, modelSI: -0x0001, models64: 0x264b00002666},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1add90001addd, matchRI: 0x1d69, match64: 0x00000000, modelSI: -0x0001, models64: 0x266600002668},
			deviceTuple{type64: 0x24300000245, brand64: 0x1adf50001adfb, matchRI: -0x0001, match64: 0x1adf50001adfb, modelSI: -0x0001, models64: 0x26680000266a},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ae180001ae24, matchRI: 0x1d6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x266a0000266c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ae400001ae43, matchRI: 0x1d6d, match64: 0x00000000, modelSI: 0x266c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ae430001ae4d, matchRI: 0x1d6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x266d00002671},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aea70001aeae, matchRI: 0x1d6f, match64: 0x00000000, modelSI: -0x0001, models64: 0x267100002673},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aec10001aecc, matchRI: 0x1d71, match64: 0x00000000, modelSI: -0x0001, models64: 0x267300002675},
			deviceTuple{type64: 0x24300000245, brand64: 0x1aef40001aef8, matchRI: 0x1d72, match64: 0x00000000, modelSI: 0x2675, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aef80001aefd, matchRI: 0x1d73, match64: 0x00000000, modelSI: 0x2676, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1aefd0001af01, matchRI: 0x1d74, match64: 0x00000000, modelSI: 0x2677, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1af080001af0c, matchRI: 0x1d75, match64: 0x00000000, modelSI: -0x0001, models64: 0x26780000267b},
			deviceTuple{type64: 0x281300002820, brand64: 0x1af3e0001af43, matchRI: 0x1d77, match64: 0x00000000, modelSI: -0x0001, models64: 0x267b00002685},
			deviceTuple{type64: 0x24700000251, brand64: 0x1af6d0001af71, matchRI: -0x0001, match64: 0x1af710001af7a, modelSI: 0x2685, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1af7a0001af7f, matchRI: 0x1d81, match64: 0x00000000, modelSI: 0x2686, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1af7f0001af82, matchRI: 0x1d82, match64: 0x00000000, modelSI: -0x0001, models64: 0x2687000026a4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b1750001b17a, matchRI: 0x1d8a, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a4000026a5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1b17a0001b17f, matchRI: 0x1d8c, match64: 0x00000000, modelSI: 0x26a5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b1820001b186, matchRI: 0x1d8d, match64: 0x00000000, modelSI: 0x26a6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b1860001b190, matchRI: 0x1d8e, match64: 0x00000000, modelSI: -0x0001, models64: 0x26a7000026b1},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b2230001b22e, matchRI: 0x1d8f, match64: 0x00000000, modelSI: 0x26b1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b22e0001b231, matchRI: 0x1d90, match64: 0x00000000, modelSI: -0x0001, models64: 0x26b2000026b9},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b2710001b277, matchRI: 0x1d94, match64: 0x00000000, modelSI: -0x0001, models64: 0x26b9000026bb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1b27e0001b285, matchRI: 0x1d96, match64: 0x00000000, modelSI: -0x0001, models64: 0x26bb000026bf},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b2ba0001b2c7, matchRI: 0x1d9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x26bf000026c3},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x1b2e60001b2eb, matchRI: 0x1d9e, match64: 0x00000000, modelSI: -0x0001, models64: 0x26c3000026c4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b2f30001b2f6, matchRI: 0x1da0, match64: 0x00000000, modelSI: 0x26c4, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b2fe0001b302, matchRI: 0x1da1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26c5000026c7},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b3020001b30b, matchRI: 0x1da4, match64: 0x00000000, modelSI: -0x0001, models64: 0x26c7000026d2},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b3c00001b3c5, matchRI: 0x1da7, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d2000026d6},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b3c50001b3cd, matchRI: 0x1dac, match64: 0x00000000, modelSI: -0x0001, models64: 0x26d6000026db},
			deviceTuple{type64: 0x24700000251, brand64: 0x1b3e70001b3ec, matchRI: 0x1db1, match64: 0x00000000, modelSI: -0x0001, models64: 0x26db000026dd},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b3fb0001b401, matchRI: 0x1db4, match64: 0x00000000, modelSI: -0x0001, models64: 0x26dd000026df},
			deviceTuple{type64: 0x24700000251, brand64: 0x180000001f, matchRI: 0x1db7, match64: 0x00000000, modelSI: -0x0001, models64: 0x26df0000298b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1de920001de99, matchRI: 0x2035, match64: 0x00000000, modelSI: 0x298b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1de990001dea0, matchRI: 0x2036, match64: 0x00000000, modelSI: 0x298c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dea00001dea5, matchRI: 0x2037, match64: 0x00000000, modelSI: -0x0001, models64: 0x298d00002991},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1deb40001deba, matchRI: -0x0001, match64: 0x1deba0001dec3, modelSI: 0x2991, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1decd0001ded3, matchRI: 0x2039, match64: 0x00000000, modelSI: -0x0001, models64: 0x299200002994},
			deviceTuple{type64: 0x24700000251, brand64: 0x1deda0001dee0, matchRI: 0x203b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2994000029a9},
			deviceTuple{type64: 0x38400000391, brand64: 0x1b4000001b9, matchRI: 0x2051, match64: 0x00000000, modelSI: -0x0001, models64: 0x29a9000029ae},
			deviceTuple{type64: 0x24300000245, brand64: 0x1df8c0001df91, matchRI: 0x2057, match64: 0x00000000, modelSI: 0x29ae, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1df910001df95, matchRI: 0x2058, match64: 0x00000000, modelSI: 0x29af, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1df950001df9e, matchRI: 0x2059, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1df9e0001dfa3, matchRI: 0x205a, match64: 0x00000000, modelSI: -0x0001, models64: 0x29b0000029b2},
			deviceTuple{type64: 0x24300000245, brand64: 0x1dfd90001dfdf, matchRI: 0x205b, match64: 0x00000000, modelSI: 0x29b2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dfdf0001dfe6, matchRI: 0x205c, match64: 0x00000000, modelSI: 0x29b3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dfe60001dfec, matchRI: -0x0001, match64: 0x1dfe60001dfec, modelSI: -0x0001, models64: 0x29b4000029b5},
			deviceTuple{type64: 0x24700000251, brand64: 0x1dfec0001dff2, matchRI: 0x205e, match64: 0x00000000, modelSI: -0x0001, models64: 0x29b5000029b7},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1dff20001dffb, matchRI: 0x2061, match64: 0x00000000, modelSI: -0x0001, models64: 0x29b7000029b9},
			deviceTuple{type64: 0x24300000245, brand64: 0x1dffb0001e002, matchRI: -0x0001, match64: 0x1dffb0001e002, modelSI: -0x0001, models64: 0x29b9000029ba},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e0020001e008, matchRI: -0x0001, match64: 0x1e0080001e00e, modelSI: -0x0001, models64: 0x29ba000029c1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e0cf0001e0d5, matchRI: 0x2065, match64: 0x00000000, modelSI: -0x0001, models64: 0x29c1000029d0},
			deviceTuple{type64: 0x38400000391, brand64: 0x1e1710001e176, matchRI: 0x2075, match64: 0x00000000, modelSI: 0x29d0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e1760001e17e, matchRI: 0x2076, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d1000029d3},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e1970001e19e, matchRI: 0x2078, match64: 0x00000000, modelSI: 0x29d3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e19e0001e1a3, matchRI: 0x2079, match64: 0x00000000, modelSI: -0x0001, models64: 0x29d4000029e3},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e1e00001e1e5, matchRI: 0x2089, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e3000029e5},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1e1ee0001e1f3, matchRI: 0x208c, match64: 0x00000000, modelSI: 0x29e5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e1f30001e1f8, matchRI: 0x208d, match64: 0x00000000, modelSI: -0x0001, models64: 0x29e600002a5a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7090001e715, matchRI: 0x20fa, match64: 0x00000000, modelSI: 0x2a5a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e7150001e71c, matchRI: 0x20fb, match64: 0x00000000, modelSI: 0x2a5b, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1e7220001e72b, matchRI: 0x20fc, match64: 0x00000000, modelSI: 0x2a5c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e7360001e73d, matchRI: 0x20fd, match64: 0x00000000, modelSI: 0x2a5d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e73d0001e741, matchRI: 0x20fe, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a5e00002a6d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e7d00001e7d7, matchRI: 0x2103, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a6d00002a72},
			deviceTuple{type64: 0x24700000251, brand64: 0xfb120000fb17, matchRI: 0x2109, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7200002a7a},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e8430001e84a, matchRI: 0x2111, match64: 0x00000000, modelSI: 0x2a7a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e84a0001e857, matchRI: -0x0001, match64: 0x1e8570001e863, modelSI: 0x2a7b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1e8630001e86a, matchRI: 0x2112, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a7c00002a84},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e8a80001e8ae, matchRI: 0x2115, match64: 0x00000000, modelSI: 0x2a84, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e8ae0001e8b6, matchRI: 0x2116, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8500002a89},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e8cf0001e8d6, matchRI: 0x211b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8900002a8a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e8db0001e8e5, matchRI: 0x211d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8a00002a8c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1e8f50001e8fb, matchRI: 0x2120, match64: 0x00000000, modelSI: 0x2a8c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1596400015967, matchRI: 0x2121, match64: 0x00000000, modelSI: -0x0001, models64: 0x2a8d00002abb},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eb3e0001eb47, matchRI: 0x213f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2abb00002abd},
			deviceTuple{type64: 0x24300000245, brand64: 0xae050000ae0c, matchRI: 0x2142, match64: 0x00000000, modelSI: 0x2abd, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eb4f0001eb56, matchRI: 0x2143, match64: 0x00000000, modelSI: -0x0001, models64: 0x2abe00002ac0},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eb560001eb5e, matchRI: 0x2146, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac000002ac4},
			deviceTuple{type64: 0x24700000251, brand64: 0x1eb7e0001eb83, matchRI: 0x2149, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac400002ac6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1eb910001eb97, matchRI: 0x214c, match64: 0x00000000, modelSI: 0x2ac6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xea530000ea58, matchRI: 0x214d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac700002ac9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ebad0001ebb9, matchRI: 0x214f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ac900002aca},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ebbf0001ebc9, matchRI: 0x2151, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ebc90001ebd2, matchRI: 0x2152, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aca00002acc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ebd60001ebdd, matchRI: 0x2155, match64: 0x00000000, modelSI: 0x2acc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ebdd0001ebe4, matchRI: 0x2156, match64: 0x00000000, modelSI: -0x0001, models64: 0x2acd00002ace},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ebe40001ebed, matchRI: 0x2158, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ace00002add},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ecc80001ecd1, matchRI: 0x215d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2add00002aeb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ed290001ed2f, matchRI: 0x2168, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aeb00002aed},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ed3e0001ed4b, matchRI: 0x216a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2aed00002af4},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ed950001ed9f, matchRI: 0x2171, match64: 0x00000000, modelSI: 0x2af4, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1ed9f0001eda8, matchRI: -0x0001, match64: 0x1ed9f0001eda8, modelSI: -0x0001, models64: 0x2af500002af6},
			deviceTuple{type64: 0x24700000251, brand64: 0x1edcb0001edcf, matchRI: 0x2172, match64: 0x00000000, modelSI: -0x0001, models64: 0x2af600002af8},
			deviceTuple{type64: 0x24700000251, brand64: 0x1edd80001ede0, matchRI: 0x2174, match64: 0x00000000, modelSI: -0x0001, models64: 0x2af800002afb},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ede00001edea, matchRI: 0x2178, match64: 0x00000000, modelSI: 0x2afb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1edea0001edf0, matchRI: 0x2179, match64: 0x00000000, modelSI: -0x0001, models64: 0x2afc00002b04},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ee650001ee6a, matchRI: 0x217d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0400002b0d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ee000001f2, matchRI: 0x2187, match64: 0x00000000, modelSI: -0x0001, models64: 0x2b0d00002be8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f7e00001f7e8, matchRI: 0x2252, match64: 0x00000000, modelSI: 0x2be8, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1f7e80001f7f0, matchRI: 0x2253, match64: 0x00000000, modelSI: 0x2be9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f7f00001f7f5, matchRI: 0x2254, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bea00002bed},
			deviceTuple{type64: 0x24700000251, brand64: 0x57f2000057f7, matchRI: 0x2256, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bed00002bee},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f80a0001f80f, matchRI: 0x2257, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bee00002bf9},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f8680001f873, matchRI: 0x225b, match64: 0x00000000, modelSI: 0x2bf9, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f8730001f87b, matchRI: 0x225c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bfa00002bfe},
			deviceTuple{type64: 0x24700000251, brand64: 0x1477000014775, matchRI: 0x2261, match64: 0x00000000, modelSI: -0x0001, models64: 0x2bfe00002c0a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x189360001893c, matchRI: 0x226a, match64: 0x00000000, modelSI: 0x2c0a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f9470001f94b, matchRI: 0x226b, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0b00002c0d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1f9500001f959, matchRI: 0x226d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c0d00002c1b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fa520001fa5c, matchRI: 0x2270, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c1b00002c21},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fa8b0001fa92, matchRI: 0x2277, match64: 0x00000000, modelSI: 0x2c21, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fa9f0001faa7, matchRI: 0x2278, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2200002c23},
			deviceTuple{type64: 0x24300000245, brand64: 0x1faaf0001fab6, matchRI: 0x227a, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2300002c25},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fac10001fac7, matchRI: 0x227c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2500002c27},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fac70001facd, matchRI: 0x227f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2700002c29},
			deviceTuple{type64: 0x24700000251, brand64: 0x1faec0001faf6, matchRI: 0x2281, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2900002c2a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1faf60001fafc, matchRI: 0x2283, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2a00002c2d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fb020001fb07, matchRI: 0x2287, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c2d00002c59},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd060001fd0b, matchRI: 0x2294, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c5900002c5b},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd0b0001fd10, matchRI: 0x2297, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c5b00002c60},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fd1e0001fd27, matchRI: 0x229d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6000002c62},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd270001fd2d, matchRI: 0x22a0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6200002c64},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd2d0001fd33, matchRI: 0x22a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6400002c67},
			deviceTuple{type64: 0x7130000071d, brand64: 0x1fd4f0001fd54, matchRI: 0x22a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6700002c6a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fd6e0001fd73, matchRI: 0x22a9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c6a00002c71},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fd810001fd89, matchRI: 0x22b1, match64: 0x00000000, modelSI: 0x2c71, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fd890001fd90, matchRI: 0x22b2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7200002c76},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fda70001fdb4, matchRI: 0x22b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fdb40001fdbc, matchRI: 0x22b8, match64: 0x00000000, modelSI: 0x2c76, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fdc20001fdcc, matchRI: 0x22b9, match64: 0x00000000, modelSI: 0x2c77, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fdcc0001fdd3, matchRI: 0x22ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7800002c7a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fdef0001fdf7, matchRI: 0x22bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7a00002c7c},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fdfe0001fe06, matchRI: -0x0001, match64: 0x1fdfe0001fe06, modelSI: -0x0001, models64: 0x2c7c00002c7d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe1a0001fe1f, matchRI: 0x22bd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c7d00002c7f},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe1f0001fe26, matchRI: 0x22c0, match64: 0x00000000, modelSI: 0x2c7f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe260001fe2b, matchRI: 0x22c1, match64: 0x00000000, modelSI: 0x2c80, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1fe320001fe38, matchRI: 0x22c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8100002c83},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fe510001fe56, matchRI: 0x22c4, match64: 0x00000000, modelSI: 0x2c83, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe560001fe5b, matchRI: 0x22c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8400002c8a},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe920001fe9b, matchRI: 0x22c9, match64: 0x00000000, modelSI: 0x2c8a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1fe9b0001fea1, matchRI: 0x22ca, match64: 0x00000000, modelSI: 0x2c8b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x1feaa0001feae, matchRI: 0x22cb, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8c00002c8d},
			deviceTuple{type64: 0x24700000251, brand64: 0x1feb30001febb, matchRI: 0x22cd, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c8d00002c9c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x1ff280001ff2d, matchRI: 0x22d7, match64: 0x00000000, modelSI: 0x2c9c, models64: 0x00000000},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x1ff2d0001ff35, matchRI: -0x0001, match64: 0x1ff2d0001ff35, modelSI: -0x0001, models64: 0x2c9d00002c9e},
			deviceTuple{type64: 0x24700000251, brand64: 0x1ff3f0001ff47, matchRI: 0x22d9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2c9e00002cb7},
			deviceTuple{type64: 0x24300000245, brand64: 0x200690002006c, matchRI: 0x22ec, match64: 0x00000000, modelSI: 0x2cb7, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2006c00020072, matchRI: -0x0001, match64: 0x2006c00020072, modelSI: -0x0001, models64: 0x2cb800002cb9},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x200720002007a, matchRI: 0x22ee, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cb900002cbc},
			deviceTuple{type64: 0x24300000245, brand64: 0x2009e000200a3, matchRI: 0x22f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x200a3000200ab, matchRI: 0x22f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cbc00002cbd},
			deviceTuple{type64: 0x24700000251, brand64: 0x200b3000200b6, matchRI: 0x22f4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2cbd00002d2e},
			deviceTuple{type64: 0x24300000245, brand64: 0x203dc000203e6, matchRI: 0x2352, match64: 0x00000000, modelSI: 0x2d2e, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x203e6000203ed, matchRI: 0x2353, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d2f00002d32},
			deviceTuple{type64: 0x24300000245, brand64: 0x2040b00020414, matchRI: 0x2354, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3200002d34},
			deviceTuple{type64: 0x24700000251, brand64: 0x2042300020428, matchRI: -0x0001, match64: 0x2042300020428, modelSI: -0x0001, models64: 0x2d3400002d35},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x204280002042f, matchRI: 0x2357, match64: 0x00000000, modelSI: 0x2d35, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2042f00020433, matchRI: 0x2358, match64: 0x00000000, modelSI: 0x2d36, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x2043300020439, matchRI: -0x0001, match64: 0x2043300020439, modelSI: -0x0001, models64: 0x2d3700002d39},
			deviceTuple{type64: 0x24300000245, brand64: 0x2043900020442, matchRI: 0x235b, match64: 0x00000000, modelSI: 0x2d39, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2044200020445, matchRI: 0x235c, match64: 0x00000000, modelSI: 0x2d3a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2045400020457, matchRI: 0x235d, match64: 0x00000000, modelSI: 0x2d3b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x204570002045c, matchRI: 0x235e, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3c00002d3d},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2045c00020462, matchRI: 0x2360, match64: 0x00000000, modelSI: 0x2d3d, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x204620002046a, matchRI: 0x2361, match64: 0x00000000, modelSI: 0x2d3e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2046a00020471, matchRI: 0x2362, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d3f00002d40},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2047100020478, matchRI: 0x2364, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4000002d42},
			deviceTuple{type64: 0x24300000245, brand64: 0x2047c0002047f, matchRI: -0x0001, match64: 0x2047f00020483, modelSI: 0x2d42, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2048300020486, matchRI: 0x2367, match64: 0x00000000, modelSI: 0x2d43, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x204860002048a, matchRI: 0x2368, match64: 0x00000000, modelSI: 0x2d44, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2048a00020490, matchRI: -0x0001, match64: 0x204900002049b, modelSI: 0x2d45, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x204a1000204a7, matchRI: -0x0001, match64: 0x204a1000204a7, modelSI: -0x0001, models64: 0x2d4600002d47},
			deviceTuple{type64: 0x24300000245, brand64: 0x204ab000204ae, matchRI: 0x236a, match64: 0x00000000, modelSI: 0x2d47, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x204ae000204b1, matchRI: 0x236b, match64: 0x00000000, modelSI: 0x2d48, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x204bf000204c2, matchRI: 0x236c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4900002d4c},
			deviceTuple{type64: 0x24700000251, brand64: 0x204d7000204da, matchRI: 0x2370, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d4c00002d4f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x204ee000204f1, matchRI: 0x2373, match64: 0x00000000, modelSI: 0x2d4f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x204f1000204fd, matchRI: 0x2374, match64: 0x00000000, modelSI: 0x2d50, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x205090002050f, matchRI: 0x2375, match64: 0x00000000, modelSI: 0x2d51, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2050f00020515, matchRI: 0x2376, match64: 0x00000000, modelSI: 0x2d52, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x205150002051a, matchRI: 0x2377, match64: 0x00000000, modelSI: 0x2d53, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2051a0002051f, matchRI: 0x2378, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5400002d59},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2053b00020545, matchRI: 0x237d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5900002d5a},
			deviceTuple{type64: 0x24700000251, brand64: 0x205450002054b, matchRI: 0x237f, match64: 0x00000000, modelSI: 0x2d5a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x205530002055a, matchRI: 0x2380, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d5b00002d6a},
			deviceTuple{type64: 0x24700000251, brand64: 0x205dc000205e5, matchRI: 0x2389, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6a00002d6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x205e5000205ee, matchRI: 0x238b, match64: 0x00000000, modelSI: 0x2d6b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x205fb00020603, matchRI: 0x238c, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6c00002d6e},
			deviceTuple{type64: 0x24300000245, brand64: 0x2061d00020626, matchRI: 0x238f, match64: 0x00000000, modelSI: 0x2d6e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2062f00020637, matchRI: -0x0001, match64: 0x2062f00020637, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x206370002063e, matchRI: 0x2390, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d6f00002d99},
			deviceTuple{type64: 0x24700000251, brand64: 0x207510002075d, matchRI: 0x23ab, match64: 0x00000000, modelSI: -0x0001, models64: 0x2d9900002e59},
			deviceTuple{type64: 0x24700000251, brand64: 0x20e9500020e9c, matchRI: 0x2467, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5900002e5b},
			deviceTuple{type64: 0x24700000251, brand64: 0x20eba00020ebf, matchRI: 0x2469, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e5b00002e60},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x20ecd00020ed7, matchRI: 0x246f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6000002e6a},
			deviceTuple{type64: 0x24700000251, brand64: 0x20f3d00020f43, matchRI: 0x2475, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6a00002e6e},
			deviceTuple{type64: 0x24700000251, brand64: 0x20f7700020f7e, matchRI: 0x2477, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e6e00002e70},
			deviceTuple{type64: 0x24300000245, brand64: 0x20f7e00020f83, matchRI: -0x0001, match64: 0x20f7e00020f83, modelSI: -0x0001, models64: 0x2e7000002e72},
			deviceTuple{type64: 0x38400000391, brand64: 0x20f9f00020fa4, matchRI: -0x0001, match64: 0x20f9f00020fa4, modelSI: -0x0001, models64: 0x2e7200002e74},
			deviceTuple{type64: 0x24300000245, brand64: 0x20fa400020faa, matchRI: 0x247c, match64: 0x00000000, modelSI: 0x2e74, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x20faa00020faf, matchRI: -0x0001, match64: 0x20faf00020fb5, modelSI: -0x0001, models64: 0x2e7500002e76},
			deviceTuple{type64: 0x24700000251, brand64: 0x20fbb00020fc0, matchRI: 0x247d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e7600002e7f},
			deviceTuple{type64: 0x24700000251, brand64: 0x2102a00021035, matchRI: 0x2483, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e7f00002e81},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2103c00021041, matchRI: 0x2485, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8100002e82},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2104600021050, matchRI: 0x2487, match64: 0x00000000, modelSI: 0x2e82, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x210550002105d, matchRI: -0x0001, match64: 0x210550002105d, modelSI: -0x0001, models64: 0x2e8300002e84},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2105d00021062, matchRI: 0x2489, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8400002e86},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x210720002107a, matchRI: 0x248c, match64: 0x00000000, modelSI: 0x2e86, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2108400021087, matchRI: 0x248d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8700002e8e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2109d000210a4, matchRI: 0x2494, match64: 0x00000000, modelSI: -0x0001, models64: 0x2e8e00002ea2},
			deviceTuple{type64: 0x24700000251, brand64: 0x2116900021170, matchRI: 0x24a1, match64: 0x00000000, modelSI: 0x2ea2, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2117000021177, matchRI: 0x24a2, match64: 0x00000000, modelSI: 0x2ea3, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x211770002117b, matchRI: 0x24a3, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea400002ea8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x211980002119e, matchRI: 0x24a6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea800002ea9},
			deviceTuple{type64: 0x24700000251, brand64: 0x211aa000211b0, matchRI: 0x24a8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ea900002eac},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x211cb000211d0, matchRI: 0x24ac, match64: 0x00000000, modelSI: 0x2eac, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x211d8000211de, matchRI: 0x24ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ead00002ebb},
			deviceTuple{type64: 0x24700000251, brand64: 0x2129d000212a2, matchRI: 0x24b3, match64: 0x00000000, modelSI: 0x2ebb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x212a2000212a7, matchRI: 0x24b4, match64: 0x00000000, modelSI: 0x2ebc, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x212a7000212ac, matchRI: 0x24b5, match64: 0x00000000, modelSI: 0x2ebd, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x212ac000212b2, matchRI: 0x24b6, match64: 0x00000000, modelSI: 0x2ebe, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x212bf000212c3, matchRI: 0x24b7, match64: 0x00000000, modelSI: 0x2ebf, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x212c3000212c8, matchRI: -0x0001, match64: 0x212c8000212cd, modelSI: -0x0001, models64: 0x2ec000002ec2},
			deviceTuple{type64: 0x24700000251, brand64: 0x212d4000212dd, matchRI: 0x24ba, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec200002ec6},
			deviceTuple{type64: 0x24300000245, brand64: 0x2130e00021317, matchRI: 0x24bb, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ec600002ecc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2134f00021358, matchRI: 0x24bd, match64: 0x00000000, modelSI: 0x2ecc, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x2136a00021370, matchRI: 0x24be, match64: 0x00000000, modelSI: 0x2ecd, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2137000021377, matchRI: 0x24bf, match64: 0x00000000, modelSI: 0x2ece, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2137b00021380, matchRI: 0x24c0, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ecf00002ed3},
			deviceTuple{type64: 0x24700000251, brand64: 0x1008300010089, matchRI: 0x24c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ed300002eda},
			deviceTuple{type64: 0x24700000251, brand64: 0x213d9000213e0, matchRI: 0x24c9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2eda00002ef6},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2152800021532, matchRI: 0x24d7, match64: 0x00000000, modelSI: 0x2ef6, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x215320002153b, matchRI: 0x24d8, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ef700002efc},
			deviceTuple{type64: 0x24300000245, brand64: 0x215720002157b, matchRI: 0x24dc, match64: 0x00000000, modelSI: -0x0001, models64: 0x2efc00002efe},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2158900021591, matchRI: 0x24df, match64: 0x00000000, modelSI: -0x0001, models64: 0x2efe00002f08},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x216250002162a, matchRI: 0x24e6, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f0800002f15},
			deviceTuple{type64: 0x24300000245, brand64: 0x216c7000216cf, matchRI: 0x24f3, match64: 0x00000000, modelSI: 0x2f15, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x216cf000216d6, matchRI: 0x24f4, match64: 0x00000000, modelSI: 0x2f16, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x216d6000216dd, matchRI: 0x24f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f1700002f1a},
			deviceTuple{type64: 0x24700000251, brand64: 0x2171f00021726, matchRI: -0x0001, match64: 0x2172600021732, modelSI: -0x0001, models64: 0x2f1a00002f1b},
			deviceTuple{type64: 0x24700000251, brand64: 0x2174100021745, matchRI: 0x24f7, match64: 0x00000000, modelSI: 0x2f1b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2174a00021753, matchRI: 0x24f8, match64: 0x00000000, modelSI: 0x2f1c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2175300021757, matchRI: 0x24f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f1d00002f31},
			deviceTuple{type64: 0x24700000251, brand64: 0x219210002192a, matchRI: 0x2506, match64: 0x00000000, modelSI: 0x2f31, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2192a0002192f, matchRI: 0x2507, match64: 0x00000000, modelSI: 0x2f32, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2192f0002193e, matchRI: 0x2508, match64: 0x00000000, modelSI: 0x2f33, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x97f8000097fd, matchRI: 0x2509, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3400002f3c},
			deviceTuple{type64: 0x24700000251, brand64: 0x2198000021987, matchRI: 0x2512, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f3c00002f57},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x21aab00021ab4, matchRI: 0x2524, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f5700002f5a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x21ad400021adc, matchRI: 0x2527, match64: 0x00000000, modelSI: 0x2f5a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x21adc00021ae4, matchRI: 0x2528, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f5b00002f60},
			deviceTuple{type64: 0x24300000245, brand64: 0x21b0e00021b13, matchRI: 0x252e, match64: 0x00000000, modelSI: 0x2f60, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x21b1300021b1a, matchRI: 0x252f, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f6100002f63},
			deviceTuple{type64: 0x24700000251, brand64: 0x21b1a00021b1e, matchRI: 0x2532, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f6300002f65},
			deviceTuple{type64: 0x24700000251, brand64: 0x21b1e00021b23, matchRI: 0x2535, match64: 0x00000000, modelSI: 0x2f65, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x21b2300021b30, matchRI: -0x0001, match64: 0x21b3000021b3c, modelSI: -0x0001, models64: 0x2f6600002f67},
			deviceTuple{type64: 0x24700000251, brand64: 0x21b4100021b48, matchRI: 0x2537, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f6700002f6b},
			deviceTuple{type64: 0x24700000251, brand64: 0x21b6100021b6e, matchRI: -0x0001, match64: 0x21b6e00021b73, modelSI: -0x0001, models64: 0x2f6b00002f6d},
			deviceTuple{type64: 0x24300000245, brand64: 0x21b8e00021b90, matchRI: 0x253d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f6d00002f70},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x21bac00021bae, matchRI: -0x0001, match64: 0x21bae00021bb6, modelSI: 0x2f70, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x21bbb00021bc0, matchRI: 0x2541, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f7100002f72},
			deviceTuple{type64: 0x24700000251, brand64: 0x21bc000021bc7, matchRI: 0x2543, match64: 0x00000000, modelSI: -0x0001, models64: 0x2f7200002fac},
			deviceTuple{type64: 0x24700000251, brand64: 0x21d8500021d8a, matchRI: 0x2561, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fac00002fae},
			deviceTuple{type64: 0x24700000251, brand64: 0x21d8a00021d8e, matchRI: 0x2564, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fae00002faf},
			deviceTuple{type64: 0x24700000251, brand64: 0x21d8e00021d94, matchRI: -0x0001, match64: 0x21d8e00021d94, modelSI: -0x0001, models64: 0x2faf00002fb0},
			deviceTuple{type64: 0x24700000251, brand64: 0x21d9400021d98, matchRI: 0x2567, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fb000002fb4},
			deviceTuple{type64: 0x38400000391, brand64: 0x21db000021db9, matchRI: 0x256a, match64: 0x00000000, modelSI: 0x2fb4, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x21db900021dbe, matchRI: 0x256b, match64: 0x00000000, modelSI: 0x2fb5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x21dbe00021dc7, matchRI: 0x256c, match64: 0x00000000, modelSI: 0x2fb6, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x21dd100021dd6, matchRI: 0x256d, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fb700002fbb},
			deviceTuple{type64: 0x24700000251, brand64: 0x21df000021df5, matchRI: 0x2571, match64: 0x00000000, modelSI: 0x2fbb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x21df500021dfb, matchRI: 0x2572, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fbc00002fc2},
			deviceTuple{type64: 0x24700000251, brand64: 0x21e0d00021e14, matchRI: 0x2576, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fc200002fec},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x21f7100021f75, matchRI: 0x2599, match64: 0x00000000, modelSI: -0x0001, models64: 0x2fec00002ff7},
			deviceTuple{type64: 0x24700000251, brand64: 0x2202100022026, matchRI: 0x25a4, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ff700002ff8},
			deviceTuple{type64: 0x24300000245, brand64: 0x2203e0002204a, matchRI: 0x25a5, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ff800002ffa},
			deviceTuple{type64: 0x24700000251, brand64: 0x2206e00022074, matchRI: 0x25a6, match64: 0x00000000, modelSI: 0x2ffa, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x220740002207c, matchRI: 0x25a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x2ffb0000300a},
			deviceTuple{type64: 0x24700000251, brand64: 0x221340002213a, matchRI: 0x25ac, match64: 0x00000000, modelSI: 0x300a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2213a00022142, matchRI: 0x25ad, match64: 0x00000000, modelSI: -0x0001, models64: 0x300b0000300d},
			deviceTuple{type64: 0x24700000251, brand64: 0x221440002214c, matchRI: -0x0001, match64: 0x221440002214c, modelSI: -0x0001, models64: 0x300d0000300f},
			deviceTuple{type64: 0x24700000251, brand64: 0x2214c00022155, matchRI: 0x25b2, match64: 0x00000000, modelSI: 0x300f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x221550002215c, matchRI: 0x25b3, match64: 0x00000000, modelSI: -0x0001, models64: 0x301000003012},
			deviceTuple{type64: 0x24300000245, brand64: 0x2216600022172, matchRI: 0x25b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x301200003014},
			deviceTuple{type64: 0x24700000251, brand64: 0x221af000221b6, matchRI: 0x25b7, match64: 0x00000000, modelSI: -0x0001, models64: 0x30140000301f},
			deviceTuple{type64: 0x24700000251, brand64: 0x221fc00022203, matchRI: 0x25c2, match64: 0x00000000, modelSI: -0x0001, models64: 0x301f0000302a},
			deviceTuple{type64: 0x24700000251, brand64: 0x2227400022287, matchRI: 0x25c3, match64: 0x00000000, modelSI: -0x0001, models64: 0x302a0000302b},
			deviceTuple{type64: 0x24700000251, brand64: 0x2228a00022292, matchRI: 0x25c5, match64: 0x00000000, modelSI: -0x0001, models64: 0x302b0000302e},
			deviceTuple{type64: 0x24700000251, brand64: 0x222aa000222af, matchRI: 0x25c6, match64: 0x00000000, modelSI: -0x0001, models64: 0x302e00003031},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222af000222b5, matchRI: 0x25ca, match64: 0x00000000, modelSI: -0x0001, models64: 0x303100003033},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222c1000222c6, matchRI: 0x25cc, match64: 0x00000000, modelSI: -0x0001, models64: 0x303300003034},
			deviceTuple{type64: 0x24700000251, brand64: 0x222c6000222cb, matchRI: 0x25ce, match64: 0x00000000, modelSI: 0x3034, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x222cb000222d1, matchRI: 0x25cf, match64: 0x00000000, modelSI: 0x3035, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x222d1000222d7, matchRI: 0x25d0, match64: 0x00000000, modelSI: 0x3036, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x222d7000222db, matchRI: 0x25d1, match64: 0x00000000, modelSI: -0x0001, models64: 0x303700003039},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222e8000222ec, matchRI: 0x25d3, match64: 0x00000000, modelSI: -0x0001, models64: 0x30390000303a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x222f4000222f9, matchRI: -0x0001, match64: 0x222f900022302, modelSI: 0x303a, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2230b00022312, matchRI: -0x0001, match64: 0x223120002231d, modelSI: 0x303b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x223290002232f, matchRI: 0x25d5, match64: 0x00000000, modelSI: 0x303c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2232f00022333, matchRI: 0x25d6, match64: 0x00000000, modelSI: 0x303d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2233300022335, matchRI: 0x25d7, match64: 0x00000000, modelSI: -0x0001, models64: 0x303e00003041},
			deviceTuple{type64: 0x24700000251, brand64: 0x2234e00022352, matchRI: 0x25da, match64: 0x00000000, modelSI: 0x3041, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2235200022356, matchRI: 0x25db, match64: 0x00000000, modelSI: -0x0001, models64: 0x304200003045},
			deviceTuple{type64: 0x24700000251, brand64: 0x223560002235b, matchRI: 0x25df, match64: 0x00000000, modelSI: 0x3045, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2235b00022362, matchRI: 0x25e0, match64: 0x00000000, modelSI: -0x0001, models64: 0x30460000304c},
			deviceTuple{type64: 0x24700000251, brand64: 0x2239500022399, matchRI: 0x25e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x304c0000304e},
			deviceTuple{type64: 0x24700000251, brand64: 0x223990002239f, matchRI: 0x25e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x304e0000304f},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x223ab000223b2, matchRI: 0x25e8, match64: 0x00000000, modelSI: 0x304f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x223b2000223b9, matchRI: 0x25e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x305000003053},
			deviceTuple{type64: 0x24700000251, brand64: 0x223d0000223d5, matchRI: -0x0001, match64: 0x223d0000223d5, modelSI: -0x0001, models64: 0x305300003056},
			deviceTuple{type64: 0x24300000245, brand64: 0x223dd000223e7, matchRI: 0x25ee, match64: 0x00000000, modelSI: 0x3056, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x223e7000223ef, matchRI: 0x25ef, match64: 0x00000000, modelSI: 0x3057, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x223ef000223f3, matchRI: 0x25f0, match64: 0x00000000, modelSI: -0x0001, models64: 0x30580000305d},
			deviceTuple{type64: 0x38400000391, brand64: 0x2244a00022453, matchRI: 0x25f2, match64: 0x00000000, modelSI: 0x305d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x224570002245e, matchRI: 0x25f3, match64: 0x00000000, modelSI: -0x0001, models64: 0x305e00003062},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2246300022472, matchRI: 0x25f8, match64: 0x00000000, modelSI: 0x3062, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2247a0002247f, matchRI: 0x25f9, match64: 0x00000000, modelSI: 0x3063, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2247f00022483, matchRI: 0x25fa, match64: 0x00000000, modelSI: -0x0001, models64: 0x306400003065},
			deviceTuple{type64: 0x24300000245, brand64: 0x2248e00022493, matchRI: 0x25fb, match64: 0x00000000, modelSI: 0x3065, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x224930002249a, matchRI: 0x25fc, match64: 0x00000000, modelSI: 0x3066, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2249a000224a3, matchRI: -0x0001, match64: 0x224a3000224aa, modelSI: -0x0001, models64: 0x306700003068},
			deviceTuple{type64: 0x24700000251, brand64: 0x224aa000224b1, matchRI: 0x25fe, match64: 0x00000000, modelSI: 0x3068, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x224b3000224b9, matchRI: 0x25ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x30690000306d},
			deviceTuple{type64: 0x24700000251, brand64: 0x224ed000224f2, matchRI: 0x2603, match64: 0x00000000, modelSI: -0x0001, models64: 0x306d0000306e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x224f2000224fa, matchRI: 0x2605, match64: 0x00000000, modelSI: -0x0001, models64: 0x306e00003070},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x121170001211b, matchRI: 0x2608, match64: 0x00000000, modelSI: 0x3070, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x225070002250d, matchRI: -0x0001, match64: 0x2250d00022513, modelSI: -0x0001, models64: 0x307100003072},
			deviceTuple{type64: 0x24300000245, brand64: 0x2251300022518, matchRI: 0x260a, match64: 0x00000000, modelSI: 0x3072, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x225180002251d, matchRI: 0x260b, match64: 0x00000000, modelSI: -0x0001, models64: 0x307300003075},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x225270002252e, matchRI: 0x260e, match64: 0x00000000, modelSI: 0x3075, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2252e00022536, matchRI: 0x260f, match64: 0x00000000, modelSI: -0x0001, models64: 0x307600003079},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2255d00022563, matchRI: 0x2613, match64: 0x00000000, modelSI: -0x0001, models64: 0x30790000307b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2257a00022581, matchRI: 0x2616, match64: 0x00000000, modelSI: -0x0001, models64: 0x307b00003082},
			deviceTuple{type64: 0x24700000251, brand64: 0x226060002260c, matchRI: 0x2619, match64: 0x00000000, modelSI: -0x0001, models64: 0x30820000308e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2265200022659, matchRI: 0x261f, match64: 0x00000000, modelSI: 0x308e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x226640002266a, matchRI: 0x2620, match64: 0x00000000, modelSI: 0x308f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2266a00022670, matchRI: 0x2621, match64: 0x00000000, modelSI: -0x0001, models64: 0x30900000309c},
			deviceTuple{type64: 0x38400000391, brand64: 0x226de000226e3, matchRI: 0x262e, match64: 0x00000000, modelSI: -0x0001, models64: 0x309c000030a2},
			deviceTuple{type64: 0x24700000251, brand64: 0x2273a00022742, matchRI: -0x0001, match64: 0x227420002274a, modelSI: -0x0001, models64: 0x30a2000030cd},
			deviceTuple{type64: 0x24300000245, brand64: 0x2287b00022880, matchRI: 0x265c, match64: 0x00000000, modelSI: -0x0001, models64: 0x30cd000030cf},
			deviceTuple{type64: 0x24700000251, brand64: 0x228af000228b5, matchRI: 0x265d, match64: 0x00000000, modelSI: -0x0001, models64: 0x30cf000030e8},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a0b00022a10, matchRI: 0x2669, match64: 0x00000000, modelSI: -0x0001, models64: 0x30e8000030ea},
			deviceTuple{type64: 0x24300000245, brand64: 0x22a2f00022a34, matchRI: 0x266b, match64: 0x00000000, modelSI: 0x30ea, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22a3400022a3c, matchRI: 0x266c, match64: 0x00000000, modelSI: 0x30eb, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22a4700022a4f, matchRI: 0x266d, match64: 0x00000000, modelSI: -0x0001, models64: 0x30ec000030fc},
			deviceTuple{type64: 0x24300000245, brand64: 0x22aee00022af4, matchRI: 0x267d, match64: 0x00000000, modelSI: 0x30fc, models64: 0x00000000},
			deviceTuple{type64: 0x5e8000005f5, brand64: 0x22af400022afd, matchRI: 0x267e, match64: 0x00000000, modelSI: -0x0001, models64: 0x30fd00003104},
			deviceTuple{type64: 0x24300000245, brand64: 0x22b4a00022b51, matchRI: -0x0001, match64: 0x22b4a00022b51, modelSI: -0x0001, models64: 0x310400003107},
			deviceTuple{type64: 0x24300000245, brand64: 0x22b5900022b5e, matchRI: 0x2688, match64: 0x00000000, modelSI: -0x0001, models64: 0x31070000310f},
			deviceTuple{type64: 0x24700000251, brand64: 0x22bc100022bc7, matchRI: 0x268a, match64: 0x00000000, modelSI: 0x310f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22bc700022bcb, matchRI: -0x0001, match64: 0x22bcb00022bd2, modelSI: -0x0001, models64: 0x311000003111},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x903100009036, matchRI: 0x268c, match64: 0x00000000, modelSI: 0x3111, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22bd200022bd7, matchRI: 0x268d, match64: 0x00000000, modelSI: -0x0001, models64: 0x311200003116},
			deviceTuple{type64: 0x24700000251, brand64: 0x22be300022be8, matchRI: 0x2692, match64: 0x00000000, modelSI: -0x0001, models64: 0x311600003118},
			deviceTuple{type64: 0x24300000245, brand64: 0x22bec00022bfd, matchRI: 0x2695, match64: 0x00000000, modelSI: -0x0001, models64: 0x31180000311a},
			deviceTuple{type64: 0x24700000251, brand64: 0x22c0700022c13, matchRI: 0x2698, match64: 0x00000000, modelSI: -0x0001, models64: 0x311a0000311c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x22c2d00022c38, matchRI: 0x2699, match64: 0x00000000, modelSI: -0x0001, models64: 0x311c0000311f},
			deviceTuple{type64: 0x38400000391, brand64: 0x22c7f00022c87, matchRI: 0x269c, match64: 0x00000000, modelSI: -0x0001, models64: 0x311f00003122},
			deviceTuple{type64: 0x24300000245, brand64: 0x22c8700022c8d, matchRI: 0x26a0, match64: 0x00000000, modelSI: 0x3122, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x22c8d00022c93, matchRI: 0x26a1, match64: 0x00000000, modelSI: -0x0001, models64: 0x312300003129},
			deviceTuple{type64: 0x24700000251, brand64: 0x22caa00022caf, matchRI: 0x26a7, match64: 0x00000000, modelSI: -0x0001, models64: 0x312900003137},
			deviceTuple{type64: 0x24700000251, brand64: 0x22d0c00022d10, matchRI: 0x26b6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3137000032ea},
			deviceTuple{type64: 0x24300000245, brand64: 0x239d1000239d6, matchRI: 0x27df, match64: 0x00000000, modelSI: -0x0001, models64: 0x32ea000032f1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x239ea000239ef, matchRI: 0x27e4, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f1000032f3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x23a0400023a0b, matchRI: 0x27e7, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f3000032f5},
			deviceTuple{type64: 0x24700000251, brand64: 0x23a1a00023a22, matchRI: 0x27e9, match64: 0x00000000, modelSI: -0x0001, models64: 0x32f50000332b},
			deviceTuple{type64: 0x24700000251, brand64: 0x23d1900023d1e, matchRI: -0x0001, match64: 0x23d1e00023d29, modelSI: -0x0001, models64: 0x332b0000332c},
			deviceTuple{type64: 0x24700000251, brand64: 0x1098c00010990, matchRI: 0x2801, match64: 0x00000000, modelSI: 0x332c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x23d2900023d2f, matchRI: 0x2802, match64: 0x00000000, modelSI: -0x0001, models64: 0x332d00003349},
			deviceTuple{type64: 0x24300000245, brand64: 0x23e2700023e2d, matchRI: 0x281b, match64: 0x00000000, modelSI: -0x0001, models64: 0x334900003351},
			deviceTuple{type64: 0x24700000251, brand64: 0x23e6200023e68, matchRI: 0x2824, match64: 0x00000000, modelSI: -0x0001, models64: 0x335100003353},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x23e7000023e76, matchRI: 0x2826, match64: 0x00000000, modelSI: -0x0001, models64: 0x335300003359},
			deviceTuple{type64: 0x24300000245, brand64: 0x23ee900023eee, matchRI: 0x2827, match64: 0x00000000, modelSI: 0x3359, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x23eee00023ef4, matchRI: 0x2828, match64: 0x00000000, modelSI: 0x335a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xdeb10000deb7, matchRI: 0x2829, match64: 0x00000000, modelSI: -0x0001, models64: 0x335b00003366},
			deviceTuple{type64: 0x24700000251, brand64: 0x23f5100023f55, matchRI: 0x2831, match64: 0x00000000, modelSI: -0x0001, models64: 0x336600003369},
			deviceTuple{type64: 0x38400000391, brand64: 0x23f5500023f5b, matchRI: 0x2835, match64: 0x00000000, modelSI: 0x3369, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x23f5b00023f5f, matchRI: 0x2836, match64: 0x00000000, modelSI: -0x0001, models64: 0x336a0000336d},
			deviceTuple{type64: 0x24700000251, brand64: 0x23f6500023f6b, matchRI: 0x283a, match64: 0x00000000, modelSI: -0x0001, models64: 0x336d00003378},
			deviceTuple{type64: 0x24700000251, brand64: 0x23fb800023fbc, matchRI: 0x2843, match64: 0x00000000, modelSI: -0x0001, models64: 0x337800003382},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x240250002402e, matchRI: 0x284a, match64: 0x00000000, modelSI: 0x3382, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0xdedf0000dee5, matchRI: 0x284b, match64: 0x00000000, modelSI: -0x0001, models64: 0x338300003386},
			deviceTuple{type64: 0x24700000251, brand64: 0x2404000024047, matchRI: 0x284f, match64: 0x00000000, modelSI: -0x0001, models64: 0x338600003387},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x2405000024053, matchRI: 0x2851, match64: 0x00000000, modelSI: -0x0001, models64: 0x33870000338b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2407c0002407f, matchRI: 0x2853, match64: 0x00000000, modelSI: 0x338b, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2407f00024084, matchRI: 0x2854, match64: 0x00000000, modelSI: -0x0001, models64: 0x338c0000338e},
			deviceTuple{type64: 0x24700000251, brand64: 0x2408400024086, matchRI: 0x2857, match64: 0x00000000, modelSI: 0x338e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x240860002408a, matchRI: 0x2858, match64: 0x00000000, modelSI: 0x338f, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x24099000240a0, matchRI: 0x2859, match64: 0x00000000, modelSI: 0x3390, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x240a0000240a2, matchRI: 0x285a, match64: 0x00000000, modelSI: 0x3391, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x240a2000240a9, matchRI: 0x285b, match64: 0x00000000, modelSI: 0x3392, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x240a9000240af, matchRI: 0x285c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x240af000240b5, matchRI: 0x285d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3393000033a5},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x241a6000241ad, matchRI: 0x286a, match64: 0x00000000, modelSI: 0x33a5, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x241b6000241bf, matchRI: 0x286b, match64: 0x00000000, modelSI: -0x0001, models64: 0x33a6000033a7},
			deviceTuple{type64: 0x24300000245, brand64: 0x241bf000241c5, matchRI: 0x286d, match64: 0x00000000, modelSI: 0x33a7, models64: 0x00000000},
			deviceTuple{type64: 0x8e00000099, brand64: 0x241c5000241cd, matchRI: 0x286e, match64: 0x00000000, modelSI: 0x33a8, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x241d5000241db, matchRI: 0x286f, match64: 0x00000000, modelSI: 0x33a9, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x241db000241e4, matchRI: 0x2870, match64: 0x00000000, modelSI: -0x0001, models64: 0x33aa000033ab},
			deviceTuple{type64: 0x24700000251, brand64: 0x241e4000241ea, matchRI: 0x2872, match64: 0x00000000, modelSI: -0x0001, models64: 0x33ab000033ac},
			deviceTuple{type64: 0x24700000251, brand64: 0x241fb00024201, matchRI: 0x2873, match64: 0x00000000, modelSI: -0x0001, models64: 0x33ac000033ae},
			deviceTuple{type64: 0x24700000251, brand64: 0x242230002422a, matchRI: 0x2874, match64: 0x00000000, modelSI: 0x33ae, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2422a00024239, matchRI: 0x2875, match64: 0x00000000, modelSI: -0x0001, models64: 0x33af000033b0},
			deviceTuple{type64: 0x24300000245, brand64: 0x242540002425a, matchRI: 0x2876, match64: 0x00000000, modelSI: 0x33b0, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2425a00024263, matchRI: 0x2877, match64: 0x00000000, modelSI: -0x0001, models64: 0x33b1000033b2},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2426300024269, matchRI: 0x2879, match64: 0x00000000, modelSI: -0x0001, models64: 0x33b2000033bb},
			deviceTuple{type64: 0x24700000251, brand64: 0x24298000242a4, matchRI: 0x2883, match64: 0x00000000, modelSI: -0x0001, models64: 0x33bb000033bc},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x242b7000242bc, matchRI: 0x2884, match64: 0x00000000, modelSI: 0x33bc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x242bc000242c2, matchRI: 0x2885, match64: 0x00000000, modelSI: 0x33bd, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x242c2000242c7, matchRI: 0x2886, match64: 0x00000000, modelSI: -0x0001, models64: 0x33be000033c0},
			deviceTuple{type64: 0x24700000251, brand64: 0x242c7000242cb, matchRI: 0x2889, match64: 0x00000000, modelSI: -0x0001, models64: 0x33c000003439},
			deviceTuple{type64: 0x24300000245, brand64: 0x2468c00024693, matchRI: 0x28e9, match64: 0x00000000, modelSI: 0x3439, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x246930002469b, matchRI: 0x28ea, match64: 0x00000000, modelSI: -0x0001, models64: 0x343a00003442},
			deviceTuple{type64: 0x24700000251, brand64: 0x246d3000246d8, matchRI: 0x28f1, match64: 0x00000000, modelSI: -0x0001, models64: 0x344200003443},
			deviceTuple{type64: 0x24700000251, brand64: 0x246f0000246f4, matchRI: 0x28f2, match64: 0x00000000, modelSI: -0x0001, models64: 0x344300003446},
			deviceTuple{type64: 0x24700000251, brand64: 0x2470c00024712, matchRI: 0x28f5, match64: 0x00000000, modelSI: -0x0001, models64: 0x34460000344b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x247330002473a, matchRI: 0x28f9, match64: 0x00000000, modelSI: -0x0001, models64: 0x344b00003450},
			deviceTuple{type64: 0x24700000251, brand64: 0x247440002474b, matchRI: 0x28ff, match64: 0x00000000, modelSI: -0x0001, models64: 0x345000003451},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2474b00024753, matchRI: -0x0001, match64: 0x2475300024757, modelSI: 0x3451, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x247570002475e, matchRI: 0x2901, match64: 0x00000000, modelSI: 0x3452, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2475e00024766, matchRI: 0x2902, match64: 0x00000000, modelSI: 0x3453, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x247660002476c, matchRI: 0x2903, match64: 0x00000000, modelSI: -0x0001, models64: 0x34540000345a},
			deviceTuple{type64: 0x24700000251, brand64: 0x247a4000247ac, matchRI: 0x290a, match64: 0x00000000, modelSI: 0x345a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x247b3000247b8, matchRI: 0x290b, match64: 0x00000000, modelSI: -0x0001, models64: 0x345b00003461},
			deviceTuple{type64: 0x38400000391, brand64: 0x2480400024808, matchRI: 0x290c, match64: 0x00000000, modelSI: 0x3461, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x248080002480b, matchRI: 0x290d, match64: 0x00000000, modelSI: -0x0001, models64: 0x346200003464},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2483b00024843, matchRI: 0x290e, match64: 0x00000000, modelSI: 0x3464, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2485100024857, matchRI: 0x290f, match64: 0x00000000, modelSI: -0x0001, models64: 0x34650000346a},
			deviceTuple{type64: 0x24700000251, brand64: 0x2486d00024872, matchRI: 0x2915, match64: 0x00000000, modelSI: 0x346a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x248790002487d, matchRI: 0x2916, match64: 0x00000000, modelSI: 0x346b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2487d00024885, matchRI: 0x2917, match64: 0x00000000, modelSI: -0x0001, models64: 0x346c0000346f},
			deviceTuple{type64: 0x24700000251, brand64: 0x248a2000248a8, matchRI: 0x2919, match64: 0x00000000, modelSI: -0x0001, models64: 0x346f00003481},
			deviceTuple{type64: 0x24700000251, brand64: 0x249880002498e, matchRI: 0x2926, match64: 0x00000000, modelSI: -0x0001, models64: 0x348100003489},
			deviceTuple{type64: 0x24300000245, brand64: 0x24a3200024a35, matchRI: -0x0001, match64: 0x24a3500024a3d, modelSI: 0x3489, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x24a4300024a46, matchRI: 0x2929, match64: 0x00000000, modelSI: -0x0001, models64: 0x348a00003491},
			deviceTuple{type64: 0x24300000245, brand64: 0x24aba00024abe, matchRI: 0x292c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24abe00024ac2, matchRI: 0x292d, match64: 0x00000000, modelSI: -0x0001, models64: 0x349100003493},
			deviceTuple{type64: 0x24700000251, brand64: 0x24ac800024ad1, matchRI: 0x2930, match64: 0x00000000, modelSI: 0x3493, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x24ad100024ad5, matchRI: 0x2931, match64: 0x00000000, modelSI: -0x0001, models64: 0x349400003495},
			deviceTuple{type64: 0x7130000071d, brand64: 0x24ad500024ada, matchRI: 0x2933, match64: 0x00000000, modelSI: -0x0001, models64: 0x349500003497},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x24af200024af7, matchRI: 0x2934, match64: 0x00000000, modelSI: 0x3497, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24b0800024b0d, matchRI: 0x2935, match64: 0x00000000, modelSI: -0x0001, models64: 0x349800003499},
			deviceTuple{type64: 0x8e00000099, brand64: 0x24b1a00024b21, matchRI: 0x2936, match64: 0x00000000, modelSI: 0x3499, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24b2100024b26, matchRI: 0x2937, match64: 0x00000000, modelSI: 0x349a, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x24b2600024b2e, matchRI: 0x2938, match64: 0x00000000, modelSI: 0x349b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24b2e00024b33, matchRI: 0x2939, match64: 0x00000000, modelSI: -0x0001, models64: 0x349c000034a1},
			deviceTuple{type64: 0x5e8000005f5, brand64: 0x24b4a00024b50, matchRI: 0x293d, match64: 0x00000000, modelSI: 0x34a1, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x24b5000024b5a, matchRI: 0x293e, match64: 0x00000000, modelSI: -0x0001, models64: 0x34a2000034ab},
			deviceTuple{type64: 0x24700000251, brand64: 0x24bab00024bb1, matchRI: 0x2948, match64: 0x00000000, modelSI: -0x0001, models64: 0x34ab000035fc},
			deviceTuple{type64: 0x24700000251, brand64: 0x25bdd00025be1, matchRI: 0x2a77, match64: 0x00000000, modelSI: -0x0001, models64: 0x35fc000035fd},
			deviceTuple{type64: 0x24700000251, brand64: 0x25be500025be9, matchRI: 0x2a79, match64: 0x00000000, modelSI: -0x0001, models64: 0x35fd00003607},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25c2000025c24, matchRI: 0x2a84, match64: 0x00000000, modelSI: -0x0001, models64: 0x36070000360c},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c5a00025c61, matchRI: 0x2a8a, match64: 0x00000000, modelSI: 0x360c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c6100025c67, matchRI: 0x2a8b, match64: 0x00000000, modelSI: -0x0001, models64: 0x360d0000360f},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c7300025c79, matchRI: 0x2a8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x360f00003613},
			deviceTuple{type64: 0x24700000251, brand64: 0x25c9400025c9c, matchRI: 0x2a91, match64: 0x00000000, modelSI: -0x0001, models64: 0x361300003617},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25ccd00025cd2, matchRI: 0x2a93, match64: 0x00000000, modelSI: 0x3617, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x25cd900025cde, matchRI: -0x0001, match64: 0x25cde00025ce4, modelSI: -0x0001, models64: 0x36180000361b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25cf200025cfb, matchRI: 0x2a97, match64: 0x00000000, modelSI: 0x361b, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x25cfb00025d00, matchRI: 0x2a98, match64: 0x00000000, modelSI: -0x0001, models64: 0x361c0000361d},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25d1400025d1a, matchRI: 0x2a99, match64: 0x00000000, modelSI: -0x0001, models64: 0x361d0000361f},
			deviceTuple{type64: 0x24700000251, brand64: 0x25d1a00025d20, matchRI: 0x2a9c, match64: 0x00000000, modelSI: 0x361f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x25d2000025d24, matchRI: 0x2a9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x362000003627},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25d8800025d8e, matchRI: 0x2aa0, match64: 0x00000000, modelSI: 0x3627, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x25d8e00025d94, matchRI: 0x2aa1, match64: 0x00000000, modelSI: 0x3628, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x25d9400025d9a, matchRI: 0x2aa2, match64: 0x00000000, modelSI: -0x0001, models64: 0x36290000362e},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x25dee00025df4, matchRI: 0x2aa6, match64: 0x00000000, modelSI: -0x0001, models64: 0x362e0000363e},
			deviceTuple{type64: 0x24700000251, brand64: 0x25eff00025f02, matchRI: 0x2aaa, match64: 0x00000000, modelSI: -0x0001, models64: 0x363e00003642},
			deviceTuple{type64: 0x24700000251, brand64: 0x25f3100025f37, matchRI: 0x2aac, match64: 0x00000000, modelSI: -0x0001, models64: 0x364200003644},
			deviceTuple{type64: 0x24700000251, brand64: 0x25f3700025f3b, matchRI: 0x2aaf, match64: 0x00000000, modelSI: -0x0001, models64: 0x364400003656},
			deviceTuple{type64: 0x24300000245, brand64: 0x25fff00026006, matchRI: 0x2ab7, match64: 0x00000000, modelSI: 0x3656, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2600d00026011, matchRI: 0x2ab8, match64: 0x00000000, modelSI: 0x3657, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2601100026015, matchRI: 0x2ab9, match64: 0x00000000, modelSI: -0x0001, models64: 0x36580000365a},
			deviceTuple{type64: 0x24300000245, brand64: 0x2602100026026, matchRI: 0x2abc, match64: 0x00000000, modelSI: -0x0001, models64: 0x365a0000365b},
			deviceTuple{type64: 0x24300000245, brand64: 0x2602d00026033, matchRI: 0x2abe, match64: 0x00000000, modelSI: -0x0001, models64: 0x365b0000365c},
			deviceTuple{type64: 0x24700000251, brand64: 0x2603a0002603f, matchRI: 0x2ac0, match64: 0x00000000, modelSI: -0x0001, models64: 0x365c0000365e},
			deviceTuple{type64: 0x24700000251, brand64: 0x2603f00026041, matchRI: 0x2ac3, match64: 0x00000000, modelSI: -0x0001, models64: 0x365e00003668},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2608b00026092, matchRI: 0x2acd, match64: 0x00000000, modelSI: -0x0001, models64: 0x366800003669},
			deviceTuple{type64: 0x24700000251, brand64: 0x2609200026099, matchRI: 0x2acf, match64: 0x00000000, modelSI: -0x0001, models64: 0x36690000366a},
			deviceTuple{type64: 0x24300000245, brand64: 0x260a1000260a5, matchRI: 0x2ad1, match64: 0x00000000, modelSI: -0x0001, models64: 0x366a0000366b},
			deviceTuple{type64: 0x24700000251, brand64: 0x260ab000260b0, matchRI: 0x2ad3, match64: 0x00000000, modelSI: -0x0001, models64: 0x366b0000366e},
			deviceTuple{type64: 0x24700000251, brand64: 0x260b5000260ba, matchRI: 0x2ad6, match64: 0x00000000, modelSI: 0x366e, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x260ba000260bf, matchRI: 0x2ad7, match64: 0x00000000, modelSI: 0x366f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x260bf000260c3, matchRI: 0x2ad8, match64: 0x00000000, modelSI: -0x0001, models64: 0x367000003688},
			deviceTuple{type64: 0x24300000245, brand64: 0x262180002621f, matchRI: 0x2aee, match64: 0x00000000, modelSI: 0x3688, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2621f00026224, matchRI: 0x2aef, match64: 0x00000000, modelSI: -0x0001, models64: 0x36890000368a},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2622400026227, matchRI: 0x2af1, match64: 0x00000000, modelSI: 0x368a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x262270002622a, matchRI: 0x2af2, match64: 0x00000000, modelSI: -0x0001, models64: 0x368b000037b2},
			deviceTuple{type64: 0x24700000251, brand64: 0x26f4b00026f4e, matchRI: 0x2bbc, match64: 0x00000000, modelSI: -0x0001, models64: 0x37b2000037d3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x270790002707c, matchRI: 0x2bce, match64: 0x00000000, modelSI: 0x37d3, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2707c00027081, matchRI: 0x2bcf, match64: 0x00000000, modelSI: 0x37d4, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2708100027088, matchRI: 0x2bd0, match64: 0x00000000, modelSI: 0x37d5, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x270880002708d, matchRI: 0x2bd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x37d6000037dc},
			deviceTuple{type64: 0x24300000245, brand64: 0x270e0000270e6, matchRI: 0x2bd4, match64: 0x00000000, modelSI: 0x37dc, models64: 0x00000000},
			deviceTuple{type64: 0x29be000029c6, brand64: 0x270e6000270ed, matchRI: 0x2bd5, match64: 0x00000000, modelSI: -0x0001, models64: 0x37dd000037df},
			deviceTuple{type64: 0x24700000251, brand64: 0x2710400027109, matchRI: 0x2bd7, match64: 0x00000000, modelSI: -0x0001, models64: 0x37df000037e3},
			deviceTuple{type64: 0x24700000251, brand64: 0x271090002710f, matchRI: -0x0001, match64: 0x2710f00027115, modelSI: -0x0001, models64: 0x37e3000037e4},
			deviceTuple{type64: 0x24700000251, brand64: 0x271150002711a, matchRI: 0x2bdd, match64: 0x00000000, modelSI: -0x0001, models64: 0x37e4000037e6},
			deviceTuple{type64: 0x24700000251, brand64: 0x2711a0002711d, matchRI: 0x2be0, match64: 0x00000000, modelSI: -0x0001, models64: 0x37e6000037f5},
			deviceTuple{type64: 0x24700000251, brand64: 0x271d1000271d6, matchRI: 0x2bef, match64: 0x00000000, modelSI: -0x0001, models64: 0x37f5000037fa},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2720b00027214, matchRI: 0x2bf0, match64: 0x00000000, modelSI: -0x0001, models64: 0x37fa000037fb},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2721e00027224, matchRI: 0x2bf2, match64: 0x00000000, modelSI: 0x37fb, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x272280002722d, matchRI: 0x2bf3, match64: 0x00000000, modelSI: 0x37fc, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2722d00027231, matchRI: 0x2bf4, match64: 0x00000000, modelSI: -0x0001, models64: 0x37fd000037fe},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2723e00027243, matchRI: 0x2bf5, match64: 0x00000000, modelSI: -0x0001, models64: 0x37fe00003800},
			deviceTuple{type64: 0x24700000251, brand64: 0x2727c00027280, matchRI: 0x2bf6, match64: 0x00000000, modelSI: -0x0001, models64: 0x380000003806},
			deviceTuple{type64: 0x38400000391, brand64: 0x272b4000272b9, matchRI: 0x2bfc, match64: 0x00000000, modelSI: -0x0001, models64: 0x380600003808},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x272c3000272c8, matchRI: 0x2bfe, match64: 0x00000000, modelSI: -0x0001, models64: 0x380800003809},
			deviceTuple{type64: 0x24700000251, brand64: 0x1438500014389, matchRI: 0x2c00, match64: 0x00000000, modelSI: 0x3809, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x272c8000272d1, matchRI: 0x2c01, match64: 0x00000000, modelSI: 0x380a, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x272d1000272d5, matchRI: 0x2c02, match64: 0x00000000, modelSI: -0x0001, models64: 0x380b00003825},
			deviceTuple{type64: 0x24700000251, brand64: 0x273890002738d, matchRI: 0x2c1d, match64: 0x00000000, modelSI: -0x0001, models64: 0x382500003847},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x275460002754a, matchRI: 0x2c29, match64: 0x00000000, modelSI: -0x0001, models64: 0x38470000384c},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2755200027557, matchRI: -0x0001, match64: 0x275570002755c, modelSI: 0x384c, models64: 0x00000000},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2755c00027566, matchRI: -0x0001, match64: 0x2756600027570, modelSI: -0x0001, models64: 0x384d0000384e},
			deviceTuple{type64: 0x24300000245, brand64: 0x2757000027577, matchRI: 0x2c30, match64: 0x00000000, modelSI: 0x384e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2758000027588, matchRI: 0x2c31, match64: 0x00000000, modelSI: 0x384f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x275880002758e, matchRI: 0x2c32, match64: 0x00000000, modelSI: -0x0001, models64: 0x385000003853},
			deviceTuple{type64: 0x24300000245, brand64: 0x2759f000275a9, matchRI: 0x2c34, match64: 0x00000000, modelSI: 0x3853, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x275a9000275ac, matchRI: 0x2c35, match64: 0x00000000, modelSI: 0x3854, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x275b5000275b9, matchRI: 0x2c36, match64: 0x00000000, modelSI: -0x0001, models64: 0x38550000385a},
			deviceTuple{type64: 0x24700000251, brand64: 0x2761600027618, matchRI: 0x2c38, match64: 0x00000000, modelSI: -0x0001, models64: 0x385a00003926},
			deviceTuple{type64: 0x24700000251, brand64: 0x27bb200027bb7, matchRI: 0x2ced, match64: 0x00000000, modelSI: -0x0001, models64: 0x392600003928},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27bd200027bd7, matchRI: 0x2cef, match64: 0x00000000, modelSI: -0x0001, models64: 0x392800003934},
			deviceTuple{type64: 0x24700000251, brand64: 0x27ce700027ced, matchRI: 0x2cf5, match64: 0x00000000, modelSI: 0x3934, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27ced00027cf1, matchRI: 0x2cf6, match64: 0x00000000, modelSI: 0x3935, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cf100027cf7, matchRI: 0x2cf7, match64: 0x00000000, modelSI: -0x0001, models64: 0x393600003937},
			deviceTuple{type64: 0x24300000245, brand64: 0x27cf700027cfb, matchRI: 0x2cf9, match64: 0x00000000, modelSI: -0x0001, models64: 0x393700003939},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27d2700027d2b, matchRI: 0x2cfa, match64: 0x00000000, modelSI: 0x3939, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27d2b00027d33, matchRI: 0x2cfb, match64: 0x00000000, modelSI: -0x0001, models64: 0x393a0000393c},
			deviceTuple{type64: 0x24700000251, brand64: 0x27d4b00027d50, matchRI: 0x2cfd, match64: 0x00000000, modelSI: -0x0001, models64: 0x393c00003945},
			deviceTuple{type64: 0x38400000391, brand64: 0x27d9100027d97, matchRI: 0x2d07, match64: 0x00000000, modelSI: 0x3945, models64: 0x00000000},
			deviceTuple{type64: 0x38400000391, brand64: 0x27d9700027d9f, matchRI: 0x2d08, match64: 0x00000000, modelSI: -0x0001, models64: 0x394600003950},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27de600027deb, matchRI: 0x2d11, match64: 0x00000000, modelSI: -0x0001, models64: 0x39500000395f},
			deviceTuple{type64: 0x24700000251, brand64: 0x27ea200027ea8, matchRI: 0x2d1c, match64: 0x00000000, modelSI: -0x0001, models64: 0x395f00003961},
			deviceTuple{type64: 0x24700000251, brand64: 0x27ea800027ead, matchRI: 0x2d1f, match64: 0x00000000, modelSI: -0x0001, models64: 0x39610000396b},
			deviceTuple{type64: 0x7130000071d, brand64: 0x27efb00027f00, matchRI: 0x2d27, match64: 0x00000000, modelSI: 0x396b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27f0000027f05, matchRI: 0x2d28, match64: 0x00000000, modelSI: 0x396c, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27f0f00027f15, matchRI: 0x2d29, match64: 0x00000000, modelSI: -0x0001, models64: 0x396d00003970},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27f3600027f3a, matchRI: 0x2d2b, match64: 0x00000000, modelSI: 0x3970, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x27f3a00027f3e, matchRI: 0x2d2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x397100003973},
			deviceTuple{type64: 0x24300000245, brand64: 0x27f4800027f52, matchRI: 0x2d2f, match64: 0x00000000, modelSI: 0x3973, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x27f5900027f5e, matchRI: 0x2d30, match64: 0x00000000, modelSI: -0x0001, models64: 0x39740000399b},
			deviceTuple{type64: 0x38400000391, brand64: 0x282d8000282dd, matchRI: 0x2d3c, match64: 0x00000000, modelSI: 0x399b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x282dd000282e1, matchRI: 0x2d3d, match64: 0x00000000, modelSI: 0x399c, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x282e1000282e7, matchRI: 0x2d3e, match64: 0x00000000, modelSI: 0x399d, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x282f2000282f5, matchRI: 0x2d3f, match64: 0x00000000, modelSI: -0x0001, models64: 0x399e000039a0},
			deviceTuple{type64: 0x24300000245, brand64: 0x282f5000282fa, matchRI: 0x2d42, match64: 0x00000000, modelSI: 0x39a0, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x282fa000282ff, matchRI: 0x2d43, match64: 0x00000000, modelSI: -0x0001, models64: 0x39a1000039a7},
			deviceTuple{type64: 0x24700000251, brand64: 0x2833600028339, matchRI: 0x2d48, match64: 0x00000000, modelSI: -0x0001, models64: 0x39a7000039ab},
			deviceTuple{type64: 0x24700000251, brand64: 0x283670002836b, matchRI: 0x2d4b, match64: 0x00000000, modelSI: 0x39ab, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2836b00028370, matchRI: 0x2d4c, match64: 0x00000000, modelSI: -0x0001, models64: 0x39ac000039af},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x283a8000283ac, matchRI: 0x2d4d, match64: 0x00000000, modelSI: -0x0001, models64: 0x39af000039b1},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x283b4000283b9, matchRI: 0x2d50, match64: 0x00000000, modelSI: 0x39b1, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x283b9000283be, matchRI: 0x2d51, match64: 0x00000000, modelSI: -0x0001, models64: 0x39b2000039b3},
			deviceTuple{type64: 0x24700000251, brand64: 0x283ce000283d2, matchRI: 0x2d52, match64: 0x00000000, modelSI: -0x0001, models64: 0x39b3000039b9},
			deviceTuple{type64: 0x24700000251, brand64: 0x283ed000283f7, matchRI: 0x2d59, match64: 0x00000000, modelSI: -0x0001, models64: 0x39b9000039bc},
			deviceTuple{type64: 0x24700000251, brand64: 0x284150002841b, matchRI: 0x2d5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x39bc000039c3},
			deviceTuple{type64: 0x24700000251, brand64: 0x2844d00028455, matchRI: 0x2d5f, match64: 0x00000000, modelSI: 0x39c3, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x284550002845c, matchRI: -0x0001, match64: 0x2845c00028463, modelSI: -0x0001, models64: 0x39c4000039c5},
			deviceTuple{type64: 0x24700000251, brand64: 0x2846300028467, matchRI: 0x2d61, match64: 0x00000000, modelSI: -0x0001, models64: 0x39c5000039dc},
			deviceTuple{type64: 0x24700000251, brand64: 0x285980002859c, matchRI: 0x2d68, match64: 0x00000000, modelSI: -0x0001, models64: 0x39dc000039de},
			deviceTuple{type64: 0x24700000251, brand64: 0x2859c000285a4, matchRI: 0x2d6b, match64: 0x00000000, modelSI: 0x39de, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x285ac000285b2, matchRI: 0x2d6c, match64: 0x00000000, modelSI: 0x39df, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x285b2000285b7, matchRI: 0x2d6d, match64: 0x00000000, modelSI: -0x0001, models64: 0x39e0000039e3},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x285c0000285c5, matchRI: 0x2d71, match64: 0x00000000, modelSI: -0x0001, models64: 0x39e3000039e5},
			deviceTuple{type64: 0x24700000251, brand64: 0x285c5000285ca, matchRI: 0x2d74, match64: 0x00000000, modelSI: -0x0001, models64: 0x39e5000039ed},
			deviceTuple{type64: 0x24700000251, brand64: 0x285e4000285f0, matchRI: 0x2d7d, match64: 0x00000000, modelSI: -0x0001, models64: 0x39ed000039ef},
			deviceTuple{type64: 0x24700000251, brand64: 0x285f5000285fa, matchRI: 0x2d80, match64: 0x00000000, modelSI: 0x39ef, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x285fa000285fe, matchRI: 0x2d81, match64: 0x00000000, modelSI: -0x0001, models64: 0x39f000003a54},
			deviceTuple{type64: 0x24700000251, brand64: 0x2895200028958, matchRI: 0x2d98, match64: 0x00000000, modelSI: 0x3a54, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x2895f00028962, matchRI: 0x2d99, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a5500003a57},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x2896a0002896f, matchRI: 0x2d9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a5700003a59},
			deviceTuple{type64: 0x24700000251, brand64: 0x289850002898b, matchRI: 0x2d9e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a5900003a5f},
			deviceTuple{type64: 0x24700000251, brand64: 0x289bf000289c7, matchRI: 0x2da2, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a5f00003a60},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x289c7000289cd, matchRI: 0x2da4, match64: 0x00000000, modelSI: 0x3a60, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x289cd000289d1, matchRI: 0x2da5, match64: 0x00000000, modelSI: 0x3a61, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x289d1000289d8, matchRI: 0x2da6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a6200003a64},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x289f1000289f7, matchRI: 0x2da9, match64: 0x00000000, modelSI: 0x3a64, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x289f7000289fc, matchRI: 0x2daa, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a6500003a66},
			deviceTuple{type64: 0x24700000251, brand64: 0x28a0a00028a0e, matchRI: 0x2dac, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a6600003a69},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28a2b00028a31, matchRI: -0x0001, match64: 0x28a3100028a37, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x28a3700028a3d, matchRI: 0x2daf, match64: 0x00000000, modelSI: 0x3a69, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x28a3d00028a43, matchRI: 0x2db0, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a6a00003a6e},
			deviceTuple{type64: 0x24700000251, brand64: 0x28a5700028a5b, matchRI: 0x2db4, match64: 0x00000000, modelSI: 0x3a6e, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x28a5b00028a63, matchRI: 0x2db5, match64: 0x00000000, modelSI: 0x3a6f, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x28a6300028a6f, matchRI: 0x2db6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a7000003a8b},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28c0300028c07, matchRI: 0x2dc7, match64: 0x00000000, modelSI: 0x3a8b, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28c0700028c0e, matchRI: 0x2dc8, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a8c00003a90},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28c1d00028c26, matchRI: 0x2dcd, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a9000003a91},
			deviceTuple{type64: 0x24300000245, brand64: 0x28c2600028c29, matchRI: 0x2dcf, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a9100003a93},
			deviceTuple{type64: 0x24700000251, brand64: 0x28c4600028c4e, matchRI: 0x2dd0, match64: 0x00000000, modelSI: 0x3a93, models64: 0x00000000},
			deviceTuple{type64: 0x24700000251, brand64: 0x28c4e00028c55, matchRI: 0x2dd1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a9400003a95},
			deviceTuple{type64: 0x24300000245, brand64: 0x28c7200028c78, matchRI: 0x2dd2, match64: 0x00000000, modelSI: 0x3a95, models64: 0x00000000},
			deviceTuple{type64: 0x2a9000002af, brand64: 0x28c7800028c7d, matchRI: 0x2dd3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3a9600003ac9},
			deviceTuple{type64: 0x24700000251, brand64: 0x28fce00028fd6, matchRI: 0x2de7, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ac900003acb},
			deviceTuple{type64: 0x24700000251, brand64: 0x28fdc00028fe0, matchRI: 0x2dea, match64: 0x00000000, modelSI: -0x0001, models64: 0x3acb00003ad4},
		},
		// notebooks.yml
		{
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x90400000908, matchRI: 0x2df1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ad400003ad7},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x2903f00029048, matchRI: 0x2df5, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ad700003adb},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x3e4e00003e52, matchRI: 0x2dfa, match64: 0x00000000, modelSI: -0x0001, models64: 0x3adb00003ae4},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x78380000783c, matchRI: 0x2e04, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ae400003ae8},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0xae470000ae49, matchRI: 0x2e05, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ae800003af3},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x1188100011887, matchRI: 0x2e08, match64: 0x00000000, modelSI: -0x0001, models64: 0x3af300003af7},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x1df950001df9e, matchRI: 0x2e0d, match64: 0x00000000, modelSI: 0x3af7, models64: 0x00000000},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x2109d000210a4, matchRI: 0x2e0e, match64: 0x00000000, modelSI: 0x3af8, models64: 0x00000000},
			deviceTuple{type64: 0xbd500000bdc, brand64: 0x213d9000213e0, matchRI: -0x0001, match64: 0x292f100029300, modelSI: -0x0001, models64: 0x3af900003afb},
		},
		// portable_media_player.yml
		{
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x29a3000029a8, matchRI: 0x2e11, match64: 0x00000000, modelSI: -0x0001, models64: 0x3afb00003b03},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2936000029365, matchRI: 0x2e1a, match64: 0x00000000, modelSI: 0x3b03, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x293650002936b, matchRI: 0x2e1b, match64: 0x00000000, modelSI: 0x3b04, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2936b0002936f, matchRI: -0x0001, match64: 0x2936b0002936f, modelSI: -0x0001, models64: 0x3b0500003b07},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2937b00029380, matchRI: 0x2e1d, match64: 0x00000000, modelSI: 0x3b07, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2938000029386, matchRI: -0x0001, match64: 0x2938000029386, modelSI: -0x0001, models64: 0x3b0800003b0a},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x12f00000138, matchRI: -0x0001, match64: 0x2938600029396, modelSI: 0x3b0a, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2939d000293a3, matchRI: 0x2e20, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b0b00003b0d},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x1851e00018527, matchRI: 0x2e22, match64: 0x00000000, modelSI: 0x3b0d, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x180000001f, matchRI: 0x2e23, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b0e00003b15},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x294530002945b, matchRI: -0x0001, match64: 0x2945b00029466, modelSI: -0x0001, models64: 0x3b1500003b16},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x294660002946d, matchRI: 0x2e26, match64: 0x00000000, modelSI: 0x3b16, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2946d00029475, matchRI: 0x2e27, match64: 0x00000000, modelSI: 0x3b17, models64: 0x00000000},
			deviceTuple{type64: 0xb6060000b61b, brand64: 0x2947500029479, matchRI: 0x2e28, match64: 0x00000000, modelSI: 0x3b18, models64: 0x00000000},
		},
		// shell_tv.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x294790002947e, matchRI: -0x0001, match64: 0x2947e00029489, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x52d00000531, matchRI: -0x0001, match64: 0x2948900029493, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x47fa000047fd, matchRI: -0x0001, match64: 0x294930002949c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x73eb000073ef, matchRI: -0x0001, match64: 0x2949c000294a6, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x79590000795e, matchRI: -0x0001, match64: 0x294a6000294b1, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x82f6000082fa, matchRI: -0x0001, match64: 0x294b1000294bb, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x8a5f00008a66, matchRI: 0x2e29, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xb5600000b562, matchRI: -0x0001, match64: 0x294bb000294c3, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xf1f80000f1fb, matchRI: -0x0001, match64: 0x294c3000294cc, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x294cc000294d1, matchRI: -0x0001, match64: 0x294d1000294dc, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x294dc000294e1, matchRI: -0x0001, match64: 0x294e1000294ec, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1183a0001183e, matchRI: -0x0001, match64: 0x294ec000294f6, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x294f6000294fc, matchRI: -0x0001, match64: 0x294fc00029508, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x126fb00012700, matchRI: -0x0001, match64: 0x2950800029513, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1552200015529, matchRI: -0x0001, match64: 0x2951300029520, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x164190001641e, matchRI: -0x0001, match64: 0x295200002952b, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x19d4200019d4d, matchRI: -0x0001, match64: 0x2952b00029533, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fa9f0001faa7, matchRI: -0x0001, match64: 0x2953300029541, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fe1a0001fe1f, matchRI: -0x0001, match64: 0x295410002954c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x200b3000200b6, matchRI: -0x0001, match64: 0x2954c00029554, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x20ecd00020ed7, matchRI: -0x0001, match64: 0x2955400029564, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2109d000210a4, matchRI: -0x0001, match64: 0x295640002956d, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x260a1000260a5, matchRI: -0x0001, match64: 0x2956d00029577, modelSI: -0x0001, models64: 0x00000000},
		},
		// televisions.yml
		{
			deviceTuple{type64: 0x24300000245, brand64: 0x50800000511, matchRI: 0x2e2a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b1900003b1a},
			deviceTuple{type64: 0x24300000245, brand64: 0x5110000051a, matchRI: 0x2e2c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b1a00003b1c},
			deviceTuple{type64: 0x24300000245, brand64: 0x5d9000005dc, matchRI: -0x0001, match64: 0x5d9000005dc, modelSI: -0x0001, models64: 0x3b1c00003b1e},
			deviceTuple{type64: 0x24300000245, brand64: 0x5fd00000602, matchRI: 0x2e31, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b1e00003b1f},
			deviceTuple{type64: 0x24300000245, brand64: 0x79100000795, matchRI: -0x0001, match64: 0x2958100029591, modelSI: -0x0001, models64: 0x3b1f00003b20},
			deviceTuple{type64: 0x24300000245, brand64: 0x79500000799, matchRI: -0x0001, match64: 0x29591000295a0, modelSI: -0x0001, models64: 0x3b2000003b21},
			deviceTuple{type64: 0x24300000245, brand64: 0x295a0000295a3, matchRI: 0x2e34, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2100003b22},
			deviceTuple{type64: 0x24300000245, brand64: 0x295a3000295aa, matchRI: -0x0001, match64: 0x295a3000295aa, modelSI: -0x0001, models64: 0x3b2200003b23},
			deviceTuple{type64: 0x24300000245, brand64: 0xf3800000f3c, matchRI: -0x0001, match64: 0x295aa000295b5, modelSI: -0x0001, models64: 0x3b2300003b24},
			deviceTuple{type64: 0x24300000245, brand64: 0x295b5000295bf, matchRI: -0x0001, match64: 0x295b5000295bf, modelSI: -0x0001, models64: 0x3b2400003b25},
			deviceTuple{type64: 0x24300000245, brand64: 0x295bf000295c5, matchRI: 0x2e39, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x245d00002462, matchRI: 0x2e3a, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x246200002468, matchRI: 0x2e3b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2500003b26},
			deviceTuple{type64: 0x24300000245, brand64: 0x3d7400003d7c, matchRI: -0x0001, match64: 0x3d7c00003d83, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x295c5000295d7, matchRI: 0x2e3d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2600003b27},
			deviceTuple{type64: 0x24300000245, brand64: 0x456100004566, matchRI: -0x0001, match64: 0x295d7000295dc, modelSI: -0x0001, models64: 0x3b2700003b28},
			deviceTuple{type64: 0x24300000245, brand64: 0x295e3000295ee, matchRI: -0x0001, match64: 0x295ee000295f9, modelSI: 0x3b28, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x49d5000049d9, matchRI: 0x2e3f, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x4d9c00004da5, matchRI: 0x2e40, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2900003b2a},
			deviceTuple{type64: 0x24300000245, brand64: 0x560f00005615, matchRI: 0x2e41, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2a00003b2b},
			deviceTuple{type64: 0x24300000245, brand64: 0x595200005956, matchRI: 0x2e43, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2b00003b2c},
			deviceTuple{type64: 0x24300000245, brand64: 0x2960f00029616, matchRI: 0x2e45, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2c00003b2d},
			deviceTuple{type64: 0x24300000245, brand64: 0x296160002961d, matchRI: 0x2e47, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2d00003b2e},
			deviceTuple{type64: 0x24300000245, brand64: 0x5fea00005ff0, matchRI: 0x2e49, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x60f0000060f9, matchRI: -0x0001, match64: 0x60f0000060f9, modelSI: -0x0001, models64: 0x3b2e00003b2f},
			deviceTuple{type64: 0x24300000245, brand64: 0x2961d0002962f, matchRI: 0x2e4b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b2f00003b30},
			deviceTuple{type64: 0x24300000245, brand64: 0x2962f00029636, matchRI: -0x0001, match64: 0x2962f00029636, modelSI: 0x3b30, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x728300007288, matchRI: 0x2e4d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3100003b32},
			deviceTuple{type64: 0x24300000245, brand64: 0x2963c00029646, matchRI: 0x2e4f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3200003b33},
			deviceTuple{type64: 0x24300000245, brand64: 0x753200007539, matchRI: -0x0001, match64: 0x296460002965f, modelSI: -0x0001, models64: 0x3b3300003b34},
			deviceTuple{type64: 0x24300000245, brand64: 0x2965f00029664, matchRI: 0x2e52, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3400003b35},
			deviceTuple{type64: 0x24300000245, brand64: 0x2966400029669, matchRI: 0x2e54, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3500003b36},
			deviceTuple{type64: 0x24300000245, brand64: 0x296690002966c, matchRI: -0x0001, match64: 0x296690002966c, modelSI: 0x3b36, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x769300007699, matchRI: 0x2e56, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3700003b38},
			deviceTuple{type64: 0x24300000245, brand64: 0x78f4000078fc, matchRI: 0x2e58, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3800003b39},
			deviceTuple{type64: 0x24300000245, brand64: 0x827100008275, matchRI: -0x0001, match64: 0x2967400029682, modelSI: -0x0001, models64: 0x3b3900003b3a},
			deviceTuple{type64: 0x24300000245, brand64: 0x2969e000296aa, matchRI: 0x2e5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3a00003b3b},
			deviceTuple{type64: 0x24300000245, brand64: 0x832d00008330, matchRI: 0x2e5c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3b00003b3c},
			deviceTuple{type64: 0x24300000245, brand64: 0x296aa000296b4, matchRI: 0x2e5e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3c00003b3d},
			deviceTuple{type64: 0x24300000245, brand64: 0x296b4000296ba, matchRI: 0x2e60, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3d00003b3e},
			deviceTuple{type64: 0x24300000245, brand64: 0x84c4000084cc, matchRI: 0x2e62, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3e00003b3f},
			deviceTuple{type64: 0x24300000245, brand64: 0x296ba000296c5, matchRI: 0x2e64, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b3f00003b40},
			deviceTuple{type64: 0x24300000245, brand64: 0x8a7300008a7d, matchRI: 0x2e66, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4000003b41},
			deviceTuple{type64: 0x24300000245, brand64: 0x296c5000296d1, matchRI: 0x2e68, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4100003b42},
			deviceTuple{type64: 0x24300000245, brand64: 0x296d6000296d9, matchRI: 0x2e6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4200003b43},
			deviceTuple{type64: 0x24300000245, brand64: 0x296d9000296de, matchRI: 0x2e6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4300003b44},
			deviceTuple{type64: 0x24300000245, brand64: 0x296de000296e3, matchRI: 0x2e6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x296e3000296ea, matchRI: 0x2e6f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4400003b45},
			deviceTuple{type64: 0x24300000245, brand64: 0x933d00009343, matchRI: 0x2e71, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4500003b46},
			deviceTuple{type64: 0x24300000245, brand64: 0x56b00000570, matchRI: 0x2e73, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4600003b47},
			deviceTuple{type64: 0x24300000245, brand64: 0x9eae00009eb3, matchRI: 0x2e75, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x296ea000296f8, matchRI: 0x2e76, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4700003b48},
			deviceTuple{type64: 0x24300000245, brand64: 0x296f8000296fd, matchRI: 0x2e78, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4800003b49},
			deviceTuple{type64: 0x24300000245, brand64: 0xaba60000abac, matchRI: 0x2e7a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4900003b4a},
			deviceTuple{type64: 0x24300000245, brand64: 0xac560000ac5d, matchRI: 0x2e7c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4a00003b4c},
			deviceTuple{type64: 0x24300000245, brand64: 0x296ff00029707, matchRI: 0x2e7e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4c00003b4d},
			deviceTuple{type64: 0x24300000245, brand64: 0x297070002970c, matchRI: 0x2e80, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4d00003b4e},
			deviceTuple{type64: 0x7130000071d, brand64: 0x2970c00029712, matchRI: -0x0001, match64: 0x2970c00029712, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2971200029719, matchRI: 0x2e82, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4e00003b4f},
			deviceTuple{type64: 0x24300000245, brand64: 0xb27e0000b283, matchRI: 0x2e84, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b4f00003b50},
			deviceTuple{type64: 0x24300000245, brand64: 0x297230002972c, matchRI: 0x2e85, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b5000003b51},
			deviceTuple{type64: 0x24300000245, brand64: 0xb5f30000b5fb, matchRI: 0x2e87, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b5100003b52},
			deviceTuple{type64: 0x24300000245, brand64: 0xb8570000b85e, matchRI: 0x2e89, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b5200003b62},
			deviceTuple{type64: 0x24300000245, brand64: 0xba850000ba8c, matchRI: 0x2e8d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b6200003b64},
			deviceTuple{type64: 0x24300000245, brand64: 0x98a9000098b0, matchRI: 0x2e8f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b6400003b65},
			deviceTuple{type64: 0x24300000245, brand64: 0x297ae000297b3, matchRI: 0x2e91, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xde9d0000dea2, matchRI: 0x2e92, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b6500003b6c},
			deviceTuple{type64: 0x24300000245, brand64: 0xdf8d0000df94, matchRI: 0x2e95, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b6c00003b6d},
			deviceTuple{type64: 0x24300000245, brand64: 0x298080002980c, matchRI: -0x0001, match64: 0x298080002980c, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x2980c00029811, matchRI: -0x0001, match64: 0x2980c00029811, modelSI: -0x0001, models64: 0x3b6d00003b6e},
			deviceTuple{type64: 0x24300000245, brand64: 0x2981100029818, matchRI: -0x0001, match64: 0x2981100029818, modelSI: -0x0001, models64: 0x3b6e00003b70},
			deviceTuple{type64: 0x24300000245, brand64: 0xf1f80000f1fb, matchRI: 0x2e9a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b7000003b72},
			deviceTuple{type64: 0x24300000245, brand64: 0x298290002982d, matchRI: 0x2e9c, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0xf60c0000f612, matchRI: 0x2e9d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b7200003b73},
			deviceTuple{type64: 0x24300000245, brand64: 0x2983400029839, matchRI: 0x2e9e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b7300003b74},
			deviceTuple{type64: 0x24300000245, brand64: 0x298390002983e, matchRI: 0x2ea0, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b7400003b75},
			deviceTuple{type64: 0x24300000245, brand64: 0x102e5000102e7, matchRI: 0x2ea2, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b7500003b87},
			deviceTuple{type64: 0x24300000245, brand64: 0x2988a00029890, matchRI: 0x2eae, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8700003b88},
			deviceTuple{type64: 0x24300000245, brand64: 0x1185a0001185f, matchRI: 0x2eb0, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8800003b89},
			deviceTuple{type64: 0x24300000245, brand64: 0x123950001239d, matchRI: 0x2eb2, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8900003b8a},
			deviceTuple{type64: 0x24300000245, brand64: 0x2989000029896, matchRI: 0x2eb4, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8a00003b8b},
			deviceTuple{type64: 0x24300000245, brand64: 0x124060001240b, matchRI: 0x2eb6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8b00003b8e},
			deviceTuple{type64: 0x24300000245, brand64: 0x126c9000126ce, matchRI: 0x2eb8, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8e00003b8f},
			deviceTuple{type64: 0x24300000245, brand64: 0x127150001271a, matchRI: 0x2eba, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b8f00003b90},
			deviceTuple{type64: 0x24300000245, brand64: 0x29896000298a1, matchRI: 0x2ebc, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9000003b91},
			deviceTuple{type64: 0x24300000245, brand64: 0x12c2500012c2a, matchRI: 0x2ebe, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9100003b92},
			deviceTuple{type64: 0x24300000245, brand64: 0x12c2a00012c2d, matchRI: 0x2ec0, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9200003b93},
			deviceTuple{type64: 0x24300000245, brand64: 0x298b6000298bf, matchRI: -0x0001, match64: 0x298b6000298bf, modelSI: -0x0001, models64: 0x3b9300003b94},
			deviceTuple{type64: 0x24300000245, brand64: 0x1379d000137a3, matchRI: -0x0001, match64: 0x1379d000137a3, modelSI: -0x0001, models64: 0x3b9400003b96},
			deviceTuple{type64: 0x24300000245, brand64: 0x1398d00013991, matchRI: -0x0001, match64: 0x1398d00013991, modelSI: -0x0001, models64: 0x3b9600003b97},
			deviceTuple{type64: 0x24300000245, brand64: 0x1401200014017, matchRI: -0x0001, match64: 0x298bf000298c4, modelSI: -0x0001, models64: 0x3b9700003b98},
			deviceTuple{type64: 0x24300000245, brand64: 0x1403600014046, matchRI: 0x2ec5, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9800003b99},
			deviceTuple{type64: 0x24300000245, brand64: 0x1551d00015522, matchRI: 0x2ec7, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9900003b9a},
			deviceTuple{type64: 0x24300000245, brand64: 0x298cf000298d3, matchRI: 0x2ec9, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9a00003b9b},
			deviceTuple{type64: 0x24300000245, brand64: 0x1567400015679, matchRI: 0x2ecb, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9b00003b9c},
			deviceTuple{type64: 0x24300000245, brand64: 0x156790001567d, matchRI: 0x2ecd, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9c00003b9d},
			deviceTuple{type64: 0x24300000245, brand64: 0x298d3000298d9, matchRI: 0x2ecf, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9d00003b9e},
			deviceTuple{type64: 0x24300000245, brand64: 0x298d9000298e1, matchRI: 0x2ed1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9e00003b9f},
			deviceTuple{type64: 0x24300000245, brand64: 0x15ae400015ae9, matchRI: 0x2ed3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3b9f00003ba0},
			deviceTuple{type64: 0x24300000245, brand64: 0x142c7000142ca, matchRI: 0x2ed5, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x15ee200015ee7, matchRI: 0x2ed6, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba000003ba1},
			deviceTuple{type64: 0x24300000245, brand64: 0x1637b00016384, matchRI: 0x2ed8, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba100003ba2},
			deviceTuple{type64: 0x24300000245, brand64: 0x298e1000298e8, matchRI: 0x2eda, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba200003ba3},
			deviceTuple{type64: 0x24300000245, brand64: 0x168dd000168e1, matchRI: 0x2edc, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba300003ba4},
			deviceTuple{type64: 0x24300000245, brand64: 0x298e8000298ed, matchRI: 0x2ede, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba400003ba5},
			deviceTuple{type64: 0x24300000245, brand64: 0x1826d00018271, matchRI: -0x0001, match64: 0x1826d00018271, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x298ed000298f1, matchRI: 0x2ee0, match64: 0x00000000, modelSI: 0x3ba5, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1842a00018431, matchRI: 0x2ee1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba600003ba8},
			deviceTuple{type64: 0x24300000245, brand64: 0x298f1000298f9, matchRI: 0x2ee4, match64: 0x00000000, modelSI: -0x0001, models64: 0x3ba800003ba9},
			deviceTuple{type64: 0x24300000245, brand64: 0x1851e00018527, matchRI: -0x0001, match64: 0x1851e00018527, modelSI: -0x0001, models64: 0x3ba900003bb1},
			deviceTuple{type64: 0x24300000245, brand64: 0x187d4000187db, matchRI: 0x2eed, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb100003bb3},
			deviceTuple{type64: 0x24300000245, brand64: 0x18c1500018c1d, matchRI: 0x2ef0, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x19a9800019a9e, matchRI: 0x2ef1, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb300003bb4},
			deviceTuple{type64: 0x24300000245, brand64: 0x19d4200019d4d, matchRI: 0x2ef3, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb400003bb5},
			deviceTuple{type64: 0x24300000245, brand64: 0x19e5f00019e64, matchRI: 0x2ef5, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb500003bb6},
			deviceTuple{type64: 0x24300000245, brand64: 0x2991500029922, matchRI: 0x2ef7, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb600003bb7},
			deviceTuple{type64: 0x24300000245, brand64: 0x299220002992b, matchRI: 0x2ef9, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb700003bb8},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ac8e0001ac91, matchRI: 0x2efb, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb800003bb9},
			deviceTuple{type64: 0x24300000245, brand64: 0x2992b00029931, matchRI: 0x2efd, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bb900003bba},
			deviceTuple{type64: 0x24300000245, brand64: 0x299310002993b, matchRI: 0x2eff, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bba00003bbb},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b2fe0001b302, matchRI: 0x2f01, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bbb00003bbc},
			deviceTuple{type64: 0x24300000245, brand64: 0x1b3fb0001b401, matchRI: 0x2f03, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bbc00003bbd},
			deviceTuple{type64: 0x24300000245, brand64: 0x180000001f, matchRI: 0x2f05, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bbd00003bc0},
			deviceTuple{type64: 0x24300000245, brand64: 0x299540002995e, matchRI: -0x0001, match64: 0x299540002995e, modelSI: -0x0001, models64: 0x3bc000003bc2},
			deviceTuple{type64: 0x24300000245, brand64: 0x1e1f30001e1f8, matchRI: 0x2f0a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bc200003bcb},
			deviceTuple{type64: 0x24300000245, brand64: 0x299a9000299b8, matchRI: 0x2f10, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bcb00003bcc},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eb4f0001eb56, matchRI: -0x0001, match64: 0x299b8000299ca, modelSI: -0x0001, models64: 0x3bcc00003bcd},
			deviceTuple{type64: 0x24300000245, brand64: 0x1eb560001eb5e, matchRI: 0x2f13, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bcd00003bd0},
			deviceTuple{type64: 0x24300000245, brand64: 0x299d3000299e3, matchRI: 0x2f16, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bd000003bd2},
			deviceTuple{type64: 0x24300000245, brand64: 0x299e3000299e8, matchRI: 0x2f19, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1ee000001f2, matchRI: -0x0001, match64: 0x1ee000001f2, modelSI: -0x0001, models64: 0x3bd200003bd8},
			deviceTuple{type64: 0x24300000245, brand64: 0x299f900029a03, matchRI: 0x2f20, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x1fd6e0001fd73, matchRI: 0x2f21, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bd800003bdb},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a0300029a0a, matchRI: 0x2f25, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bdb00003bdc},
			deviceTuple{type64: 0x24300000245, brand64: 0x200b3000200b6, matchRI: 0x2f27, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bdc00003bdf},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a0a00029a12, matchRI: 0x2f2b, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bdf00003be2},
			deviceTuple{type64: 0x24300000245, brand64: 0x203dc000203e6, matchRI: 0x2f2d, match64: 0x00000000, modelSI: -0x0001, models64: 0x3be200003be3},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a2000029a25, matchRI: 0x2f2f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3be300003be4},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a3000029a36, matchRI: 0x2f30, match64: 0x00000000, modelSI: -0x0001, models64: 0x3be400003be5},
			deviceTuple{type64: 0x24300000245, brand64: 0x205e5000205ee, matchRI: -0x0001, match64: 0x205e5000205ee, modelSI: -0x0001, models64: 0x3be500003be7},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a3600029a41, matchRI: -0x0001, match64: 0x29a3600029a41, modelSI: -0x0001, models64: 0x3be700003be8},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a5500029a5d, matchRI: 0x2f34, match64: 0x00000000, modelSI: -0x0001, models64: 0x3be800003be9},
			deviceTuple{type64: 0x24300000245, brand64: 0x29a5d00029a68, matchRI: -0x0001, match64: 0x29a5d00029a68, modelSI: -0x0001, models64: 0x3be900003bea},
			deviceTuple{type64: 0x24300000245, brand64: 0x2062f00020637, matchRI: 0x2f37, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bea00003beb},
			deviceTuple{type64: 0x24300000245, brand64: 0x20ecd00020ed7, matchRI: -0x0001, match64: 0x20ecd00020ed7, modelSI: -0x0001, models64: 0x3beb00003bec},
			deviceTuple{type64: 0x24300000245, brand64: 0x2109d000210a4, matchRI: 0x2f3a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bec00003bf3},
			deviceTuple{type64: 0x24300000245, brand64: 0x29aa000029aa8, matchRI: 0x2f41, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bf300003bf4},
			deviceTuple{type64: 0x24300000245, brand64: 0x213d9000213e0, matchRI: 0x2f43, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bf400003bf8},
			deviceTuple{type64: 0x24300000245, brand64: 0x29aaf00029ac0, matchRI: 0x2f47, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bf800003bf9},
			deviceTuple{type64: 0x24300000245, brand64: 0x2198000021987, matchRI: 0x2f48, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bf900003bfa},
			deviceTuple{type64: 0x24300000245, brand64: 0x29ac800029ace, matchRI: 0x2f4a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bfa00003bfb},
			deviceTuple{type64: 0x24300000245, brand64: 0x221af000221b6, matchRI: 0x2f4c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bfb00003bfd},
			deviceTuple{type64: 0x24300000245, brand64: 0x29ace00029ad6, matchRI: 0x2f4f, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bfd00003bfe},
			deviceTuple{type64: 0x24300000245, brand64: 0x29ad600029ae1, matchRI: 0x2f51, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bfe00003bff},
			deviceTuple{type64: 0x24300000245, brand64: 0x29ae100029ae4, matchRI: 0x2f53, match64: 0x00000000, modelSI: -0x0001, models64: 0x3bff00003c00},
			deviceTuple{type64: 0x24300000245, brand64: 0x228af000228b5, matchRI: 0x2f55, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0000003c01},
			deviceTuple{type64: 0x24300000245, brand64: 0x29ae400029aec, matchRI: 0x2f57, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0100003c03},
			deviceTuple{type64: 0x24300000245, brand64: 0x29af700029aff, matchRI: 0x2f5a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0300003c04},
			deviceTuple{type64: 0x24300000245, brand64: 0x29aff00029b09, matchRI: 0x2f5c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0400003c05},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b0900029b0f, matchRI: 0x2f5e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0500003c06},
			deviceTuple{type64: 0x24300000245, brand64: 0x240a9000240af, matchRI: 0x2f60, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0600003c07},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b0f00029b16, matchRI: 0x2f62, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0700003c08},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b1600029b23, matchRI: 0x2f64, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0800003c0b},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b2c00029b34, matchRI: 0x2f65, match64: 0x00000000, modelSI: -0x0001, models64: 0x00000000},
			deviceTuple{type64: 0x24300000245, brand64: 0x24ad100024ad5, matchRI: 0x2f66, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0b00003c0c},
			deviceTuple{type64: 0x24300000245, brand64: 0x24bab00024bb1, matchRI: 0x2f68, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0c00003c0e},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b4800029b51, matchRI: 0x2f6a, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0e00003c0f},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b5100029b57, matchRI: 0x2f6c, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c0f00003c10},
			deviceTuple{type64: 0x24300000245, brand64: 0x29b5700029b5b, matchRI: 0x2f6e, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c1000003c11},
			deviceTuple{type64: 0x24300000245, brand64: 0x28c2600028c29, matchRI: 0x2f70, match64: 0x00000000, modelSI: -0x0001, models64: 0x3c1100003c12},
			deviceTuple{type64: 0x24300000245, brand64: 0x28c7200028c78, matchRI: -0x0001, match64: 0x29b5b00029b6c, modelSI: -0x0001, models64: 0x3c1200003c13},
		},
	}
	__dr_dm = []modelTuple{
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb00000018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f00000027, model64: 0x2700000030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3000000038, model64: 0x3800000045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x450000004d, model64: 0x4d00000064},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x640000006c, model64: 0x6c0000007b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0001, match64: 0x00000000, model64: 0x7b0000008b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0003, match64: 0x00000000, model64: 0x99000000a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0005, match64: 0x00000000, model64: 0xa7000000af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6000000ca, model64: 0xca000000cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd4000000e0, model64: 0xe0000000e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0007, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed000000fd, model64: 0xfd00000100},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10d00000117},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1260000012f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13c00000149, model64: 0x13c00000149},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14900000153, model64: 0x14900000153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1530000015b, model64: 0x1530000015b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b00000166, model64: 0x16600000170},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1380000013c, model64: 0x17000000178},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18200000186},
		modelTuple{type64: 0x2700000027, matchRI: 0x000a, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b000001af, model64: 0x1af000001b4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1c4000001cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf000001d8, model64: 0x1cf000001d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d8000001e8, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x000d, match64: 0x00000000, model64: 0x1f2000001ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff00000210, model64: 0x21000000221},
		modelTuple{type64: 0x2700000027, matchRI: 0x000e, match64: 0x00000000, model64: 0x2210000022e},
		modelTuple{type64: 0x2700000027, matchRI: 0x000f, match64: 0x00000000, model64: 0x22e0000023c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0012, match64: 0x00000000, model64: 0x2510000025d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0013, match64: 0x00000000, model64: 0x25d00000268},
		modelTuple{type64: 0x2700000027, matchRI: 0x0015, match64: 0x00000000, model64: 0x26b0000026d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0016, match64: 0x00000000, model64: 0x26d00000274},
		modelTuple{type64: 0x2700000027, matchRI: 0x0017, match64: 0x00000000, model64: 0x2740000027a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0018, match64: 0x00000000, model64: 0x27a00000281},
		modelTuple{type64: 0x2700000027, matchRI: 0x0019, match64: 0x00000000, model64: 0x28100000283},
		modelTuple{type64: 0x2700000027, matchRI: 0x001a, match64: 0x00000000, model64: 0x28300000289},
		modelTuple{type64: 0x2700000027, matchRI: 0x001b, match64: 0x00000000, model64: 0x28900000290},
		modelTuple{type64: 0x2700000027, matchRI: 0x001c, match64: 0x00000000, model64: 0x29000000292},
		modelTuple{type64: 0x2700000027, matchRI: 0x001d, match64: 0x00000000, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: 0x001e, match64: 0x00000000, model64: 0x29400000297},
		modelTuple{type64: 0x2700000027, matchRI: 0x001f, match64: 0x00000000, model64: 0x2970000029a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0020, match64: 0x00000000, model64: 0x29a0000029d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0022, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0023, match64: 0x00000000, model64: 0x2a2000002a6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0025, match64: 0x00000000, model64: 0x2af000002b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0027, match64: 0x00000000, model64: 0x2b9000002c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0028, match64: 0x00000000, model64: 0x2c3000002cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0029, match64: 0x00000000, model64: 0x2cd000002d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2d6000002dd, model64: 0x2dd000002e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x002a, match64: 0x00000000, model64: 0x2e9000002f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x002b, match64: 0x00000000, model64: 0x2f2000002fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x002c, match64: 0x00000000, model64: 0x2fb00000306},
		modelTuple{type64: 0x2700000027, matchRI: 0x002d, match64: 0x00000000, model64: 0x30600000310},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x002f, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0030, match64: 0x00000000, model64: 0x31a00000322},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0031, match64: 0x00000000, model64: 0x3220000032b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0032, match64: 0x00000000, model64: 0x32b00000331},
		modelTuple{type64: 0x2700000027, matchRI: 0x0033, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x33100000339, model64: 0x33900000341},
		modelTuple{type64: 0x2700000027, matchRI: 0x0034, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x34900000352},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x35a00000360, model64: 0x35a00000360},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36000000365, model64: 0x3650000036a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x36a00000371, model64: 0x37100000378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3780000037d, model64: 0x3780000037d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x003b, match64: 0x00000000, model64: 0x393000003a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a0000003a8, model64: 0x3a0000003a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3a8000003b0, model64: 0x3a8000003b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b0000003b9, model64: 0x3b0000003b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b9000003c1, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ca000003d3, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d7000003e3, model64: 0x3e3000003ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x003c, match64: 0x00000000, model64: 0x3ea000003ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ee000003fb, model64: 0x3fb00000404},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4040000040c, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x40f00000417, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41a00000425, model64: 0x4250000042b},
		modelTuple{type64: 0x2700000027, matchRI: 0x003d, match64: 0x00000000, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: 0x003e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x43600000439},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x44300000451, model64: 0x4510000045f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0044, match64: 0x00000000, model64: 0x46b0000047a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0045, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0046, match64: 0x00000000, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x47c00000485, model64: 0x4850000048a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0047, match64: 0x00000000, model64: 0x48a0000048c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0048, match64: 0x00000000, model64: 0x48c00000492},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0049, match64: 0x00000000, model64: 0x49200000499},
		modelTuple{type64: 0x2700000027, matchRI: 0x004a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x004c, match64: 0x00000000, model64: 0x49f000004a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a7000004af, model64: 0x4af000004b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b8000004bf, model64: 0x4b8000004bf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4c4000004d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d5000004dc, model64: 0x4dc000004e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e8000004f5, model64: 0x4f500000508},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5250000052a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5360000053b, model64: 0x53b00000543},
		modelTuple{type64: 0x2700000027, matchRI: 0x0055, match64: 0x00000000, model64: 0x54300000547},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5470000054c, model64: 0x54c00000552},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55200000557, model64: 0x5570000055c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55c00000561, model64: 0x56100000566},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5660000056b, model64: 0x56b00000570},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57000000575, model64: 0x57500000578},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5780000057d, model64: 0x57d0000057f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57f00000584, model64: 0x58400000586},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5860000058b, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58b00000590, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59000000595, model64: 0x59500000598},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5980000059d, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59d000005a2, model64: 0x5a2000005a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0056, match64: 0x00000000, model64: 0x5a4000005a8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0058, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b8000005bc, model64: 0x5b8000005bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5bc000005c3, model64: 0x5c3000005c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c6000005cd, model64: 0x5cd000005d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x005c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x005d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5f5000005fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x005f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0060, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0063, match64: 0x00000000, model64: 0x60a00000617},
		modelTuple{type64: 0x38400000391, matchRI: 0x0064, match64: 0x00000000, model64: 0x61700000626},
		modelTuple{type64: 0x38400000391, matchRI: 0x0065, match64: 0x00000000, model64: 0x62600000636},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6360000063e, model64: 0x63e00000647},
		modelTuple{type64: 0x2700000027, matchRI: 0x0066, match64: 0x00000000, model64: 0x64700000653},
		modelTuple{type64: 0x2700000027, matchRI: 0x0067, match64: 0x00000000, model64: 0x6530000065e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65e00000666, model64: 0x66600000674},
		modelTuple{type64: 0x2700000027, matchRI: 0x0068, match64: 0x00000000, model64: 0x67400000678},
		modelTuple{type64: 0x2700000027, matchRI: 0x0069, match64: 0x00000000, model64: 0x6780000067f},
		modelTuple{type64: 0x2700000027, matchRI: 0x006a, match64: 0x00000000, model64: 0x67f00000688},
		modelTuple{type64: 0x2700000027, matchRI: 0x006b, match64: 0x00000000, model64: 0x68800000691},
		modelTuple{type64: 0x2700000027, matchRI: 0x006c, match64: 0x00000000, model64: 0x69100000698},
		modelTuple{type64: 0x2700000027, matchRI: 0x006d, match64: 0x00000000, model64: 0x698000006a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x006e, match64: 0x00000000, model64: 0x6a3000006af},
		modelTuple{type64: 0x2700000027, matchRI: 0x006f, match64: 0x00000000, model64: 0x6af000006b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6b8000006c0, model64: 0x6c0000006ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0070, match64: 0x00000000, model64: 0x6ca000006d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0071, match64: 0x00000000, model64: 0x6d4000006de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0072, match64: 0x00000000, model64: 0x6de000006ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0073, match64: 0x00000000, model64: 0x6ea000006ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0074, match64: 0x00000000, model64: 0x6ef000006f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0075, match64: 0x00000000, model64: 0x6f800000700},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70a0000070f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71d00000728, model64: 0x72800000733},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73300000742, model64: 0x74200000751},
		modelTuple{type64: 0x2700000027, matchRI: 0x0079, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x007b, match64: 0x00000000, model64: 0x75500000760},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x007f, match64: 0x00000000, model64: 0x76b00000776},
		modelTuple{type64: 0x2700000027, matchRI: 0x0080, match64: 0x00000000, model64: 0x7760000077e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0081, match64: 0x00000000, model64: 0x77e0000078a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0082, match64: 0x00000000, model64: 0x78a00000791},
		modelTuple{type64: 0x2700000027, matchRI: 0x0084, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0085, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0088, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0089, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x008b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a1000007a8, model64: 0x7a8000007b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7b4000007bb, model64: 0x7b4000007bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x008e, match64: 0x00000000, model64: 0x7c1000007c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x008f, match64: 0x00000000, model64: 0x7c5000007cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0090, match64: 0x00000000, model64: 0x7cd000007de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0091, match64: 0x00000000, model64: 0x7de000007e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0092, match64: 0x00000000, model64: 0x7e6000007f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0093, match64: 0x00000000, model64: 0x7f3000007fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0094, match64: 0x00000000, model64: 0x7fe0000080b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0095, match64: 0x00000000, model64: 0x80b00000818},
		modelTuple{type64: 0x2700000027, matchRI: 0x0096, match64: 0x00000000, model64: 0x81800000821},
		modelTuple{type64: 0x2700000027, matchRI: 0x0097, match64: 0x00000000, model64: 0x82100000829},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0098, match64: 0x00000000, model64: 0x82900000831},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0099, match64: 0x00000000, model64: 0x8310000083a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x009a, match64: 0x00000000, model64: 0x83a00000842},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x009d, match64: 0x00000000, model64: 0x84f0000085c},
		modelTuple{type64: 0x2700000027, matchRI: 0x009e, match64: 0x00000000, model64: 0x85c00000868},
		modelTuple{type64: 0x2700000027, matchRI: 0x009f, match64: 0x00000000, model64: 0x86800000875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87500000884, model64: 0x8840000088f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a0, match64: 0x00000000, model64: 0x88f0000089a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a1, match64: 0x00000000, model64: 0x89a000008a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a2, match64: 0x00000000, model64: 0x8a6000008b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b2000008b9, model64: 0x8b9000008c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a3, match64: 0x00000000, model64: 0x8c0000008c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a4, match64: 0x00000000, model64: 0x8c7000008d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d0000008db, model64: 0x8db000008e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a5, match64: 0x00000000, model64: 0x8e6000008ee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00a8, match64: 0x00000000, model64: 0x8fb00000904},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x00aa, match64: 0x00000000, model64: 0x90800000910},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x00ab, match64: 0x00000000, model64: 0x91000000917},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x00ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9170000091e, model64: 0x91e00000925},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ad, match64: 0x00000000, model64: 0x92500000933},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ae, match64: 0x00000000, model64: 0x9330000093b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00af, match64: 0x00000000, model64: 0x93b00000942},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b0, match64: 0x00000000, model64: 0x9420000094b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b1, match64: 0x00000000, model64: 0x94b00000952},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9520000095c, model64: 0x95c00000965},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9650000096b, model64: 0x9650000096b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b2, match64: 0x00000000, model64: 0x96b00000977},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b3, match64: 0x00000000, model64: 0x97700000983},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x98300000989, model64: 0x98900000992},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b4, match64: 0x00000000, model64: 0x9920000099f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x99f000009a8, model64: 0x9a8000009b5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b5, match64: 0x00000000, model64: 0x9b5000009be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b6, match64: 0x00000000, model64: 0x9be000009cb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b7, match64: 0x00000000, model64: 0x9cb000009d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b8, match64: 0x00000000, model64: 0x9d7000009e0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00b9, match64: 0x00000000, model64: 0x9e0000009ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00ba, match64: 0x00000000, model64: 0x9ed000009f9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00bb, match64: 0x00000000, model64: 0x9f900000a06},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa0600000a0a, model64: 0xa0a00000a11},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa1100000a15, model64: 0xa1500000a1e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00bc, match64: 0x00000000, model64: 0xa1e00000a25},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa2500000a32, model64: 0xa3200000a3a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa3a00000a44, model64: 0xa4400000a49},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa4900000a4f, model64: 0xa4f00000a59},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa5900000a66, model64: 0xa6600000a6e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa6e00000a7a, model64: 0xa6e00000a7a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00be, match64: 0x00000000, model64: 0xa7a00000a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00bf, match64: 0x00000000, model64: 0xa8a00000a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c0, match64: 0x00000000, model64: 0xa9500000aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c1, match64: 0x00000000, model64: 0xaa000000aae},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c2, match64: 0x00000000, model64: 0xaae00000abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c3, match64: 0x00000000, model64: 0xabb00000ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c4, match64: 0x00000000, model64: 0xac800000ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c5, match64: 0x00000000, model64: 0xad100000ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c6, match64: 0x00000000, model64: 0xada00000ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c7, match64: 0x00000000, model64: 0xae300000af0},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c8, match64: 0x00000000, model64: 0xaf000000afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x00c9, match64: 0x00000000, model64: 0xafd00000b0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ca, match64: 0x00000000, model64: 0xb0a00000b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cb, match64: 0x00000000, model64: 0xb1600000b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cc, match64: 0x00000000, model64: 0xb2000000b2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cd, match64: 0x00000000, model64: 0xb2b00000b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ce, match64: 0x00000000, model64: 0xb3800000b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x00cf, match64: 0x00000000, model64: 0xb1600000b20},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d0, match64: 0x00000000, model64: 0xb4500000b52},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d1, match64: 0x00000000, model64: 0xb5200000b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d2, match64: 0x00000000, model64: 0xb5d00000b68},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d3, match64: 0x00000000, model64: 0xb6800000b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d4, match64: 0x00000000, model64: 0xb7400000b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d5, match64: 0x00000000, model64: 0xb7f00000b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d6, match64: 0x00000000, model64: 0xb8d00000b9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d7, match64: 0x00000000, model64: 0xb9d00000ba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d8, match64: 0x00000000, model64: 0xba800000bb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb300000bbc, model64: 0xbbc00000bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x00d9, match64: 0x00000000, model64: 0xbc100000bcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x00da, match64: 0x00000000, model64: 0xbcc00000bd5},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00db, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00dc, match64: 0x00000000, model64: 0xbdc00000bee},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00dd, match64: 0x00000000, model64: 0xbee00000bfb},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00df, match64: 0x00000000, model64: 0xbfb00000c04},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x00e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00e1, match64: 0x00000000, model64: 0xc0400000c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1800000c1e, model64: 0xc1e00000c2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2a00000c2f, model64: 0xc2f00000c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e7, match64: 0x00000000, model64: 0xc3c00000c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x00e8, match64: 0x00000000, model64: 0xc4500000c4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ea, match64: 0x00000000, model64: 0xc5500000c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x00eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6700000c6f, model64: 0xc6f00000c71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7100000c7a, model64: 0xc7a00000c7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7d00000c80, model64: 0xc8000000c8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ed, match64: 0x00000000, model64: 0xc8a00000c91},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ee, match64: 0x00000000, model64: 0xc9100000c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9400000c97, model64: 0xc9700000c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ef, match64: 0x00000000, model64: 0xc9a00000ca3},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f0, match64: 0x00000000, model64: 0xca300000cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f1, match64: 0x00000000, model64: 0xcab00000caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f2, match64: 0x00000000, model64: 0xcaf00000cb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f3, match64: 0x00000000, model64: 0xcb100000cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f4, match64: 0x00000000, model64: 0xcb900000cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f5, match64: 0x00000000, model64: 0xcbf00000cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f6, match64: 0x00000000, model64: 0xcc500000ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x00f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f8, match64: 0x00000000, model64: 0xccb00000cd1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcd100000cd8, model64: 0xcd100000cd8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00f9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00fa, match64: 0x00000000, model64: 0xcd800000ce0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00fc, match64: 0x00000000, model64: 0xce700000cec},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xcec00000cf2, model64: 0xcec00000cf2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00fd, match64: 0x00000000, model64: 0xcf200000cff},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x00fe, match64: 0x00000000, model64: 0xcff00000d09},
		modelTuple{type64: 0x2700000027, matchRI: 0x00ff, match64: 0x00000000, model64: 0xd0900000d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0100, match64: 0x00000000, model64: 0xd1700000d23},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0103, match64: 0x00000000, model64: 0xd3e00000d46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0104, match64: 0x00000000, model64: 0xd4600000d4c},
		modelTuple{type64: 0x24700000251, matchRI: 0x0105, match64: 0x00000000, model64: 0xd4c00000d56},
		modelTuple{type64: 0x24700000251, matchRI: 0x0106, match64: 0x00000000, model64: 0xd5600000d62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd6700000d72, model64: 0xd7200000d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0108, match64: 0x00000000, model64: 0xd8400000d91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd9100000d9d, model64: 0xd9d00000daa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdaa00000db1, model64: 0xdb100000dbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdbe00000dc9, model64: 0xdc900000dd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdd700000de2, model64: 0xde200000def},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdef00000dfa, model64: 0xdfa00000e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x0109, match64: 0x00000000, model64: 0xe0900000e14},
		modelTuple{type64: 0x2700000027, matchRI: 0x010a, match64: 0x00000000, model64: 0xe1400000e20},
		modelTuple{type64: 0x2700000027, matchRI: 0x010b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2000000e2c, model64: 0xe2c00000e3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3b00000e45, model64: 0xe4500000e51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5100000e5a, model64: 0xe5a00000e6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6a00000e73, model64: 0xe7300000e7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x010c, match64: 0x00000000, model64: 0xe7e00000e8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x010d, match64: 0x00000000, model64: 0xe8a00000e94},
		modelTuple{type64: 0x2700000027, matchRI: 0x010e, match64: 0x00000000, model64: 0xe9400000e9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x010f, match64: 0x00000000, model64: 0xe9a00000ea1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0110, match64: 0x00000000, model64: 0xea100000eab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xec700000ed6, model64: 0xed600000ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0112, match64: 0x00000000, model64: 0xeea00000ef0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xef000000efc, model64: 0xef000000efc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0115, match64: 0x00000000, model64: 0xf0900000f13},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf1900000f23, model64: 0xf2300000f2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0117, match64: 0x00000000, model64: 0xf2c00000f33},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x011a, match64: 0x00000000, model64: 0xf3c00000f41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4100000f48, model64: 0xf4800000f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x011b, match64: 0x00000000, model64: 0xf4f00000f54},
		modelTuple{type64: 0x2700000027, matchRI: 0x011c, match64: 0x00000000, model64: 0xf5400000f59},
		modelTuple{type64: 0x2700000027, matchRI: 0x011d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x011e, match64: 0x00000000, model64: 0xf5900000f5d},
		modelTuple{type64: 0x24300000245, matchRI: 0x011f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5d00000f6a, model64: 0xf6a00000f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x0120, match64: 0x00000000, model64: 0xf8000000f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0121, match64: 0x00000000, model64: 0xf8200000f84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0123, match64: 0x00000000, model64: 0xf8800000f8e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf8e00000f98, model64: 0xf8e00000f98},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0124, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0125, match64: 0x00000000, model64: 0xf9800000fa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0126, match64: 0x00000000, model64: 0xfa700000fb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb800000fbe, model64: 0xfbe00000fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfca00000fd6, model64: 0xfca00000fd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0127, match64: 0x00000000, model64: 0xfd600000fde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0128, match64: 0x00000000, model64: 0xfde00000fe4},
		modelTuple{type64: 0x24300000245, matchRI: 0x0129, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x012a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x012b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x012c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xff100000ffb, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfff00001006, model64: 0x100600001009},
		modelTuple{type64: 0x2700000027, matchRI: 0x012e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x100900001012, model64: 0x10120000101b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x012f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x102200001027, model64: 0x10270000102b},
		modelTuple{type64: 0x38400000391, matchRI: 0x0131, match64: 0x00000000, model64: 0x102b00001034},
		modelTuple{type64: 0x38400000391, matchRI: 0x0132, match64: 0x00000000, model64: 0x10340000103d},
		modelTuple{type64: 0x38400000391, matchRI: 0x0133, match64: 0x00000000, model64: 0x103d00001046},
		modelTuple{type64: 0x38400000391, matchRI: 0x0134, match64: 0x00000000, model64: 0x10460000104f},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x104f00001055, model64: 0x10550000105b},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x105b00001061, model64: 0x106100001069},
		modelTuple{type64: 0x38400000391, matchRI: 0x0135, match64: 0x00000000, model64: 0x106900001073},
		modelTuple{type64: 0x38400000391, matchRI: 0x0136, match64: 0x00000000, model64: 0x107300001083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108300001088, model64: 0x108800001091},
		modelTuple{type64: 0x2700000027, matchRI: 0x0137, match64: 0x00000000, model64: 0x1091000010a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a3000010a8, model64: 0x10a8000010b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0138, match64: 0x00000000, model64: 0x10b8000010c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0139, match64: 0x00000000, model64: 0x10c8000010e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x013a, match64: 0x00000000, model64: 0x10e1000010f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x013b, match64: 0x00000000, model64: 0x10f10000110a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110a0000110f, model64: 0x110f00001128},
		modelTuple{type64: 0x2700000027, matchRI: 0x013c, match64: 0x00000000, model64: 0x112800001138},
		modelTuple{type64: 0x2700000027, matchRI: 0x013d, match64: 0x00000000, model64: 0x113800001151},
		modelTuple{type64: 0x2700000027, matchRI: 0x013e, match64: 0x00000000, model64: 0x115100001161},
		modelTuple{type64: 0x2700000027, matchRI: 0x013f, match64: 0x00000000, model64: 0x116100001171},
		modelTuple{type64: 0x2700000027, matchRI: 0x0140, match64: 0x00000000, model64: 0x117100001181},
		modelTuple{type64: 0x2700000027, matchRI: 0x0141, match64: 0x00000000, model64: 0x118100001193},
		modelTuple{type64: 0x2700000027, matchRI: 0x0142, match64: 0x00000000, model64: 0x1193000011ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0143, match64: 0x00000000, model64: 0x11ae000011c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0144, match64: 0x00000000, model64: 0x11c2000011df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0145, match64: 0x00000000, model64: 0x11df000011f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0146, match64: 0x00000000, model64: 0x11f10000120c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0147, match64: 0x00000000, model64: 0x120c0000121b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0148, match64: 0x00000000, model64: 0x121b0000122d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0149, match64: 0x00000000, model64: 0x122d00001241},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124100001246, model64: 0x12460000125e},
		modelTuple{type64: 0x2700000027, matchRI: 0x014a, match64: 0x00000000, model64: 0x125e0000126d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x126d00001272, model64: 0x12720000128a},
		modelTuple{type64: 0x2700000027, matchRI: 0x014b, match64: 0x00000000, model64: 0x128a0000129a},
		modelTuple{type64: 0x2700000027, matchRI: 0x014c, match64: 0x00000000, model64: 0x129a000012aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12aa000012af, model64: 0x12af000012c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c1000012c6, model64: 0x12c6000012da},
		modelTuple{type64: 0x2700000027, matchRI: 0x014d, match64: 0x00000000, model64: 0x12da000012ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ea000012ef, model64: 0x12ef000012ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x014e, match64: 0x00000000, model64: 0x12ff0000130f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130f00001314, model64: 0x131400001323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13230000132d, model64: 0x132d0000133d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133d00001342, model64: 0x134200001350},
		modelTuple{type64: 0x2700000027, matchRI: 0x014f, match64: 0x00000000, model64: 0x135000001355},
		modelTuple{type64: 0x2700000027, matchRI: 0x0150, match64: 0x00000000, model64: 0x13550000135e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0151, match64: 0x00000000, model64: 0x135e00001367},
		modelTuple{type64: 0x2700000027, matchRI: 0x0152, match64: 0x00000000, model64: 0x13670000136b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0153, match64: 0x00000000, model64: 0x136b00001370},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137000001375, model64: 0x137500001377},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13770000137c, model64: 0x137c00001385},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13850000138a, model64: 0x138a00001391},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139100001396, model64: 0x13960000139c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0154, match64: 0x00000000, model64: 0x139c0000139e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139e000013a4, model64: 0x13a4000013af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0155, match64: 0x00000000, model64: 0x13af000013c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0156, match64: 0x00000000, model64: 0x13c1000013d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d3000013d8, model64: 0x13d8000013eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13eb000013f0, model64: 0x13f0000013ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0157, match64: 0x00000000, model64: 0x13ff00001414},
		modelTuple{type64: 0x2700000027, matchRI: 0x0158, match64: 0x00000000, model64: 0x141400001432},
		modelTuple{type64: 0x2700000027, matchRI: 0x0159, match64: 0x00000000, model64: 0x143200001449},
		modelTuple{type64: 0x2700000027, matchRI: 0x015a, match64: 0x00000000, model64: 0x14490000145a},
		modelTuple{type64: 0x2700000027, matchRI: 0x015b, match64: 0x00000000, model64: 0x145a0000146a},
		modelTuple{type64: 0x2700000027, matchRI: 0x015c, match64: 0x00000000, model64: 0x146a0000147f},
		modelTuple{type64: 0x2700000027, matchRI: 0x015d, match64: 0x00000000, model64: 0x147f0000148f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148f00001494, model64: 0x1494000014a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x015e, match64: 0x00000000, model64: 0x14a5000014b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x015f, match64: 0x00000000, model64: 0x14b5000014c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0160, match64: 0x00000000, model64: 0x14a5000014b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0161, match64: 0x00000000, model64: 0x14c6000014d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14d7000014dc, model64: 0x14dc000014ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ec000014f1, model64: 0x14f100001502},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150200001507, model64: 0x150700001513},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151300001518, model64: 0x15180000151b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151b00001521, model64: 0x152100001526},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15260000152c, model64: 0x152c0000152f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152f00001535, model64: 0x15350000153f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153f00001544, model64: 0x15440000155b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155b00001561, model64: 0x156100001579},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15790000157f, model64: 0x157f0000159a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0162, match64: 0x00000000, model64: 0x159a000015ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ae000015b4, model64: 0x15b4000015c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c8000015ce, model64: 0x15ce000015e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e2000015e7, model64: 0x15e7000015f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0163, match64: 0x00000000, model64: 0x15f70000160c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0164, match64: 0x00000000, model64: 0x160c0000162a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0165, match64: 0x00000000, model64: 0x162a0000163d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0166, match64: 0x00000000, model64: 0x163d00001652},
		modelTuple{type64: 0x2700000027, matchRI: 0x0167, match64: 0x00000000, model64: 0x16520000166a},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x166a0000166f, model64: 0x166f00001682},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x168200001687, model64: 0x166f00001682},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0168, match64: 0x00000000, model64: 0x16870000169d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0169, match64: 0x00000000, model64: 0x169d0000169f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016a, match64: 0x00000000, model64: 0x169f000016a4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016b, match64: 0x00000000, model64: 0x16a4000016af},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016c, match64: 0x00000000, model64: 0x16af000016b9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016d, match64: 0x00000000, model64: 0x16b9000016c2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016e, match64: 0x00000000, model64: 0x16c2000016d3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x016f, match64: 0x00000000, model64: 0x16d3000016eb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16eb000016f0, model64: 0x16f0000016f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x16f4000016f9, model64: 0x16f900001701},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x170100001706, model64: 0x170600001712},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0170, match64: 0x00000000, model64: 0x171200001719},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x17190000171e, model64: 0x171e00001731},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x173100001736, model64: 0x17360000174a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0171, match64: 0x00000000, model64: 0x174a0000175f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0172, match64: 0x00000000, model64: 0x175f00001772},
		modelTuple{type64: 0x2700000027, matchRI: 0x0173, match64: 0x00000000, model64: 0x177200001787},
		modelTuple{type64: 0x2700000027, matchRI: 0x0174, match64: 0x00000000, model64: 0x1787000017a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0175, match64: 0x00000000, model64: 0x17a2000017b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b8000017bd, model64: 0x17bd000017d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0176, match64: 0x00000000, model64: 0x17d2000017ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0177, match64: 0x00000000, model64: 0x17ea00001800},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x180000001805, model64: 0x18050000181b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181b00001821, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x182100001827, model64: 0x18270000182a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0178, match64: 0x00000000, model64: 0x182a0000182e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0179, match64: 0x00000000, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: 0x017a, match64: 0x00000000, model64: 0x183000001837},
		modelTuple{type64: 0x2700000027, matchRI: 0x017b, match64: 0x00000000, model64: 0x18370000183c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x183c00001841, model64: 0x184100001849},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x017c, match64: 0x00000000, model64: 0x184900001850},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x185000001855, model64: 0x18550000185b},
		modelTuple{type64: 0x2700000027, matchRI: 0x017d, match64: 0x00000000, model64: 0x185b0000185d},
		modelTuple{type64: 0x2700000027, matchRI: 0x017e, match64: 0x00000000, model64: 0x185d00001863},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186300001868, model64: 0x186800001872},
		modelTuple{type64: 0x2700000027, matchRI: 0x017f, match64: 0x00000000, model64: 0x187200001874},
		modelTuple{type64: 0x2700000027, matchRI: 0x0180, match64: 0x00000000, model64: 0x187400001877},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18770000187c, model64: 0x187c00001884},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188400001889, model64: 0x188900001893},
		modelTuple{type64: 0x2700000027, matchRI: 0x0181, match64: 0x00000000, model64: 0x189300001896},
		modelTuple{type64: 0x2700000027, matchRI: 0x0182, match64: 0x00000000, model64: 0x18960000189f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189f000018a4, model64: 0x18a4000018a9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18a9000018ae, model64: 0x18ae000018c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0183, match64: 0x00000000, model64: 0x18c4000018da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0184, match64: 0x00000000, model64: 0x18da000018f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0185, match64: 0x00000000, model64: 0x18f90000190f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0186, match64: 0x00000000, model64: 0x190f00001925},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19250000192a, model64: 0x192a00001940},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x194000001944, model64: 0x19440000195c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0187, match64: 0x00000000, model64: 0x195c0000196c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0188, match64: 0x00000000, model64: 0x196c0000197c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x197c00001980, model64: 0x196c0000197c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x198000001985, model64: 0x198500001995},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19950000199a, model64: 0x199a000019af},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19af000019b4, model64: 0x19b4000019c3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19c3000019c8, model64: 0x19c8000019d7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19d7000019dc, model64: 0x19dc000019ec},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19ec000019f1, model64: 0x19f100001a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x0189, match64: 0x00000000, model64: 0x1a0200001a13},
		modelTuple{type64: 0x2700000027, matchRI: 0x018a, match64: 0x00000000, model64: 0x1a1300001a17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1700001a2d, model64: 0x1a2d00001a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x018b, match64: 0x00000000, model64: 0x1a3300001a42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4200001a57, model64: 0x1a5700001a64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6400001a79, model64: 0x1a7900001a86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8600001a9c, model64: 0x1a9c00001aaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aaa00001abf, model64: 0x1abf00001acc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1acc00001ad2, model64: 0x1ad200001ae0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae000001ae5, model64: 0x1ae500001af5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x018c, match64: 0x00000000, model64: 0x1af500001b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x018d, match64: 0x00000000, model64: 0x1b0100001b0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x018e, match64: 0x00000000, model64: 0x1b0100001b0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x018f, match64: 0x00000000, model64: 0x1b0c00001b16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1600001b1b, model64: 0x1b1b00001b21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2100001b26, model64: 0x1b2600001b2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0190, match64: 0x00000000, model64: 0x1b2e00001b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0191, match64: 0x00000000, model64: 0x1b3000001b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0192, match64: 0x00000000, model64: 0x1b3200001b37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0193, match64: 0x00000000, model64: 0x1b3700001b3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3c00001b41, model64: 0x1b4100001b48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b4800001b4d, model64: 0x1b4d00001b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0194, match64: 0x00000000, model64: 0x106900001073},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b5400001b59, model64: 0x1b5900001b68},
		modelTuple{type64: 0x2700000027, matchRI: 0x0195, match64: 0x00000000, model64: 0x1b6800001b6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0196, match64: 0x00000000, model64: 0x1b6f00001b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0197, match64: 0x00000000, model64: 0x1b7200001b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0198, match64: 0x00000000, model64: 0x1b7a00001b81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0199, match64: 0x00000000, model64: 0x1b8100001b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x019a, match64: 0x00000000, model64: 0x1b8200001b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x019b, match64: 0x00000000, model64: 0x1b8400001b8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x019c, match64: 0x00000000, model64: 0x1b8d00001b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x019d, match64: 0x00000000, model64: 0x1b9600001b9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x019e, match64: 0x00000000, model64: 0x1b9f00001ba8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ba800001bad, model64: 0x1bad00001bb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x019f, match64: 0x00000000, model64: 0x1bb600001bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a0, match64: 0x00000000, model64: 0x1bbf00001bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a1, match64: 0x00000000, model64: 0x1bc100001bca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bca00001bcf, model64: 0x1bcf00001bd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a2, match64: 0x00000000, model64: 0x1bd900001be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a3, match64: 0x00000000, model64: 0x1be300001be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a4, match64: 0x00000000, model64: 0x1be500001be7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1be700001bec, model64: 0x1bec00001bf4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x01a5, match64: 0x00000000, model64: 0x1bf400001bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a6, match64: 0x00000000, model64: 0x1bf600001bf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1bf700001bfc, model64: 0x1bfc00001c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a7, match64: 0x00000000, model64: 0x1c0400001c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a8, match64: 0x00000000, model64: 0x1c0d00001c0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01a9, match64: 0x00000000, model64: 0x1c0f00001c11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c1100001c16, model64: 0x1c1600001c1d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x01aa, match64: 0x00000000, model64: 0x139c0000139e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ab, match64: 0x00000000, model64: 0x1c1d00001c1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ac, match64: 0x00000000, model64: 0x1c1f00001c28},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ad, match64: 0x00000000, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c2900001c2e, model64: 0x1c2e00001c35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c3500001c3a, model64: 0x1c3a00001c3b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01ae, match64: 0x00000000, model64: 0x1c3b00001c41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01af, match64: 0x00000000, model64: 0x1c4100001c49},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01b0, match64: 0x00000000, model64: 0x1c4900001c50},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01b1, match64: 0x00000000, model64: 0x1c5000001c59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c5900001c63, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b2, match64: 0x00000000, model64: 0x1c6300001c70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c7000001c75, model64: 0x1c7500001c7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ba, match64: 0x00000000, model64: 0x1c8700001c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1c9600001c9b, model64: 0x1c9b00001ca8},
		modelTuple{type64: 0x2700000027, matchRI: 0x01bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cb700001cc0, model64: 0x1cc000001cc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cc900001cd5, model64: 0x1cd500001ce1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ce100001ce9, model64: 0x1ce900001cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cf100001cfd, model64: 0x1cfd00001d01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d0100001d0b, model64: 0x1d0b00001d0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d0d00001d1a, model64: 0x1d1a00001d1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d1f00001d2e, model64: 0x1d2e00001d35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d3500001d40, model64: 0x1d4000001d43},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c1, match64: 0x00000000, model64: 0x1d4300001d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c2, match64: 0x00000000, model64: 0x1d4a00001d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c4, match64: 0x00000000, model64: 0x1d4f00001d55},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c6, match64: 0x00000000, model64: 0x1d5e00001d65},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c7, match64: 0x00000000, model64: 0x1d6500001d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c8, match64: 0x00000000, model64: 0x1d7100001d75},
		modelTuple{type64: 0x2700000027, matchRI: 0x01c9, match64: 0x00000000, model64: 0x1d7500001d79},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ca, match64: 0x00000000, model64: 0x1d7900001d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cb, match64: 0x00000000, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cc, match64: 0x00000000, model64: 0x1d7e00001d81},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cd, match64: 0x00000000, model64: 0x1d8100001d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ce, match64: 0x00000000, model64: 0x1d8900001d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x01cf, match64: 0x00000000, model64: 0x1d9100001da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d0, match64: 0x00000000, model64: 0x1da300001da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d1, match64: 0x00000000, model64: 0x1da400001daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d2, match64: 0x00000000, model64: 0x1daf00001dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d3, match64: 0x00000000, model64: 0x1dbc00001dcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d4, match64: 0x00000000, model64: 0x1dcd00001dd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dd900001de5, model64: 0x1de500001df2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d5, match64: 0x00000000, model64: 0x1df200001dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d6, match64: 0x00000000, model64: 0x1dfa00001e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d7, match64: 0x00000000, model64: 0x1d8100001d89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0700001e0c, model64: 0x1e0c00001e12},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e1200001e1c, model64: 0x1e1c00001e26},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e2600001e2e, model64: 0x1e2e00001e38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e3800001e3e, model64: 0x1e3e00001e44},
		modelTuple{type64: 0x2700000027, matchRI: 0x01d9, match64: 0x00000000, model64: 0x1e4400001e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x01da, match64: 0x00000000, model64: 0x1e4e00001e56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5600001e5d, model64: 0x1e5d00001e64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6400001e6b, model64: 0x1e6b00001e72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7200001e7c, model64: 0x1e7c00001e86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8600001e8e, model64: 0x1e8e00001e96},
		modelTuple{type64: 0x2700000027, matchRI: 0x01db, match64: 0x00000000, model64: 0x1e9600001ea0},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dc, match64: 0x00000000, model64: 0x1ea000001ea8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea800001eaf, model64: 0x1eaf00001eb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb600001ebd, model64: 0x1ebd00001ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01dd, match64: 0x00000000, model64: 0x1ec400001ecb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ecb00001ed2, model64: 0x1ed200001ed9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ed900001eec, model64: 0x1eec00001f01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0100001f0c, model64: 0x1f0c00001f17},
		modelTuple{type64: 0x2700000027, matchRI: 0x01de, match64: 0x00000000, model64: 0x1f1700001f26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f2600001f33, model64: 0x1f3300001f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x01df, match64: 0x00000000, model64: 0x1f4000001f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e0, match64: 0x00000000, model64: 0x1f4f00001f59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5900001f60, model64: 0x1f6000001f67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6700001f70, model64: 0x1f7000001f79},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e1, match64: 0x00000000, model64: 0x1f7900001f81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8100001f89, model64: 0x1f8900001f91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9100001f98, model64: 0x1f9800001f9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9f00001fa8, model64: 0x1fa800001fb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e2, match64: 0x00000000, model64: 0x1fb100001fbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbf00001fc9, model64: 0x1fc900001fd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd300001fdf, model64: 0x1fdf00001feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1feb00001ffa, model64: 0x1ffa00002009},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e3, match64: 0x00000000, model64: 0x200900002014},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201400002022, model64: 0x202200002030},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20300000203d, model64: 0x203d0000204a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204a00002055, model64: 0x205500002060},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e4, match64: 0x00000000, model64: 0x20600000206f},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e5, match64: 0x00000000, model64: 0x206f00002082},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e6, match64: 0x00000000, model64: 0x208200002097},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e7, match64: 0x00000000, model64: 0x2097000020a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e8, match64: 0x00000000, model64: 0x20a4000020b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x01e9, match64: 0x00000000, model64: 0x20b2000020bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20bf000020cb, model64: 0x20cb000020d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ea, match64: 0x00000000, model64: 0x20d7000020e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e3000020f5, model64: 0x20f500002107},
		modelTuple{type64: 0x2700000027, matchRI: 0x01eb, match64: 0x00000000, model64: 0x210700002115},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ec, match64: 0x00000000, model64: 0x21150000211d},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ed, match64: 0x00000000, model64: 0x211d00002126},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21260000212d, model64: 0x212d00002134},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ee, match64: 0x00000000, model64: 0x21340000213b},
		modelTuple{type64: 0x2700000027, matchRI: 0x01ef, match64: 0x00000000, model64: 0x213b00002143},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f0, match64: 0x00000000, model64: 0x21430000214b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x214b00002153, model64: 0x21530000215c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215c0000216b, model64: 0x216b00002177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21770000217e, model64: 0x217e00002185},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21850000218b, model64: 0x218b00002191},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21910000219e, model64: 0x219e000021ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ad000021b9, model64: 0x21b9000021c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x01f1, match64: 0x00000000, model64: 0x21c1000021c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c9000021d0, model64: 0x21d0000021d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d7000021df, model64: 0x21d7000021df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21df000021ea, model64: 0x21ea000021f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f3000021fd, model64: 0x21fd00002203},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f2, match64: 0x00000000, model64: 0x22030000220a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x220a00002213, model64: 0x22130000221c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x221c0000222b, model64: 0x222b00002234},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22340000223f, model64: 0x223f00002243},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x224300002253, model64: 0x1e1c00001e26},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x225300002263, model64: 0x226300002275},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x227500002286, model64: 0x228600002299},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f3, match64: 0x00000000, model64: 0x2299000022ae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22ae000022bb, model64: 0x22bb000022cd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22cd000022dc, model64: 0x22dc000022eb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22eb000022f4, model64: 0x22f400002302},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f4, match64: 0x00000000, model64: 0x23020000230e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f5, match64: 0x00000000, model64: 0x22030000220a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f6, match64: 0x00000000, model64: 0x230e00002315},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f7, match64: 0x00000000, model64: 0x23150000231a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x231a00002326, model64: 0x23150000231a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f8, match64: 0x00000000, model64: 0x232600002333},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23330000233a, model64: 0x233a00002342},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x234200002354, model64: 0x23540000235e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x01f9, match64: 0x00000000, model64: 0x235e00002362},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x01fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236b0000237b, model64: 0x237b0000238b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238b0000239b, model64: 0x239b000023ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ab000023b1, model64: 0x23ab000023b1},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x23b1000023bd, model64: 0x23bd000023ca},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x23ca000023dd, model64: 0x23dd000023f0},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01fd, match64: 0x00000000, model64: 0x23f000002400},
		modelTuple{type64: 0x8e00000099, matchRI: 0x01fe, match64: 0x00000000, model64: 0x240000002410},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x24100000241c, model64: 0x24100000241c},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x241c0000242b, model64: 0x241c0000242b},
		modelTuple{type64: 0x8e00000099, matchRI: -0x0001, match64: 0x242b00002437, model64: 0x243700002444},
		modelTuple{type64: 0x8e00000099, matchRI: 0x0200, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x0201, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0203, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0204, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0207, match64: 0x00000000, model64: 0x24680000247c},
		modelTuple{type64: 0x24300000245, matchRI: 0x0208, match64: 0x00000000, model64: 0x247c00002490},
		modelTuple{type64: 0x24300000245, matchRI: 0x0209, match64: 0x00000000, model64: 0x2490000024a4},
		modelTuple{type64: 0x24300000245, matchRI: 0x020a, match64: 0x00000000, model64: 0x24a4000024b3},
		modelTuple{type64: 0x24300000245, matchRI: 0x020b, match64: 0x00000000, model64: 0x24b3000024ca},
		modelTuple{type64: 0x24300000245, matchRI: 0x020c, match64: 0x00000000, model64: 0x24ca000024e1},
		modelTuple{type64: 0x24300000245, matchRI: 0x020d, match64: 0x00000000, model64: 0x24e1000024f8},
		modelTuple{type64: 0x24300000245, matchRI: 0x020e, match64: 0x00000000, model64: 0x24f80000250b},
		modelTuple{type64: 0x24300000245, matchRI: 0x020f, match64: 0x00000000, model64: 0x250b0000251c},
		modelTuple{type64: 0x24300000245, matchRI: 0x0210, match64: 0x00000000, model64: 0x251c00002532},
		modelTuple{type64: 0x24300000245, matchRI: 0x0211, match64: 0x00000000, model64: 0x253200002543},
		modelTuple{type64: 0x24300000245, matchRI: 0x0212, match64: 0x00000000, model64: 0x254300002552},
		modelTuple{type64: 0x24300000245, matchRI: 0x0213, match64: 0x00000000, model64: 0x255200002567},
		modelTuple{type64: 0x24300000245, matchRI: 0x0214, match64: 0x00000000, model64: 0x256700002581},
		modelTuple{type64: 0x24300000245, matchRI: 0x0215, match64: 0x00000000, model64: 0x258100002599},
		modelTuple{type64: 0x24300000245, matchRI: 0x0216, match64: 0x00000000, model64: 0x2599000025b1},
		modelTuple{type64: 0x24300000245, matchRI: 0x0217, match64: 0x00000000, model64: 0x25b1000025be},
		modelTuple{type64: 0x24300000245, matchRI: 0x0218, match64: 0x00000000, model64: 0x25be000025ce},
		modelTuple{type64: 0x24300000245, matchRI: 0x0219, match64: 0x00000000, model64: 0x25ce000025e5},
		modelTuple{type64: 0x24300000245, matchRI: 0x021a, match64: 0x00000000, model64: 0x25e5000025f9},
		modelTuple{type64: 0x24300000245, matchRI: 0x021b, match64: 0x00000000, model64: 0x25f900002614},
		modelTuple{type64: 0x2700000027, matchRI: 0x021c, match64: 0x00000000, model64: 0x26140000261b},
		modelTuple{type64: 0x2700000027, matchRI: 0x021d, match64: 0x00000000, model64: 0x261b00002629},
		modelTuple{type64: 0x2700000027, matchRI: 0x021e, match64: 0x00000000, model64: 0x262900002637},
		modelTuple{type64: 0x2700000027, matchRI: 0x021f, match64: 0x00000000, model64: 0x26370000264f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0220, match64: 0x00000000, model64: 0x264f00002665},
		modelTuple{type64: 0x2700000027, matchRI: 0x0221, match64: 0x00000000, model64: 0x26650000267b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0222, match64: 0x00000000, model64: 0x267b00002692},
		modelTuple{type64: 0x2700000027, matchRI: 0x0223, match64: 0x00000000, model64: 0x2692000026a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0224, match64: 0x00000000, model64: 0x26a7000026c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0225, match64: 0x00000000, model64: 0x26c0000026d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0226, match64: 0x00000000, model64: 0x26d7000026e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0227, match64: 0x00000000, model64: 0x26e2000026eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0228, match64: 0x00000000, model64: 0x26eb000026f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0229, match64: 0x00000000, model64: 0x26f400002701},
		modelTuple{type64: 0x2700000027, matchRI: 0x022a, match64: 0x00000000, model64: 0x270100002711},
		modelTuple{type64: 0x2700000027, matchRI: 0x022b, match64: 0x00000000, model64: 0x271100002721},
		modelTuple{type64: 0x2700000027, matchRI: 0x022c, match64: 0x00000000, model64: 0x272100002731},
		modelTuple{type64: 0x2700000027, matchRI: 0x022d, match64: 0x00000000, model64: 0x273100002741},
		modelTuple{type64: 0x2700000027, matchRI: 0x022e, match64: 0x00000000, model64: 0x274100002751},
		modelTuple{type64: 0x2700000027, matchRI: 0x022f, match64: 0x00000000, model64: 0x275100002761},
		modelTuple{type64: 0x2700000027, matchRI: 0x0230, match64: 0x00000000, model64: 0x276100002771},
		modelTuple{type64: 0x2700000027, matchRI: 0x0231, match64: 0x00000000, model64: 0x27710000277d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0232, match64: 0x00000000, model64: 0x277d0000278c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0233, match64: 0x00000000, model64: 0x278c00002796},
		modelTuple{type64: 0x2700000027, matchRI: 0x0234, match64: 0x00000000, model64: 0x2796000027a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0235, match64: 0x00000000, model64: 0x27a7000027b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0236, match64: 0x00000000, model64: 0x27b8000027c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0237, match64: 0x00000000, model64: 0x27c9000027da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0238, match64: 0x00000000, model64: 0x27da000027f0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27f0000027f8, model64: 0x27f800002802},
		modelTuple{type64: 0x2700000027, matchRI: 0x0239, match64: 0x00000000, model64: 0x28020000280d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280d00002813, model64: 0x280d00002813},
		modelTuple{type64: 0x281300002820, matchRI: 0x023a, match64: 0x00000000, model64: 0x282000002824},
		modelTuple{type64: 0x281300002820, matchRI: 0x023b, match64: 0x00000000, model64: 0x282000002824},
		modelTuple{type64: 0x281300002820, matchRI: 0x023c, match64: 0x00000000, model64: 0x28240000282c},
		modelTuple{type64: 0x2700000027, matchRI: 0x023d, match64: 0x00000000, model64: 0x282c00002838},
		modelTuple{type64: 0x281300002820, matchRI: 0x023e, match64: 0x00000000, model64: 0x283800002849},
		modelTuple{type64: 0x281300002820, matchRI: 0x023f, match64: 0x00000000, model64: 0x284900002854},
		modelTuple{type64: 0x281300002820, matchRI: 0x0240, match64: 0x00000000, model64: 0x28540000285f},
		modelTuple{type64: 0x281300002820, matchRI: 0x0241, match64: 0x00000000, model64: 0x285f00002872},
		modelTuple{type64: 0x281300002820, matchRI: -0x0001, match64: 0x287200002882, model64: 0x288200002887},
		modelTuple{type64: 0x24300000245, matchRI: 0x0242, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0244, match64: 0x00000000, model64: 0x2894000028a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0245, match64: 0x00000000, model64: 0x28a2000028b3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28be000028c5, model64: 0x28c5000028cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28cd000028d3, model64: 0x28d3000028da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28de000028eb, model64: 0x28de000028eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28eb000028f0, model64: 0x28eb000028f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28f0000028fe, model64: 0x28fe0000290c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0249, match64: 0x00000000, model64: 0x8c7000008d0},
		modelTuple{type64: 0x38400000391, matchRI: 0x024a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x024b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x024c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x291b0000291e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0250, match64: 0x00000000, model64: 0x29270000292e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0251, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0253, match64: 0x00000000, model64: 0x293300002942},
		modelTuple{type64: 0x2700000027, matchRI: 0x0254, match64: 0x00000000, model64: 0x29420000294f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0255, match64: 0x00000000, model64: 0x294f00002960},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0259, match64: 0x00000000, model64: 0x296f00002972},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x025c, match64: 0x00000000, model64: 0x297b00002986},
		modelTuple{type64: 0x2700000027, matchRI: 0x025d, match64: 0x00000000, model64: 0x298600002991},
		modelTuple{type64: 0x2700000027, matchRI: 0x025e, match64: 0x00000000, model64: 0x299100002998},
		modelTuple{type64: 0x2700000027, matchRI: 0x025f, match64: 0x00000000, model64: 0x2998000029a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0260, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x281300002820, matchRI: 0x0262, match64: 0x00000000, model64: 0x29a8000029af},
		modelTuple{type64: 0x281300002820, matchRI: -0x0001, match64: 0x29af000029b6, model64: 0x2700000027},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x29b6000029be, model64: 0x29c6000029d0},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x29d0000029d8, model64: 0x29d8000029e2},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x29e2000029ea, model64: 0x29ea000029fd},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x29fd00002a05, model64: 0x2a0500002a18},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x2a1800002a20, model64: 0x2a2000002a33},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x2a3300002a3b, model64: 0x2a3b00002a4e},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0263, match64: 0x00000000, model64: 0x2a4e00002a61},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0264, match64: 0x00000000, model64: 0x2a6100002a74},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0265, match64: 0x00000000, model64: 0x2a7400002a81},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0266, match64: 0x00000000, model64: 0x2a8100002a8e},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0267, match64: 0x00000000, model64: 0x2a8e00002aa3},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0268, match64: 0x00000000, model64: 0x2aa300002ab8},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0269, match64: 0x00000000, model64: 0x2ab800002acb},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026a, match64: 0x00000000, model64: 0x2acb00002ade},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x2ade00002ae7, model64: 0x2ae700002af2},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x2af200002afa, model64: 0x2afa00002b07},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026b, match64: 0x00000000, model64: 0x2b0700002b1b},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026c, match64: 0x00000000, model64: 0x2b1b00002b2f},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026d, match64: 0x00000000, model64: 0x2b2f00002b42},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026e, match64: 0x00000000, model64: 0x2b4200002b55},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x026f, match64: 0x00000000, model64: 0x2b5500002b68},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0270, match64: 0x00000000, model64: 0x2b6800002b7b},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0271, match64: 0x00000000, model64: 0x2b7b00002b80},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0272, match64: 0x00000000, model64: 0x2b8000002b8e},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0273, match64: 0x00000000, model64: 0x2b8e00002b9c},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0274, match64: 0x00000000, model64: 0x2b9c00002baa},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0275, match64: 0x00000000, model64: 0x2baa00002bb8},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0276, match64: 0x00000000, model64: 0x2bb800002bcb},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0277, match64: 0x00000000, model64: 0x2bcb00002bd9},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0278, match64: 0x00000000, model64: 0x2bd900002be4},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0279, match64: 0x00000000, model64: 0x2be400002bf3},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027a, match64: 0x00000000, model64: 0x2bf300002c02},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027b, match64: 0x00000000, model64: 0x2c0200002c0d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027c, match64: 0x00000000, model64: 0x2c0d00002c18},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027d, match64: 0x00000000, model64: 0x2c1800002c23},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027e, match64: 0x00000000, model64: 0x2c1800002c23},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x027f, match64: 0x00000000, model64: 0x2c2300002c32},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0280, match64: 0x00000000, model64: 0x2c3200002c43},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0281, match64: 0x00000000, model64: 0x2c4300002c52},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0282, match64: 0x00000000, model64: 0x2c5200002c63},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0283, match64: 0x00000000, model64: 0x2c6300002c72},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0284, match64: 0x00000000, model64: 0x2c7200002c88},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0285, match64: 0x00000000, model64: 0x2c8800002c97},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0286, match64: 0x00000000, model64: 0x2c9700002ca8},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0287, match64: 0x00000000, model64: 0x2ca800002cb7},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0288, match64: 0x00000000, model64: 0x2cb700002cc8},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0289, match64: 0x00000000, model64: 0x2cc800002cd7},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028a, match64: 0x00000000, model64: 0x2cd700002ce8},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028b, match64: 0x00000000, model64: 0x2ce800002cf7},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028c, match64: 0x00000000, model64: 0x2cf700002d06},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028d, match64: 0x00000000, model64: 0x2d0600002d17},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028e, match64: 0x00000000, model64: 0x2d1700002d26},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x028f, match64: 0x00000000, model64: 0x2d2600002d35},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0290, match64: 0x00000000, model64: 0x2d3500002d44},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0291, match64: 0x00000000, model64: 0x2d4400002d57},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0292, match64: 0x00000000, model64: 0x2d5700002d69},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0293, match64: 0x00000000, model64: 0x2d6900002d80},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0294, match64: 0x00000000, model64: 0x2d8000002d92},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0295, match64: 0x00000000, model64: 0x2d9200002da4},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0296, match64: 0x00000000, model64: 0x2da400002db6},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0297, match64: 0x00000000, model64: 0x2da400002db6},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0298, match64: 0x00000000, model64: 0x2db600002dc8},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0299, match64: 0x00000000, model64: 0x2dc800002dda},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029a, match64: 0x00000000, model64: 0x2dda00002dec},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029b, match64: 0x00000000, model64: 0x2dec00002e02},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029c, match64: 0x00000000, model64: 0x2e0200002e14},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029d, match64: 0x00000000, model64: 0x2e1400002e2a},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029e, match64: 0x00000000, model64: 0x2e2a00002e40},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x029f, match64: 0x00000000, model64: 0x2e4000002e56},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a0, match64: 0x00000000, model64: 0x2e5600002e6c},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a1, match64: 0x00000000, model64: 0x2e6c00002e82},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a2, match64: 0x00000000, model64: 0x2e8200002e98},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a3, match64: 0x00000000, model64: 0x2e9800002eb3},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a4, match64: 0x00000000, model64: 0x2eb300002ece},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a5, match64: 0x00000000, model64: 0x2ece00002ee4},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a6, match64: 0x00000000, model64: 0x2ee400002eff},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a7, match64: 0x00000000, model64: 0x2eff00002f15},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a8, match64: 0x00000000, model64: 0x2f1500002f2b},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02a9, match64: 0x00000000, model64: 0x2f2b00002f41},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02aa, match64: 0x00000000, model64: 0x2f2b00002f41},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ab, match64: 0x00000000, model64: 0x2f4100002f57},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ac, match64: 0x00000000, model64: 0x2f5700002f6d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ad, match64: 0x00000000, model64: 0x2f6d00002f83},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ae, match64: 0x00000000, model64: 0x2f8300002f99},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02af, match64: 0x00000000, model64: 0x2f9900002faf},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b0, match64: 0x00000000, model64: 0x2faf00002fc5},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b1, match64: 0x00000000, model64: 0x2fc500002fdb},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b2, match64: 0x00000000, model64: 0x2fdb00002fed},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b3, match64: 0x00000000, model64: 0x2fed00003003},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b4, match64: 0x00000000, model64: 0x300300003019},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b5, match64: 0x00000000, model64: 0x30190000302f},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b6, match64: 0x00000000, model64: 0x302f00003045},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b7, match64: 0x00000000, model64: 0x30450000305b},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b8, match64: 0x00000000, model64: 0x305b00003071},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02b9, match64: 0x00000000, model64: 0x307100003087},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ba, match64: 0x00000000, model64: 0x30870000309d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02bb, match64: 0x00000000, model64: 0x309d000030b3},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02bc, match64: 0x00000000, model64: 0x30b3000030c9},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02bd, match64: 0x00000000, model64: 0x30c9000030df},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02be, match64: 0x00000000, model64: 0x30df000030f5},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02bf, match64: 0x00000000, model64: 0x30f500003110},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c0, match64: 0x00000000, model64: 0x31100000312b},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c1, match64: 0x00000000, model64: 0x312b00003146},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c2, match64: 0x00000000, model64: 0x314600003161},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c3, match64: 0x00000000, model64: 0x316100003177},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c4, match64: 0x00000000, model64: 0x31770000318d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c5, match64: 0x00000000, model64: 0x318d000031a3},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c6, match64: 0x00000000, model64: 0x31a3000031b9},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c7, match64: 0x00000000, model64: 0x31b9000031cf},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c8, match64: 0x00000000, model64: 0x31cf000031e5},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02c9, match64: 0x00000000, model64: 0x31e500003200},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ca, match64: 0x00000000, model64: 0x32000000321b},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02cb, match64: 0x00000000, model64: 0x321b00003231},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02cc, match64: 0x00000000, model64: 0x323100003247},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02cd, match64: 0x00000000, model64: 0x32470000325d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02ce, match64: 0x00000000, model64: 0x325d00003273},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02cf, match64: 0x00000000, model64: 0x325d00003273},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d0, match64: 0x00000000, model64: 0x327300003289},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d1, match64: 0x00000000, model64: 0x32890000329f},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d2, match64: 0x00000000, model64: 0x329f000032b5},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d3, match64: 0x00000000, model64: 0x32b5000032d0},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d4, match64: 0x00000000, model64: 0x32d0000032e6},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d5, match64: 0x00000000, model64: 0x32e6000032fc},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d6, match64: 0x00000000, model64: 0x32fc00003317},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d7, match64: 0x00000000, model64: 0x331700003326},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d8, match64: 0x00000000, model64: 0x332600003335},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02d9, match64: 0x00000000, model64: 0x333500003344},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02da, match64: 0x00000000, model64: 0x334400003353},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02db, match64: 0x00000000, model64: 0x335300003362},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02dc, match64: 0x00000000, model64: 0x336200003371},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02dd, match64: 0x00000000, model64: 0x337100003380},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02de, match64: 0x00000000, model64: 0x33800000338f},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02df, match64: 0x00000000, model64: 0x338f0000339e},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e0, match64: 0x00000000, model64: 0x339e000033ad},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e1, match64: 0x00000000, model64: 0x33ad000033c6},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e2, match64: 0x00000000, model64: 0x33c6000033e4},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e3, match64: 0x00000000, model64: 0x33e4000033f2},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e4, match64: 0x00000000, model64: 0x33f200003404},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e5, match64: 0x00000000, model64: 0x33e4000033f2},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e6, match64: 0x00000000, model64: 0x340400003417},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e7, match64: 0x00000000, model64: 0x341700003426},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e8, match64: 0x00000000, model64: 0x342600003437},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x02e9, match64: 0x00000000, model64: 0x343700003448},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ea, match64: 0x00000000, model64: 0x34480000344e},
		modelTuple{type64: 0x24700000251, matchRI: 0x02eb, match64: 0x00000000, model64: 0x344e00003457},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ec, match64: 0x00000000, model64: 0x345700003461},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ed, match64: 0x00000000, model64: 0x346100003469},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ee, match64: 0x00000000, model64: 0x346900003472},
		modelTuple{type64: 0x24700000251, matchRI: 0x02ef, match64: 0x00000000, model64: 0x34720000347a},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f0, match64: 0x00000000, model64: 0x347a00003483},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f1, match64: 0x00000000, model64: 0x34830000348c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02f2, match64: 0x00000000, model64: 0x348c00003499},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f3, match64: 0x00000000, model64: 0x3499000034a1},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f4, match64: 0x00000000, model64: 0x34a1000034aa},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02f5, match64: 0x00000000, model64: 0x34aa000034b8},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f6, match64: 0x00000000, model64: 0x34b8000034c1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02f7, match64: 0x00000000, model64: 0x34c1000034ce},
		modelTuple{type64: 0x24700000251, matchRI: 0x02f8, match64: 0x00000000, model64: 0x34ce000034d6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02f9, match64: 0x00000000, model64: 0x34d6000034e3},
		modelTuple{type64: 0x24700000251, matchRI: 0x02fa, match64: 0x00000000, model64: 0x34e3000034eb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02fb, match64: 0x00000000, model64: 0x34eb000034f8},
		modelTuple{type64: 0x24700000251, matchRI: 0x02fc, match64: 0x00000000, model64: 0x34f800003501},
		modelTuple{type64: 0x24700000251, matchRI: 0x02fd, match64: 0x00000000, model64: 0x35010000350a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02fe, match64: 0x00000000, model64: 0x350a00003512},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x02ff, match64: 0x00000000, model64: 0x351200003523},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0300, match64: 0x00000000, model64: 0x352300003530},
		modelTuple{type64: 0x24700000251, matchRI: 0x0301, match64: 0x00000000, model64: 0x353000003539},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0302, match64: 0x00000000, model64: 0x353900003549},
		modelTuple{type64: 0x24700000251, matchRI: 0x0303, match64: 0x00000000, model64: 0x354900003557},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0304, match64: 0x00000000, model64: 0x355700003568},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0305, match64: 0x00000000, model64: 0x356800003575},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0306, match64: 0x00000000, model64: 0x35750000357e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0307, match64: 0x00000000, model64: 0x357e0000358f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0308, match64: 0x00000000, model64: 0x358f0000359c},
		modelTuple{type64: 0x24700000251, matchRI: 0x0309, match64: 0x00000000, model64: 0x359c000035aa},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030a, match64: 0x00000000, model64: 0x35aa000035b3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030b, match64: 0x00000000, model64: 0x35b3000035c3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030c, match64: 0x00000000, model64: 0x35c3000035d4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030d, match64: 0x00000000, model64: 0x35d4000035e1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030e, match64: 0x00000000, model64: 0x35e1000035ef},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x030f, match64: 0x00000000, model64: 0x35ef000035f8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0310, match64: 0x00000000, model64: 0x35f800003609},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0311, match64: 0x00000000, model64: 0x360900003616},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0312, match64: 0x00000000, model64: 0x361600003624},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0313, match64: 0x00000000, model64: 0x36240000362d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0314, match64: 0x00000000, model64: 0x362d0000363e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0315, match64: 0x00000000, model64: 0x363e0000364b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0316, match64: 0x00000000, model64: 0x364b00003659},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0317, match64: 0x00000000, model64: 0x365900003662},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0318, match64: 0x00000000, model64: 0x366200003666},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0319, match64: 0x00000000, model64: 0x36660000366c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031a, match64: 0x00000000, model64: 0x366c00003675},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031b, match64: 0x00000000, model64: 0x36750000367b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031c, match64: 0x00000000, model64: 0x367b00003681},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031d, match64: 0x00000000, model64: 0x368100003689},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031e, match64: 0x00000000, model64: 0x368900003694},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x031f, match64: 0x00000000, model64: 0x36940000369f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0320, match64: 0x00000000, model64: 0x369f000036aa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0321, match64: 0x00000000, model64: 0x36aa000036b4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0322, match64: 0x00000000, model64: 0x36b4000036c0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0323, match64: 0x00000000, model64: 0x36c0000036cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0324, match64: 0x00000000, model64: 0x36cd000036d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0325, match64: 0x00000000, model64: 0x36d7000036e6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0326, match64: 0x00000000, model64: 0x36e6000036f3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0327, match64: 0x00000000, model64: 0x36f3000036fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0328, match64: 0x00000000, model64: 0x36fd00003708},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0329, match64: 0x00000000, model64: 0x370800003716},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032a, match64: 0x00000000, model64: 0x371600003729},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032b, match64: 0x00000000, model64: 0x372900003737},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032c, match64: 0x00000000, model64: 0x373700003747},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032d, match64: 0x00000000, model64: 0x37470000375b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032e, match64: 0x00000000, model64: 0x375b0000376a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x032f, match64: 0x00000000, model64: 0x376a00003779},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0330, match64: 0x00000000, model64: 0x377900003784},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0331, match64: 0x00000000, model64: 0x37840000378e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0332, match64: 0x00000000, model64: 0x378e0000379a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0333, match64: 0x00000000, model64: 0x379a000037ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0334, match64: 0x00000000, model64: 0x37ab000037b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0335, match64: 0x00000000, model64: 0x37b7000037cc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0336, match64: 0x00000000, model64: 0x37cc000037dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0337, match64: 0x00000000, model64: 0x37dc000037eb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0338, match64: 0x00000000, model64: 0x37eb000037f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0339, match64: 0x00000000, model64: 0x37f500003804},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033a, match64: 0x00000000, model64: 0x38040000380e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033b, match64: 0x00000000, model64: 0x380e00003821},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033c, match64: 0x00000000, model64: 0x38210000382f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033d, match64: 0x00000000, model64: 0x382f0000383f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033e, match64: 0x00000000, model64: 0x383f0000384a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x033f, match64: 0x00000000, model64: 0x384a0000385d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0340, match64: 0x00000000, model64: 0x385d0000386b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0341, match64: 0x00000000, model64: 0x386b00003880},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0342, match64: 0x00000000, model64: 0x388000003890},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0343, match64: 0x00000000, model64: 0x3890000038a3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0344, match64: 0x00000000, model64: 0x38a3000038b1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0345, match64: 0x00000000, model64: 0x38b1000038c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0346, match64: 0x00000000, model64: 0x38c4000038d2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0347, match64: 0x00000000, model64: 0x38d2000038e5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0348, match64: 0x00000000, model64: 0x38e5000038f3},
		modelTuple{type64: 0x24300000245, matchRI: 0x0349, match64: 0x00000000, model64: 0x38f3000038fd},
		modelTuple{type64: 0x24300000245, matchRI: 0x034a, match64: 0x00000000, model64: 0x38fd00003907},
		modelTuple{type64: 0x24300000245, matchRI: 0x034b, match64: 0x00000000, model64: 0x390700003911},
		modelTuple{type64: 0x24300000245, matchRI: 0x034c, match64: 0x00000000, model64: 0x39110000391c},
		modelTuple{type64: 0x24300000245, matchRI: 0x034d, match64: 0x00000000, model64: 0x391c0000392e},
		modelTuple{type64: 0x24300000245, matchRI: 0x034e, match64: 0x00000000, model64: 0x392e00003936},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x034f, match64: 0x00000000, model64: 0x39360000393d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0350, match64: 0x00000000, model64: 0x366200003666},
		modelTuple{type64: 0x24700000251, matchRI: 0x0351, match64: 0x00000000, model64: 0x393d00003946},
		modelTuple{type64: 0x24700000251, matchRI: 0x0352, match64: 0x00000000, model64: 0x393d00003946},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x394e0000396b, model64: 0x396b0000397f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0354, match64: 0x00000000, model64: 0x397f00003985},
		modelTuple{type64: 0x2700000027, matchRI: 0x0355, match64: 0x00000000, model64: 0x397f00003985},
		modelTuple{type64: 0x2700000027, matchRI: 0x0356, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0358, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39850000399d, model64: 0x399d000039ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0359, match64: 0x00000000, model64: 0x39ae000039bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39bc000039c4, model64: 0x39c4000039d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39d3000039df, model64: 0x39df000039eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x39eb000039f2, model64: 0x39f2000039fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x035a, match64: 0x00000000, model64: 0x39fc00003a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x035b, match64: 0x00000000, model64: 0x3a0300003a09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x035c, match64: 0x00000000, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x035d, match64: 0x00000000, model64: 0x3a0900003a17},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3a1700003a1f, model64: 0x3a1f00003a27},
		modelTuple{type64: 0x2700000027, matchRI: 0x035e, match64: 0x00000000, model64: 0x3a2700003a34},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x035f, match64: 0x00000000, model64: 0x3a3400003a3d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0360, match64: 0x00000000, model64: 0x3a3d00003a4a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0361, match64: 0x00000000, model64: 0x3a4a00003a56},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3a5600003a6d, model64: 0x3a6d00003a7d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3a7d00003a88, model64: 0x3a8800003a9a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0362, match64: 0x00000000, model64: 0x3a9a00003aac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0363, match64: 0x00000000, model64: 0x3aac00003ab7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0364, match64: 0x00000000, model64: 0x3ab700003abd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0365, match64: 0x00000000, model64: 0x3abd00003acd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3acd00003ade, model64: 0x3ade00003aec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0366, match64: 0x00000000, model64: 0x3aec00003af6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0367, match64: 0x00000000, model64: 0x3af600003afd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0368, match64: 0x00000000, model64: 0x3afd00003b05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0369, match64: 0x00000000, model64: 0x3b0500003b10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x036a, match64: 0x00000000, model64: 0x3b1000003b1b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x036b, match64: 0x00000000, model64: 0x3b1b00003b25},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x036c, match64: 0x00000000, model64: 0x3b2500003b32},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x036d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x036e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x036f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b3d00003b49, model64: 0x3b4900003b4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b4c00003b57, model64: 0x3b5700003b59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b5900003b64, model64: 0x3b6400003b66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3b6600003b71, model64: 0x3b7100003b73},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3b7900003b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0372, match64: 0x00000000, model64: 0x3b8700003b91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0373, match64: 0x00000000, model64: 0x3b9100003ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0374, match64: 0x00000000, model64: 0x3ba000003baa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0375, match64: 0x00000000, model64: 0x3baa00003bb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0376, match64: 0x00000000, model64: 0x3bb100003bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0377, match64: 0x00000000, model64: 0x3bb800003bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0378, match64: 0x00000000, model64: 0x3bc100003bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0379, match64: 0x00000000, model64: 0x3bc700003bd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x037a, match64: 0x00000000, model64: 0x3bd000003bdb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3be900003bf1, model64: 0x3bf100003bf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3bf500003bfb, model64: 0x3bfb00003c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x037d, match64: 0x00000000, model64: 0x3c0000003c04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c0400003c09, model64: 0x3c0900003c0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c0d00003c13, model64: 0x3c1300003c18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c1800003c1e, model64: 0x3c1e00003c23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c2300003c29, model64: 0x3c2900003c2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c2e00003c37, model64: 0x3c3700003c3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c3f00003c45, model64: 0x3c4500003c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c4a00003c50, model64: 0x3c5000003c55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c5500003c5b, model64: 0x3c5b00003c60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c6000003c66, model64: 0x3c6600003c67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c6700003c6c, model64: 0x3c6c00003c70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c7000003c75, model64: 0x3c7500003c79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c7900003c7f, model64: 0x3c7f00003c84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c8400003c8a, model64: 0x3c8a00003c8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c8f00003c95, model64: 0x3c9500003c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3c9a00003c9f, model64: 0x3c9f00003ca3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3ca300003ca8, model64: 0x3ca800003cac},
		modelTuple{type64: 0x2700000027, matchRI: 0x037e, match64: 0x00000000, model64: 0x3cac00003cb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cb100003cb6, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x037f, match64: 0x00000000, model64: 0x3cb800003cbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0380, match64: 0x00000000, model64: 0x3cbe00003cc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cc400003ccb, model64: 0x3ccb00003cd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cd100003cd8, model64: 0x3cd800003cde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cde00003ce9, model64: 0x3ce900003cee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cee00003cfa, model64: 0x3cfa00003cff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3cff00003d0a, model64: 0x3d0a00003d0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x3d0f00003d1c, model64: 0x3d1c00003d22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0381, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0384, match64: 0x00000000, model64: 0x3d2e00003d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0385, match64: 0x00000000, model64: 0x3d3400003d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0386, match64: 0x00000000, model64: 0x3d3c00003d43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0387, match64: 0x00000000, model64: 0x3d4300003d48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0388, match64: 0x00000000, model64: 0x3d4800003d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0389, match64: 0x00000000, model64: 0x3d4b00003d4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x038a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x038b, match64: 0x00000000, model64: 0x3d4f00003d55},
		modelTuple{type64: 0x2700000027, matchRI: 0x038c, match64: 0x00000000, model64: 0x3d5500003d5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x038d, match64: 0x00000000, model64: 0x3d5c00003d5f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x038e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x038f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0391, match64: 0x00000000, model64: 0x3d6700003d72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0392, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0393, match64: 0x00000000, model64: 0x3d7200003d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0395, match64: 0x00000000, model64: 0x3d8800003d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x0397, match64: 0x00000000, model64: 0x3d9800003d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0398, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x039a, match64: 0x00000000, model64: 0x3da200003daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x039b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x039d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x039e, match64: 0x00000000, model64: 0x3db000003db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x039f, match64: 0x00000000, model64: 0x3db400003dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a1, match64: 0x00000000, model64: 0x3dc300003dc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a2, match64: 0x00000000, model64: 0x3dc800003dcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a3, match64: 0x00000000, model64: 0x3dcc00003dd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a4, match64: 0x00000000, model64: 0x3dd000003dd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a5, match64: 0x00000000, model64: 0x3dd700003ddd},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a6, match64: 0x00000000, model64: 0x3ddd00003de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a7, match64: 0x00000000, model64: 0x3de700003deb},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a8, match64: 0x00000000, model64: 0x3deb00003df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03a9, match64: 0x00000000, model64: 0x3df000003df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x03aa, match64: 0x00000000, model64: 0x3df500003df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ab, match64: 0x00000000, model64: 0x3df900003dff},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ac, match64: 0x00000000, model64: 0x3dff00003e04},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ad, match64: 0x00000000, model64: 0x3e0400003e08},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ae, match64: 0x00000000, model64: 0x3e0800003e0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x03af, match64: 0x00000000, model64: 0x3e0d00003e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b0, match64: 0x00000000, model64: 0x3e1500003e20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b1, match64: 0x00000000, model64: 0x3e2000003e2d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b2, match64: 0x00000000, model64: 0x3e2d00003e33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b3, match64: 0x00000000, model64: 0x3e3300003e38},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b4, match64: 0x00000000, model64: 0x3e3800003e44},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x03b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03b9, match64: 0x00000000, model64: 0x3e5200003e5d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ba, match64: 0x00000000, model64: 0x3e5d00003e6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bb, match64: 0x00000000, model64: 0x3e6d00003e77},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3e7700003e7d, model64: 0x3e7d00003e85},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bc, match64: 0x00000000, model64: 0x3e8500003e94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bd, match64: 0x00000000, model64: 0x3e9400003ea7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03be, match64: 0x00000000, model64: 0x3ea700003eb8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03bf, match64: 0x00000000, model64: 0x3eb800003ec2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c0, match64: 0x00000000, model64: 0x3ec200003ec6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c1, match64: 0x00000000, model64: 0x3ec600003ed2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c2, match64: 0x00000000, model64: 0x3ed200003edc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c3, match64: 0x00000000, model64: 0x3edc00003eee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c4, match64: 0x00000000, model64: 0x3eee00003efb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c5, match64: 0x00000000, model64: 0x3efb00003f05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c6, match64: 0x00000000, model64: 0x3f0500003f11},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c7, match64: 0x00000000, model64: 0x3f1100003f27},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c8, match64: 0x00000000, model64: 0x3f2700003f32},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03c9, match64: 0x00000000, model64: 0x3f3200003f48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ca, match64: 0x00000000, model64: 0x3f4800003f5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03cb, match64: 0x00000000, model64: 0x3f5e00003f75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03cc, match64: 0x00000000, model64: 0x3f7500003f8b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03cd, match64: 0x00000000, model64: 0x3f8b00003fa1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03ce, match64: 0x00000000, model64: 0x3fa100003fb6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3fb600003fc2, model64: 0x3fc200003fd6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03cf, match64: 0x00000000, model64: 0x3fd600003fe2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3fe200003fec, model64: 0x3fec00003ff5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x3ff500003ff9, model64: 0x3ff900004003},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d0, match64: 0x00000000, model64: 0x40030000400d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d1, match64: 0x00000000, model64: 0x400d00004017},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d2, match64: 0x00000000, model64: 0x401700004021},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d3, match64: 0x00000000, model64: 0x40210000402d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x402d00004031, model64: 0x40310000403d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d5, match64: 0x00000000, model64: 0x403d0000404d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d6, match64: 0x00000000, model64: 0x404d00004059},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x03d7, match64: 0x00000000, model64: 0x405900004062},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x406200004075, model64: 0x407500004090},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x40900000409b, model64: 0x409b000040a1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x03d8, match64: 0x00000000, model64: 0x40a1000040a8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x03d9, match64: 0x00000000, model64: 0x40a8000040b6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x03da, match64: 0x00000000, model64: 0x40b6000040bf},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x03db, match64: 0x00000000, model64: 0x40bf000040d1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x03dc, match64: 0x00000000, model64: 0x40d1000040da},
		modelTuple{type64: 0x2700000027, matchRI: 0x03dd, match64: 0x00000000, model64: 0x40da000040ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x03de, match64: 0x00000000, model64: 0x40ea000040f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03df, match64: 0x00000000, model64: 0x40f3000040ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e0, match64: 0x00000000, model64: 0x40ff0000410d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x410d00004119, model64: 0x411900004122},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41220000412e, model64: 0x412e0000413e},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e1, match64: 0x00000000, model64: 0x413e00004148},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e2, match64: 0x00000000, model64: 0x414800004158},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e3, match64: 0x00000000, model64: 0x415800004161},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e4, match64: 0x00000000, model64: 0x41610000416f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e5, match64: 0x00000000, model64: 0x416f00004178},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e6, match64: 0x00000000, model64: 0x417800004182},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e7, match64: 0x00000000, model64: 0x41820000418b},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e8, match64: 0x00000000, model64: 0x418b00004199},
		modelTuple{type64: 0x2700000027, matchRI: 0x03e9, match64: 0x00000000, model64: 0x4199000041a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ea, match64: 0x00000000, model64: 0x41a2000041b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03eb, match64: 0x00000000, model64: 0x41b0000041c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ec, match64: 0x00000000, model64: 0x41c2000041d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ed, match64: 0x00000000, model64: 0x41d0000041d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ee, match64: 0x00000000, model64: 0x41d9000041e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ef, match64: 0x00000000, model64: 0x41e3000041ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f0, match64: 0x00000000, model64: 0x41ef000041fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x41fe00004204, model64: 0x420400004213},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f1, match64: 0x00000000, model64: 0x421300004222},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f2, match64: 0x00000000, model64: 0x42220000422b},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f3, match64: 0x00000000, model64: 0x422b00004238},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f4, match64: 0x00000000, model64: 0x423800004246},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f5, match64: 0x00000000, model64: 0x424600004250},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f6, match64: 0x00000000, model64: 0x425000004259},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f7, match64: 0x00000000, model64: 0x425900004262},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f8, match64: 0x00000000, model64: 0x42620000426f},
		modelTuple{type64: 0x2700000027, matchRI: 0x03f9, match64: 0x00000000, model64: 0x426f00004278},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fa, match64: 0x00000000, model64: 0x427800004283},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fb, match64: 0x00000000, model64: 0x428300004296},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fc, match64: 0x00000000, model64: 0x41b0000041c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fd, match64: 0x00000000, model64: 0x4296000042a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x03fe, match64: 0x00000000, model64: 0x42a8000042b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x03ff, match64: 0x00000000, model64: 0x42b7000042c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0400, match64: 0x00000000, model64: 0x42c1000042ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0401, match64: 0x00000000, model64: 0x42ce000042dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0402, match64: 0x00000000, model64: 0x42b7000042c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0403, match64: 0x00000000, model64: 0x42dd000042ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0404, match64: 0x00000000, model64: 0x42ec00004300},
		modelTuple{type64: 0x2700000027, matchRI: 0x0405, match64: 0x00000000, model64: 0x430000004316},
		modelTuple{type64: 0x2700000027, matchRI: 0x0406, match64: 0x00000000, model64: 0x43160000432c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0407, match64: 0x00000000, model64: 0x432c00004339},
		modelTuple{type64: 0x2700000027, matchRI: 0x0408, match64: 0x00000000, model64: 0x43390000434a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0409, match64: 0x00000000, model64: 0x434a00004358},
		modelTuple{type64: 0x2700000027, matchRI: 0x040a, match64: 0x00000000, model64: 0x435800004368},
		modelTuple{type64: 0x2700000027, matchRI: 0x040b, match64: 0x00000000, model64: 0x436800004376},
		modelTuple{type64: 0x2700000027, matchRI: 0x040c, match64: 0x00000000, model64: 0x435800004368},
		modelTuple{type64: 0x2700000027, matchRI: 0x040d, match64: 0x00000000, model64: 0x43760000437f},
		modelTuple{type64: 0x2700000027, matchRI: 0x040e, match64: 0x00000000, model64: 0x437f0000438e},
		modelTuple{type64: 0x2700000027, matchRI: 0x040f, match64: 0x00000000, model64: 0x438e0000439d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0410, match64: 0x00000000, model64: 0x439d000043b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0411, match64: 0x00000000, model64: 0x43b1000043c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0412, match64: 0x00000000, model64: 0x42220000422b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0413, match64: 0x00000000, model64: 0x43c1000043ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0414, match64: 0x00000000, model64: 0x43ce000043e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0415, match64: 0x00000000, model64: 0x43e0000043ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0416, match64: 0x00000000, model64: 0x43ed000043f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0417, match64: 0x00000000, model64: 0x43f900004402},
		modelTuple{type64: 0x2700000027, matchRI: 0x0418, match64: 0x00000000, model64: 0x44020000440d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0419, match64: 0x00000000, model64: 0x440d00004418},
		modelTuple{type64: 0x2700000027, matchRI: 0x041a, match64: 0x00000000, model64: 0x441800004423},
		modelTuple{type64: 0x2700000027, matchRI: 0x041b, match64: 0x00000000, model64: 0x44230000442e},
		modelTuple{type64: 0x2700000027, matchRI: 0x041c, match64: 0x00000000, model64: 0x442e0000443a},
		modelTuple{type64: 0x2700000027, matchRI: 0x041d, match64: 0x00000000, model64: 0x443a00004445},
		modelTuple{type64: 0x2700000027, matchRI: 0x041e, match64: 0x00000000, model64: 0x444500004450},
		modelTuple{type64: 0x2700000027, matchRI: 0x041f, match64: 0x00000000, model64: 0x44500000445b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0420, match64: 0x00000000, model64: 0x445b0000446a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0421, match64: 0x00000000, model64: 0x446a0000448c},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x448c00004493, model64: 0x4493000044a2},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0422, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x7130000071d, matchRI: 0x0423, match64: 0x00000000, model64: 0x44a2000044b0},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x44b0000044c0, model64: 0x44c0000044c4},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0424, match64: 0x00000000, model64: 0x44c4000044ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0425, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0426, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0427, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0428, match64: 0x00000000, model64: 0x44ce000044dc},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0429, match64: 0x00000000, model64: 0x44dc000044ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x042b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x042e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x042f, match64: 0x00000000, model64: 0x45160000451d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45230000452c, model64: 0x452c00004535},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45350000453e, model64: 0x453e00004547},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x454700004551, model64: 0x45510000455b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0431, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0435, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0436, match64: 0x00000000, model64: 0x456e00004574},
		modelTuple{type64: 0x2700000027, matchRI: 0x0437, match64: 0x00000000, model64: 0x456e00004574},
		modelTuple{type64: 0x2700000027, matchRI: 0x0438, match64: 0x00000000, model64: 0x456e00004574},
		modelTuple{type64: 0x2700000027, matchRI: 0x043a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x457e0000458a},
		modelTuple{type64: 0x2700000027, matchRI: 0x043d, match64: 0x00000000, model64: 0x459000004598},
		modelTuple{type64: 0x2700000027, matchRI: 0x043e, match64: 0x00000000, model64: 0x4598000045a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45a9000045b2, model64: 0x45b2000045bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45bb000045c4, model64: 0x45c4000045cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x45cd000045da, model64: 0x45da000045e9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0440, match64: 0x00000000, model64: 0x45e9000045ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0441, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0443, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0445, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0446, match64: 0x00000000, model64: 0x45f500004601},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46010000460d, model64: 0x460d0000461b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0447, match64: 0x00000000, model64: 0x461b00004628},
		modelTuple{type64: 0x2700000027, matchRI: 0x0449, match64: 0x00000000, model64: 0x462e00004635},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x044c, match64: 0x00000000, model64: 0x46470000464c},
		modelTuple{type64: 0x2700000027, matchRI: 0x044d, match64: 0x00000000, model64: 0x464c00004653},
		modelTuple{type64: 0x2700000027, matchRI: 0x044e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x044f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46530000465a, model64: 0x465a00004664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x466400004672, model64: 0x467200004680},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x468000004689, model64: 0x468000004689},
		modelTuple{type64: 0x2700000027, matchRI: 0x0450, match64: 0x00000000, model64: 0x468900004692},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4692000046a0, model64: 0x46a0000046ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0451, match64: 0x00000000, model64: 0x46ae000046ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0453, match64: 0x00000000, model64: 0x46c4000046cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0454, match64: 0x00000000, model64: 0x46cb000046d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0455, match64: 0x00000000, model64: 0x46dd000046e6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x46ef000046fd, model64: 0x46ef000046fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0459, match64: 0x00000000, model64: 0x470600004724},
		modelTuple{type64: 0x2700000027, matchRI: 0x045a, match64: 0x00000000, model64: 0x47240000473b},
		modelTuple{type64: 0x2700000027, matchRI: 0x045b, match64: 0x00000000, model64: 0x473b00004758},
		modelTuple{type64: 0x2700000027, matchRI: 0x045c, match64: 0x00000000, model64: 0x475800004773},
		modelTuple{type64: 0x2700000027, matchRI: 0x045d, match64: 0x00000000, model64: 0x47730000478b},
		modelTuple{type64: 0x2700000027, matchRI: 0x045e, match64: 0x00000000, model64: 0x478b000047a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x045f, match64: 0x00000000, model64: 0x47a2000047ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0460, match64: 0x00000000, model64: 0x47ba000047d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0461, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0462, match64: 0x00000000, model64: 0x47d7000047e4},
		modelTuple{type64: 0x24700000251, matchRI: 0x0463, match64: 0x00000000, model64: 0x47e4000047fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0465, match64: 0x00000000, model64: 0x47fd00004808},
		modelTuple{type64: 0x2700000027, matchRI: 0x0466, match64: 0x00000000, model64: 0x480800004815},
		modelTuple{type64: 0x2700000027, matchRI: 0x0467, match64: 0x00000000, model64: 0x48150000481d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0469, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x046a, match64: 0x00000000, model64: 0x482000004824},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x482400004828, model64: 0x482400004828},
		modelTuple{type64: 0x2700000027, matchRI: 0x046b, match64: 0x00000000, model64: 0x482800004833},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48360000483f, model64: 0x483f00004848},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x48480000484f, model64: 0x48480000484f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x485800004861},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x046e, match64: 0x00000000, model64: 0x486400004867},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x046f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x486700004870, model64: 0x487000004879},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48790000487f, model64: 0x487f00004885},
		modelTuple{type64: 0x2700000027, matchRI: 0x0470, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0472, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x488f00004897, model64: 0x489700004899},
		modelTuple{type64: 0x2700000027, matchRI: 0x0474, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0476, match64: 0x00000000, model64: 0x489d000048aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0477, match64: 0x00000000, model64: 0x48aa000048b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0478, match64: 0x00000000, model64: 0x48b4000048c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x047a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x047b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x047f, match64: 0x00000000, model64: 0x48d9000048e0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x48ef000048f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0481, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0483, match64: 0x00000000, model64: 0x49010000490c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0486, match64: 0x00000000, model64: 0x492200004929},
		modelTuple{type64: 0x2700000027, matchRI: 0x0487, match64: 0x00000000, model64: 0x492200004929},
		modelTuple{type64: 0x2700000027, matchRI: 0x0488, match64: 0x00000000, model64: 0x492200004929},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x048a, match64: 0x00000000, model64: 0x492f0000493a},
		modelTuple{type64: 0x2700000027, matchRI: 0x048b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x048e, match64: 0x00000000, model64: 0x49470000494d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x048f, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0490, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x495300004956, model64: 0x495300004956},
		modelTuple{type64: 0x2700000027, matchRI: 0x0491, match64: 0x00000000, model64: 0x495600004959},
		modelTuple{type64: 0x2700000027, matchRI: 0x0492, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49610000496b, model64: 0x49610000496b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0493, match64: 0x00000000, model64: 0x496b00004971},
		modelTuple{type64: 0x2700000027, matchRI: 0x0494, match64: 0x00000000, model64: 0x497100004975},
		modelTuple{type64: 0x2700000027, matchRI: 0x0495, match64: 0x00000000, model64: 0x497500004982},
		modelTuple{type64: 0x24300000245, matchRI: 0x0496, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0497, match64: 0x00000000, model64: 0x49820000498b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0499, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x049a, match64: 0x00000000, model64: 0x499200004995},
		modelTuple{type64: 0x2700000027, matchRI: 0x049b, match64: 0x00000000, model64: 0x49950000499d},
		modelTuple{type64: 0x2700000027, matchRI: 0x049c, match64: 0x00000000, model64: 0x499d000049a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x049d, match64: 0x00000000, model64: 0x49a7000049b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x049e, match64: 0x00000000, model64: 0x49b2000049bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x049f, match64: 0x00000000, model64: 0x49bc000049c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a0, match64: 0x00000000, model64: 0x49c3000049c9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49dd000049e3, model64: 0x49dd000049e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x49e3000049eb, model64: 0x49e3000049eb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x49f400004a01},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04a8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x4a0500004a09, model64: 0x4a0500004a09},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ab, match64: 0x00000000, model64: 0x4a1b00004a21},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2600004a2c, model64: 0x4a2c00004a2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a2f00004a35, model64: 0x4a3500004a38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a3800004a3e, model64: 0x4a3e00004a41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a4100004a47, model64: 0x4a4700004a4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a4a00004a50, model64: 0x4a5000004a53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5300004a59, model64: 0x4a5900004a5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a5c00004a63, model64: 0x4a6300004a6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a6b00004a71, model64: 0x4a7100004a74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a7400004a7a, model64: 0x1d0b00001d0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a7a00004a80, model64: 0x4a8000004a86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4a8600004a8c, model64: 0x4a8c00004a8f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4a9b00004aa4, model64: 0x4aa400004aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b2, match64: 0x00000000, model64: 0x4ab300004abf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04b3, match64: 0x00000000, model64: 0x4abf00004ac7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ac700004acc, model64: 0x4acc00004ad2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4adf00004ae2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4ae800004af3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4afc00004b0a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4b1100004b1d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bb, match64: 0x00000000, model64: 0x4b2c00004b39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4b3900004b47, model64: 0x4b3900004b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04bf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c2, match64: 0x00000000, model64: 0x4b5000004b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c5, match64: 0x00000000, model64: 0x4b5c00004b65},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c6, match64: 0x00000000, model64: 0x4b6500004b70},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c7, match64: 0x00000000, model64: 0x4b7000004b7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04c8, match64: 0x00000000, model64: 0x4b8200004b90},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4b9400004b9d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cb, match64: 0x00000000, model64: 0x4bb000004bb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bbf00004bc6, model64: 0x4bc600004bcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cd, match64: 0x00000000, model64: 0x4bcd00004bd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ce, match64: 0x00000000, model64: 0x4bd300004bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bda00004be1, model64: 0x4be100004be4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4be400004beb, model64: 0x4beb00004bed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bed00004bf4, model64: 0x4bf400004bf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bf600004bfd, model64: 0x4bfd00004bff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4bff00004c06, model64: 0x4c0600004c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x04cf, match64: 0x00000000, model64: 0x4c0900004c0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c0b00004c12, model64: 0x4c1200004c19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c1900004c20, model64: 0x4c2000004c2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c2b00004c32, model64: 0x4c3200004c40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c4000004c47, model64: 0x4c4700004c4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c4a00004c51, model64: 0x4c5100004c53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c5300004c5a, model64: 0x4c5a00004c61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4c6100004c6a, model64: 0x4c6a00004c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d0, match64: 0x00000000, model64: 0x4c7200004c78},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4c8000004c85},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4c8f00004c93},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4c9b00004ca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d5, match64: 0x00000000, model64: 0x4ca900004cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d6, match64: 0x00000000, model64: 0x4cb000004cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d7, match64: 0x00000000, model64: 0x4cb300004cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d8, match64: 0x00000000, model64: 0x4cb900004cbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cbd00004cc3, model64: 0x187400001877},
		modelTuple{type64: 0x2700000027, matchRI: 0x04d9, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04da, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cca00004cd5, model64: 0x4cd500004cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x04db, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ce500004ced, model64: 0x4ce500004ced},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04dd, match64: 0x00000000, model64: 0x4ced00004cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x04de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4cf000004cf7, model64: 0x4cf700004cfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x04df, match64: 0x00000000, model64: 0x4cfe00004d06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d0600004d0d, model64: 0x4d0d00004d14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d1400004d1a, model64: 0x4d1a00004d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d2000004d27, model64: 0x4d2700004d2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d2e00004d37, model64: 0x4d3700004d41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4d4100004d4b, model64: 0x4d4b00004d55},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x04e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e1, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4d5500004d61, model64: 0x4d5500004d61},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4d6100004d69, model64: 0x4d6100004d69},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4d6900004d6f, model64: 0x4d6f00004d75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04e3, match64: 0x00000000, model64: 0x4d7500004d7f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04e4, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04e5, match64: 0x00000000, model64: 0x4d7f00004d8a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04e6, match64: 0x00000000, model64: 0x4d8a00004d93},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x04e7, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e8, match64: 0x00000000, model64: 0x4d9300004d9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04e9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x04eb, match64: 0x00000000, model64: 0x4da500004db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ec, match64: 0x00000000, model64: 0x4db200004dc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ed, match64: 0x00000000, model64: 0x4dc300004dd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ee, match64: 0x00000000, model64: 0x4dd200004de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4de000004ded, model64: 0x4de000004ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ef, match64: 0x00000000, model64: 0x4ded00004df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f0, match64: 0x00000000, model64: 0x4df900004e03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e0300004e14, model64: 0x4e1400004e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f1, match64: 0x00000000, model64: 0x4e2500004e30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e3000004e38, model64: 0x4e3800004e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f2, match64: 0x00000000, model64: 0x4e4200004e47},
		modelTuple{type64: 0x24700000251, matchRI: 0x04f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x04f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x4e4700004e51, model64: 0x4e5100004e5d},
		modelTuple{type64: 0x24300000245, matchRI: 0x04f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x4e5d00004e65, model64: 0x4e6500004e6f},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x4e6f00004e78, model64: 0x4e6f00004e78},
		modelTuple{type64: 0x2700000027, matchRI: 0x04f7, match64: 0x00000000, model64: 0x4e7800004e7d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x4e7d00004e86, model64: 0x4e8600004e94},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4e9d00004ea7, model64: 0x4ea700004eb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4eb300004ec3, model64: 0x4ec300004ed5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ed500004ee4, model64: 0x4ee400004ef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4ef500004f05, model64: 0x4f0500004f18},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fa, match64: 0x00000000, model64: 0x4f1800004f2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f2d00004f3c, model64: 0x4f3c00004f4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f4b00004f54, model64: 0x4f5400004f60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f6300004f6b, model64: 0x4f6300004f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f6b00004f7a, model64: 0x4f7a00004f8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4f8d00004f9b, model64: 0x4f8d00004f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fc, match64: 0x00000000, model64: 0x4f9b00004fa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fd, match64: 0x00000000, model64: 0x4fa500004fae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fae00004fbb, model64: 0x4fbb00004fc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fc800004fd7, model64: 0x4fd700004fe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x4fe800004ff8, model64: 0x4ff80000500a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x500a00005017, model64: 0x501700005024},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x502400005030, model64: 0x50300000503c},
		modelTuple{type64: 0x2700000027, matchRI: 0x04fe, match64: 0x00000000, model64: 0x503c00005045},
		modelTuple{type64: 0x2700000027, matchRI: 0x04ff, match64: 0x00000000, model64: 0x504500005051},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x505100005062, model64: 0x506200005073},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50730000507d, model64: 0x507d00005087},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x508700005094, model64: 0x5094000050a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0500, match64: 0x00000000, model64: 0x503c00005045},
		modelTuple{type64: 0x2700000027, matchRI: 0x0501, match64: 0x00000000, model64: 0x50a1000050b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50b1000050be, model64: 0x50be000050cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0502, match64: 0x00000000, model64: 0x50cb000050da},
		modelTuple{type64: 0x2700000027, matchRI: 0x0503, match64: 0x00000000, model64: 0x50da000050ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x50ed000050fb, model64: 0x50fb00005109},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x510900005112, model64: 0x51120000511b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x511b00005127, model64: 0x511b00005127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x512700005130, model64: 0x513000005139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x513900005143, model64: 0x513900005143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x514300005152, model64: 0x515200005161},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51610000516e, model64: 0x516e0000517b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x517b00005180, model64: 0x518000005184},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51840000518b, model64: 0x518b00005192},
		modelTuple{type64: 0x2700000027, matchRI: 0x0504, match64: 0x00000000, model64: 0x5192000051a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51a1000051ac, model64: 0x51ac000051b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0505, match64: 0x00000000, model64: 0x51b7000051bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51bf000051c6, model64: 0x51bf000051c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0506, match64: 0x00000000, model64: 0x51c6000051cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51cd000051d6, model64: 0x51d6000051df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0507, match64: 0x00000000, model64: 0x51df000051e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x51e6000051f6, model64: 0x51e6000051f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0508, match64: 0x00000000, model64: 0x51f600005201},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x520100005209, model64: 0x520900005211},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52110000521b, model64: 0x521b00005225},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52250000522c, model64: 0x522c00005233},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52330000523c, model64: 0x523c00005245},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52450000524f, model64: 0x524f00005259},
		modelTuple{type64: 0x2700000027, matchRI: 0x0509, match64: 0x00000000, model64: 0x52590000525f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x525f00005267, model64: 0x525f00005267},
		modelTuple{type64: 0x2700000027, matchRI: 0x050a, match64: 0x00000000, model64: 0x52670000526f},
		modelTuple{type64: 0x2700000027, matchRI: 0x050b, match64: 0x00000000, model64: 0x526f00005276},
		modelTuple{type64: 0x2700000027, matchRI: 0x050c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x050d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x050e, match64: 0x00000000, model64: 0x527600005282},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52820000528d, model64: 0x52820000528d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x528d00005299, model64: 0x528d00005299},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5299000052a5, model64: 0x5299000052a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x050f, match64: 0x00000000, model64: 0x52a5000052ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52ad000052b6, model64: 0x52ad000052b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52b6000052c0, model64: 0x52b6000052c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52c0000052c8, model64: 0x52c0000052c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52c8000052ce, model64: 0x52ce000052d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52d7000052de, model64: 0x52de000052eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0510, match64: 0x00000000, model64: 0x52eb000052f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52f1000052f7, model64: 0x52f7000052fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x52fd00005302, model64: 0x530200005308},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53080000530e, model64: 0x530e00005314},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53140000531a, model64: 0x531a00005320},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x532000005325, model64: 0x532000005325},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53250000532b, model64: 0x53250000532b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0511, match64: 0x00000000, model64: 0x532b00005333},
		modelTuple{type64: 0x2700000027, matchRI: 0x0512, match64: 0x00000000, model64: 0x53330000533d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0513, match64: 0x00000000, model64: 0x533d00005346},
		modelTuple{type64: 0x2700000027, matchRI: 0x0514, match64: 0x00000000, model64: 0x534600005357},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x535700005366, model64: 0x535700005366},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x536600005371, model64: 0x536600005371},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53710000537d, model64: 0x537d00005389},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x538900005395, model64: 0x538900005395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0515, match64: 0x00000000, model64: 0x53950000539a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x539a000053a1, model64: 0x539a000053a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0516, match64: 0x00000000, model64: 0x53a1000053ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53ac000053b4, model64: 0x53ac000053b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53b4000053bb, model64: 0x53b4000053bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0517, match64: 0x00000000, model64: 0x53bb000053bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0518, match64: 0x00000000, model64: 0x53bf000053ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0519, match64: 0x00000000, model64: 0x53ca000053d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x53d5000053e7, model64: 0x53e7000053fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x051a, match64: 0x00000000, model64: 0x53fb00005407},
		modelTuple{type64: 0x2700000027, matchRI: 0x051b, match64: 0x00000000, model64: 0x54070000540e},
		modelTuple{type64: 0x2700000027, matchRI: 0x051c, match64: 0x00000000, model64: 0x540e00005415},
		modelTuple{type64: 0x2700000027, matchRI: 0x051d, match64: 0x00000000, model64: 0x54150000541f},
		modelTuple{type64: 0x2700000027, matchRI: 0x051e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x541f0000542f, model64: 0x541f0000542f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x051f, match64: 0x00000000, model64: 0x542f00005438},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0520, match64: 0x00000000, model64: 0x543800005440},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0521, match64: 0x00000000, model64: 0x544000005448},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0522, match64: 0x00000000, model64: 0x544800005456},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x545600005460, model64: 0x545600005460},
		modelTuple{type64: 0x2700000027, matchRI: 0x0523, match64: 0x00000000, model64: 0x546000005467},
		modelTuple{type64: 0x2700000027, matchRI: 0x0524, match64: 0x00000000, model64: 0x546000005467},
		modelTuple{type64: 0x2700000027, matchRI: 0x0525, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x546f00005484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x548a00005494, model64: 0x549400005498},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54980000549e, model64: 0x549e000054a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0528, match64: 0x00000000, model64: 0x54a5000054af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54af000054b4, model64: 0x54af000054b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54b4000054bb, model64: 0x54b4000054bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54bb000054c4, model64: 0x54c4000054cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x54cb000054ce, model64: 0x54cb000054ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0529, match64: 0x00000000, model64: 0x54ce000054d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x052a, match64: 0x00000000, model64: 0x54c4000054cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x052b, match64: 0x00000000, model64: 0x54d5000054d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x052c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x052d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x54de000054e3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0531, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0532, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x550200005504, model64: 0x550200005504},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x550c00005513, model64: 0x55130000551d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x551d00005523, model64: 0x552300005539},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55390000553e, model64: 0x4d1a00004d20},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x553e00005543, model64: 0x55130000551d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0534, match64: 0x00000000, model64: 0x554300005554},
		modelTuple{type64: 0x2700000027, matchRI: 0x0536, match64: 0x00000000, model64: 0x235e00002362},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x555b00005560, model64: 0x556000005565},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55650000556f, model64: 0x556f0000557b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0537, match64: 0x00000000, model64: 0x557b00005582},
		modelTuple{type64: 0x2700000027, matchRI: 0x0538, match64: 0x00000000, model64: 0x558200005586},
		modelTuple{type64: 0x2700000027, matchRI: 0x0539, match64: 0x00000000, model64: 0x55860000558a},
		modelTuple{type64: 0x2700000027, matchRI: 0x053a, match64: 0x00000000, model64: 0x558a00005592},
		modelTuple{type64: 0x2700000027, matchRI: 0x053b, match64: 0x00000000, model64: 0x559200005596},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5596000055a0, model64: 0x55a0000055a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x55a5000055ab, model64: 0x55ab000055b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x053c, match64: 0x00000000, model64: 0x55b2000055ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x053d, match64: 0x00000000, model64: 0x55ba000055be},
		modelTuple{type64: 0x2700000027, matchRI: 0x053e, match64: 0x00000000, model64: 0x55be000055c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x053f, match64: 0x00000000, model64: 0x55c2000055c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0540, match64: 0x00000000, model64: 0x55c6000055ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0541, match64: 0x00000000, model64: 0x55ce000055d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0542, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0543, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x55da000055e0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x55e5000055ee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0548, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0549, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x55fa00005604, model64: 0x56040000560f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56150000561e, model64: 0x56150000561e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x561e00005623, model64: 0x562300005628},
		modelTuple{type64: 0x2700000027, matchRI: 0x054c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x054d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x054e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56360000563f, model64: 0x563f00005647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x564700005654, model64: 0x565400005657},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x565d0000566a, model64: 0x566a00005670},
		modelTuple{type64: 0x2700000027, matchRI: 0x0551, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x567600005681, model64: 0x56810000568c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0553, match64: 0x00000000, model64: 0x568c00005695},
		modelTuple{type64: 0x2700000027, matchRI: 0x0554, match64: 0x00000000, model64: 0x56950000569c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0555, match64: 0x00000000, model64: 0x569c000056a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0556, match64: 0x00000000, model64: 0x56a5000056a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0557, match64: 0x00000000, model64: 0x56a8000056ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0558, match64: 0x00000000, model64: 0x56ad000056b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56b2000056b6, model64: 0x56b6000056ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56ba000056c0, model64: 0x56c0000056c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0559, match64: 0x00000000, model64: 0x56c5000056cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x055a, match64: 0x00000000, model64: 0x56cf000056db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56db000056e8, model64: 0x56e8000056f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x56f500005701, model64: 0x57010000570d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x570d00005717, model64: 0x571700005721},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x572100005729, model64: 0x572100005729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x572900005733, model64: 0x572900005733},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x573300005743, model64: 0x573300005743},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57430000574f, model64: 0x57430000574f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x574f0000575c, model64: 0x575c00005769},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x576900005773, model64: 0x57730000577d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x577d00005787, model64: 0x57870000578f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x578f0000579d, model64: 0x579d000057ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57ab000057b7, model64: 0x57b7000057c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57c3000057cf, model64: 0x57cf000057d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57d4000057de, model64: 0x57de000057e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x57e1000057ed, model64: 0x57ed000057f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x055b, match64: 0x00000000, model64: 0x57f2000057f7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x055c, match64: 0x00000000, model64: 0x57f7000057fe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x57fe00005807, model64: 0x58070000580f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x580f0000581c, model64: 0x581c00005821},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x582100005831, model64: 0x583100005839},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x583900005846, model64: 0x58460000584b},
		modelTuple{type64: 0x2700000027, matchRI: 0x055d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x055e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x055f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x586200005872, model64: 0x586200005872},
		modelTuple{type64: 0x2700000027, matchRI: 0x0561, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0562, match64: 0x00000000, model64: 0x587800005884},
		modelTuple{type64: 0x2700000027, matchRI: 0x0563, match64: 0x00000000, model64: 0x588400005890},
		modelTuple{type64: 0x2700000027, matchRI: 0x0564, match64: 0x00000000, model64: 0x589000005898},
		modelTuple{type64: 0x2700000027, matchRI: 0x0565, match64: 0x00000000, model64: 0x5898000058a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0566, match64: 0x00000000, model64: 0x58a1000058ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0567, match64: 0x00000000, model64: 0x58ad000058b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0568, match64: 0x00000000, model64: 0x58b9000058c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x58c3000058d6, model64: 0x58d6000058e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0569, match64: 0x00000000, model64: 0x58e9000058fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x056a, match64: 0x00000000, model64: 0x58fc0000590a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x056b, match64: 0x00000000, model64: 0x58fc0000590a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x056e, match64: 0x00000000, model64: 0x59180000592b},
		modelTuple{type64: 0x2700000027, matchRI: 0x056f, match64: 0x00000000, model64: 0x592b00005938},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x593800005944, model64: 0x594400005952},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x59560000595f, model64: 0x595f00005964},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0571, match64: 0x00000000, model64: 0x596400005970},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0572, match64: 0x00000000, model64: 0x597000005978},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x597800005992, model64: 0x59920000599d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0573, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0574, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0575, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x24300000245, matchRI: 0x0576, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0579, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x057a, match64: 0x00000000, model64: 0x59a9000059b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59bd000059c8, model64: 0x59c8000059d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59d3000059d9, model64: 0x59d9000059df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x59df000059e8, model64: 0x59e8000059f3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x59f3000059f9, model64: 0x59f900005a00},
		modelTuple{type64: 0x2700000027, matchRI: 0x057d, match64: 0x00000000, model64: 0x49470000494d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5a0f00005a19, model64: 0x57cf000057d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x057e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0580, match64: 0x00000000, model64: 0x5a1d00005a26},
		modelTuple{type64: 0x24700000251, matchRI: 0x0581, match64: 0x00000000, model64: 0x5a2600005a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0582, match64: 0x00000000, model64: 0x5a2f00005a37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0583, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5a3d00005a42},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0587, match64: 0x00000000, model64: 0x5a5100005a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0588, match64: 0x00000000, model64: 0x5a5900005a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x0589, match64: 0x00000000, model64: 0x5a6000005a6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x058a, match64: 0x00000000, model64: 0x5a6d00005a7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x058b, match64: 0x00000000, model64: 0x5a7b00005a83},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x7130000071d, matchRI: 0x058e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0590, match64: 0x00000000, model64: 0x5a9600005a9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0591, match64: 0x00000000, model64: 0x5a9d00005aa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0592, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5aa600005aad},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5abe00005ac5, model64: 0x5ac500005acd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0597, match64: 0x00000000, model64: 0x5ada00005ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0599, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ae700005af6, model64: 0x5af600005b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x059a, match64: 0x00000000, model64: 0x5b0600005b10},
		modelTuple{type64: 0x2700000027, matchRI: 0x059b, match64: 0x00000000, model64: 0x5b1000005b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x059c, match64: 0x00000000, model64: 0x5b1600005b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x059d, match64: 0x00000000, model64: 0x5b1a00005b23},
		modelTuple{type64: 0x2700000027, matchRI: 0x059e, match64: 0x00000000, model64: 0x5b2300005b26},
		modelTuple{type64: 0x2700000027, matchRI: 0x059f, match64: 0x00000000, model64: 0x296f00002972},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b2c00005b40, model64: 0x5b2c00005b40},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5b4800005b55},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5b5a00005b66, model64: 0x5b6600005b73},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a3, match64: 0x00000000, model64: 0x5b7300005b7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b7c00005b82, model64: 0x5b7c00005b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a4, match64: 0x00000000, model64: 0x5b8200005b8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b8b00005b94, model64: 0x5b9400005b9d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5b9d00005ba4, model64: 0x5ba400005bab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5bab00005bb3, model64: 0x5bb300005bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a5, match64: 0x00000000, model64: 0x5bbb00005bcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a6, match64: 0x00000000, model64: 0x5bcd00005bdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a7, match64: 0x00000000, model64: 0x5bdc00005be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a8, match64: 0x00000000, model64: 0x5be800005bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05a9, match64: 0x00000000, model64: 0x5bf800005c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x05aa, match64: 0x00000000, model64: 0x5c0800005c16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c1600005c28, model64: 0x5c2800005c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ab, match64: 0x00000000, model64: 0x5c3c00005c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c4d00005c5a, model64: 0x5c5a00005c68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c6800005c76, model64: 0x5c7600005c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ac, match64: 0x00000000, model64: 0x5c8500005c91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5c9100005c9d, model64: 0x5c9d00005ca9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ca900005cb2, model64: 0x5cb200005cbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5cbb00005cc5, model64: 0x5cc500005ccf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ccf00005cd4, model64: 0x5cd400005cd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5cd900005ce0, model64: 0x5ce000005ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ce700005cf0, model64: 0x5cf000005cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ad, match64: 0x00000000, model64: 0x282000002824},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ae, match64: 0x00000000, model64: 0x5cf900005cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x05af, match64: 0x00000000, model64: 0x5cff00005d04},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b0, match64: 0x00000000, model64: 0x5d0400005d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b1, match64: 0x00000000, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d0a00005d13, model64: 0x5d1300005d1c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d1c00005d27, model64: 0x5d2700005d32},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b2, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b3, match64: 0x00000000, model64: 0x5d3200005d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b4, match64: 0x00000000, model64: 0x5d3900005d3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d3f00005d49, model64: 0x5d4900005d4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d4d00005d58, model64: 0x57ed000057f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d5800005d66, model64: 0x5d6600005d6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b5, match64: 0x00000000, model64: 0x5d6e00005d77},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5d7a00005d81},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5d8700005d8d, model64: 0x5d8700005d8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x05be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5d9400005da1, model64: 0x5d9400005da1},
		modelTuple{type64: 0x2700000027, matchRI: 0x05bf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5db500005dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c3, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5de800005dee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5e0b00005e16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e1f00005e24, model64: 0x5e2400005e35},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c8, match64: 0x00000000, model64: 0x5e3500005e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x05c9, match64: 0x00000000, model64: 0x5e3500005e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cb, match64: 0x00000000, model64: 0x5e3e00005e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cc, match64: 0x00000000, model64: 0x5e4b00005e5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cd, match64: 0x00000000, model64: 0x5e5a00005e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x05cf, match64: 0x00000000, model64: 0x5e7600005e81},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d0, match64: 0x00000000, model64: 0x5e8100005e87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5e8700005e95, model64: 0x5e9500005e9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05d1, match64: 0x00000000, model64: 0x5e9c00005ea4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05d3, match64: 0x00000000, model64: 0x5ea400005ead},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05d4, match64: 0x00000000, model64: 0x5e8100005e87},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05d5, match64: 0x00000000, model64: 0x5e8100005e87},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5eb000005eb4, model64: 0x5eb000005eb4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5eb400005ebb, model64: 0x5ebb00005ebe},
		modelTuple{type64: 0x24700000251, matchRI: 0x05d7, match64: 0x00000000, model64: 0x5ebe00005ec1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5ec100005ec8, model64: 0x5ec100005ec8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x5ec800005ed0, model64: 0x5ed000005ed8},
		modelTuple{type64: 0x24700000251, matchRI: 0x05d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05d9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05da, match64: 0x00000000, model64: 0x5d4900005d4d},
		modelTuple{type64: 0x38400000391, matchRI: 0x05db, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x05dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05de, match64: 0x00000000, model64: 0x5ede00005ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x05df, match64: 0x00000000, model64: 0x5ee800005ef1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5ef100005eff, model64: 0x5eff00005f0f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e0, match64: 0x00000000, model64: 0x5f0f00005f1d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e1, match64: 0x00000000, model64: 0x5f1d00005f2b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5f2b00005f39, model64: 0x5f3900005f40},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5f4000005f52, model64: 0x5f5200005f60},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x5f6000005f72, model64: 0x5f7200005f80},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e2, match64: 0x00000000, model64: 0x5f8000005f94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5f9a00005f9f, model64: 0x5f9f00005fa5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fa500005fae, model64: 0x5fae00005fb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fb700005fc1, model64: 0x5fc100005fcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fcb00005fd1, model64: 0x5fd100005fd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5fd700005fe1, model64: 0x5fe100005fea},
		modelTuple{type64: 0x2700000027, matchRI: 0x05e5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05e9, match64: 0x00000000, model64: 0x5ff600005ffe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5ffe0000600c, model64: 0x5ffe0000600c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x600c00006013, model64: 0x60130000601b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x601b00006024, model64: 0x60240000602e},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ea, match64: 0x00000000, model64: 0x602e00006034},
		modelTuple{type64: 0x2700000027, matchRI: 0x05eb, match64: 0x00000000, model64: 0x60340000603c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ec, match64: 0x00000000, model64: 0x603c00006040},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x05ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f3, match64: 0x00000000, model64: 0x60460000604c},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f4, match64: 0x00000000, model64: 0x604c00006053},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x60530000605f, model64: 0x605f00006065},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x606f0000607b, model64: 0x607b00006089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x608900006090, model64: 0x609000006097},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f8, match64: 0x00000000, model64: 0x609f000060a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x05f9, match64: 0x00000000, model64: 0x60a2000060aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fa, match64: 0x00000000, model64: 0x60aa000060b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fc, match64: 0x00000000, model64: 0x60bd000060c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60c6000060cc, model64: 0x60c6000060cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60cc000060d1, model64: 0x60d1000060d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x05fe, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x05ff, match64: 0x00000000, model64: 0x60dd000060e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0600, match64: 0x00000000, model64: 0x5a2000005a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0601, match64: 0x00000000, model64: 0x60e4000060e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0602, match64: 0x00000000, model64: 0x60e6000060e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0603, match64: 0x00000000, model64: 0xf8200000f84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0605, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0607, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60f900006100, model64: 0x61000000610c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x610c00006114, model64: 0x611400006117},
		modelTuple{type64: 0x24300000245, matchRI: 0x0608, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x0609, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x060a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x060c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x060d, match64: 0x00000000, model64: 0x61240000612f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x612f0000613b, model64: 0x613b00006147},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x614700006151, model64: 0x61510000615b},
		modelTuple{type64: 0x2700000027, matchRI: 0x060e, match64: 0x00000000, model64: 0x615b00006167},
		modelTuple{type64: 0x2700000027, matchRI: 0x060f, match64: 0x00000000, model64: 0x61670000616f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0610, match64: 0x00000000, model64: 0x616f00006179},
		modelTuple{type64: 0x2700000027, matchRI: 0x0611, match64: 0x00000000, model64: 0x617900006187},
		modelTuple{type64: 0x2700000027, matchRI: 0x0612, match64: 0x00000000, model64: 0x618700006196},
		modelTuple{type64: 0x2700000027, matchRI: 0x0613, match64: 0x00000000, model64: 0x6196000061a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0614, match64: 0x00000000, model64: 0x61a4000061b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0615, match64: 0x00000000, model64: 0x61b0000061bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0616, match64: 0x00000000, model64: 0x61bd000061ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61ca000061d7, model64: 0x61ca000061d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0617, match64: 0x00000000, model64: 0x61d7000061e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x61e4000061f0, model64: 0x61e4000061f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0618, match64: 0x00000000, model64: 0x61f0000061f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0619, match64: 0x00000000, model64: 0x61f800006203},
		modelTuple{type64: 0x2700000027, matchRI: 0x061a, match64: 0x00000000, model64: 0x62030000620d},
		modelTuple{type64: 0x2700000027, matchRI: 0x061b, match64: 0x00000000, model64: 0x620d0000621a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x621a00006227, model64: 0x622700006236},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x623600006246, model64: 0x623600006246},
		modelTuple{type64: 0x2700000027, matchRI: 0x061c, match64: 0x00000000, model64: 0x624600006252},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x625200006260, model64: 0x626000006271},
		modelTuple{type64: 0x2700000027, matchRI: 0x061d, match64: 0x00000000, model64: 0x62710000627d},
		modelTuple{type64: 0x2700000027, matchRI: 0x061e, match64: 0x00000000, model64: 0x627d0000628b},
		modelTuple{type64: 0x2700000027, matchRI: 0x061f, match64: 0x00000000, model64: 0x628b00006298},
		modelTuple{type64: 0x2700000027, matchRI: 0x0620, match64: 0x00000000, model64: 0x61670000616f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6298000062a2, model64: 0x6298000062a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0621, match64: 0x00000000, model64: 0x62a2000062ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62ad000062b9, model64: 0x62b9000062c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62c5000062d6, model64: 0x62c5000062d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62d6000062e2, model64: 0x62d6000062e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0622, match64: 0x00000000, model64: 0x62e2000062ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0623, match64: 0x00000000, model64: 0x62ef000062f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x62f600006300, model64: 0x62f600006300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63000000630a, model64: 0x630a00006314},
		modelTuple{type64: 0x2700000027, matchRI: 0x0624, match64: 0x00000000, model64: 0x631400006323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x632300006331, model64: 0x63310000633f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x633f00006348, model64: 0x633f00006348},
		modelTuple{type64: 0x2700000027, matchRI: 0x0625, match64: 0x00000000, model64: 0x634800006357},
		modelTuple{type64: 0x2700000027, matchRI: 0x0626, match64: 0x00000000, model64: 0x635700006361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63610000636b, model64: 0x63610000636b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x636b00006377, model64: 0x63770000637f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x637f0000638b, model64: 0x638b00006397},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x63970000639f, model64: 0x63970000639f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x639f000063ad, model64: 0x63ad000063c4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x63c4000063d4, model64: 0x63d4000063e4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x63e4000063f8, model64: 0x63e4000063f8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x63f800006408, model64: 0x63f800006408},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0627, match64: 0x00000000, model64: 0x640800006419},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x641900006427, model64: 0x642700006435},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x643500006442, model64: 0x64420000644f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0628, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0629, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x645b00006465, model64: 0x64650000646f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x646f0000647b, model64: 0x647b00006487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x648700006495, model64: 0x6495000064a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64a3000064b0, model64: 0x64b0000064bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64bd000064c7, model64: 0x64c7000064d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64d1000064db, model64: 0x64db000064e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x062b, match64: 0x00000000, model64: 0x64e5000064ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x062c, match64: 0x00000000, model64: 0x64ec000064f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x64f3000064fc, model64: 0x64fc00006505},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x650500006510, model64: 0x65100000651b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x651b00006523, model64: 0x65230000652b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x652b00006534, model64: 0x65340000653d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x653d00006547, model64: 0x654700006551},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65510000655a, model64: 0x655a00006563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65630000656d, model64: 0x656d00006577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x657700006584, model64: 0x658400006591},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x659100006599, model64: 0x6599000065a1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x65a1000065aa, model64: 0x65aa000065b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x062e, match64: 0x00000000, model64: 0x65bd000065c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65d3000065d9, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65d9000065e2, model64: 0x65e2000065e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65e8000065ec, model64: 0x65ec000065ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x65ef000065f4, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: 0x0630, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x660100006608, model64: 0x660800006615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66150000661c, model64: 0x661c0000662c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x662c00006633, model64: 0x663300006640},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x664000006647, model64: 0x664700006655},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x66550000665c, model64: 0x665c00006669},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x666900006670, model64: 0x667000006681},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x668100006688, model64: 0x668800006692},
		modelTuple{type64: 0x2700000027, matchRI: 0x0633, match64: 0x00000000, model64: 0x66970000669a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0634, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0635, match64: 0x00000000, model64: 0x669a000066a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0636, match64: 0x00000000, model64: 0x66a1000066a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0637, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0638, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0639, match64: 0x00000000, model64: 0x66ad000066b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x063a, match64: 0x00000000, model64: 0x66b7000066bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x063b, match64: 0x00000000, model64: 0x66bd000066c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x063c, match64: 0x00000000, model64: 0x66c4000066cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x063d, match64: 0x00000000, model64: 0x66cd000066d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x063e, match64: 0x00000000, model64: 0x66d8000066e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x063f, match64: 0x00000000, model64: 0x66e1000066eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0640, match64: 0x00000000, model64: 0x66eb000066f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0641, match64: 0x00000000, model64: 0x66f4000066fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0642, match64: 0x00000000, model64: 0x66fc00006702},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67020000670f, model64: 0x670f0000671c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0643, match64: 0x00000000, model64: 0x671c00006725},
		modelTuple{type64: 0x2700000027, matchRI: 0x0644, match64: 0x00000000, model64: 0x67250000672d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0645, match64: 0x00000000, model64: 0x672d00006736},
		modelTuple{type64: 0x2700000027, matchRI: 0x0646, match64: 0x00000000, model64: 0x67360000673e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0647, match64: 0x00000000, model64: 0x673e00006742},
		modelTuple{type64: 0x2700000027, matchRI: 0x0648, match64: 0x00000000, model64: 0x674200006748},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0649, match64: 0x00000000, model64: 0x674800006752},
		modelTuple{type64: 0x2700000027, matchRI: 0x064a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x064e, match64: 0x00000000, model64: 0x676b00006776},
		modelTuple{type64: 0x2700000027, matchRI: 0x064f, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0650, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x677d00006783, model64: 0x67830000678a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x678a00006790, model64: 0x679000006797},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67970000679c, model64: 0x679c000067a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0652, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0653, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0655, match64: 0x00000000, model64: 0x67b6000067c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67c2000067ca, model64: 0x67ca000067d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67d8000067dd, model64: 0x67dd000067e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x67e6000067f1, model64: 0x67f1000067fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0656, match64: 0x00000000, model64: 0x67fb00006805},
		modelTuple{type64: 0x24700000251, matchRI: 0x0657, match64: 0x00000000, model64: 0x680500006811},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x681600006826, model64: 0x682600006836},
		modelTuple{type64: 0x2700000027, matchRI: 0x0659, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x065a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x065c, match64: 0x00000000, model64: 0x683f00006852},
		modelTuple{type64: 0x2700000027, matchRI: 0x065d, match64: 0x00000000, model64: 0x685200006861},
		modelTuple{type64: 0x2700000027, matchRI: 0x065e, match64: 0x00000000, model64: 0x68610000686d},
		modelTuple{type64: 0x2700000027, matchRI: 0x065f, match64: 0x00000000, model64: 0x686d00006878},
		modelTuple{type64: 0x2700000027, matchRI: 0x0660, match64: 0x00000000, model64: 0x687800006888},
		modelTuple{type64: 0x2700000027, matchRI: 0x0661, match64: 0x00000000, model64: 0x688800006894},
		modelTuple{type64: 0x2700000027, matchRI: 0x0662, match64: 0x00000000, model64: 0x6894000068a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0663, match64: 0x00000000, model64: 0x68a1000068ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0664, match64: 0x00000000, model64: 0x68ac000068b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68b5000068c7, model64: 0x68b5000068c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68c7000068d5, model64: 0x68c7000068d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68d5000068e1, model64: 0x68d5000068e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x68e1000068e8, model64: 0x68e8000068f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0665, match64: 0x00000000, model64: 0x68f0000068fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0666, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0667, match64: 0x00000000, model64: 0x68fb00006904},
		modelTuple{type64: 0x2700000027, matchRI: 0x0668, match64: 0x00000000, model64: 0x690400006908},
		modelTuple{type64: 0x2700000027, matchRI: 0x066a, match64: 0x00000000, model64: 0x691000006915},
		modelTuple{type64: 0x2700000027, matchRI: 0x066b, match64: 0x00000000, model64: 0x69150000691b},
		modelTuple{type64: 0x2700000027, matchRI: 0x066d, match64: 0x00000000, model64: 0x692000006928},
		modelTuple{type64: 0x2700000027, matchRI: 0x066e, match64: 0x00000000, model64: 0x692800006932},
		modelTuple{type64: 0x2700000027, matchRI: 0x066f, match64: 0x00000000, model64: 0x69320000693b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0670, match64: 0x00000000, model64: 0x693b00006944},
		modelTuple{type64: 0x2700000027, matchRI: 0x0671, match64: 0x00000000, model64: 0x69440000694f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0672, match64: 0x00000000, model64: 0x694f0000695a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0673, match64: 0x00000000, model64: 0x695a00006965},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0675, match64: 0x00000000, model64: 0x697500006980},
		modelTuple{type64: 0x2700000027, matchRI: 0x0677, match64: 0x00000000, model64: 0x69860000698a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0678, match64: 0x00000000, model64: 0x698a00006990},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0679, match64: 0x00000000, model64: 0x699000006998},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x067c, match64: 0x00000000, model64: 0x69a8000069b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x067d, match64: 0x00000000, model64: 0x69b0000069b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x067e, match64: 0x00000000, model64: 0x69b8000069c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x067f, match64: 0x00000000, model64: 0x69c0000069c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0680, match64: 0x00000000, model64: 0x69c8000069d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0681, match64: 0x00000000, model64: 0x69d0000069d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0682, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0684, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0685, match64: 0x00000000, model64: 0x69e6000069ed},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0686, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0687, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0688, match64: 0x00000000, model64: 0x69ed000069ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0689, match64: 0x00000000, model64: 0x69ff00006a11},
		modelTuple{type64: 0x2700000027, matchRI: 0x068a, match64: 0x00000000, model64: 0x6a1100006a1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x068b, match64: 0x00000000, model64: 0x6a1f00006a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x068c, match64: 0x00000000, model64: 0x6a3400006a44},
		modelTuple{type64: 0x2700000027, matchRI: 0x068d, match64: 0x00000000, model64: 0x6a4400006a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x068e, match64: 0x00000000, model64: 0x6a4400006a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x068f, match64: 0x00000000, model64: 0x6a4400006a51},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a5100006a61, model64: 0x6a6100006a66},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a6600006a6a, model64: 0x6a6a00006a6c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a6c00006a76, model64: 0x6a7600006a78},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a7800006a8a, model64: 0x6a8a00006a8f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0690, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a8f00006a96, model64: 0x6a9600006a9d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0691, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0692, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6a9d00006aa7, model64: 0x6aa700006aa9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0693, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6aa900006ab8, model64: 0x6ab800006aba},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6aba00006ac9, model64: 0x6ac900006acb},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x6acb00006ad6, model64: 0x6ad600006ae4},
		modelTuple{type64: 0x24300000245, matchRI: 0x0694, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6ae900006aee, model64: 0x6ae900006aee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6aee00006af4, model64: 0x6aee00006af4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6af400006aff, model64: 0x6aff00006b0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0696, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6b1300006b1a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x069a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x069b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x069d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x069e, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x069f, match64: 0x00000000, model64: 0x6b2e00006b38},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6b4800006b50, model64: 0x6b4800006b50},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6b5000006b55, model64: 0x6b5500006b5d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06a4, match64: 0x00000000, model64: 0x6b5d00006b67},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6b6700006b7a, model64: 0x6b7a00006b8d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6b8d00006b9d, model64: 0x6b9d00006ba5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06a6, match64: 0x00000000, model64: 0x6bab00006bb2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06a7, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06a8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x06a9, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x38400000391, matchRI: 0x06aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6bb200006bb8, model64: 0x6bb800006bbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6bbf00006bc6, model64: 0x6bc600006bc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6bc800006bd0, model64: 0x6bd000006bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ab, match64: 0x00000000, model64: 0x6bd800006be0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ac, match64: 0x00000000, model64: 0x6be000006be7},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ad, match64: 0x00000000, model64: 0x6be700006bef},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ae, match64: 0x00000000, model64: 0x6bef00006bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06af, match64: 0x00000000, model64: 0x6bf100006bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b0, match64: 0x00000000, model64: 0x6bf300006bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b1, match64: 0x00000000, model64: 0x6bf600006bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b2, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b3, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b4, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b6, match64: 0x00000000, model64: 0x6bf800006c01},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b7, match64: 0x00000000, model64: 0x6c0100006c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b8, match64: 0x00000000, model64: 0x6c0400006c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06b9, match64: 0x00000000, model64: 0x6c0a00006c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ba, match64: 0x00000000, model64: 0x6c1800006c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bb, match64: 0x00000000, model64: 0x6c1b00006c24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c2400006c29, model64: 0x6c2900006c32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c3200006c38, model64: 0x6c3800006c41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c4100006c47, model64: 0x6c4700006c51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c5100006c57, model64: 0x6c5700006c60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c6000006c66, model64: 0x6c6600006c74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c7400006c7a, model64: 0x6c7a00006c83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6c8300006c89, model64: 0x6c8900006c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bc, match64: 0x00000000, model64: 0x6c9600006c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bd, match64: 0x00000000, model64: 0x6c9e00006caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x06be, match64: 0x00000000, model64: 0x6caa00006cb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x06bf, match64: 0x00000000, model64: 0x6cb200006cba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cba00006cc5, model64: 0x6cc500006cd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cd000006cdf, model64: 0x6cdf00006cee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6cee00006cf9, model64: 0x6cee00006cf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c0, match64: 0x00000000, model64: 0x6cf900006d05},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c1, match64: 0x00000000, model64: 0x6d0500006d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c2, match64: 0x00000000, model64: 0x6d1300006d20},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c3, match64: 0x00000000, model64: 0x6d2000006d2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c4, match64: 0x00000000, model64: 0x6d2f00006d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c5, match64: 0x00000000, model64: 0x1eaf00001eb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c6, match64: 0x00000000, model64: 0x6d3900006d40},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c7, match64: 0x00000000, model64: 0x6d4000006d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c8, match64: 0x00000000, model64: 0x6d4d00006d5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06c9, match64: 0x00000000, model64: 0x6d5d00006d65},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ca, match64: 0x00000000, model64: 0x6d6500006d6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cb, match64: 0x00000000, model64: 0x6d6f00006d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cc, match64: 0x00000000, model64: 0x6d7a00006d89},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cd, match64: 0x00000000, model64: 0x6d8900006d99},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ce, match64: 0x00000000, model64: 0x6d9900006da6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06cf, match64: 0x00000000, model64: 0x6da600006daf},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d0, match64: 0x00000000, model64: 0x6daf00006dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d1, match64: 0x00000000, model64: 0x6dbd00006dcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6dcc00006dd4, model64: 0x6dcc00006dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d2, match64: 0x00000000, model64: 0x6dd400006de1},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d3, match64: 0x00000000, model64: 0x6de100006def},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6def00006dfd, model64: 0x6def00006dfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d4, match64: 0x00000000, model64: 0x6dfd00006e06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e0600006e12, model64: 0x6e0600006e12},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d5, match64: 0x00000000, model64: 0x6e1200006e18},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x6e2100006e2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x06d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e3500006e41, model64: 0x6e4100006e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x06da, match64: 0x00000000, model64: 0x6e5c00006e5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6e5f00006e6a, model64: 0x6e6a00006e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x06dc, match64: 0x00000000, model64: 0x6e7300006e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06dd, match64: 0x00000000, model64: 0x6e7d00006e87},
		modelTuple{type64: 0x2700000027, matchRI: 0x06de, match64: 0x00000000, model64: 0x6e8700006e97},
		modelTuple{type64: 0x2700000027, matchRI: 0x06df, match64: 0x00000000, model64: 0x6e9700006ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e0, match64: 0x00000000, model64: 0x6ea600006eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e1, match64: 0x00000000, model64: 0x6eb300006ec0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e2, match64: 0x00000000, model64: 0x6ec000006ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e3, match64: 0x00000000, model64: 0x6ece00006edc},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e4, match64: 0x00000000, model64: 0x6edc00006ee9},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e5, match64: 0x00000000, model64: 0x6ee900006ef7},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e6, match64: 0x00000000, model64: 0x6ef700006eff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f0600006f0d, model64: 0x6f0d00006f13},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e8, match64: 0x00000000, model64: 0x6f1300006f1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x06e9, match64: 0x00000000, model64: 0x6f1e00006f2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ea, match64: 0x00000000, model64: 0x6f2a00006f35},
		modelTuple{type64: 0x2700000027, matchRI: 0x06eb, match64: 0x00000000, model64: 0x6f3500006f3c},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x6f3c00006f4c, model64: 0x6f4c00006f56},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x6f5600006f5e, model64: 0x6f5e00006f64},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ec, match64: 0x00000000, model64: 0x6f6400006f69},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ed, match64: 0x00000000, model64: 0x29200000294},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x6f6900006f70, model64: 0x6f7000006f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ee, match64: 0x00000000, model64: 0x6f7700006f7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ef, match64: 0x00000000, model64: 0x6f7a00006f81},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f0, match64: 0x00000000, model64: 0x6f8100006f87},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f1, match64: 0x00000000, model64: 0x6f8700006f8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f2, match64: 0x00000000, model64: 0x6f8d00006f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f3, match64: 0x00000000, model64: 0x6f9500006fa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f4, match64: 0x00000000, model64: 0x6fa000006fac},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f5, match64: 0x00000000, model64: 0x6fac00006fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f6, match64: 0x00000000, model64: 0x6fb000006fb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f7, match64: 0x00000000, model64: 0x6fb300006fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f8, match64: 0x00000000, model64: 0x6fb900006fbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x06f9, match64: 0x00000000, model64: 0x1b8200001b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fa, match64: 0x00000000, model64: 0x6fbf00006fc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fb, match64: 0x00000000, model64: 0x6fc600006fcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fc, match64: 0x00000000, model64: 0x6fcc00006fd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fd, match64: 0x00000000, model64: 0x6fd700006fdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x06fe, match64: 0x00000000, model64: 0x6fdd00006fe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x06ff, match64: 0x00000000, model64: 0x6fe300006fea},
		modelTuple{type64: 0x2700000027, matchRI: 0x0700, match64: 0x00000000, model64: 0x6fea00006ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0701, match64: 0x00000000, model64: 0x6ff100006ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0702, match64: 0x00000000, model64: 0x6ffc00007004},
		modelTuple{type64: 0x2700000027, matchRI: 0x0703, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0704, match64: 0x00000000, model64: 0x700400007009},
		modelTuple{type64: 0x2700000027, matchRI: 0x0705, match64: 0x00000000, model64: 0x70090000700e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0706, match64: 0x00000000, model64: 0x700e00007010},
		modelTuple{type64: 0x2700000027, matchRI: 0x0707, match64: 0x00000000, model64: 0x701000007015},
		modelTuple{type64: 0x2700000027, matchRI: 0x0708, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0709, match64: 0x00000000, model64: 0x701500007018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70180000701c, model64: 0x701c00007022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x702200007026, model64: 0x70260000702e},
		modelTuple{type64: 0x2700000027, matchRI: 0x070a, match64: 0x00000000, model64: 0x702e00007034},
		modelTuple{type64: 0x2700000027, matchRI: 0x070b, match64: 0x00000000, model64: 0x70340000703a},
		modelTuple{type64: 0x2700000027, matchRI: 0x070c, match64: 0x00000000, model64: 0x703a00007045},
		modelTuple{type64: 0x2700000027, matchRI: 0x070d, match64: 0x00000000, model64: 0x704500007050},
		modelTuple{type64: 0x2700000027, matchRI: 0x070e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x070f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0710, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0711, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x705e00007071, model64: 0x70710000707c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0713, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70890000708f, model64: 0x708f00007095},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70950000709a, model64: 0x709a000070a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0716, match64: 0x00000000, model64: 0x70a0000070a8},
		modelTuple{type64: 0x38400000391, matchRI: 0x0718, match64: 0x00000000, model64: 0x70b7000070c1},
		modelTuple{type64: 0x38400000391, matchRI: 0x0719, match64: 0x00000000, model64: 0x70c1000070cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70cb000070d2, model64: 0x70d2000070dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70dd000070e4, model64: 0x70e4000070ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70ec000070f2, model64: 0x70f2000070fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x70fc00007102, model64: 0x71020000710a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x710a00007110, model64: 0x711000007117},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71170000711f, model64: 0x711f00007127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71270000712d, model64: 0x712d00007131},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x713100007137, model64: 0x71370000713d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x713d00007145, model64: 0x71450000714b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x714b00007152, model64: 0x715200007158},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71580000715e, model64: 0x715e00007164},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x716400007169, model64: 0x716900007172},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71720000717a, model64: 0x717a00007185},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71850000718c, model64: 0x718c00007199},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71990000719f, model64: 0x719f000071a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71a6000071ac, model64: 0x71ac000071b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71b5000071bb, model64: 0x71bb000071c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71c4000071cc, model64: 0x71cc000071d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x71d4000071db, model64: 0x71db000071e6},
		modelTuple{type64: 0x38400000391, matchRI: 0x071a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x71f4000071f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x071e, match64: 0x00000000, model64: 0x72010000720e},
		modelTuple{type64: 0x2700000027, matchRI: 0x071f, match64: 0x00000000, model64: 0x720e00007218},
		modelTuple{type64: 0x38400000391, matchRI: 0x0720, match64: 0x00000000, model64: 0x72180000721f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0721, match64: 0x00000000, model64: 0x721f00007229},
		modelTuple{type64: 0x2700000027, matchRI: 0x0722, match64: 0x00000000, model64: 0x722900007230},
		modelTuple{type64: 0x2700000027, matchRI: 0x0723, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72300000723c, model64: 0x723c00007244},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72440000724e, model64: 0x724e00007258},
		modelTuple{type64: 0x2700000027, matchRI: 0x0724, match64: 0x00000000, model64: 0x725800007267},
		modelTuple{type64: 0x2700000027, matchRI: 0x0725, match64: 0x00000000, model64: 0x726700007271},
		modelTuple{type64: 0x2700000027, matchRI: 0x0726, match64: 0x00000000, model64: 0x72710000727b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0727, match64: 0x00000000, model64: 0x727b00007283},
		modelTuple{type64: 0x24300000245, matchRI: 0x0729, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x728800007293, model64: 0x72930000729f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72a6000072af, model64: 0x72af000072b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x072c, match64: 0x00000000, model64: 0x72b8000072bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x072d, match64: 0x00000000, model64: 0x72bf000072c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x072e, match64: 0x00000000, model64: 0x72c4000072ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72ca000072cf, model64: 0x72cf000072d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72d5000072dd, model64: 0x72dd000072e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x072f, match64: 0x00000000, model64: 0x72e4000072eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x72eb000072f0, model64: 0x72f0000072f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0730, match64: 0x00000000, model64: 0x72f700007302},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x730200007307, model64: 0x72dd000072e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73070000730f, model64: 0x730f00007317},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x73170000731c, model64: 0x731c00007323},
		modelTuple{type64: 0x2700000027, matchRI: 0x0731, match64: 0x00000000, model64: 0x73230000732e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0732, match64: 0x00000000, model64: 0x732e00007338},
		modelTuple{type64: 0x2700000027, matchRI: 0x0733, match64: 0x00000000, model64: 0x733800007348},
		modelTuple{type64: 0x2700000027, matchRI: 0x0734, match64: 0x00000000, model64: 0x734800007359},
		modelTuple{type64: 0x2700000027, matchRI: 0x0735, match64: 0x00000000, model64: 0x735900007361},
		modelTuple{type64: 0x2700000027, matchRI: 0x0736, match64: 0x00000000, model64: 0x73610000736d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0737, match64: 0x00000000, model64: 0x736d0000737e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0738, match64: 0x00000000, model64: 0x737e00007385},
		modelTuple{type64: 0x2700000027, matchRI: 0x0739, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x073a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x073b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x738f00007397, model64: 0x739700007399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7399000073a2, model64: 0x73a2000073a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x073d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x073f, match64: 0x00000000, model64: 0x73b2000073b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0740, match64: 0x00000000, model64: 0x73b8000073bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0741, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0742, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x73cb000073d5, model64: 0x73d5000073e0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0745, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0746, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x074a, match64: 0x00000000, model64: 0x73ef000073f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x074b, match64: 0x00000000, model64: 0x73f700007407},
		modelTuple{type64: 0x2700000027, matchRI: 0x074c, match64: 0x00000000, model64: 0x740700007414},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74140000741f, model64: 0x741f0000742b},
		modelTuple{type64: 0x2700000027, matchRI: 0x074d, match64: 0x00000000, model64: 0x73ef000073f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x074e, match64: 0x00000000, model64: 0x742b0000743b},
		modelTuple{type64: 0x2700000027, matchRI: 0x074f, match64: 0x00000000, model64: 0x743b0000744c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0750, match64: 0x00000000, model64: 0x744c00007456},
		modelTuple{type64: 0x2700000027, matchRI: 0x0751, match64: 0x00000000, model64: 0x745600007460},
		modelTuple{type64: 0x2700000027, matchRI: 0x0752, match64: 0x00000000, model64: 0x74600000746b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0753, match64: 0x00000000, model64: 0x746b00007476},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0754, match64: 0x00000000, model64: 0x747600007481},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x748100007492, model64: 0x7492000074a3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0755, match64: 0x00000000, model64: 0x74a3000074ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0756, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0757, match64: 0x00000000, model64: 0x74a3000074ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0758, match64: 0x00000000, model64: 0x74a3000074ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0759, match64: 0x00000000, model64: 0x5d7a00005d81},
		modelTuple{type64: 0x2700000027, matchRI: 0x075a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x075b, match64: 0x00000000, model64: 0x74ab000074b1},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x74b1000074ba, model64: 0x74b1000074ba},
		modelTuple{type64: 0x1060000010d, matchRI: 0x075c, match64: 0x00000000, model64: 0x74ba000074bf},
		modelTuple{type64: 0x24300000245, matchRI: 0x075d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x075e, match64: 0x00000000, model64: 0x74bf000074c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x075f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0760, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0761, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74ca000074d3, model64: 0x74d3000074dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0764, match64: 0x00000000, model64: 0x74dc000074e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74e5000074ed, model64: 0x74ed000074f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x74f5000074fc, model64: 0x74fc00007503},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0766, match64: 0x00000000, model64: 0x750800007512},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x75170000751f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0769, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x076a, match64: 0x00000000, model64: 0x75260000752a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75390000753f, model64: 0x75390000753f},
		modelTuple{type64: 0x2700000027, matchRI: 0x076d, match64: 0x00000000, model64: 0x753f00007549},
		modelTuple{type64: 0x24300000245, matchRI: 0x076e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0772, match64: 0x00000000, model64: 0x755a00007564},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75640000756a, model64: 0x756a00007576},
		modelTuple{type64: 0x2700000027, matchRI: 0x0773, match64: 0x00000000, model64: 0x757600007582},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75820000758c, model64: 0x758c00007597},
		modelTuple{type64: 0x2700000027, matchRI: 0x0774, match64: 0x00000000, model64: 0x7597000075a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0776, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75a5000075ad, model64: 0x75ad000075b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75b2000075b8, model64: 0x75b8000075be},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0777, match64: 0x00000000, model64: 0x75be000075c5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x75c5000075cd, model64: 0x75cd000075d5},
		modelTuple{type64: 0x38400000391, matchRI: 0x0778, match64: 0x00000000, model64: 0x75d5000075db},
		modelTuple{type64: 0x2700000027, matchRI: 0x077a, match64: 0x00000000, model64: 0x75dd000075e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x077b, match64: 0x00000000, model64: 0x75e5000075ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x75ef00007600, model64: 0x76000000760e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x760e0000761c, model64: 0x761c00007628},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x077c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x077e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0780, match64: 0x00000000, model64: 0x763000007641},
		modelTuple{type64: 0x2700000027, matchRI: 0x0781, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0782, match64: 0x00000000, model64: 0x764100007646},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0783, match64: 0x00000000, model64: 0x76460000764f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0784, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x765900007661, model64: 0x766100007665},
		modelTuple{type64: 0x2700000027, matchRI: 0x0787, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x768100007687},
		modelTuple{type64: 0x2700000027, matchRI: 0x078d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x078e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0790, match64: 0x00000000, model64: 0x7699000076a3},
		modelTuple{type64: 0x24300000245, matchRI: 0x0791, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0792, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0794, match64: 0x00000000, model64: 0x76a8000076b2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x76b2000076bd, model64: 0x76bd000076c8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0795, match64: 0x00000000, model64: 0x76c8000076d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0796, match64: 0x00000000, model64: 0x76d0000076d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76e2000076e8, model64: 0x76e2000076e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0798, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x76ec000076f8, model64: 0x76f800007702},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x770200007715, model64: 0x771500007728},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x77360000773e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x079c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x079d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x079f, match64: 0x00000000, model64: 0x775a0000776b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x776b00007773, model64: 0x77730000777e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x778a00007796, model64: 0x77960000779b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x779b000077a7, model64: 0x77a7000077ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77b6000077b8, model64: 0x77b6000077b8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x77c6000077ce},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x77d8000077de, model64: 0x77de000077e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a2, match64: 0x00000000, model64: 0x77e4000077f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a3, match64: 0x00000000, model64: 0x77f1000077ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a4, match64: 0x00000000, model64: 0x77ff00007808},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78080000780e, model64: 0x780e00007812},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x781200007818, model64: 0x78180000781e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x781e00007828, model64: 0x782800007832},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a5, match64: 0x00000000, model64: 0x51df000051e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x07a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x783c00007841, model64: 0x783c00007841},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07a9, match64: 0x00000000, model64: 0x784100007849},
		modelTuple{type64: 0x2700000027, matchRI: 0x07aa, match64: 0x00000000, model64: 0x78490000784e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ab, match64: 0x00000000, model64: 0x784e00007857},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x07ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x07ad, match64: 0x00000000, model64: 0x785700007860},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x07ae, match64: 0x00000000, model64: 0x78600000786d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07af, match64: 0x00000000, model64: 0x786d00007877},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07b0, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x07b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07b2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x787d00007885},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b7, match64: 0x00000000, model64: 0x788b00007891},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b8, match64: 0x00000000, model64: 0x788b00007891},
		modelTuple{type64: 0x2700000027, matchRI: 0x07b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x07ba, match64: 0x00000000, model64: 0x789100007897},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07bf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78b2000078bc, model64: 0x78bc000078c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c3, match64: 0x00000000, model64: 0x78c8000078cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c4, match64: 0x00000000, model64: 0x78cb000078cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78cf000078d4, model64: 0x78cf000078d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x78d4000078e2, model64: 0x78e2000078ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x07ca, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79040000790b, model64: 0x79040000790b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cb, match64: 0x00000000, model64: 0x78cb000078cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ce, match64: 0x00000000, model64: 0x791200007917},
		modelTuple{type64: 0x2700000027, matchRI: 0x07cf, match64: 0x00000000, model64: 0x791700007921},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d0, match64: 0x00000000, model64: 0x792100007927},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d1, match64: 0x00000000, model64: 0x792700007933},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d2, match64: 0x00000000, model64: 0x79330000793b},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d3, match64: 0x00000000, model64: 0x793b00007945},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d5, match64: 0x00000000, model64: 0x794500007949},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d6, match64: 0x00000000, model64: 0x794900007952},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d7, match64: 0x00000000, model64: 0x795200007959},
		modelTuple{type64: 0x2700000027, matchRI: 0x07d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07da, match64: 0x00000000, model64: 0x795e00007964},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x79640000796c, model64: 0x796c00007977},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07db, match64: 0x00000000, model64: 0x797700007986},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07dc, match64: 0x00000000, model64: 0x798600007992},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07dd, match64: 0x00000000, model64: 0x79920000799e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07de, match64: 0x00000000, model64: 0x799e000079ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79ad000079b1, model64: 0x79ad000079b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79b1000079b9, model64: 0x79b9000079c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79c4000079cc, model64: 0x79cc000079d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79d7000079df, model64: 0x79df000079ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x07df, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79ea000079f0, model64: 0x79f0000079f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x79f800007a00, model64: 0x7a0000007a0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a0c00007a14, model64: 0x7a1400007a1f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a1f00007a27, model64: 0x7a2700007a33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a3300007a3b, model64: 0x7a3b00007a47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a4700007a4f, model64: 0x7a4f00007a59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a5900007a61, model64: 0x7a6100007a6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a6f00007a77, model64: 0x7a7700007a83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a8300007a8b, model64: 0x7a8b00007a97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7a9700007a9f, model64: 0x7a9f00007aab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7aab00007ab3, model64: 0x7ab300007abe},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e0, match64: 0x00000000, model64: 0x7abe00007ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ac800007ace, model64: 0x7ace00007ad6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ad600007aea, model64: 0x7aea00007af5},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e4, match64: 0x00000000, model64: 0x7af500007b08},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e5, match64: 0x00000000, model64: 0x7b0800007b19},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b1900007b21, model64: 0x7b2100007b32},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b3200007b3a, model64: 0x7b3a00007b4b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e6, match64: 0x00000000, model64: 0x7b4b00007b56},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b5600007b5d, model64: 0x7b5d00007b6a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b6a00007b72, model64: 0x7b7200007b7e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b7e00007b86, model64: 0x7b8600007b96},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7b9600007b9e, model64: 0x7b3a00007b4b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e7, match64: 0x00000000, model64: 0x7b9e00007baa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7baa00007bb2, model64: 0x7bb200007bc4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7bc400007bcc, model64: 0x7bcc00007bdc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7bdc00007be4, model64: 0x7b3a00007b4b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7be400007bec, model64: 0x7bec00007bfa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7bfa00007c04, model64: 0x7c0400007c12},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e8, match64: 0x00000000, model64: 0x7c1200007c16},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c1600007c1f, model64: 0x7c1f00007c23},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07e9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07ea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x07eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c2300007c32, model64: 0x7c3200007c38},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ec, match64: 0x00000000, model64: 0x49470000494d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ed, match64: 0x00000000, model64: 0x7c3800007c42},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ee, match64: 0x00000000, model64: 0x7c4200007c49},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c4900007c51, model64: 0x7c5100007c5b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c5b00007c63, model64: 0x7c6300007c6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07ef, match64: 0x00000000, model64: 0x7c6d00007c77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c7700007c7f, model64: 0x7c7f00007c89},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c8900007c91, model64: 0x7c9100007c9f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7c9f00007ca7, model64: 0x7ca700007cb5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7cb500007cbd, model64: 0x7cbd00007ccc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7ccc00007cd4, model64: 0x7cd400007ce5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7ce500007ced, model64: 0x7ced00007cfb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7cfb00007d03, model64: 0x7d0300007d11},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d1100007d19, model64: 0x7d1900007d27},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d2700007d2f, model64: 0x7d2f00007d3d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f2, match64: 0x00000000, model64: 0x7d3d00007d4a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d4a00007d52, model64: 0x7d5200007d61},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f3, match64: 0x00000000, model64: 0x7d6100007d6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f4, match64: 0x00000000, model64: 0x7d6d00007d77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f5, match64: 0x00000000, model64: 0x7d7700007d7e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d7e00007d86, model64: 0x7d8600007d93},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7d9300007d9b, model64: 0x7d9b00007daa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7daa00007db2, model64: 0x7daa00007db2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7db200007dc3, model64: 0x7dc300007dcb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7dcb00007dd3, model64: 0x7dd300007ddd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7ddd00007de5, model64: 0x7de500007df1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x07f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x7130000071d, matchRI: 0x07f8, match64: 0x00000000, model64: 0x7df100007e00},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x07f9, match64: 0x00000000, model64: 0x7e0000007e06},
		modelTuple{type64: 0x24300000245, matchRI: 0x07fa, match64: 0x00000000, model64: 0x7e0600007e0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fb, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x7e2300007e2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e3100007e3a, model64: 0x7e3a00007e43},
		modelTuple{type64: 0x2700000027, matchRI: 0x07fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0801, match64: 0x00000000, model64: 0x7e5600007e60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7e6700007e70, model64: 0x7e7000007e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x0803, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0804, match64: 0x00000000, model64: 0x7e7900007e80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0805, match64: 0x00000000, model64: 0x7e8000007e8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0807, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0808, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0809, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x080a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x080f, match64: 0x00000000, model64: 0x7eab00007eb2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0810, match64: 0x00000000, model64: 0x7eb200007eb5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0811, match64: 0x00000000, model64: 0x7eb500007eb9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0812, match64: 0x00000000, model64: 0x7eb900007ebd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0813, match64: 0x00000000, model64: 0x730f00007317},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0814, match64: 0x00000000, model64: 0x7ebd00007ec9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0815, match64: 0x00000000, model64: 0x7ec900007ed2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0816, match64: 0x00000000, model64: 0x7ed200007ede},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x7ede00007ee5, model64: 0x7ee500007eed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7eed00007ef5, model64: 0x7eed00007ef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7ef500007f02, model64: 0x7f0200007f10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f1000007f1b, model64: 0x7f1b00007f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f2700007f32, model64: 0x7f3200007f3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f3e00007f45, model64: 0x7f4500007f4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f4d00007f53, model64: 0x7f4d00007f53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f5300007f5d, model64: 0x7f5300007f5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f5d00007f66, model64: 0x7f5d00007f66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f6600007f6b, model64: 0x7f6600007f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f6b00007f71, model64: 0x7f7100007f77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7f7700007f7e, model64: 0x7f7e00007f85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0817, match64: 0x00000000, model64: 0x7f8500007f98},
		modelTuple{type64: 0x2700000027, matchRI: 0x0818, match64: 0x00000000, model64: 0x7f9800007faa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0819, match64: 0x00000000, model64: 0x7faa00007fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x081a, match64: 0x00000000, model64: 0x7fb800007fbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x081b, match64: 0x00000000, model64: 0x7fbe00007fca},
		modelTuple{type64: 0x2700000027, matchRI: 0x081c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x081d, match64: 0x00000000, model64: 0x7fca00007fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x081e, match64: 0x00000000, model64: 0x7fd100007fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x081f, match64: 0x00000000, model64: 0x7fd800007fdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7fdf00007fe7, model64: 0x7fdf00007fe7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0820, match64: 0x00000000, model64: 0x7fe700007feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x7feb00007ff6, model64: 0x7ff600008001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x800100008008, model64: 0x800100008008},
		modelTuple{type64: 0x2700000027, matchRI: 0x0821, match64: 0x00000000, model64: 0x800800008013},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80130000801a, model64: 0x80130000801a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x801a00008020, model64: 0x802000008027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80270000802e, model64: 0x80270000802e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0822, match64: 0x00000000, model64: 0x802e00008035},
		modelTuple{type64: 0x2700000027, matchRI: 0x0823, match64: 0x00000000, model64: 0x80350000803d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0824, match64: 0x00000000, model64: 0x803d00008045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80450000804a, model64: 0x804a00008050},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80500000805c, model64: 0x805c00008068},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x806800008074, model64: 0x807400008080},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x808000008087, model64: 0x808000008087},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80870000808c, model64: 0x808c00008092},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80920000809b, model64: 0x809b0000809d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x809d000080a4, model64: 0x80a4000080ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0825, match64: 0x00000000, model64: 0x80ab000080b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80b5000080bc, model64: 0x80bc000080c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0826, match64: 0x00000000, model64: 0x80c4000080cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80cc000080d4, model64: 0x80d4000080dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80dc000080ea, model64: 0x80ea000080f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x80f800008100, model64: 0x810000008108},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x810800008111, model64: 0x810800008111},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x811100008117, model64: 0x811100008117},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81170000811d, model64: 0x811d00008124},
		modelTuple{type64: 0x2700000027, matchRI: 0x0827, match64: 0x00000000, model64: 0x7fca00007fd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x812400008129, model64: 0x81290000812f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x812f00008134, model64: 0x813400008140},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x814000008145, model64: 0x81450000814f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x814f0000815c, model64: 0x815c00008169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0828, match64: 0x00000000, model64: 0x816900008171},
		modelTuple{type64: 0x2700000027, matchRI: 0x0829, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082b, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x082c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x082e, match64: 0x00000000, model64: 0x817100008176},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x817c0000817e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0831, match64: 0x00000000, model64: 0x81820000818d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0832, match64: 0x00000000, model64: 0x818d00008194},
		modelTuple{type64: 0x2700000027, matchRI: 0x0833, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0834, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0837, match64: 0x00000000, model64: 0x819f000081a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0838, match64: 0x00000000, model64: 0x81a4000081aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0839, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x083c, match64: 0x00000000, model64: 0x81b2000081b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x083d, match64: 0x00000000, model64: 0x81b6000081bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x083e, match64: 0x00000000, model64: 0x81bb000081bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x083f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0840, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81cb000081d1, model64: 0x81d1000081d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81d7000081db, model64: 0x81d7000081db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x81db000081e5, model64: 0x81e5000081ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0842, match64: 0x00000000, model64: 0x81ee000081f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0843, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0846, match64: 0x00000000, model64: 0x821b00008221},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x82350000823d},
		modelTuple{type64: 0x2700000027, matchRI: 0x084b, match64: 0x00000000, model64: 0x82440000824b},
		modelTuple{type64: 0x2700000027, matchRI: 0x084c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x084d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x826100008271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x827500008281, model64: 0x82810000828c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0853, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x82920000829e, model64: 0x82920000829e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0854, match64: 0x00000000, model64: 0x829e000082a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0855, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0857, match64: 0x00000000, model64: 0x82af000082b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0858, match64: 0x00000000, model64: 0x82b9000082c6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x82cd000082d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x085b, match64: 0x00000000, model64: 0x82d9000082dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x085c, match64: 0x00000000, model64: 0x82dc000082df},
		modelTuple{type64: 0x2700000027, matchRI: 0x085d, match64: 0x00000000, model64: 0x82df000082eb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x085e, match64: 0x00000000, model64: 0x82eb000082ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0860, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0861, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0864, match64: 0x00000000, model64: 0x82fe00008309},
		modelTuple{type64: 0x2700000027, matchRI: 0x0865, match64: 0x00000000, model64: 0x83090000830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0866, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0868, match64: 0x00000000, model64: 0x831200008319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0869, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x086a, match64: 0x00000000, model64: 0x83190000831f},
		modelTuple{type64: 0x2700000027, matchRI: 0x086b, match64: 0x00000000, model64: 0x831f00008324},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x086d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x086e, match64: 0x00000000, model64: 0x83260000832a},
		modelTuple{type64: 0x2700000027, matchRI: 0x086f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x833000008338, model64: 0x83380000833d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x834900008351, model64: 0x835100008359},
		modelTuple{type64: 0x24300000245, matchRI: 0x0874, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x835c0000836d, model64: 0x836d0000837a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0875, match64: 0x00000000, model64: 0x837a00008384},
		modelTuple{type64: 0x2700000027, matchRI: 0x0876, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0877, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0879, match64: 0x00000000, model64: 0x83870000838c},
		modelTuple{type64: 0x24700000251, matchRI: 0x087a, match64: 0x00000000, model64: 0x83870000838c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83910000839e, model64: 0x839e000083a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83a5000083af, model64: 0x83af000083ba},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83cc000083d1, model64: 0x83d1000083d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x087f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x83db000083e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0882, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0884, match64: 0x00000000, model64: 0x83ec000083f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0885, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x83f600008403, model64: 0x840300008410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84140000841e, model64: 0x841e00008428},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x842800008435, model64: 0x843500008442},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0889, match64: 0x00000000, model64: 0x844b00008459},
		modelTuple{type64: 0x2700000027, matchRI: 0x088a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x088f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0890, match64: 0x00000000, model64: 0x84710000847b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x848700008498, model64: 0x8498000084a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0892, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0893, match64: 0x00000000, model64: 0x84a4000084af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84af000084bc, model64: 0x84bc000084c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0894, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0896, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0897, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84d1000084dd, model64: 0x84dd000084e9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x089b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x84fd00008504, model64: 0x85040000850c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x85130000851e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x089f, match64: 0x00000000, model64: 0x852f00008543},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a0, match64: 0x00000000, model64: 0x85430000855e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a1, match64: 0x00000000, model64: 0x855e00008572},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a2, match64: 0x00000000, model64: 0x857200008585},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x858c0000859d},
		modelTuple{type64: 0x24300000245, matchRI: 0x08a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a8, match64: 0x00000000, model64: 0x85ad000085b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x08a9, match64: 0x00000000, model64: 0x85b2000085bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08aa, match64: 0x00000000, model64: 0x85bd000085c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ab, match64: 0x00000000, model64: 0x85c3000085cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ac, match64: 0x00000000, model64: 0x85cd000085d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ad, match64: 0x00000000, model64: 0x85d5000085dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ae, match64: 0x00000000, model64: 0x85dd000085e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x08af, match64: 0x00000000, model64: 0x1ea000001ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b0, match64: 0x00000000, model64: 0x85e6000085ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b1, match64: 0x00000000, model64: 0x85ed000085f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b2, match64: 0x00000000, model64: 0x85f4000085fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b3, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b4, match64: 0x00000000, model64: 0x85fb000085fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b5, match64: 0x00000000, model64: 0x85fe00008604},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b6, match64: 0x00000000, model64: 0x860400008606},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bb, match64: 0x00000000, model64: 0x860d00008614},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bc, match64: 0x00000000, model64: 0x861400008620},
		modelTuple{type64: 0x2700000027, matchRI: 0x08bd, match64: 0x00000000, model64: 0x860d00008614},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c1, match64: 0x00000000, model64: 0x863700008640},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c2, match64: 0x00000000, model64: 0x864000008645},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c3, match64: 0x00000000, model64: 0x86450000864d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x865a00008660, model64: 0x866000008667},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86670000866d, model64: 0x866d00008674},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c8, match64: 0x00000000, model64: 0x867d00008689},
		modelTuple{type64: 0x2700000027, matchRI: 0x08c9, match64: 0x00000000, model64: 0x868900008696},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ca, match64: 0x00000000, model64: 0x8696000086a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86a1000086aa, model64: 0x86aa000086b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cb, match64: 0x00000000, model64: 0x86b4000086be},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cc, match64: 0x00000000, model64: 0x86be000086c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x08cd, match64: 0x00000000, model64: 0x86c7000086d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x86d3000086df, model64: 0x86d3000086df},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08d0, match64: 0x00000000, model64: 0x86ec000086fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08d1, match64: 0x00000000, model64: 0x86fb0000870b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x870b0000871a, model64: 0x871a00008722},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x87310000873a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x87410000874f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87550000875e, model64: 0x875e00008767},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87670000876b, model64: 0x87670000876b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x877700008780, model64: 0x878000008788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87880000878d, model64: 0x87880000878d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x878d00008791, model64: 0x879100008794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x879400008798, model64: 0x8798000087a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87a2000087a6, model64: 0x57cf000057d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87a6000087ab, model64: 0x87ab000087b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87b4000087b9, model64: 0x87b9000087c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87c0000087c6, model64: 0x87c6000087cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87cc000087d0, model64: 0x87d0000087d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87d7000087db, model64: 0x87db000087e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87e3000087e8, model64: 0x87e8000087f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87f0000087f4, model64: 0x87f4000087f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x87f8000087fc, model64: 0x87fc00008804},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x880400008808, model64: 0x88080000880c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x880c00008810, model64: 0x88100000881a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x881a0000881e, model64: 0x881e00008824},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x882400008828, model64: 0x88280000882d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x882d00008831, model64: 0x88310000883a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x883a0000883e, model64: 0x883e00008849},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88490000884d, model64: 0x884d00008854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x885400008858, model64: 0x88580000885f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x885f00008863, model64: 0x88630000886e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x886e00008872, model64: 0x88720000887d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x887d00008881, model64: 0x88810000888a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x888a0000888e, model64: 0x888e00008895},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x889a000088a3, model64: 0x88a3000088b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88b6000088bd, model64: 0x88bd000088c3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x88ca000088ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88d2000088dc, model64: 0x88dc000088e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88e6000088f0, model64: 0x88e6000088f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x88f0000088fb, model64: 0x88fb00008906},
		modelTuple{type64: 0x2700000027, matchRI: 0x08dd, match64: 0x00000000, model64: 0x890600008910},
		modelTuple{type64: 0x2700000027, matchRI: 0x08de, match64: 0x00000000, model64: 0x89100000891b},
		modelTuple{type64: 0x2700000027, matchRI: 0x08df, match64: 0x00000000, model64: 0x891b00008924},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x892400008930, model64: 0x89300000893c},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e0, match64: 0x00000000, model64: 0x893c00008945},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89450000894f, model64: 0x894f00008959},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x895900008965, model64: 0x896500008971},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89710000897a, model64: 0x897a00008987},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e1, match64: 0x00000000, model64: 0x898700008990},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e2, match64: 0x00000000, model64: 0x899000008999},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8999000089a3, model64: 0x8999000089a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e3, match64: 0x00000000, model64: 0x89a3000089ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e4, match64: 0x00000000, model64: 0x88fb00008906},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89ad000089b8, model64: 0x89ad000089b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89b8000089c2, model64: 0x89b8000089c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89c2000089cf, model64: 0x89c2000089cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e5, match64: 0x00000000, model64: 0x89cf000089d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e6, match64: 0x00000000, model64: 0x89d3000089d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x08e7, match64: 0x00000000, model64: 0x89d7000089db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89db000089e5, model64: 0x89db000089e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x89e5000089ef, model64: 0x89e5000089ef},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x89ef000089f9, model64: 0x89ef000089f9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x89f900008a03, model64: 0x8a0300008a0d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08e8, match64: 0x00000000, model64: 0x8a0d00008a1d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08e9, match64: 0x00000000, model64: 0x8a1d00008a28},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08ea, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x8a2800008a38, model64: 0x8a3800008a43},
		modelTuple{type64: 0x24300000245, matchRI: 0x08eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x8a4300008a49, model64: 0x8a4900008a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ee, match64: 0x00000000, model64: 0x8a5600008a5a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8a6f00008a73, model64: 0x8a6f00008a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f3, match64: 0x00000000, model64: 0x8a7d00008a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f4, match64: 0x00000000, model64: 0x8a8a00008a92},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f5, match64: 0x00000000, model64: 0x8a9200008a9a},
		modelTuple{type64: 0x24300000245, matchRI: 0x08f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x08fa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x08fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8aab00008ab2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8aba00008ad3, model64: 0x8ad300008ae7},
		modelTuple{type64: 0x2700000027, matchRI: 0x08ff, match64: 0x00000000, model64: 0x8aef00008af6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8af600008b01, model64: 0x8b0100008b08},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0900, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0901, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0903, match64: 0x00000000, model64: 0x8b1000008b19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0904, match64: 0x00000000, model64: 0x8b1900008b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0905, match64: 0x00000000, model64: 0x8b1f00008b28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0906, match64: 0x00000000, model64: 0x8b2800008b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0907, match64: 0x00000000, model64: 0x8b3000008b37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b3700008b3f, model64: 0x8b3f00008b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x0908, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0909, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x090a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x090c, match64: 0x00000000, model64: 0x8b4e00008b5b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8b6100008b68},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0911, match64: 0x00000000, model64: 0x8b7d00008b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0912, match64: 0x00000000, model64: 0x8b8700008b8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0913, match64: 0x00000000, model64: 0x8b8e00008b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8b9500008ba5, model64: 0x8b9500008ba5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0914, match64: 0x00000000, model64: 0x8ba500008bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0915, match64: 0x00000000, model64: 0x8bac00008bb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0916, match64: 0x00000000, model64: 0x8bb900008bc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0917, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bc800008bcf, model64: 0x8bcf00008bd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8bd700008be3, model64: 0x8be300008be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0919, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x8bf000008c09, model64: 0x8c0900008c1a},
		modelTuple{type64: 0x24300000245, matchRI: 0x091b, match64: 0x00000000, model64: 0x8c1a00008c28},
		modelTuple{type64: 0x24300000245, matchRI: 0x091c, match64: 0x00000000, model64: 0x8c2800008c33},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x8c3300008c43, model64: 0x8c4300008c4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c4b00008c5e, model64: 0x8c4b00008c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x091d, match64: 0x00000000, model64: 0x8c5e00008c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x091e, match64: 0x00000000, model64: 0x8c6d00008c7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x091f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8c8b00008c99, model64: 0x8c9900008ca8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ca800008cb8, model64: 0x8ca800008cb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cb800008cc4, model64: 0x8cc400008cd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cd000008cdf, model64: 0x8cdf00008cee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8cee00008cfe, model64: 0x8cfe00008d10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d1000008d1a, model64: 0x8d1a00008d2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0923, match64: 0x00000000, model64: 0x8d3500008d40},
		modelTuple{type64: 0x2700000027, matchRI: 0x0924, match64: 0x00000000, model64: 0x8d4000008d46},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0927, match64: 0x00000000, model64: 0x8d5200008d60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d6000008d69, model64: 0x8d6000008d69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d6900008d72, model64: 0x8d6900008d72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0928, match64: 0x00000000, model64: 0x8d7200008d80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0929, match64: 0x00000000, model64: 0x8d8000008d8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x092a, match64: 0x00000000, model64: 0x8d8e00008d99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8d9900008da3, model64: 0x8da300008dae},
		modelTuple{type64: 0x2700000027, matchRI: 0x092b, match64: 0x00000000, model64: 0x8dae00008db9},
		modelTuple{type64: 0x2700000027, matchRI: 0x092c, match64: 0x00000000, model64: 0x8db900008dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x092d, match64: 0x00000000, model64: 0x8dc200008dce},
		modelTuple{type64: 0x2700000027, matchRI: 0x092e, match64: 0x00000000, model64: 0x8dce00008dd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x092f, match64: 0x00000000, model64: 0x8dd600008de0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0930, match64: 0x00000000, model64: 0x8de000008de9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0931, match64: 0x00000000, model64: 0x569c000056a5},
		modelTuple{type64: 0x24700000251, matchRI: 0x0932, match64: 0x00000000, model64: 0x8de900008def},
		modelTuple{type64: 0x24700000251, matchRI: 0x0933, match64: 0x00000000, model64: 0x8def00008df5},
		modelTuple{type64: 0x24700000251, matchRI: 0x0934, match64: 0x00000000, model64: 0x8df500008dfb},
		modelTuple{type64: 0x24700000251, matchRI: 0x0935, match64: 0x00000000, model64: 0x8dfb00008e05},
		modelTuple{type64: 0x24700000251, matchRI: 0x0936, match64: 0x00000000, model64: 0x13670000136b},
		modelTuple{type64: 0x24700000251, matchRI: 0x0937, match64: 0x00000000, model64: 0x8e0500008e0a},
		modelTuple{type64: 0x24700000251, matchRI: 0x0938, match64: 0x00000000, model64: 0x8e0a00008e0f},
		modelTuple{type64: 0x38400000391, matchRI: 0x0939, match64: 0x00000000, model64: 0x8e0f00008e12},
		modelTuple{type64: 0x2700000027, matchRI: 0x093a, match64: 0x00000000, model64: 0x8e1200008e18},
		modelTuple{type64: 0x24700000251, matchRI: 0x093b, match64: 0x00000000, model64: 0x8e1800008e1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x093c, match64: 0x00000000, model64: 0x8e1e00008e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x093d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x093e, match64: 0x00000000, model64: 0x8e2300008e2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e2b00008e31, model64: 0x8e2b00008e31},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8e3a00008e4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0941, match64: 0x00000000, model64: 0x8e5200008e5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e5b00008e63, model64: 0x8e6300008e6b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8e7d00008e8a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0944, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0945, match64: 0x00000000, model64: 0x8e9200008e96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8e9800008ea0, model64: 0x8ea000008ea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0947, match64: 0x00000000, model64: 0x8ea400008ea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0948, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0949, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x8ea800008eb3, model64: 0x8eb300008ec0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ec400008ecc, model64: 0x8ec400008ecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x094b, match64: 0x00000000, model64: 0x8ecc00008ed6},
		modelTuple{type64: 0x2700000027, matchRI: 0x094c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x094d, match64: 0x00000000, model64: 0x8ed600008edb},
		modelTuple{type64: 0x2700000027, matchRI: 0x094e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ee400008eea, model64: 0x8eea00008ef1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ef100008ef8, model64: 0x8ef800008eff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8eff00008f07, model64: 0x8f0700008f10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f1000008f19, model64: 0x8f1900008f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f2200008f2e, model64: 0x8f2e00008f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0950, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8f3a00008f42, model64: 0x8f4200008f4b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8f5e00008f66},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x8f6b00008f79},
		modelTuple{type64: 0x38400000391, matchRI: 0x0954, match64: 0x00000000, model64: 0x8f8200008f8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0955, match64: 0x00000000, model64: 0x8f9100008f9b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0956, match64: 0x00000000, model64: 0x8f9b00008fa4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fae00008fba, model64: 0x8fba00008fc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fc900008fd4, model64: 0x8fc900008fd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fd400008fe1, model64: 0x8fe100008fe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8fe600008ff2, model64: 0x8ff200008ff8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8ff800009004, model64: 0x900400009007},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x900700009013, model64: 0x845c00008461},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90130000901f, model64: 0x901f00009025},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x902500009031, model64: 0x903100009036},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0959, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x903900009040, model64: 0x903900009040},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90400000904a, model64: 0x90400000904a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x904a00009054, model64: 0x904a00009054},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90540000905e, model64: 0x90540000905e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x905e00009068, model64: 0x905e00009068},
		modelTuple{type64: 0x2700000027, matchRI: 0x095c, match64: 0x00000000, model64: 0x906b00009078},
		modelTuple{type64: 0x2700000027, matchRI: 0x095d, match64: 0x00000000, model64: 0x907800009080},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90800000908a, model64: 0x908a00009096},
		modelTuple{type64: 0x2700000027, matchRI: 0x095e, match64: 0x00000000, model64: 0x90960000909f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x909f000090aa, model64: 0x90aa000090b5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0962, match64: 0x00000000, model64: 0x90c5000090cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0963, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x90d4000090dc, model64: 0x90d4000090dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0965, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0966, match64: 0x00000000, model64: 0x90dc000090e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x90e3000090e9, model64: 0x90e3000090e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0967, match64: 0x00000000, model64: 0x90e9000090ec},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x910800009111},
		modelTuple{type64: 0x2700000027, matchRI: 0x096b, match64: 0x00000000, model64: 0x91180000911a},
		modelTuple{type64: 0x2700000027, matchRI: 0x096c, match64: 0x00000000, model64: 0x911a0000911d},
		modelTuple{type64: 0x2700000027, matchRI: 0x096d, match64: 0x00000000, model64: 0x911d00009123},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x912900009130},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0972, match64: 0x00000000, model64: 0x91450000914f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x914f00009160, model64: 0x914f00009160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x916000009165, model64: 0x91650000916b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x916b00009173, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0973, match64: 0x00000000, model64: 0x917300009179},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x917f00009184},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0979, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91a9000091b0, model64: 0x91b0000091b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91b2000091c0, model64: 0x91b2000091c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x097b, match64: 0x00000000, model64: 0x91c0000091c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91c9000091d2, model64: 0x91d2000091d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91d6000091e5, model64: 0x91e5000091f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x91f600009200, model64: 0x91f600009200},
		modelTuple{type64: 0x2700000027, matchRI: 0x097c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x920400009213, model64: 0x92130000921c},
		modelTuple{type64: 0x2700000027, matchRI: 0x097e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x921c00009226, model64: 0x922600009230},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x923000009239, model64: 0x923900009242},
		modelTuple{type64: 0x2700000027, matchRI: 0x097f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92420000924c, model64: 0x924c00009251},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92510000925a, model64: 0x925a00009267},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92670000926c, model64: 0x926c00009275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92750000927c, model64: 0x927c00009286},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x928600009292, model64: 0x92920000929e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x929e000092a5, model64: 0x92a5000092ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92ad000092b5, model64: 0x92b5000092bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92bd000092c2, model64: 0x92c2000092d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92d6000092db, model64: 0x92d6000092db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0981, match64: 0x00000000, model64: 0x92db000092e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0982, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92e5000092e9, model64: 0x92e5000092e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0983, match64: 0x00000000, model64: 0x92e9000092ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0984, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0985, match64: 0x00000000, model64: 0x92ee000092f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92f0000092f7, model64: 0x92f7000092fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x92fe00009304, model64: 0x93040000930a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0986, match64: 0x00000000, model64: 0x930a00009315},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0987, match64: 0x00000000, model64: 0x931500009321},
		modelTuple{type64: 0x2700000027, matchRI: 0x0988, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0989, match64: 0x00000000, model64: 0x932e00009334},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x098b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x098c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x098d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x098f, match64: 0x00000000, model64: 0x935700009362},
		modelTuple{type64: 0x2700000027, matchRI: 0x0990, match64: 0x00000000, model64: 0x93620000936d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0991, match64: 0x00000000, model64: 0x936d0000937a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0992, match64: 0x00000000, model64: 0x937a00009385},
		modelTuple{type64: 0x2700000027, matchRI: 0x0993, match64: 0x00000000, model64: 0x938500009395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0994, match64: 0x00000000, model64: 0x9395000093a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0995, match64: 0x00000000, model64: 0x93a2000093b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0996, match64: 0x00000000, model64: 0x93b2000093bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0997, match64: 0x00000000, model64: 0x93bc000093ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0998, match64: 0x00000000, model64: 0x93ca000093db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0999, match64: 0x00000000, model64: 0x93db000093ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x099a, match64: 0x00000000, model64: 0x93ea000093f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x099b, match64: 0x00000000, model64: 0x93f500009403},
		modelTuple{type64: 0x2700000027, matchRI: 0x099c, match64: 0x00000000, model64: 0x94030000940f},
		modelTuple{type64: 0x2700000027, matchRI: 0x099d, match64: 0x00000000, model64: 0x940f0000941b},
		modelTuple{type64: 0x2700000027, matchRI: 0x099e, match64: 0x00000000, model64: 0x941b0000942a},
		modelTuple{type64: 0x2700000027, matchRI: 0x099f, match64: 0x00000000, model64: 0x942a0000943d},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a0, match64: 0x00000000, model64: 0x943d00009448},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a1, match64: 0x00000000, model64: 0x944800009457},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a2, match64: 0x00000000, model64: 0x94570000945f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a3, match64: 0x00000000, model64: 0x945f0000946c},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a4, match64: 0x00000000, model64: 0x946c00009476},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a5, match64: 0x00000000, model64: 0x947600009486},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a6, match64: 0x00000000, model64: 0x948600009495},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a7, match64: 0x00000000, model64: 0x9495000094a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a8, match64: 0x00000000, model64: 0x94a0000094aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94aa000094b4, model64: 0x94b4000094be},
		modelTuple{type64: 0x2700000027, matchRI: 0x09a9, match64: 0x00000000, model64: 0x94be000094c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94cc000094d3, model64: 0x94d3000094d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x94d4000094da, model64: 0x94da000094e0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09ad, match64: 0x00000000, model64: 0x94e3000094eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ae, match64: 0x00000000, model64: 0x94eb000094f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09af, match64: 0x00000000, model64: 0x94f2000094fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b0, match64: 0x00000000, model64: 0x94fa00009502},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b1, match64: 0x00000000, model64: 0x950200009511},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b2, match64: 0x00000000, model64: 0x95110000951a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b3, match64: 0x00000000, model64: 0x951a00009522},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b4, match64: 0x00000000, model64: 0x95220000952a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b5, match64: 0x00000000, model64: 0x952a00009532},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b6, match64: 0x00000000, model64: 0x95320000953a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b7, match64: 0x00000000, model64: 0x953a00009542},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b8, match64: 0x00000000, model64: 0x95420000954b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09b9, match64: 0x00000000, model64: 0x954b00009554},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ba, match64: 0x00000000, model64: 0x955400009563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x956300009568, model64: 0x956800009570},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x957000009575, model64: 0x95750000957e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bb, match64: 0x00000000, model64: 0x957e00009586},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95860000958b, model64: 0x958b00009593},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x959300009598, model64: 0x9598000095a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95a0000095a5, model64: 0x95a5000095ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95ae000095b3, model64: 0x95b3000095bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bc, match64: 0x00000000, model64: 0x95bc000095c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95c4000095c9, model64: 0x95c9000095d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95d2000095d7, model64: 0x95d7000095e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95e0000095e5, model64: 0x95e5000095ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95ee000095f3, model64: 0x95f3000095fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x95fb00009600, model64: 0x960000009608},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96080000960d, model64: 0x960d00009615},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96150000961a, model64: 0x961a00009622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x962200009627, model64: 0x96270000962f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x962f00009634, model64: 0x96340000963c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x963c00009641, model64: 0x964100009649},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96490000964e, model64: 0x964e0000965c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x965c00009668, model64: 0x965c00009668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96680000966d, model64: 0x966d00009676},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96760000967b, model64: 0x967b00009684},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bd, match64: 0x00000000, model64: 0x96840000968d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x968d00009692, model64: 0x96920000969a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x969a0000969f, model64: 0x969f000096ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96ab000096b0, model64: 0x96b0000096b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96b9000096be, model64: 0x96be000096c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96c7000096cc, model64: 0x96cc000096d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96d4000096d9, model64: 0x96d9000096e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96e5000096ea, model64: 0x96ea000096f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x96f3000096f8, model64: 0x96f800009703},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x970300009708, model64: 0x97080000970d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x970d00009712, model64: 0x971200009720},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x972000009725, model64: 0x97250000972d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x972d00009732, model64: 0x97320000973a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x973a0000973f, model64: 0x973f00009748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97480000974d, model64: 0x974d00009756},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97560000975b, model64: 0x975b00009763},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x976300009768, model64: 0x976800009771},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x977100009776, model64: 0x97760000977f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x977f00009784, model64: 0x97840000978d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x978d00009792, model64: 0x97920000979b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x979b000097a0, model64: 0x97a0000097a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97a9000097ae, model64: 0x97ae000097b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97b7000097bc, model64: 0x97bc000097c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x97c5000097ca, model64: 0x97ca000097d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09be, match64: 0x00000000, model64: 0x97d3000097da},
		modelTuple{type64: 0x2700000027, matchRI: 0x09bf, match64: 0x00000000, model64: 0x97da000097de},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c0, match64: 0x00000000, model64: 0x97de000097e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c1, match64: 0x00000000, model64: 0x97e3000097e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c2, match64: 0x00000000, model64: 0x97e8000097f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c3, match64: 0x00000000, model64: 0x97f0000097f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c4, match64: 0x00000000, model64: 0x97f8000097fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c5, match64: 0x00000000, model64: 0x97fd00009802},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c6, match64: 0x00000000, model64: 0x980200009807},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c7, match64: 0x00000000, model64: 0x980700009811},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c8, match64: 0x00000000, model64: 0x98110000981b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09c9, match64: 0x00000000, model64: 0x981b00009825},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ca, match64: 0x00000000, model64: 0x98250000982f},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cb, match64: 0x00000000, model64: 0x982f00009839},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cc, match64: 0x00000000, model64: 0x983900009843},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cd, match64: 0x00000000, model64: 0x98430000984e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ce, match64: 0x00000000, model64: 0x984e00009854},
		modelTuple{type64: 0x2700000027, matchRI: 0x09cf, match64: 0x00000000, model64: 0x985400009860},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d0, match64: 0x00000000, model64: 0x986000009868},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d1, match64: 0x00000000, model64: 0x986800009871},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d2, match64: 0x00000000, model64: 0x987100009878},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d3, match64: 0x00000000, model64: 0x56ad000056b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d4, match64: 0x00000000, model64: 0x987800009881},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d5, match64: 0x00000000, model64: 0x988100009887},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d6, match64: 0x00000000, model64: 0x5cff00005d04},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d7, match64: 0x00000000, model64: 0x988700009891},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d8, match64: 0x00000000, model64: 0x98910000989b},
		modelTuple{type64: 0x2700000027, matchRI: 0x09d9, match64: 0x00000000, model64: 0x989b000098a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09da, match64: 0x00000000, model64: 0x98a5000098a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09db, match64: 0x00000000, model64: 0x54c00000552},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dc, match64: 0x00000000, model64: 0x98a9000098b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x09dd, match64: 0x00000000, model64: 0x98b0000098b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x09de, match64: 0x00000000, model64: 0x6ea000006ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x09df, match64: 0x00000000, model64: 0x98b9000098c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e0, match64: 0x00000000, model64: 0x98c5000098cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e1, match64: 0x00000000, model64: 0x98cf000098d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e2, match64: 0x00000000, model64: 0x57f2000057f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e3, match64: 0x00000000, model64: 0x98d7000098de},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e4, match64: 0x00000000, model64: 0x98de000098e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e5, match64: 0x00000000, model64: 0x98e7000098ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e6, match64: 0x00000000, model64: 0x98ef000098f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e7, match64: 0x00000000, model64: 0x98f4000098fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e8, match64: 0x00000000, model64: 0x98fe00009908},
		modelTuple{type64: 0x2700000027, matchRI: 0x09e9, match64: 0x00000000, model64: 0x990800009913},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ea, match64: 0x00000000, model64: 0x99130000991e},
		modelTuple{type64: 0x2700000027, matchRI: 0x09eb, match64: 0x00000000, model64: 0x991e0000992a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ec, match64: 0x00000000, model64: 0x992a00009936},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ed, match64: 0x00000000, model64: 0x99360000993a},
		modelTuple{type64: 0x38400000391, matchRI: 0x09ee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09ef, match64: 0x00000000, model64: 0x993a00009944},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f2, match64: 0x00000000, model64: 0x994f0000995a},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x09f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09f9, match64: 0x00000000, model64: 0x996400009966},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fa, match64: 0x00000000, model64: 0x996e00009973},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x09fd, match64: 0x00000000, model64: 0x997b00009986},
		modelTuple{type64: 0x2700000027, matchRI: 0x09ff, match64: 0x00000000, model64: 0x998d00009997},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x99a8000099af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a03, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a04, match64: 0x00000000, model64: 0x99ba000099c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99c4000099ce, model64: 0x99ce000099d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a05, match64: 0x00000000, model64: 0x99d8000099e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99e1000099ea, model64: 0x99ea000099f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x99f3000099fc, model64: 0x99f3000099fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a07, match64: 0x00000000, model64: 0x9a0200009a10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a09, match64: 0x00000000, model64: 0x9a1700009a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a2f00009a37, model64: 0x9a3700009a3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a3a00009a42, model64: 0x9a4200009a44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a4400009a4c, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a4c00009a54, model64: 0x9a5400009a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0e, match64: 0x00000000, model64: 0x9a5e00009a63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a6300009a6a, model64: 0x9a6a00009a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a0f, match64: 0x00000000, model64: 0x9a7800009a82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a10, match64: 0x00000000, model64: 0x9a8200009a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a11, match64: 0x00000000, model64: 0x9a8a00009a96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9a9600009a9d, model64: 0x9a9d00009aa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9aa400009aab, model64: 0x9aab00009ab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a12, match64: 0x00000000, model64: 0x9ab000009ab5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ab500009abc, model64: 0x9abc00009ac6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ac600009acd, model64: 0x9acd00009ad3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ad300009ad9, model64: 0x9ad900009add},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a13, match64: 0x00000000, model64: 0x9add00009adf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a14, match64: 0x00000000, model64: 0x9adf00009ae7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9ae700009aee, model64: 0x9aee00009af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a15, match64: 0x00000000, model64: 0x9af600009afe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9afe00009b05, model64: 0x9b0500009b12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b1200009b19, model64: 0x9b1900009b27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b2700009b2e, model64: 0x9b2e00009b3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b3e00009b45, model64: 0x9b4500009b50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5000009b57, model64: 0x9b5700009b5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b5f00009b6a, model64: 0x9b6a00009b75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b7500009b7d, model64: 0x9b7d00009b85},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9b8b00009b96, model64: 0x82810000828c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a19, match64: 0x00000000, model64: 0x9b9d00009bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1a, match64: 0x00000000, model64: 0x9bac00009bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1b, match64: 0x00000000, model64: 0x9bbb00009bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1c, match64: 0x00000000, model64: 0x9bc800009bda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1d, match64: 0x00000000, model64: 0x9bda00009be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1e, match64: 0x00000000, model64: 0x9be900009bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a1f, match64: 0x00000000, model64: 0x9bf800009c08},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a20, match64: 0x00000000, model64: 0x9c0800009c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a21, match64: 0x00000000, model64: 0x9c1600009c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a22, match64: 0x00000000, model64: 0x9c2500009c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a23, match64: 0x00000000, model64: 0x9c3400009c42},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a24, match64: 0x00000000, model64: 0x9c4200009c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a25, match64: 0x00000000, model64: 0x9c5100009c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a26, match64: 0x00000000, model64: 0x9c6100009c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a27, match64: 0x00000000, model64: 0x9c7200009c83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a28, match64: 0x00000000, model64: 0x9c8300009c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a29, match64: 0x00000000, model64: 0x9c9600009ca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2a, match64: 0x00000000, model64: 0x9ca500009cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2b, match64: 0x00000000, model64: 0x9cb300009cc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2c, match64: 0x00000000, model64: 0x9cc100009cd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2d, match64: 0x00000000, model64: 0x9cd000009ce2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2e, match64: 0x00000000, model64: 0x9ce200009cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a2f, match64: 0x00000000, model64: 0x9cf100009d00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a30, match64: 0x00000000, model64: 0x9d0000009d0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a31, match64: 0x00000000, model64: 0x9d0c00009d1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a32, match64: 0x00000000, model64: 0x9d1b00009d2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a33, match64: 0x00000000, model64: 0x9d2c00009d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a34, match64: 0x00000000, model64: 0x9d3d00009d53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a35, match64: 0x00000000, model64: 0x9d5300009d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a36, match64: 0x00000000, model64: 0x9d6200009d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a37, match64: 0x00000000, model64: 0x9d7100009d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a38, match64: 0x00000000, model64: 0x9d7a00009d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a39, match64: 0x00000000, model64: 0x9d8800009d9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3a, match64: 0x00000000, model64: 0x9d9b00009dae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3b, match64: 0x00000000, model64: 0x9dae00009dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3c, match64: 0x00000000, model64: 0x9dbd00009ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3d, match64: 0x00000000, model64: 0x9ddf00009df8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3e, match64: 0x00000000, model64: 0x9df800009e06},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a3f, match64: 0x00000000, model64: 0x9e0600009e15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a40, match64: 0x00000000, model64: 0x9e1500009e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a41, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a42, match64: 0x00000000, model64: 0x9e1a00009e24},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a43, match64: 0x00000000, model64: 0x9e2400009e2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a44, match64: 0x00000000, model64: 0x9e2f00009e3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a45, match64: 0x00000000, model64: 0x9e3a00009e43},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a46, match64: 0x00000000, model64: 0x9e4300009e55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a47, match64: 0x00000000, model64: 0x9e5500009e5f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a48, match64: 0x00000000, model64: 0x9e5f00009e6c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x9e6c00009e76, model64: 0x9e7600009e89},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a49, match64: 0x00000000, model64: 0x9e8900009e92},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x9e9200009ea0, model64: 0x9ea000009eae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4b, match64: 0x00000000, model64: 0x9eb300009ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4e, match64: 0x00000000, model64: 0x9ecb00009ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a4f, match64: 0x00000000, model64: 0x9ed300009ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a50, match64: 0x00000000, model64: 0x9ed700009ee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a51, match64: 0x00000000, model64: 0x9ee300009eeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9f0800009f0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f1c00009f24, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f2a00009f33, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f3900009f41, model64: 0x9f4100009f4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a57, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f4a00009f53, model64: 0x550200005504},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f5300009f5d, model64: 0x9f5d00009f67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f6700009f6b, model64: 0x9f6700009f6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a59, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5b, match64: 0x00000000, model64: 0x9f7200009f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a5c, match64: 0x00000000, model64: 0x9f7b00009f81},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x9f8a00009f8f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a61, match64: 0x00000000, model64: 0x9f9a00009fab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9fab00009fbd, model64: 0x9fbd00009fcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a62, match64: 0x00000000, model64: 0x9fcf00009fe1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a63, match64: 0x00000000, model64: 0x9fe100009fed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a64, match64: 0x00000000, model64: 0x9fed0000a001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0010000a012, model64: 0xa0010000a012},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0120000a027, model64: 0xa0120000a027},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a65, match64: 0x00000000, model64: 0xa0270000a034},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a66, match64: 0x00000000, model64: 0xa0340000a046},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a67, match64: 0x00000000, model64: 0xa0460000a058},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0580000a05d, model64: 0xa0580000a05d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa05d0000a065, model64: 0xa0650000a06d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a68, match64: 0x00000000, model64: 0xa06d0000a073},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa07b0000a07f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa0850000a08e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0910000a098, model64: 0xa0980000a09b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa09b0000a0a5, model64: 0xa0a50000a0af},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6c, match64: 0x00000000, model64: 0xa0af0000a0b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa0b80000a0bc, model64: 0xa0b80000a0bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a6d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a6e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a70, match64: 0x00000000, model64: 0xa0c40000a0ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a71, match64: 0x00000000, model64: 0xa0ce0000a0d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a72, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa0d90000a0df, model64: 0xa0df0000a0eb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa0eb0000a0f3, model64: 0xa0f30000a0fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a73, match64: 0x00000000, model64: 0xa0fc0000a107},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa1070000a118, model64: 0xa1180000a129},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a74, match64: 0x00000000, model64: 0xa1290000a13c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a75, match64: 0x00000000, model64: 0xa13c0000a150},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a76, match64: 0x00000000, model64: 0xa1500000a165},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a77, match64: 0x00000000, model64: 0xa1650000a177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1770000a187, model64: 0xa1870000a196},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a78, match64: 0x00000000, model64: 0xa1960000a1a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a79, match64: 0x00000000, model64: 0xa1a50000a1b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0xa1b20000a1be, model64: 0xa1be0000a1ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a7b, match64: 0x00000000, model64: 0xa1ca0000a1d2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a7c, match64: 0x00000000, model64: 0xf8800000f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a7e, match64: 0x00000000, model64: 0xf8800000f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a7f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a80, match64: 0x00000000, model64: 0xf8800000f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a81, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0a82, match64: 0x00000000, model64: 0xa1d20000a1da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa1e20000a1e9, model64: 0xa1e90000a1f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a85, match64: 0x00000000, model64: 0xa1f70000a1fa},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xa1fa0000a202, model64: 0xa1fa0000a202},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa2100000a217},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a8b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa23f0000a248, model64: 0xa2480000a24e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa24e0000a258, model64: 0xa2580000a260},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2600000a267, model64: 0xa2670000a26c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa26c0000a275, model64: 0xa2750000a27b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a91, match64: 0x00000000, model64: 0xa28b0000a298},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a92, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a95, match64: 0x00000000, model64: 0xa29f0000a2a9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2e50000a2ee, model64: 0xa2e50000a2ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2ee0000a2f2, model64: 0xa2f20000a2f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa2f70000a2fb, model64: 0xa2fb0000a300},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3000000a304, model64: 0xa3040000a30e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa30e0000a312, model64: 0xa3120000a317},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3170000a31b, model64: 0xa31b0000a320},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3200000a324, model64: 0xa3240000a32c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa32c0000a330, model64: 0xa3300000a33a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa33a0000a33e, model64: 0xa33e0000a347},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3470000a34b, model64: 0xa34b0000a354},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3540000a358, model64: 0xa3580000a35d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa35d0000a361, model64: 0xa3610000a36a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa36a0000a36e, model64: 0xa36e0000a377},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9c, match64: 0x00000000, model64: 0xa3770000a37d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9d, match64: 0x00000000, model64: 0xa37d0000a381},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9e, match64: 0x00000000, model64: 0xa3810000a386},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3860000a38c, model64: 0xa38c0000a393},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3930000a397, model64: 0xa3970000a39e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa39e0000a3a6, model64: 0xa39e0000a3a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3a60000a3aa, model64: 0xa3aa0000a3b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3b70000a3c0, model64: 0xa3b70000a3c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3c00000a3c4, model64: 0xa3c40000a3cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0a9f, match64: 0x00000000, model64: 0xa3cb0000a3d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3d70000a3e8, model64: 0xa3d70000a3e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa3e80000a3f7, model64: 0xa3e80000a3f7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa3f70000a409, model64: 0xa4090000a418},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa0, match64: 0x00000000, model64: 0x569c000056a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa1, match64: 0x00000000, model64: 0xa4180000a41f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa41f0000a430, model64: 0xa4300000a432},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0aa2, match64: 0x00000000, model64: 0x787d00007885},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa6, match64: 0x00000000, model64: 0xa4420000a446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x60e6000060e8, model64: 0x60e6000060e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa8, match64: 0x00000000, model64: 0xa44c0000a450},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aa9, match64: 0x00000000, model64: 0xa4500000a455},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0aae, match64: 0x00000000, model64: 0xa46b0000a475},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xa4750000a47a, model64: 0xa4750000a47a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xa47a0000a486, model64: 0xa4860000a48d},
		modelTuple{type64: 0x24700000251, matchRI: 0x0aaf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa48d0000a498, model64: 0xa4980000a4a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4a30000a4ae, model64: 0xa4ae0000a4b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4b50000a4bf, model64: 0xa4bf0000a4ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4ca0000a4d3, model64: 0xa4d30000a4dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4dd0000a4ea, model64: 0xa4ea0000a4f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa4f30000a4fd, model64: 0xa4fd0000a503},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5030000a508, model64: 0xa5080000a50f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab0, match64: 0x00000000, model64: 0xa50f0000a51b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa51b0000a521, model64: 0xa5210000a528},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5280000a530, model64: 0xa5300000a537},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5370000a541, model64: 0xa5410000a54b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab1, match64: 0x00000000, model64: 0xa54b0000a554},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5540000a55b, model64: 0xa55b0000a56c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa56c0000a573, model64: 0xa5730000a57d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa57d0000a583, model64: 0xa5830000a58a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa58a0000a592, model64: 0xa5920000a59c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab6, match64: 0x00000000, model64: 0xa5a60000a5a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5b10000a5b8, model64: 0xa5b80000a5c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ab9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5c60000a5cf, model64: 0xa5cf0000a5df},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0abc, match64: 0x00000000, model64: 0xa5e60000a5f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abd, match64: 0x00000000, model64: 0x52670000526f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abe, match64: 0x00000000, model64: 0xa5f20000a5f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0abf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa5f60000a5fc, model64: 0xa5fc0000a602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6020000a608, model64: 0xa6080000a60a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa60a0000a616, model64: 0xa6160000a619},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6190000a625, model64: 0xa6250000a62c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa62c0000a638, model64: 0xa6380000a63b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa63b0000a647, model64: 0xa6470000a64a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa64a0000a656, model64: 0xa6560000a659},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6590000a665, model64: 0xa6650000a66c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa66c0000a678, model64: 0xa6780000a67b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa67b0000a687, model64: 0xa6870000a68f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa68f0000a695, model64: 0xa6950000a69c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac3, match64: 0x00000000, model64: 0xa6a00000a6a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac4, match64: 0x00000000, model64: 0x82dc000082df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac5, match64: 0x00000000, model64: 0xa6a30000a6a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6a90000a6b0, model64: 0xa6b00000a6b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ac6, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ac8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ac9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aca, match64: 0x00000000, model64: 0xa6b80000a6c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa6c90000a6d1, model64: 0xa6d10000a6dc},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0acd, match64: 0x00000000, model64: 0xa6dc0000a6e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6e10000a6e8, model64: 0xa6e80000a6eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6eb0000a6f2, model64: 0xa6f20000a6f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa6f50000a6fc, model64: 0xa6fc0000a703},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ace, match64: 0x00000000, model64: 0xa7030000a70a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa70a0000a713, model64: 0xa7130000a719},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7190000a722, model64: 0xa7220000a724},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7240000a72a, model64: 0x9a4200009a44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa72a0000a731, model64: 0xa7310000a737},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7370000a73f, model64: 0xa73f0000a742},
		modelTuple{type64: 0x2700000027, matchRI: 0x0acf, match64: 0x00000000, model64: 0xa7420000a746},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad1, match64: 0x00000000, model64: 0xa7460000a74e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa74e0000a755, model64: 0xa74e0000a755},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad2, match64: 0x00000000, model64: 0xa7550000a75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad3, match64: 0x00000000, model64: 0xa75d0000a760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7600000a767, model64: 0xa7600000a767},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7670000a773, model64: 0xa7730000a77f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa77f0000a785, model64: 0xa77f0000a785},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7850000a78b, model64: 0xa7850000a78b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad4, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad5, match64: 0x00000000, model64: 0xa78b0000a794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7940000a79b, model64: 0xa79b0000a7a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad6, match64: 0x00000000, model64: 0xa7a20000a7a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad7, match64: 0x00000000, model64: 0xa7a90000a7b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad8, match64: 0x00000000, model64: 0xa7b00000a7b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ad9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ada, match64: 0x00000000, model64: 0xa7b60000a7be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0adc, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0add, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0ade, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae0, match64: 0x00000000, model64: 0xa7c40000a7c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae1, match64: 0x00000000, model64: 0xa7c60000a7cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa7dd0000a7e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa7e90000a7ef, model64: 0xa7ef0000a7f6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa7f60000a7fe, model64: 0xa7fe0000a807},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa81f0000a82b, model64: 0xa81f0000a82b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa82b0000a837, model64: 0xa8370000a843},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8430000a84d, model64: 0xa84d0000a857},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8570000a85e, model64: 0xa85e0000a865},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ae7, match64: 0x00000000, model64: 0xa8650000a869},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xa87c0000a87e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8880000a891, model64: 0xa8910000a89a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa89a0000a8a1, model64: 0xa8a10000a8a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8a90000a8b0, model64: 0xa7a20000a7a9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa8b00000a8b9, model64: 0xa8b90000a8c4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa8ce0000a8d9, model64: 0xa8ce0000a8d9},
		modelTuple{type64: 0x24300000245, matchRI: 0x0aea, match64: 0x00000000, model64: 0xa8d90000a8dd},
		modelTuple{type64: 0x24300000245, matchRI: 0x0aeb, match64: 0x00000000, model64: 0xa8dd0000a8e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8e40000a8ec, model64: 0xa8ec0000a8f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa8f40000a8fd, model64: 0xa8fd0000a906},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0aef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af1, match64: 0x00000000, model64: 0xa9160000a919},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af2, match64: 0x00000000, model64: 0x6bf600006bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af3, match64: 0x00000000, model64: 0xa9190000a91c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af4, match64: 0x00000000, model64: 0xa91c0000a91f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af5, match64: 0x00000000, model64: 0xa91f0000a921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af6, match64: 0x00000000, model64: 0xa9210000a923},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af7, match64: 0x00000000, model64: 0xa9230000a925},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af8, match64: 0x00000000, model64: 0xa9250000a92c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0af9, match64: 0x00000000, model64: 0xa92c0000a92e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0afb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0xa9340000a93b, model64: 0xa9340000a93b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa93b0000a947, model64: 0xa93b0000a947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9470000a959, model64: 0xa9590000a960},
		modelTuple{type64: 0x2700000027, matchRI: 0x0afd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0afe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0aff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa9600000a96d, model64: 0xa96d0000a975},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xa9750000a980, model64: 0xa9750000a980},
		modelTuple{type64: 0x24300000245, matchRI: 0x0b00, match64: 0x00000000, model64: 0xa9800000a988},
		modelTuple{type64: 0x281300002820, matchRI: 0x0b01, match64: 0x00000000, model64: 0xa9880000a992},
		modelTuple{type64: 0x24300000245, matchRI: 0x0b02, match64: 0x00000000, model64: 0xa9880000a992},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa9920000a99f, model64: 0xa99f0000a9b3},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa9880000a992, model64: 0xa9b30000a9c4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xa9c40000a9cc, model64: 0xa9c40000a9cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b03, match64: 0x00000000, model64: 0xa9cc0000a9d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa9d10000a9d9, model64: 0xa9d10000a9d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b04, match64: 0x00000000, model64: 0xa9d90000a9e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b05, match64: 0x00000000, model64: 0xa9e00000a9e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b06, match64: 0x00000000, model64: 0xa9e80000a9f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b07, match64: 0x00000000, model64: 0xa9f60000aa00},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b08, match64: 0x00000000, model64: 0xaa000000aa0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b09, match64: 0x00000000, model64: 0xaa0a0000aa15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0a, match64: 0x00000000, model64: 0xaa150000aa1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0b, match64: 0x00000000, model64: 0xaa1f0000aa26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaa260000aa2d, model64: 0xaa2d0000aa36},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0c, match64: 0x00000000, model64: 0xaa360000aa3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0d, match64: 0x00000000, model64: 0xaa3e0000aa4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0e, match64: 0x00000000, model64: 0xaa4b0000aa54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b0f, match64: 0x00000000, model64: 0xaa540000aa5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaa5f0000aa64, model64: 0xaa640000aa6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b10, match64: 0x00000000, model64: 0xaa6b0000aa76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b11, match64: 0x00000000, model64: 0xaa760000aa7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b12, match64: 0x00000000, model64: 0xaa7d0000aa84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b13, match64: 0x00000000, model64: 0xaa840000aa8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b14, match64: 0x00000000, model64: 0xaa8f0000aa96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b15, match64: 0x00000000, model64: 0xaa960000aa9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaa9e0000aaa3, model64: 0xaa8f0000aa96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b16, match64: 0x00000000, model64: 0xaaa30000aaab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaaab0000aab0, model64: 0xaab00000aabb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b17, match64: 0x00000000, model64: 0xaa000000aa0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b18, match64: 0x00000000, model64: 0xaabb0000aac2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b19, match64: 0x00000000, model64: 0xaac20000aacd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1a, match64: 0x00000000, model64: 0xaacd0000aadd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1b, match64: 0x00000000, model64: 0xaadd0000aae9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1c, match64: 0x00000000, model64: 0xaae90000aaf1},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0xaaf10000aaf6, model64: 0xaaf10000aaf6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0b1d, match64: 0x00000000, model64: 0xaaf60000ab00},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xab000000ab07, model64: 0xab000000ab07},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xab070000ab13, model64: 0xab070000ab13},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0xab130000ab1f, model64: 0xab130000ab1f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xab1f0000ab28, model64: 0xab1f0000ab28},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xab280000ab2d, model64: 0xab280000ab2d},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xab2d0000ab39, model64: 0xab2d0000ab39},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b1f, match64: 0x00000000, model64: 0xab410000ab48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b20, match64: 0x00000000, model64: 0xab480000ab4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b21, match64: 0x00000000, model64: 0xab4a0000ab4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b22, match64: 0x00000000, model64: 0xab4d0000ab55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b23, match64: 0x00000000, model64: 0xab550000ab57},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b24, match64: 0x00000000, model64: 0xab570000ab5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b25, match64: 0x00000000, model64: 0xab5e0000ab65},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b26, match64: 0x00000000, model64: 0xc9100000c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x8be300008be9, model64: 0x8be300008be9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab710000ab7a, model64: 0xab7a0000ab7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab7d0000ab85, model64: 0xab850000ab89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xab890000ab91, model64: 0xab910000ab94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0b2b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b2d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xabb10000abb8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabc60000abcc, model64: 0xabcc0000abd4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xabd40000abda, model64: 0xabda0000abe2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b34, match64: 0x00000000, model64: 0xabec0000abf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b35, match64: 0x00000000, model64: 0xabf60000abfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac0a0000ac12, model64: 0xac120000ac17},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b38, match64: 0x00000000, model64: 0xac1f0000ac2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac310000ac39, model64: 0xac390000ac41},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3a, match64: 0x00000000, model64: 0xac410000ac46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b3d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b40, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b41, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b42, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b43, match64: 0x00000000, model64: 0xa1f70000a1fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac5d0000ac65, model64: 0xac650000ac77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac770000ac81, model64: 0xac810000ac8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xac8f0000ac97, model64: 0xac970000aca9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xacb60000acc7, model64: 0xacc70000acd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b46, match64: 0x00000000, model64: 0xacd80000ace3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b47, match64: 0x00000000, model64: 0xace30000aced},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b48, match64: 0x00000000, model64: 0xaced0000acf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b49, match64: 0x00000000, model64: 0xacf50000acfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4d, match64: 0x00000000, model64: 0xad090000ad11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b4f, match64: 0x00000000, model64: 0xad140000ad1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b50, match64: 0x00000000, model64: 0xad1c0000ad22},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b51, match64: 0x00000000, model64: 0xad220000ad29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b52, match64: 0x00000000, model64: 0x40c0000040f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b53, match64: 0x00000000, model64: 0xad290000ad30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b54, match64: 0x00000000, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b55, match64: 0x00000000, model64: 0xad300000ad34},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad440000ad4d, model64: 0xad4d0000ad56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad590000ad60, model64: 0xad600000ad67},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xad7b0000ad84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5a, match64: 0x00000000, model64: 0xad880000ad8e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b5c, match64: 0x00000000, model64: 0xad930000ad99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xad990000ada7, model64: 0xada70000adb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5d, match64: 0x00000000, model64: 0xadb50000adc0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b5f, match64: 0x00000000, model64: 0xadc70000add5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xade10000adeb, model64: 0xadeb0000adf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadf10000adfa, model64: 0xadf10000adfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadfa0000adff, model64: 0xadfa0000adff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xadff0000ae05, model64: 0xadff0000ae05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae050000ae0c, model64: 0xae050000ae0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xae0c0000ae11, model64: 0xae110000ae15},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xae1e0000ae28},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b65, match64: 0x00000000, model64: 0xae380000ae47},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0xae490000ae5d, model64: 0xae5d0000ae6d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xae6d0000ae77, model64: 0xae770000ae7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b67, match64: 0x00000000, model64: 0xae7e0000ae86},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xae860000ae92, model64: 0xae860000ae92},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xae920000ae9a, model64: 0xae920000ae9a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xae9a0000aea5, model64: 0xae9a0000aea5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xaea50000aeb2, model64: 0xaeb20000aec1},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0xaec10000aed9, model64: 0xaec10000aed9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b68, match64: 0x00000000, model64: 0xaed90000aee2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xaee20000aef0, model64: 0xaef00000aefb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b69, match64: 0x00000000, model64: 0xae7e0000ae86},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b6a, match64: 0x00000000, model64: 0xae7e0000ae86},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0b6b, match64: 0x00000000, model64: 0xaefb0000af03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6d, match64: 0x00000000, model64: 0xaf030000af0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b6e, match64: 0x00000000, model64: 0xaf0a0000af0e},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0b6f, match64: 0x00000000, model64: 0xaf0e0000af18},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0xaf180000af2a, model64: 0xaf180000af2a},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0b70, match64: 0x00000000, model64: 0x78600000786d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x0b71, match64: 0x00000000, model64: 0xaf2a0000af36},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0xaf360000af4c, model64: 0xaf360000af4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b73, match64: 0x00000000, model64: 0xaf4f0000af55},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b74, match64: 0x00000000, model64: 0xaf550000af5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b75, match64: 0x00000000, model64: 0xaf5c0000af64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b76, match64: 0x00000000, model64: 0xaf640000af6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b77, match64: 0x00000000, model64: 0xaf6c0000af74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b78, match64: 0x00000000, model64: 0xaf740000af7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b79, match64: 0x00000000, model64: 0xaf7c0000af84},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7a, match64: 0x00000000, model64: 0xaf840000af8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7b, match64: 0x00000000, model64: 0xaf8a0000af90},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7c, match64: 0x00000000, model64: 0xaf900000af96},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7d, match64: 0x00000000, model64: 0xaf960000afa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7e, match64: 0x00000000, model64: 0xafa90000afac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b7f, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b80, match64: 0x00000000, model64: 0xafaf0000afb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b81, match64: 0x00000000, model64: 0xafb40000afbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b82, match64: 0x00000000, model64: 0xafbc0000afc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b83, match64: 0x00000000, model64: 0xafc60000afcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b84, match64: 0x00000000, model64: 0xafcc0000afd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b85, match64: 0x00000000, model64: 0xafd30000afd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b86, match64: 0x00000000, model64: 0xafd40000afd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b87, match64: 0x00000000, model64: 0xafd90000afe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b88, match64: 0x00000000, model64: 0xafe00000afeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b89, match64: 0x00000000, model64: 0xafeb0000aff6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xaff60000b011, model64: 0xb0110000b02c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8a, match64: 0x00000000, model64: 0xb02c0000b037},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8b, match64: 0x00000000, model64: 0xb0370000b03d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8c, match64: 0x00000000, model64: 0xb03d0000b04c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8d, match64: 0x00000000, model64: 0xb04c0000b05e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8e, match64: 0x00000000, model64: 0xb05e0000b064},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b8f, match64: 0x00000000, model64: 0xb0640000b06a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b90, match64: 0x00000000, model64: 0xb06a0000b074},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b91, match64: 0x00000000, model64: 0xb0740000b07a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b92, match64: 0x00000000, model64: 0xb07a0000b080},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b93, match64: 0x00000000, model64: 0xb0800000b08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b94, match64: 0x00000000, model64: 0xb08b0000b091},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b95, match64: 0x00000000, model64: 0xb0910000b09a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b96, match64: 0x00000000, model64: 0xb09a0000b0a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b97, match64: 0x00000000, model64: 0xb0a00000b0a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0a60000b0ad, model64: 0xb0ad0000b0bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0bd0000b0c7, model64: 0xb0c70000b0d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0d00000b0d8, model64: 0xb0d80000b0e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0e30000b0ed, model64: 0xb0ed0000b0ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb0ff0000b107, model64: 0x88310000883a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1070000b10f, model64: 0xb10f0000b112},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb1120000b117, model64: 0x87f4000087f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b98, match64: 0x00000000, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b99, match64: 0x00000000, model64: 0xb1170000b120},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9a, match64: 0x00000000, model64: 0xb1200000b12b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9b, match64: 0x00000000, model64: 0xb12b0000b135},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9c, match64: 0x00000000, model64: 0xb1350000b13f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9d, match64: 0x00000000, model64: 0xb13f0000b149},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9e, match64: 0x00000000, model64: 0xb1490000b153},
		modelTuple{type64: 0x2700000027, matchRI: 0x0b9f, match64: 0x00000000, model64: 0xb1530000b15e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba0, match64: 0x00000000, model64: 0xb15e0000b168},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba1, match64: 0x00000000, model64: 0xb1680000b172},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba2, match64: 0x00000000, model64: 0xb1720000b17c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba3, match64: 0x00000000, model64: 0xb17c0000b186},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba4, match64: 0x00000000, model64: 0xb1860000b190},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba5, match64: 0x00000000, model64: 0xb1900000b19a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba6, match64: 0x00000000, model64: 0xb19a0000b1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba7, match64: 0x00000000, model64: 0xb1a40000b1b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba8, match64: 0x00000000, model64: 0xb1b80000b1c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ba9, match64: 0x00000000, model64: 0xb1c00000b1c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baa, match64: 0x00000000, model64: 0xb1c40000b1d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bab, match64: 0x00000000, model64: 0xb1d50000b1e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bac, match64: 0x00000000, model64: 0xb1e20000b1e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bad, match64: 0x00000000, model64: 0xb1e80000b1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bae, match64: 0x00000000, model64: 0xb1f80000b205},
		modelTuple{type64: 0x2700000027, matchRI: 0x0baf, match64: 0x00000000, model64: 0xb2050000b219},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2190000b221, model64: 0xb2210000b224},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb0, match64: 0x00000000, model64: 0xb2240000b230},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb1, match64: 0x00000000, model64: 0xb2300000b235},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb2, match64: 0x00000000, model64: 0xb2350000b23a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb3, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb5, match64: 0x00000000, model64: 0xb23a0000b242},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0bb6, match64: 0x00000000, model64: 0xb2420000b249},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bb8, match64: 0x00000000, model64: 0xb2490000b254},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bb9, match64: 0x00000000, model64: 0xb2490000b254},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bba, match64: 0x00000000, model64: 0xb2540000b264},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbb, match64: 0x00000000, model64: 0xb2640000b274},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bbf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc1, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc5, match64: 0x00000000, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc7, match64: 0x00000000, model64: 0xb27a0000b27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bc8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2830000b28e, model64: 0xb28e0000b29f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb29f0000b2a6, model64: 0xb2a60000b2b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2b30000b2bd, model64: 0xb2bd0000b2bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2bf0000b2c6, model64: 0xb2bf0000b2c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bca, match64: 0x00000000, model64: 0xb2c60000b2d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2d20000b2dc, model64: 0x6a7600006a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2dc0000b2e6, model64: 0x6aa700006aa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2e60000b2f0, model64: 0xb2f00000b2f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb2f30000b2fd, model64: 0xb2fd0000b301},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3010000b30b, model64: 0xb30b0000b30e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb30e0000b318, model64: 0xb3180000b31b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcb, match64: 0x00000000, model64: 0xb31b0000b31d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb31d0000b32c, model64: 0xb32c0000b337},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bcd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bce, match64: 0x00000000, model64: 0xa6a00000a6a3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bcf, match64: 0x00000000, model64: 0xb3370000b33e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bd0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0bd1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0bd2, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb33e0000b34d, model64: 0x836d0000837a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb34d0000b355, model64: 0xb3550000b35f},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb35f0000b369, model64: 0xb35f0000b369},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb3690000b37f, model64: 0xb37f0000b38f},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb38f0000b3a0, model64: 0xb38f0000b3a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x0bd6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bd7, match64: 0x00000000, model64: 0xb3a60000b3ae},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bda, match64: 0x00000000, model64: 0xb3b90000b3c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdc, match64: 0x00000000, model64: 0xb3cb0000b3d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdd, match64: 0x00000000, model64: 0xb3d70000b3e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bde, match64: 0x00000000, model64: 0xb3e40000b3f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bdf, match64: 0x00000000, model64: 0xb3f00000b3ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be0, match64: 0x00000000, model64: 0x86be000086c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be1, match64: 0x00000000, model64: 0x984e00009854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb3ff0000b40d, model64: 0xb40d0000b414},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be2, match64: 0x00000000, model64: 0xb4140000b419},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be3, match64: 0x00000000, model64: 0xb4190000b420},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be4, match64: 0x00000000, model64: 0xb4200000b424},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be5, match64: 0x00000000, model64: 0xb4240000b42c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be6, match64: 0x00000000, model64: 0xb42c0000b432},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be7, match64: 0x00000000, model64: 0xb4320000b43a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be8, match64: 0x00000000, model64: 0xb43a0000b446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4460000b450, model64: 0xb4460000b450},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4500000b45f, model64: 0xb45f0000b467},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4670000b478, model64: 0xb4780000b483},
		modelTuple{type64: 0x2700000027, matchRI: 0x0be9, match64: 0x00000000, model64: 0xb4830000b48b},
		modelTuple{type64: 0x24700000251, matchRI: 0x0beb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bef, match64: 0x00000000, model64: 0xb49c0000b4a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4a70000b4ae, model64: 0xb4a70000b4ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4ae0000b4b4, model64: 0xb4ae0000b4b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4b40000b4bc, model64: 0xb4b40000b4bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4bc0000b4c4, model64: 0xb4bc0000b4c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb4c40000b4c9, model64: 0xb4c90000b4d2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb4e20000b4eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf6, match64: 0x00000000, model64: 0xb4f80000b505},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf7, match64: 0x00000000, model64: 0xb5050000b50c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bf9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfc, match64: 0x00000000, model64: 0xb5200000b526},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfd, match64: 0x00000000, model64: 0xb5260000b52c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0bfe, match64: 0x00000000, model64: 0xb52c0000b531},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb5440000b550},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb5580000b55a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c05, match64: 0x00000000, model64: 0xb5620000b56a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c06, match64: 0x00000000, model64: 0x55f5000055fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c07, match64: 0x00000000, model64: 0xb56a0000b572},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c08, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xb5720000b581, model64: 0xb5810000b58f},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c09, match64: 0x00000000, model64: 0xb58f0000b596},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c0a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb59d0000b5a5, model64: 0xb5a50000b5a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5a90000b5b1, model64: 0xb5b10000b5b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5b60000b5bf, model64: 0xb5bf0000b5c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5c40000b5cd, model64: 0xb5cd0000b5ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5ce0000b5d6, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5d60000b5de, model64: 0xb5de0000b5e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c0c, match64: 0x00000000, model64: 0xb5e40000b5e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb5e60000b5ee, model64: 0xb5ee0000b5f3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb5fb0000b602},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xb61b0000b625},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c10, match64: 0x00000000, model64: 0xb6350000b640},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c13, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6460000b64a, model64: 0xb64a0000b64f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c15, match64: 0x00000000, model64: 0xb6540000b65d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c16, match64: 0x00000000, model64: 0xb65d0000b664},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb6640000b66c, model64: 0xb66c0000b672},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c18, match64: 0x00000000, model64: 0xb6780000b67f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c19, match64: 0x00000000, model64: 0xb67f0000b688},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1a, match64: 0x00000000, model64: 0xb6880000b68f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c1f, match64: 0x00000000, model64: 0xb69f0000b6ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c20, match64: 0x00000000, model64: 0xb6ad0000b6c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c21, match64: 0x00000000, model64: 0xb6c00000b6d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c22, match64: 0x00000000, model64: 0xb6d00000b6de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c23, match64: 0x00000000, model64: 0xb6de0000b6ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c24, match64: 0x00000000, model64: 0xb6ec0000b6f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c25, match64: 0x00000000, model64: 0xb6f60000b6fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c26, match64: 0x00000000, model64: 0xb6fb0000b702},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c27, match64: 0x00000000, model64: 0xb7020000b70d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c28, match64: 0x00000000, model64: 0xb70d0000b714},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c29, match64: 0x00000000, model64: 0xb7140000b71c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2a, match64: 0x00000000, model64: 0xb71c0000b720},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2b, match64: 0x00000000, model64: 0xb7200000b723},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2c, match64: 0x00000000, model64: 0xb7230000b72d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2d, match64: 0x00000000, model64: 0xb72d0000b737},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2e, match64: 0x00000000, model64: 0xb7370000b73d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c2f, match64: 0x00000000, model64: 0xb73d0000b746},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c30, match64: 0x00000000, model64: 0xb7460000b74b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c31, match64: 0x00000000, model64: 0xb74b0000b756},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c32, match64: 0x00000000, model64: 0xb7560000b75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c33, match64: 0x00000000, model64: 0xb75d0000b76b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c34, match64: 0x00000000, model64: 0xb76b0000b775},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7750000b77e, model64: 0xb7750000b77e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c35, match64: 0x00000000, model64: 0xb77e0000b785},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c36, match64: 0x00000000, model64: 0xb7850000b78f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c37, match64: 0x00000000, model64: 0xb78f0000b799},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c38, match64: 0x00000000, model64: 0xb7990000b7a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c39, match64: 0x00000000, model64: 0xb7a70000b7ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3a, match64: 0x00000000, model64: 0xb7ae0000b7ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3b, match64: 0x00000000, model64: 0xb7ba0000b7bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3c, match64: 0x00000000, model64: 0xb7bf0000b7c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3d, match64: 0x00000000, model64: 0xb7c60000b7cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3e, match64: 0x00000000, model64: 0xb7cc0000b7d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c3f, match64: 0x00000000, model64: 0xb7d30000b7db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb7db0000b7e2, model64: 0xb7db0000b7e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c40, match64: 0x00000000, model64: 0xb7e20000b7ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c41, match64: 0x00000000, model64: 0x9ab000009ab5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c42, match64: 0x00000000, model64: 0xb7ec0000b7f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c43, match64: 0x00000000, model64: 0xb7f90000b801},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8010000b80a, model64: 0xb80a0000b813},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8130000b81a, model64: 0xb8130000b81a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c45, match64: 0x00000000, model64: 0xadfa0000adff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c46, match64: 0x00000000, model64: 0x98d7000098de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c47, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb82a0000b839, model64: 0xb82a0000b839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8390000b83f, model64: 0xb83f0000b845},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c49, match64: 0x00000000, model64: 0xb8450000b850},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8500000b857, model64: 0xb8500000b857},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb85e0000b865, model64: 0xb8650000b86b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0c4b, match64: 0x00000000, model64: 0xb86b0000b86e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0c4c, match64: 0x00000000, model64: 0xb86e0000b878},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xb8780000b87d, model64: 0xb87d0000b883},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8830000b88b, model64: 0x185b0000185d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb88b0000b893, model64: 0xb8930000b89c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb89c0000b8a4, model64: 0xb8a40000b8a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8a60000b8ae, model64: 0xb8ae0000b8b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8b10000b8b8, model64: 0x187200001874},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8b80000b8c0, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8c00000b8cd, model64: 0xb8cd0000b8dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4d, match64: 0x00000000, model64: 0xb8dc0000b8e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb8e00000b8ee, model64: 0xb8ee0000b8fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4e, match64: 0x00000000, model64: 0xb8fc0000b901},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9010000b909, model64: 0xb9090000b90f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb90f0000b914, model64: 0xb9140000b916},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9160000b91e, model64: 0xb91e0000b921},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9210000b929, model64: 0xb9290000b92c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb92c0000b932, model64: 0xb9320000b946},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9460000b94b, model64: 0xb94b0000b95f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb95f0000b963, model64: 0xb9630000b978},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c4f, match64: 0x00000000, model64: 0xb9780000b97b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c50, match64: 0x00000000, model64: 0xb97b0000b97e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c51, match64: 0x00000000, model64: 0xb97e0000b981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c52, match64: 0x00000000, model64: 0xb9810000b98c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c53, match64: 0x00000000, model64: 0xb98c0000b99b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c54, match64: 0x00000000, model64: 0xb99b0000b9a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c55, match64: 0x00000000, model64: 0x5c7600005c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c56, match64: 0x00000000, model64: 0xb9a60000b9b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c57, match64: 0x00000000, model64: 0xb9b10000b9b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c58, match64: 0x00000000, model64: 0xb9b80000b9bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c59, match64: 0x00000000, model64: 0xb9bc0000b9bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5a, match64: 0x00000000, model64: 0xb9bf0000b9c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5b, match64: 0x00000000, model64: 0xb9c20000b9ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5c, match64: 0x00000000, model64: 0xb9ca0000b9cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5d, match64: 0x00000000, model64: 0xb9cd0000b9d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9d00000b9d8, model64: 0xb9d80000b9db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9db0000b9eb, model64: 0xb9eb0000b9ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xb9ee0000ba02, model64: 0xba020000ba0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba0a0000ba12, model64: 0xba120000ba18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5e, match64: 0x00000000, model64: 0xba180000ba1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c5f, match64: 0x00000000, model64: 0xba1b0000ba2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xba2c0000ba34, model64: 0xba340000ba40},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0c60, match64: 0x00000000, model64: 0xb9290000b92c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c61, match64: 0x00000000, model64: 0xba400000ba48},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c62, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c63, match64: 0x00000000, model64: 0xba480000ba4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c64, match64: 0x00000000, model64: 0xba4a0000ba4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c65, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c66, match64: 0x00000000, model64: 0xba4e0000ba5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c67, match64: 0x00000000, model64: 0xba5f0000ba6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c68, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c6a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c6b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c6c, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x24300000245, matchRI: 0x0c6d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x0c6e, match64: 0x00000000, model64: 0xba6e0000ba73},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c6f, match64: 0x00000000, model64: 0xba730000ba7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c70, match64: 0x00000000, model64: 0xba7c0000ba85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c71, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c72, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c74, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c79, match64: 0x00000000, model64: 0x52590000525f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7a, match64: 0x00000000, model64: 0xba9a0000ba9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7b, match64: 0x00000000, model64: 0xba9a0000ba9e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c7f, match64: 0x00000000, model64: 0xbaae0000bab5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbab50000bac2, model64: 0xbac20000bacf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c80, match64: 0x00000000, model64: 0xbacf0000bae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c81, match64: 0x00000000, model64: 0xbae00000bae5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbaeb0000baf2, model64: 0xbaeb0000baf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbaf20000baf5, model64: 0xbaf20000baf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c83, match64: 0x00000000, model64: 0xbaf50000bafd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c84, match64: 0x00000000, model64: 0xbafd0000bb01},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c85, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c87, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c88, match64: 0x00000000, model64: 0xbb0a0000bb14},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xbb140000bb19, model64: 0xbb190000bb26},
		modelTuple{type64: 0x7130000071d, matchRI: 0x0c89, match64: 0x00000000, model64: 0xbb260000bb30},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0xbb370000bb48, model64: 0x889a000088a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb480000bb53, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c8d, match64: 0x00000000, model64: 0xbb580000bb5b},
		modelTuple{type64: 0x24700000251, matchRI: 0x0c8e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c90, match64: 0x00000000, model64: 0xbb630000bb67},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c94, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c95, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb840000bb8b, model64: 0xa5a10000a5a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb8b0000bb92, model64: 0xbb920000bb99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbb990000bba0, model64: 0xbba00000bba5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbba50000bba9, model64: 0xbba90000bbb0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xbbb00000bbb4, model64: 0xbbb00000bbb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbbb40000bbbc, model64: 0xbbbc0000bbc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c98, match64: 0x00000000, model64: 0xbbc90000bbd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c99, match64: 0x00000000, model64: 0xbbd70000bbdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbbdc0000bbe9, model64: 0xbbe90000bbf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9a, match64: 0x00000000, model64: 0xbbf60000bbff},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9b, match64: 0x00000000, model64: 0x70a0000070a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9c, match64: 0x00000000, model64: 0xbbff0000bc0b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc0b0000bc12, model64: 0xbc0b0000bc12},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9d, match64: 0x00000000, model64: 0xbc120000bc1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc1a0000bc25, model64: 0xbc1a0000bc25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc250000bc2b, model64: 0xbc250000bc2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9e, match64: 0x00000000, model64: 0xbc2b0000bc34},
		modelTuple{type64: 0x2700000027, matchRI: 0x0c9f, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca0, match64: 0x00000000, model64: 0xbc340000bc37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca2, match64: 0x00000000, model64: 0xbc370000bc3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca3, match64: 0x00000000, model64: 0xbc3a0000bc48},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0xbc480000bc52, model64: 0xbc480000bc52},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0xbc520000bc5c, model64: 0xbc520000bc5c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xbc5c0000bc66, model64: 0xbc660000bc70},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xbc700000bc7c, model64: 0xbc7c0000bc88},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ca4, match64: 0x00000000, model64: 0xbc880000bc8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc8f0000bc99, model64: 0xbc8f0000bc99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbc990000bc9f, model64: 0xbc990000bc9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca8, match64: 0x00000000, model64: 0xbca20000bcb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ca9, match64: 0x00000000, model64: 0xbcb20000bcb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cac, match64: 0x00000000, model64: 0xbcbd0000bcc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb0, match64: 0x00000000, model64: 0xbccc0000bcdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb1, match64: 0x00000000, model64: 0xbcdc0000bceb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb3, match64: 0x00000000, model64: 0xbcf10000bcf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb4, match64: 0x00000000, model64: 0xbcf80000bd05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd050000bd0d, model64: 0xbd0d0000bd18},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb5, match64: 0x00000000, model64: 0xbd180000bd24},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd240000bd2c, model64: 0xbd2c0000bd39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd390000bd41, model64: 0xbd410000bd50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd500000bd58, model64: 0xbd580000bd66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd660000bd6e, model64: 0xbd6e0000bd80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbd800000bd88, model64: 0xbd880000bd91},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb6, match64: 0x00000000, model64: 0xbd910000bd9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb7, match64: 0x00000000, model64: 0xbd9e0000bdac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb8, match64: 0x00000000, model64: 0xbdac0000bdb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdb40000bdbc, model64: 0xbdbc0000bdc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdc70000bdcf, model64: 0xbdcf0000bddb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbddb0000bde3, model64: 0xbde30000bdf0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbdf00000bdf8, model64: 0xbdf80000be01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe010000be09, model64: 0xbe090000be11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe110000be18, model64: 0xbe180000be23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe230000be2b, model64: 0xbe2b0000be37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe370000be3e, model64: 0xbe3e0000be4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe4b0000be53, model64: 0xbe530000be5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe5f0000be67, model64: 0xbe670000be72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe720000be7a, model64: 0xbe7a0000be8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe8b0000be93, model64: 0xbe930000be9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbe9e0000bea6, model64: 0xbea60000beb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbeb10000beb9, model64: 0xbeb90000bec6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cb9, match64: 0x00000000, model64: 0xbec60000bec8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cba, match64: 0x00000000, model64: 0xbec80000bed1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbb, match64: 0x00000000, model64: 0xbed10000beda},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbc, match64: 0x00000000, model64: 0xbeda0000bee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbd, match64: 0x00000000, model64: 0xbee50000bef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbe, match64: 0x00000000, model64: 0xbef00000befb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cbf, match64: 0x00000000, model64: 0xbefb0000bf05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc0, match64: 0x00000000, model64: 0xbf050000bf10},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc1, match64: 0x00000000, model64: 0xbf100000bf1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc2, match64: 0x00000000, model64: 0xbf1b0000bf27},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc3, match64: 0x00000000, model64: 0xbf270000bf32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc4, match64: 0x00000000, model64: 0xbf320000bf3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc5, match64: 0x00000000, model64: 0xbf3b0000bf44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc6, match64: 0x00000000, model64: 0xbf440000bf4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc7, match64: 0x00000000, model64: 0xbf4d0000bf58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc8, match64: 0x00000000, model64: 0xbf580000bf61},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cc9, match64: 0x00000000, model64: 0xbf610000bf6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cca, match64: 0x00000000, model64: 0xbf6b0000bf76},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccb, match64: 0x00000000, model64: 0xbf760000bf81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccc, match64: 0x00000000, model64: 0xbf810000bf8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccd, match64: 0x00000000, model64: 0xbf8c0000bf97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cce, match64: 0x00000000, model64: 0xbf970000bf9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ccf, match64: 0x00000000, model64: 0xbf9f0000bfac},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd0, match64: 0x00000000, model64: 0xbfac0000bfb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd1, match64: 0x00000000, model64: 0xbfb50000bfbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd2, match64: 0x00000000, model64: 0xbfbe0000bfc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfc60000bfce, model64: 0xbfce0000bfd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfd60000bfde, model64: 0xbfde0000bfe7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbfe70000bfef, model64: 0xbfef0000bff7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xbff70000bfff, model64: 0xbfff0000c00e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc00e0000c016, model64: 0xc0160000c022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0220000c02a, model64: 0xc02a0000c033},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0330000c03b, model64: 0xc03b0000c047},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0470000c04f, model64: 0xc04f0000c057},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd3, match64: 0x00000000, model64: 0xc0570000c05a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd4, match64: 0x00000000, model64: 0xc05a0000c061},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd5, match64: 0x00000000, model64: 0xc0610000c069},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd6, match64: 0x00000000, model64: 0xc0690000c070},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd7, match64: 0x00000000, model64: 0xc0700000c078},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd8, match64: 0x00000000, model64: 0xc0780000c084},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cd9, match64: 0x00000000, model64: 0xc0840000c08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cda, match64: 0x00000000, model64: 0xc08b0000c097},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdb, match64: 0x00000000, model64: 0xc0970000c09f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdc, match64: 0x00000000, model64: 0xc09f0000c0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdd, match64: 0x00000000, model64: 0xc0a70000c0b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cde, match64: 0x00000000, model64: 0xc0b60000c0c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cdf, match64: 0x00000000, model64: 0xc0c00000c0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce0, match64: 0x00000000, model64: 0xc0cb0000c0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce1, match64: 0x00000000, model64: 0xc0db0000c0e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce2, match64: 0x00000000, model64: 0xc0e40000c0ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce3, match64: 0x00000000, model64: 0xc0ec0000c0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce4, match64: 0x00000000, model64: 0xc0ef0000c0f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce5, match64: 0x00000000, model64: 0xc0f50000c100},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce6, match64: 0x00000000, model64: 0xc1000000c104},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce7, match64: 0x00000000, model64: 0xc1040000c10e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce8, match64: 0x00000000, model64: 0xc10e0000c111},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ce9, match64: 0x00000000, model64: 0xc1110000c11b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cea, match64: 0x00000000, model64: 0xc11b0000c11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ceb, match64: 0x00000000, model64: 0xc11e0000c120},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cec, match64: 0x00000000, model64: 0xc1200000c127},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ced, match64: 0x00000000, model64: 0xc1270000c12e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cee, match64: 0x00000000, model64: 0xc12e0000c131},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cef, match64: 0x00000000, model64: 0xc1310000c138},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf0, match64: 0x00000000, model64: 0xc1380000c13b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf1, match64: 0x00000000, model64: 0xc13b0000c13f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf2, match64: 0x00000000, model64: 0xc13f0000c149},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1490000c151, model64: 0xc1510000c159},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc1590000c161, model64: 0xc1610000c169},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf3, match64: 0x00000000, model64: 0xc1690000c16e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf4, match64: 0x00000000, model64: 0xc16e0000c176},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf5, match64: 0x00000000, model64: 0xc1760000c183},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf6, match64: 0x00000000, model64: 0xc1830000c18c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf7, match64: 0x00000000, model64: 0xc18c0000c193},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf8, match64: 0x00000000, model64: 0xc1930000c1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cf9, match64: 0x00000000, model64: 0xc1a00000c1a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfa, match64: 0x00000000, model64: 0xc1a90000c1b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfb, match64: 0x00000000, model64: 0xc1b50000c1be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfc, match64: 0x00000000, model64: 0xc1be0000c1c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfd, match64: 0x00000000, model64: 0xc1c60000c1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cfe, match64: 0x00000000, model64: 0xc1d20000c1e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0cff, match64: 0x00000000, model64: 0xc1e30000c1ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d00, match64: 0x00000000, model64: 0xc1ec0000c1f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d01, match64: 0x00000000, model64: 0xc1f50000c202},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d02, match64: 0x00000000, model64: 0xc2020000c20a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d03, match64: 0x00000000, model64: 0xc20a0000c212},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d04, match64: 0x00000000, model64: 0xc2120000c21f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d05, match64: 0x00000000, model64: 0xc21f0000c227},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2270000c22e, model64: 0xc22e0000c235},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d06, match64: 0x00000000, model64: 0xc2350000c23d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d07, match64: 0x00000000, model64: 0xc23d0000c245},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d08, match64: 0x00000000, model64: 0xc2450000c251},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d09, match64: 0x00000000, model64: 0xc2510000c25d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0a, match64: 0x00000000, model64: 0xc25d0000c265},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0b, match64: 0x00000000, model64: 0xc2650000c271},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0c, match64: 0x00000000, model64: 0xc2710000c279},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0d, match64: 0x00000000, model64: 0xc2790000c281},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0e, match64: 0x00000000, model64: 0xc2810000c292},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d0f, match64: 0x00000000, model64: 0xc2920000c29a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d10, match64: 0x00000000, model64: 0xc29a0000c2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d11, match64: 0x00000000, model64: 0xc2a50000c2b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d12, match64: 0x00000000, model64: 0xc2b00000c2bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d13, match64: 0x00000000, model64: 0xc2bd0000c2cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2cc0000c2d4, model64: 0xc2d40000c2dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2dc0000c2e4, model64: 0xc2e40000c2f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc2f20000c2fa, model64: 0xc2fa0000c306},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d14, match64: 0x00000000, model64: 0xc3060000c30d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d15, match64: 0x00000000, model64: 0xc30d0000c319},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d16, match64: 0x00000000, model64: 0xc3190000c325},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d17, match64: 0x00000000, model64: 0xc3250000c32d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d18, match64: 0x00000000, model64: 0xc32d0000c335},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d19, match64: 0x00000000, model64: 0xc3350000c341},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1a, match64: 0x00000000, model64: 0xc3410000c349},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1b, match64: 0x00000000, model64: 0xc3490000c350},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1c, match64: 0x00000000, model64: 0xc3500000c35c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1d, match64: 0x00000000, model64: 0xc35c0000c364},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1e, match64: 0x00000000, model64: 0xc3640000c370},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d1f, match64: 0x00000000, model64: 0xc3700000c378},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d20, match64: 0x00000000, model64: 0xc3780000c380},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d21, match64: 0x00000000, model64: 0xc3800000c388},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d22, match64: 0x00000000, model64: 0xc3880000c390},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d23, match64: 0x00000000, model64: 0xc3900000c397},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d24, match64: 0x00000000, model64: 0xc3970000c3a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d25, match64: 0x00000000, model64: 0xc3a30000c3ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d26, match64: 0x00000000, model64: 0xc3ae0000c3bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d27, match64: 0x00000000, model64: 0xc3bb0000c3c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d28, match64: 0x00000000, model64: 0xc3c70000c3cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d29, match64: 0x00000000, model64: 0xc3cf0000c3d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2a, match64: 0x00000000, model64: 0xc3d70000c3df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2b, match64: 0x00000000, model64: 0xc3df0000c3e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2c, match64: 0x00000000, model64: 0xc3e70000c3f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2d, match64: 0x00000000, model64: 0xc3f30000c3fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2e, match64: 0x00000000, model64: 0xc3fa0000c402},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d2f, match64: 0x00000000, model64: 0xc4020000c40a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d30, match64: 0x00000000, model64: 0xc40a0000c416},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d31, match64: 0x00000000, model64: 0xc4160000c41e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d32, match64: 0x00000000, model64: 0xc41e0000c426},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d33, match64: 0x00000000, model64: 0xc4260000c432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4320000c43f, model64: 0xc43f0000c44c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d34, match64: 0x00000000, model64: 0xc44c0000c454},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d35, match64: 0x00000000, model64: 0xc4540000c461},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d36, match64: 0x00000000, model64: 0xc4610000c46c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d37, match64: 0x00000000, model64: 0xc46c0000c477},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d38, match64: 0x00000000, model64: 0xc4770000c484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4840000c494, model64: 0xc4840000c494},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d39, match64: 0x00000000, model64: 0xc4940000c4a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4a20000c4aa, model64: 0xc4aa0000c4bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4bf0000c4c7, model64: 0xc4c70000c4d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4d60000c4dd, model64: 0xc4dd0000c4eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc4eb0000c4f3, model64: 0xc4f30000c50a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc50a0000c512, model64: 0xc5120000c523},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5230000c52b, model64: 0xc52b0000c53a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc53a0000c542, model64: 0xc5420000c54f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc54f0000c557, model64: 0xc5570000c568},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5680000c570, model64: 0xc5700000c582},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3a, match64: 0x00000000, model64: 0xc5820000c593},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5930000c59b, model64: 0xc59b0000c5a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5a80000c5b0, model64: 0xc5b00000c5c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5c20000c5c9, model64: 0xc5c90000c5db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc5db0000c5e2, model64: 0xc5e20000c5f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3b, match64: 0x00000000, model64: 0xc5f40000c601},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3c, match64: 0x00000000, model64: 0xc6010000c612},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6120000c61a, model64: 0xc61a0000c630},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3d, match64: 0x00000000, model64: 0xc6300000c645},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3e, match64: 0x00000000, model64: 0xc6450000c656},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d3f, match64: 0x00000000, model64: 0xc6560000c667},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6670000c66f, model64: 0xc66f0000c67c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d40, match64: 0x00000000, model64: 0xc67c0000c689},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d41, match64: 0x00000000, model64: 0xc6890000c69a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc69a0000c6a2, model64: 0xc6a20000c6af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6af0000c6b7, model64: 0xc6b70000c6c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6c30000c6cb, model64: 0xc6cb0000c6d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6d30000c6db, model64: 0xbaeb0000baf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d42, match64: 0x00000000, model64: 0xc6db0000c6e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d43, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6e10000c6e8, model64: 0xc6e80000c6f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d44, match64: 0x00000000, model64: 0xc6f00000c6fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc6fa0000c702, model64: 0xc7020000c714},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7140000c71c, model64: 0xc71c0000c729},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7290000c731, model64: 0xc7310000c741},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7410000c749, model64: 0xc7490000c756},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7560000c75e, model64: 0xc75e0000c770},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d45, match64: 0x00000000, model64: 0xc7700000c77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d46, match64: 0x00000000, model64: 0xc77d0000c789},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d47, match64: 0x00000000, model64: 0xc7890000c791},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d48, match64: 0x00000000, model64: 0xc7910000c79d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d49, match64: 0x00000000, model64: 0xc79d0000c7aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4a, match64: 0x00000000, model64: 0xc7aa0000c7ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4b, match64: 0x00000000, model64: 0xc7ba0000c7c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7c70000c7cf, model64: 0xc7cf0000c7e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7e10000c7e9, model64: 0xc7e90000c7f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc7f90000c801, model64: 0xc8010000c80f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4c, match64: 0x00000000, model64: 0xc80f0000c818},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4d, match64: 0x00000000, model64: 0xc8180000c821},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4e, match64: 0x00000000, model64: 0xc8210000c82a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc82a0000c831, model64: 0xc8310000c83d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc83d0000c844, model64: 0xc8440000c850},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d4f, match64: 0x00000000, model64: 0xc8500000c85d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc85d0000c865, model64: 0xc8650000c87a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d50, match64: 0x00000000, model64: 0xc87a0000c88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d51, match64: 0x00000000, model64: 0xc88b0000c898},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d52, match64: 0x00000000, model64: 0xc8980000c8a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d53, match64: 0x00000000, model64: 0xc8a40000c8b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d54, match64: 0x00000000, model64: 0xc8b00000c8bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d55, match64: 0x00000000, model64: 0xc8bc0000c8c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d56, match64: 0x00000000, model64: 0xc8c90000c8d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d57, match64: 0x00000000, model64: 0xc8d70000c8e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d58, match64: 0x00000000, model64: 0xc8e80000c8f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d59, match64: 0x00000000, model64: 0xc8f50000c902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9020000c90a, model64: 0xc90a0000c917},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9170000c923, model64: 0xc9170000c923},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5a, match64: 0x00000000, model64: 0xc9230000c92c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5b, match64: 0x00000000, model64: 0xc92c0000c935},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5c, match64: 0x00000000, model64: 0xc9350000c93e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5d, match64: 0x00000000, model64: 0xc93e0000c946},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5e, match64: 0x00000000, model64: 0xc9460000c94e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d5f, match64: 0x00000000, model64: 0xc94e0000c95b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d60, match64: 0x00000000, model64: 0xc95b0000c968},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d61, match64: 0x00000000, model64: 0xc9680000c975},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9750000c97c, model64: 0xc9680000c975},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d62, match64: 0x00000000, model64: 0xc97c0000c989},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d63, match64: 0x00000000, model64: 0xc9890000c99a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d64, match64: 0x00000000, model64: 0xc99a0000c9a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d65, match64: 0x00000000, model64: 0xc9a20000c9b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d66, match64: 0x00000000, model64: 0xc9b50000c9bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d67, match64: 0x00000000, model64: 0xc9bd0000c9c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d68, match64: 0x00000000, model64: 0xc9c60000c9d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d69, match64: 0x00000000, model64: 0xc9d20000c9df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6a, match64: 0x00000000, model64: 0xc9df0000c9e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6b, match64: 0x00000000, model64: 0xc9e70000c9ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6c, match64: 0x00000000, model64: 0xc9ef0000c9f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc9f80000c9ff, model64: 0xc9ff0000ca0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6d, match64: 0x00000000, model64: 0xca0b0000ca14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca140000ca1b, model64: 0xca1b0000ca29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6e, match64: 0x00000000, model64: 0xca290000ca32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d6f, match64: 0x00000000, model64: 0xca320000ca3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca3f0000ca46, model64: 0xca460000ca51},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d70, match64: 0x00000000, model64: 0xca510000ca59},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d71, match64: 0x00000000, model64: 0xca590000ca62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d72, match64: 0x00000000, model64: 0xca620000ca6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca6b0000ca72, model64: 0xca720000ca7e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0d73, match64: 0x00000000, model64: 0xca7e0000ca8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xca8b0000ca93, model64: 0xca930000caa0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcaa00000caa8, model64: 0xcaa80000cab1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcab10000cab9, model64: 0xcab90000cac3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcac30000cacb, model64: 0xcacb0000cadc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcadc0000cae4, model64: 0xcae40000caee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcaee0000caf6, model64: 0xcaf60000cb02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb020000cb0a, model64: 0xcb0a0000cb13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb130000cb1a, model64: 0xcb1a0000cb23},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d74, match64: 0x00000000, model64: 0xcb230000cb31},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d75, match64: 0x00000000, model64: 0xcb310000cb3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d76, match64: 0x00000000, model64: 0xcb3c0000cb44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb440000cb4b, model64: 0xcb4b0000cb54},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d77, match64: 0x00000000, model64: 0xcb540000cb5c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb5c0000cb64, model64: 0xcb640000cb72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb720000cb7a, model64: 0xcb7a0000cb84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb840000cb8c, model64: 0xcb8c0000cb9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcb9a0000cba2, model64: 0xcba20000cbab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcbab0000cbb3, model64: 0xcbb30000cbc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcbc30000cbcb, model64: 0xcbcb0000cbd8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcbd80000cbe0, model64: 0xcbe00000cbe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d78, match64: 0x00000000, model64: 0xcbe90000cbf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d79, match64: 0x00000000, model64: 0xcbf60000cc03},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7a, match64: 0x00000000, model64: 0xcc030000cc11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7b, match64: 0x00000000, model64: 0xcc110000cc19},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7c, match64: 0x00000000, model64: 0xcc190000cc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7d, match64: 0x00000000, model64: 0xcc210000cc29},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7e, match64: 0x00000000, model64: 0xcc290000cc35},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d7f, match64: 0x00000000, model64: 0xcc350000cc3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc3e0000cc46, model64: 0xcc460000cc4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d80, match64: 0x00000000, model64: 0xcc4f0000cc58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d81, match64: 0x00000000, model64: 0xcc580000cc61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc610000cc68, model64: 0xcc680000cc74},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d82, match64: 0x00000000, model64: 0xcc740000cc7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d83, match64: 0x00000000, model64: 0xcc7e0000cc85},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d84, match64: 0x00000000, model64: 0xcc850000cc8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcc8e0000cc96, model64: 0xcc960000cc9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d85, match64: 0x00000000, model64: 0xcc9c0000cca3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcca30000ccab, model64: 0xccab0000ccb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d86, match64: 0x00000000, model64: 0xccb20000ccb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xccb90000ccc1, model64: 0xccc10000cccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d87, match64: 0x00000000, model64: 0xcccb0000ccd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d88, match64: 0x00000000, model64: 0xccd20000ccde},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d89, match64: 0x00000000, model64: 0xccde0000cce9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8a, match64: 0x00000000, model64: 0xcce90000ccf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8b, match64: 0x00000000, model64: 0xccf00000ccfc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8c, match64: 0x00000000, model64: 0xccfc0000cd07},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8d, match64: 0x00000000, model64: 0xcd070000cd11},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8e, match64: 0x00000000, model64: 0xcd110000cd1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d8f, match64: 0x00000000, model64: 0xcd1a0000cd21},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d90, match64: 0x00000000, model64: 0xcd210000cd2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d91, match64: 0x00000000, model64: 0xcd2b0000cd44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d92, match64: 0x00000000, model64: 0xcd440000cd50},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d93, match64: 0x00000000, model64: 0xcd500000cd5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d94, match64: 0x00000000, model64: 0xcd5b0000cd69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d95, match64: 0x00000000, model64: 0xcd690000cd78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d96, match64: 0x00000000, model64: 0xcd780000cd83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcd830000cd8b, model64: 0xcd8b0000cd9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d97, match64: 0x00000000, model64: 0xcd9a0000cda6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d98, match64: 0x00000000, model64: 0xcda60000cdb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d99, match64: 0x00000000, model64: 0xcdb00000cdb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9a, match64: 0x00000000, model64: 0xcdb70000cdbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9b, match64: 0x00000000, model64: 0xcdbf0000cdca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9c, match64: 0x00000000, model64: 0xcdca0000cdd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdd10000cdd9, model64: 0xcdd90000cde1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9d, match64: 0x00000000, model64: 0xcde10000cdec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcdec0000cdf4, model64: 0xcdf40000ce00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xce000000ce08, model64: 0xce080000ce0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9e, match64: 0x00000000, model64: 0xce0f0000ce15},
		modelTuple{type64: 0x2700000027, matchRI: 0x0d9f, match64: 0x00000000, model64: 0xce150000ce1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da0, match64: 0x00000000, model64: 0xce1b0000ce26},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da1, match64: 0x00000000, model64: 0xce260000ce30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da2, match64: 0x00000000, model64: 0xce300000ce37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da3, match64: 0x00000000, model64: 0xce370000ce4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da4, match64: 0x00000000, model64: 0xce4d0000ce53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da5, match64: 0x00000000, model64: 0xce530000ce5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da6, match64: 0x00000000, model64: 0x5d4900005d4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da7, match64: 0x00000000, model64: 0xce5a0000ce63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da8, match64: 0x00000000, model64: 0xce630000ce6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0da9, match64: 0x00000000, model64: 0xce6c0000ce78},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daa, match64: 0x00000000, model64: 0xce780000ce7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dab, match64: 0x00000000, model64: 0xce7e0000ce89},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dac, match64: 0x00000000, model64: 0xce890000ce94},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dad, match64: 0x00000000, model64: 0xce940000cea8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dae, match64: 0x00000000, model64: 0xcea80000ceaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0daf, match64: 0x00000000, model64: 0xceaf0000ceb6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db0, match64: 0x00000000, model64: 0xceb60000cebc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db1, match64: 0x00000000, model64: 0xcebc0000cec3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db2, match64: 0x00000000, model64: 0xcec30000ceca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db3, match64: 0x00000000, model64: 0xceca0000ced0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db4, match64: 0x00000000, model64: 0xced00000ced7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db5, match64: 0x00000000, model64: 0xced70000cedd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db6, match64: 0x00000000, model64: 0xcedd0000cee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db7, match64: 0x00000000, model64: 0xcee70000ceee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db8, match64: 0x00000000, model64: 0xceee0000cef5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcef50000cf00, model64: 0xcf000000cf0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0db9, match64: 0x00000000, model64: 0xcf0b0000cf16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dba, match64: 0x00000000, model64: 0xcf160000cf1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbb, match64: 0x00000000, model64: 0xcf1f0000cf28},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbc, match64: 0x00000000, model64: 0xcf280000cf2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbd, match64: 0x00000000, model64: 0xcf2e0000cf37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbe, match64: 0x00000000, model64: 0xcf370000cf44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dbf, match64: 0x00000000, model64: 0xcf440000cf50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf500000cf57, model64: 0xcf570000cf5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf5f0000cf68, model64: 0xcf680000cf75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc0, match64: 0x00000000, model64: 0xcf750000cf80},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc1, match64: 0x00000000, model64: 0xcf800000cf87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc2, match64: 0x00000000, model64: 0xcf870000cf9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcf9f0000cfa7, model64: 0xcfa70000cfb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfb10000cfba, model64: 0xcfba0000cfc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfc70000cfd0, model64: 0xcfd00000cfd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfd70000cfde, model64: 0xcfde0000cfe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcfe60000cfee, model64: 0xcfee0000cff9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xcff90000d001, model64: 0xcfd00000cfd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc3, match64: 0x00000000, model64: 0xd0010000d008},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc4, match64: 0x00000000, model64: 0xd0080000d00f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc5, match64: 0x00000000, model64: 0xd00f0000d018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0180000d020, model64: 0xd0200000d02c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc6, match64: 0x00000000, model64: 0xd02c0000d038},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0380000d040, model64: 0xd0400000d052},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc7, match64: 0x00000000, model64: 0xd0520000d05f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc8, match64: 0x00000000, model64: 0xd05f0000d06c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dc9, match64: 0x00000000, model64: 0xd06c0000d072},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dca, match64: 0x00000000, model64: 0xd0720000d078},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcb, match64: 0x00000000, model64: 0xd0780000d082},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcc, match64: 0x00000000, model64: 0xd0820000d08b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcd, match64: 0x00000000, model64: 0xd08b0000d096},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dce, match64: 0x00000000, model64: 0xd0960000d0a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dcf, match64: 0x00000000, model64: 0xd0a00000d0aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0aa0000d0b2, model64: 0xd0b20000d0ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd0ba0000d0c2, model64: 0xcf570000cf5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd0, match64: 0x00000000, model64: 0xd0c20000d0cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd1, match64: 0x00000000, model64: 0xd0cc0000d0d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd2, match64: 0x00000000, model64: 0xd0d60000d0e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd3, match64: 0x00000000, model64: 0xd0e10000d0e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd4, match64: 0x00000000, model64: 0xd0e90000d0f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd5, match64: 0x00000000, model64: 0xd0f10000d0f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd6, match64: 0x00000000, model64: 0xd0f90000d101},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd7, match64: 0x00000000, model64: 0xd1010000d109},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd8, match64: 0x00000000, model64: 0xd1090000d110},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dd9, match64: 0x00000000, model64: 0xd1100000d11e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dda, match64: 0x00000000, model64: 0xd11e0000d12c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddb, match64: 0x00000000, model64: 0xd12c0000d13a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddc, match64: 0x00000000, model64: 0xd13a0000d143},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddd, match64: 0x00000000, model64: 0xd1430000d14c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dde, match64: 0x00000000, model64: 0xd14c0000d14f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ddf, match64: 0x00000000, model64: 0xd14f0000d157},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de0, match64: 0x00000000, model64: 0xc6cb0000c6d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de1, match64: 0x00000000, model64: 0xd1570000d161},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de2, match64: 0x00000000, model64: 0xd1610000d164},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de3, match64: 0x00000000, model64: 0xd1640000d16c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de4, match64: 0x00000000, model64: 0xd16c0000d173},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de5, match64: 0x00000000, model64: 0xd1730000d176},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de6, match64: 0x00000000, model64: 0xd1760000d17e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xd17e0000d189, model64: 0xd1890000d194},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de7, match64: 0x00000000, model64: 0xbaeb0000baf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de8, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0de9, match64: 0x00000000, model64: 0xd1940000d19c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dea, match64: 0x00000000, model64: 0xd19c0000d1a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0deb, match64: 0x00000000, model64: 0xd1a60000d1b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dec, match64: 0x00000000, model64: 0xd1b40000d1bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ded, match64: 0x00000000, model64: 0xd1bb0000d1c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dee, match64: 0x00000000, model64: 0xd1c70000d1c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0def, match64: 0x00000000, model64: 0xa7850000a78b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df0, match64: 0x00000000, model64: 0xd1c90000d1d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df1, match64: 0x00000000, model64: 0xd1d30000d1e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df2, match64: 0x00000000, model64: 0xd1e10000d1ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df3, match64: 0x00000000, model64: 0xd1ef0000d1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df4, match64: 0x00000000, model64: 0xd1f10000d1f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df5, match64: 0x00000000, model64: 0xd1f80000d207},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df6, match64: 0x00000000, model64: 0xd2070000d213},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df7, match64: 0x00000000, model64: 0xd2130000d220},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df8, match64: 0x00000000, model64: 0xd2200000d227},
		modelTuple{type64: 0x2700000027, matchRI: 0x0df9, match64: 0x00000000, model64: 0xd2270000d22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfa, match64: 0x00000000, model64: 0xd22e0000d235},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfb, match64: 0x00000000, model64: 0xd2350000d23a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfc, match64: 0x00000000, model64: 0x3d4800003d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfd, match64: 0x00000000, model64: 0xd23a0000d23f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dfe, match64: 0x00000000, model64: 0xd23f0000d248},
		modelTuple{type64: 0x2700000027, matchRI: 0x0dff, match64: 0x00000000, model64: 0xd2480000d251},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e00, match64: 0x00000000, model64: 0xd2510000d255},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e01, match64: 0x00000000, model64: 0xd2550000d25e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e02, match64: 0x00000000, model64: 0xd25e0000d267},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e03, match64: 0x00000000, model64: 0xd2670000d270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e04, match64: 0x00000000, model64: 0xd2700000d277},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e05, match64: 0x00000000, model64: 0xd2770000d27a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e06, match64: 0x00000000, model64: 0xd27a0000d288},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e07, match64: 0x00000000, model64: 0xd2880000d296},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e08, match64: 0x00000000, model64: 0xd2960000d2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e09, match64: 0x00000000, model64: 0xd2a50000d2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0a, match64: 0x00000000, model64: 0xd2b20000d2b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0b, match64: 0x00000000, model64: 0xd2b60000d2b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0c, match64: 0x00000000, model64: 0xd2b80000d2c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0d, match64: 0x00000000, model64: 0xd2c10000d2ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0e, match64: 0x00000000, model64: 0xd2ca0000d2d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e0f, match64: 0x00000000, model64: 0xd2d30000d2dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e10, match64: 0x00000000, model64: 0xd2dc0000d2eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e11, match64: 0x00000000, model64: 0xd2eb0000d2f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e12, match64: 0x00000000, model64: 0xd2f10000d2fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e13, match64: 0x00000000, model64: 0xd2fe0000d302},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e14, match64: 0x00000000, model64: 0xd3020000d306},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e15, match64: 0x00000000, model64: 0xd3060000d313},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e16, match64: 0x00000000, model64: 0xd3130000d317},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e17, match64: 0x00000000, model64: 0xd3170000d320},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e18, match64: 0x00000000, model64: 0xd3200000d329},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e19, match64: 0x00000000, model64: 0xd3290000d332},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1a, match64: 0x00000000, model64: 0xd3320000d33a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1b, match64: 0x00000000, model64: 0xd33a0000d349},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1c, match64: 0x00000000, model64: 0xd3490000d356},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1d, match64: 0x00000000, model64: 0xd3560000d35d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1e, match64: 0x00000000, model64: 0xd3490000d356},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e1f, match64: 0x00000000, model64: 0xd35d0000d360},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e20, match64: 0x00000000, model64: 0xd3600000d363},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e21, match64: 0x00000000, model64: 0xd3630000d366},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e22, match64: 0x00000000, model64: 0xd3660000d36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e23, match64: 0x00000000, model64: 0xd36f0000d378},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e24, match64: 0x00000000, model64: 0xd3780000d387},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e25, match64: 0x00000000, model64: 0xd3870000d38a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e26, match64: 0x00000000, model64: 0xd38a0000d392},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e27, match64: 0x00000000, model64: 0xd3920000d395},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e28, match64: 0x00000000, model64: 0xd3950000d3a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e29, match64: 0x00000000, model64: 0xd3a00000d3a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e2a, match64: 0x00000000, model64: 0xd3a70000d3b0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0e2b, match64: 0x00000000, model64: 0xd3b00000d3b8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0e2c, match64: 0x00000000, model64: 0xd3b80000d3c6},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0xd3c60000d3ce, model64: 0xd3ce0000d3e5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd3e50000d3ec, model64: 0xd3ec0000d402},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd4020000d40a, model64: 0xd40a0000d41f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2d, match64: 0x00000000, model64: 0xd41f0000d42f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2e, match64: 0x00000000, model64: 0xd42f0000d444},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e2f, match64: 0x00000000, model64: 0xd4440000d458},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e30, match64: 0x00000000, model64: 0xd4580000d471},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e31, match64: 0x00000000, model64: 0xd4710000d47e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e32, match64: 0x00000000, model64: 0xd47e0000d490},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e33, match64: 0x00000000, model64: 0xd4900000d4a0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e34, match64: 0x00000000, model64: 0xd4a00000d4af},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd4af0000d4b7, model64: 0xd4b70000d4c9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd4c90000d4d1, model64: 0xd4d10000d4de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e35, match64: 0x00000000, model64: 0xd4de0000d4f4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e36, match64: 0x00000000, model64: 0xd4f40000d502},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e37, match64: 0x00000000, model64: 0xd5020000d515},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e38, match64: 0x00000000, model64: 0xd5150000d527},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e39, match64: 0x00000000, model64: 0xd5270000d534},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3a, match64: 0x00000000, model64: 0xd5340000d540},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3b, match64: 0x00000000, model64: 0xd5400000d551},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3c, match64: 0x00000000, model64: 0xd5510000d561},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3d, match64: 0x00000000, model64: 0xd5610000d577},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd5770000d57f, model64: 0xd57f0000d590},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd5900000d598, model64: 0xd5980000d5a9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd5a90000d5b0, model64: 0xd5b00000d5c2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd5c20000d5c9, model64: 0xd5c90000d5dd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3e, match64: 0x00000000, model64: 0xd5dd0000d5f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e3f, match64: 0x00000000, model64: 0xd5f20000d60a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e40, match64: 0x00000000, model64: 0xd60a0000d61e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e41, match64: 0x00000000, model64: 0xd61e0000d629},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6290000d630, model64: 0xd6300000d64b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd64b0000d653, model64: 0xd6530000d66a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd66a0000d673, model64: 0xd6730000d688},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6880000d68f, model64: 0xd68f0000d6a8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6a80000d6b0, model64: 0xd6b00000d6c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e42, match64: 0x00000000, model64: 0xd6c70000d6dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e43, match64: 0x00000000, model64: 0xd6dc0000d6f3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd6f30000d6fd, model64: 0xd6fd0000d711},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7110000d71a, model64: 0xd71a0000d72b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd72b0000d736, model64: 0xd7360000d749},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7490000d752, model64: 0xd7520000d75e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd75e0000d767, model64: 0xd7670000d77d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd77d0000d784, model64: 0xd7840000d796},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7960000d79d, model64: 0xd79d0000d7ae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7ae0000d7b8, model64: 0xd7b80000d7c9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd7c90000d7d0, model64: 0xd7d00000d7e7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e44, match64: 0x00000000, model64: 0xd7e70000d7fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e45, match64: 0x00000000, model64: 0xd7fd0000d80e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e46, match64: 0x00000000, model64: 0xd80e0000d824},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e47, match64: 0x00000000, model64: 0xd8240000d83a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e48, match64: 0x00000000, model64: 0xd83a0000d850},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e49, match64: 0x00000000, model64: 0xd8500000d864},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4a, match64: 0x00000000, model64: 0xd8640000d870},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4b, match64: 0x00000000, model64: 0xd8700000d87c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4c, match64: 0x00000000, model64: 0xd87c0000d883},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4d, match64: 0x00000000, model64: 0xd8830000d891},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4e, match64: 0x00000000, model64: 0xd8910000d8a4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e4f, match64: 0x00000000, model64: 0xd8a40000d8ad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e50, match64: 0x00000000, model64: 0xd8ad0000d8ba},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e51, match64: 0x00000000, model64: 0xd8ba0000d8ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e52, match64: 0x00000000, model64: 0xd8ca0000d8db},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e53, match64: 0x00000000, model64: 0xd8db0000d8f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e54, match64: 0x00000000, model64: 0xd8f00000d901},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e55, match64: 0x00000000, model64: 0xd9010000d917},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e56, match64: 0x00000000, model64: 0xd9170000d934},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd9340000d93b, model64: 0xd93b0000d958},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e57, match64: 0x00000000, model64: 0xd9580000d96c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e58, match64: 0x00000000, model64: 0xd96c0000d982},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xd9820000d98a, model64: 0xd98a0000d99b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e59, match64: 0x00000000, model64: 0xd99b0000d9b1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5a, match64: 0x00000000, model64: 0xd9b10000d9c1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5b, match64: 0x00000000, model64: 0xd9c10000d9d5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5c, match64: 0x00000000, model64: 0xd9d50000d9e6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5d, match64: 0x00000000, model64: 0xd9e60000d9f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5e, match64: 0x00000000, model64: 0xd9f10000da01},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e5f, match64: 0x00000000, model64: 0xda010000da10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e60, match64: 0x00000000, model64: 0xda100000da1f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e61, match64: 0x00000000, model64: 0xda1f0000da35},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e62, match64: 0x00000000, model64: 0xda350000da42},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e63, match64: 0x00000000, model64: 0xda420000da52},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e64, match64: 0x00000000, model64: 0xda520000da65},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xda650000da6d, model64: 0xda6d0000da78},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e65, match64: 0x00000000, model64: 0xda780000da83},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xda830000da8d, model64: 0xda8d0000daa3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdaa30000daae, model64: 0xdaae0000dabf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e66, match64: 0x00000000, model64: 0xdabf0000dacd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e67, match64: 0x00000000, model64: 0xdacd0000dadc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e68, match64: 0x00000000, model64: 0xdadc0000dae9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e69, match64: 0x00000000, model64: 0xdae90000daf7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6a, match64: 0x00000000, model64: 0xdaf70000db04},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6b, match64: 0x00000000, model64: 0xdb040000db11},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6c, match64: 0x00000000, model64: 0xdb110000db20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6d, match64: 0x00000000, model64: 0xdb200000db33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6e, match64: 0x00000000, model64: 0xdb330000db46},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e6f, match64: 0x00000000, model64: 0xdb460000db5b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e70, match64: 0x00000000, model64: 0xdb5b0000db69},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e71, match64: 0x00000000, model64: 0xdb690000db76},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e72, match64: 0x00000000, model64: 0xdb760000db83},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdb830000db8c, model64: 0xdb8c0000dba2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e73, match64: 0x00000000, model64: 0xdba20000dbba},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdbba0000dbc3, model64: 0xdbc30000dbda},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdbda0000dbe2, model64: 0xdbe20000dbf8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdbf80000dc00, model64: 0xdc000000dc15},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e74, match64: 0x00000000, model64: 0xdc150000dc26},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e75, match64: 0x00000000, model64: 0xdc260000dc3f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e76, match64: 0x00000000, model64: 0xdc3f0000dc4f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e77, match64: 0x00000000, model64: 0xdc4f0000dc65},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdc650000dc6e, model64: 0xdc6e0000dc7c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdc7c0000dc84, model64: 0xdc840000dc8d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdc8d0000dc94, model64: 0xdc940000dca2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdca20000dcaa, model64: 0xd8ad0000d8ba},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdcaa0000dcb3, model64: 0xdcb30000dcbb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdcbb0000dcc2, model64: 0xdcc20000dcd7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xdcd70000dcdf, model64: 0xdcdf0000dcef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e78, match64: 0x00000000, model64: 0xdcef0000dcfc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e79, match64: 0x00000000, model64: 0xdcfc0000dd03},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0e7a, match64: 0x00000000, model64: 0xdd030000dd10},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x0e7b, match64: 0x00000000, model64: 0xdd100000dd23},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0xdd230000dd2b, model64: 0xdd2b0000dd3c},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0xdd3c0000dd44, model64: 0xdd440000dd4b},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x0e7c, match64: 0x00000000, model64: 0xdd4b0000dd5d},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e7d, match64: 0x00000000, model64: 0xdd5d0000dd66},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdd660000dd6e, model64: 0xdd6e0000dd7a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdd7a0000dd82, model64: 0xdd820000dd8e},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e7e, match64: 0x00000000, model64: 0xdd8e0000dda0},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xdda00000dda9, model64: 0xdda90000ddbf},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xddbf0000ddc8, model64: 0xddc80000ddde},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xddde0000dde6, model64: 0xdde60000ddf8},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xddf80000de01, model64: 0xde010000de17},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xde170000de1f, model64: 0xde1f0000de31},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e7f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e80, match64: 0x00000000, model64: 0xde310000de38},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0e81, match64: 0x00000000, model64: 0xde380000de46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e83, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e84, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e86, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xde4e0000de57, model64: 0xde570000de62},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e87, match64: 0x00000000, model64: 0xde760000de8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e88, match64: 0x00000000, model64: 0xde8c0000de9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x0e8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8e, match64: 0x00000000, model64: 0xdeab0000deb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e8f, match64: 0x00000000, model64: 0x87f4000087f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e90, match64: 0x00000000, model64: 0xdeb10000deb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e91, match64: 0x00000000, model64: 0xdeb70000debb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdebb0000dec0, model64: 0xdebb0000dec0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdec00000dec5, model64: 0xdec00000dec5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdec50000deca, model64: 0xdeca0000decf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdecf0000ded3, model64: 0xded30000ded7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xded70000dedb, model64: 0xded70000dedb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdedb0000dedf, model64: 0xdedb0000dedf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x876b0000876f, model64: 0x876b0000876f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdedf0000dee5, model64: 0xdedf0000dee5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdee50000deef, model64: 0xdeef0000def9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdef90000df03, model64: 0xdef90000df03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf030000df0c, model64: 0xdf030000df0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf0c0000df1a, model64: 0xdf1a0000df2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf2a0000df34, model64: 0xdf340000df3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf3f0000df45, model64: 0xdf3f0000df45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf450000df4a, model64: 0xdf450000df4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x884d00008854, model64: 0x884d00008854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdf500000df57, model64: 0xdf570000df5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0e93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xdf640000df6c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xdf800000df87},
		modelTuple{type64: 0x7130000071d, matchRI: 0x0e96, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e98, match64: 0x00000000, model64: 0xdf940000dfa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e99, match64: 0x00000000, model64: 0xdfa50000dfad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfad0000dfb5, model64: 0xdfad0000dfb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfb50000dfbe, model64: 0xdfbe0000dfc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfc70000dfd0, model64: 0xdfd00000dfd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfd90000dfe5, model64: 0xdfd90000dfe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9a, match64: 0x00000000, model64: 0xdfe50000dfed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xdfed0000dff4, model64: 0xdff40000e000},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9b, match64: 0x00000000, model64: 0xe0000000e00b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe00b0000e012, model64: 0xe0120000e01e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe01e0000e025, model64: 0xe0250000e031},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0310000e038, model64: 0xe0380000e044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0440000e04a, model64: 0xe0440000e04a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe04a0000e054, model64: 0xe04a0000e054},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0540000e060, model64: 0xe0600000e06c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe06c0000e072, model64: 0xe0720000e079},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe0790000e083, model64: 0xe0830000e08d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9c, match64: 0x00000000, model64: 0x495600004959},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9d, match64: 0x00000000, model64: 0xe08d0000e090},
		modelTuple{type64: 0x2700000027, matchRI: 0x0e9e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0e9f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0ea0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0ea1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ea2, match64: 0x00000000, model64: 0xe0900000e099},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0990000e0a2, model64: 0xe0a20000e0ab},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0ab0000e0b4, model64: 0xe0b40000e0be},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0be0000e0c7, model64: 0xe0c70000e0d0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0d00000e0d5, model64: 0xe0d50000e0e0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0e00000e0ea, model64: 0xe0ea0000e0f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe0f40000e0fd, model64: 0xe0fd0000e106},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1060000e10f, model64: 0xe0ea0000e0f4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe10f0000e118, model64: 0xe1180000e121},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1210000e12a, model64: 0xe12a0000e133},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1330000e13c, model64: 0xe13c0000e146},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1460000e14f, model64: 0xe14f0000e158},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1580000e15d, model64: 0xe15d0000e168},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1680000e16d, model64: 0xe16d0000e17d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe17d0000e182, model64: 0xe1820000e191},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe1910000e19a, model64: 0xe19a0000e1a9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ea3, match64: 0x00000000, model64: 0xe1a90000e1b3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ea4, match64: 0x00000000, model64: 0xe1b30000e1c2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ea5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ea6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1c60000e1ce, model64: 0xe1c60000e1ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe1ce0000e1d2, model64: 0xe1d20000e1dc},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe1ec0000e200},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2060000e20e, model64: 0x817c0000817e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eaa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe2110000e219},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2230000e229, model64: 0xe2290000e230},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ead, match64: 0x00000000, model64: 0xe2300000e237},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe2370000e241, model64: 0xe2410000e24e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe24e0000e257, model64: 0xe2570000e261},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0eb2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0eb3, match64: 0x00000000, model64: 0xe26b0000e270},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb5, match64: 0x00000000, model64: 0xe27a0000e282},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb6, match64: 0x00000000, model64: 0xe2820000e289},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb7, match64: 0x00000000, model64: 0xe2890000e28b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb8, match64: 0x00000000, model64: 0xe28b0000e28d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eb9, match64: 0x00000000, model64: 0xe28d0000e294},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eba, match64: 0x00000000, model64: 0xe2940000e29d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebb, match64: 0x00000000, model64: 0xe29d0000e2a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebc, match64: 0x00000000, model64: 0xe2a50000e2b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebd, match64: 0x00000000, model64: 0xe2b00000e2bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebe, match64: 0x00000000, model64: 0xe2bd0000e2c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ebf, match64: 0x00000000, model64: 0xe2c60000e2d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec0, match64: 0x00000000, model64: 0xe2d20000e2dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec1, match64: 0x00000000, model64: 0xe2dc0000e2e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec2, match64: 0x00000000, model64: 0xe2e50000e2ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec3, match64: 0x00000000, model64: 0xe2ee0000e2f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec4, match64: 0x00000000, model64: 0xe2f80000e304},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec5, match64: 0x00000000, model64: 0xe3040000e305},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ec6, match64: 0x00000000, model64: 0xe3050000e308},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ec7, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ec8, match64: 0x00000000, model64: 0xe3080000e30e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ecb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0ecc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe31b0000e323, model64: 0xe31b0000e323},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3230000e32b, model64: 0xe32b0000e333},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3330000e33b, model64: 0xe33b0000e346},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ece, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe34b0000e352},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed1, match64: 0x00000000, model64: 0xa1e00000a25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed2, match64: 0x00000000, model64: 0xe3550000e35c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed3, match64: 0x00000000, model64: 0xe35c0000e362},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3650000e36c, model64: 0xe36c0000e376},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3780000e384, model64: 0xe3840000e38d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ed9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xe3980000e3a0, model64: 0xe3a00000e3b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3b70000e3bf, model64: 0xe3bf0000e3cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3cc0000e3d4, model64: 0xe3d40000e3e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe3e20000e3ea, model64: 0xe3ea0000e3fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0edb, match64: 0x00000000, model64: 0xe3fd0000e40b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe40b0000e413, model64: 0xe4130000e426},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4260000e434, model64: 0xe4340000e444},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4440000e44c, model64: 0xe44c0000e461},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4610000e469, model64: 0xe4690000e479},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4790000e481, model64: 0xe4810000e494},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4940000e49c, model64: 0xe49c0000e4ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4ad0000e4b5, model64: 0xe4b50000e4c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4c60000e4ce, model64: 0xe4ce0000e4dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4dc0000e4e4, model64: 0xe4e40000e4f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe4f20000e4fa, model64: 0xe4fa0000e50e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe50e0000e51d, model64: 0xe51d0000e52c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe52c0000e534, model64: 0xe5340000e548},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5480000e550, model64: 0xe5500000e561},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe5610000e56d, model64: 0xe56d0000e580},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0xe5800000e588, model64: 0xe5880000e594},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe5940000e59b, model64: 0xe59b0000e5a5},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe5a50000e5b3, model64: 0xe5b30000e5c1},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe5c10000e5d5, model64: 0xe5d50000e5e9},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xe5e90000e5f8, model64: 0xe5f80000e607},
		modelTuple{type64: 0x24300000245, matchRI: 0x0edc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ede, match64: 0x00000000, model64: 0xe6190000e61e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xe6230000e629},
		modelTuple{type64: 0x24700000251, matchRI: 0x0ee0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0ee1, match64: 0x00000000, model64: 0xe6330000e63d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee2, match64: 0x00000000, model64: 0xe63d0000e645},
		modelTuple{type64: 0x24700000251, matchRI: 0x0ee3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe64c0000e652, model64: 0xe6520000e659},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6590000e65f, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe65f0000e665, model64: 0xe6650000e671},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6710000e677, model64: 0xe6770000e679},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6790000e67f, model64: 0xe67f0000e682},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6820000e688, model64: 0xe6880000e68b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe68b0000e691, model64: 0xe6910000e699},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6990000e69f, model64: 0xe69f0000e6ab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ee7, match64: 0x00000000, model64: 0xe6ab0000e6b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ee8, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6c10000e6cf, model64: 0xe6cf0000e6dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe6dd0000e6e6, model64: 0xe6e60000e6ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eec, match64: 0x00000000, model64: 0xe6f30000e6f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eef, match64: 0x00000000, model64: 0xe6fa0000e701},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7010000e709, model64: 0xe7090000e711},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe7110000e717, model64: 0xe7170000e71d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe71d0000e722, model64: 0xe7220000e727},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef1, match64: 0x00000000, model64: 0xe7270000e72e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ef2, match64: 0x00000000, model64: 0xe72e0000e736},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef4, match64: 0x00000000, model64: 0xe73f0000e741},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ef5, match64: 0x00000000, model64: 0xe7410000e74c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xe74c0000e753, model64: 0xe7530000e761},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef6, match64: 0x00000000, model64: 0xe7680000e771},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef7, match64: 0x00000000, model64: 0xe7710000e77a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef8, match64: 0x00000000, model64: 0xe77a0000e77e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ef9, match64: 0x00000000, model64: 0xe77e0000e78a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efa, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efb, match64: 0x00000000, model64: 0xe78a0000e794},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efc, match64: 0x00000000, model64: 0xe7940000e7a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efd, match64: 0x00000000, model64: 0xe7a10000e7ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0efe, match64: 0x00000000, model64: 0xe7ad0000e7b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0eff, match64: 0x00000000, model64: 0xe7b70000e7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f00, match64: 0x00000000, model64: 0xe7c10000e7ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f01, match64: 0x00000000, model64: 0xe7ca0000e7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f02, match64: 0x00000000, model64: 0xe7ce0000e7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f03, match64: 0x00000000, model64: 0xe7d70000e7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f04, match64: 0x00000000, model64: 0xe7e00000e7eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f05, match64: 0x00000000, model64: 0xe7eb0000e7f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f06, match64: 0x00000000, model64: 0xe7f60000e800},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f07, match64: 0x00000000, model64: 0xe8000000e808},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f08, match64: 0x00000000, model64: 0xe8080000e80c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f09, match64: 0x00000000, model64: 0xe80c0000e813},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0a, match64: 0x00000000, model64: 0xe8130000e81d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0b, match64: 0x00000000, model64: 0xe81d0000e823},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0c, match64: 0x00000000, model64: 0xe8230000e82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0d, match64: 0x00000000, model64: 0xe82a0000e830},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0e, match64: 0x00000000, model64: 0xe8300000e83a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f0f, match64: 0x00000000, model64: 0xe83a0000e841},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f10, match64: 0x00000000, model64: 0xe8410000e84c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f11, match64: 0x00000000, model64: 0xe84c0000e852},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f12, match64: 0x00000000, model64: 0xe8520000e858},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f13, match64: 0x00000000, model64: 0xe8580000e862},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f14, match64: 0x00000000, model64: 0xe8620000e868},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f15, match64: 0x00000000, model64: 0xe8680000e872},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f16, match64: 0x00000000, model64: 0xe8720000e879},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f17, match64: 0x00000000, model64: 0xe8790000e87f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f18, match64: 0x00000000, model64: 0xe87f0000e886},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f19, match64: 0x00000000, model64: 0xe8860000e88c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f1a, match64: 0x00000000, model64: 0xe87f0000e886},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f1b, match64: 0x00000000, model64: 0xe88c0000e896},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f1c, match64: 0x00000000, model64: 0xe8960000e8a0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f1d, match64: 0x00000000, model64: 0xe8a00000e8aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1e, match64: 0x00000000, model64: 0xe8aa0000e8ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f1f, match64: 0x00000000, model64: 0xe8ad0000e8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f20, match64: 0x00000000, model64: 0xe8b20000e8b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f21, match64: 0x00000000, model64: 0xe8b70000e8be},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f22, match64: 0x00000000, model64: 0xe8be0000e8c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f23, match64: 0x00000000, model64: 0xe8c40000e8cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f24, match64: 0x00000000, model64: 0xe8cf0000e8d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f25, match64: 0x00000000, model64: 0xe8d80000e8df},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f26, match64: 0x00000000, model64: 0xe8df0000e8e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f27, match64: 0x00000000, model64: 0xe8e50000e8ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f28, match64: 0x00000000, model64: 0xe8ef0000e8f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f29, match64: 0x00000000, model64: 0xe8f60000e8fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2a, match64: 0x00000000, model64: 0xe8fb0000e901},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2b, match64: 0x00000000, model64: 0xe9010000e906},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2c, match64: 0x00000000, model64: 0xe9060000e90f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2d, match64: 0x00000000, model64: 0xe90f0000e914},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2e, match64: 0x00000000, model64: 0xe9140000e91a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f2f, match64: 0x00000000, model64: 0xe91a0000e921},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f30, match64: 0x00000000, model64: 0xe9210000e92a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f31, match64: 0x00000000, model64: 0xe92a0000e934},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f32, match64: 0x00000000, model64: 0xbbd70000bbdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f33, match64: 0x00000000, model64: 0xe9340000e93a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f34, match64: 0x00000000, model64: 0xe93a0000e943},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f35, match64: 0x00000000, model64: 0xe9430000e948},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f36, match64: 0x00000000, model64: 0xe9480000e951},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f37, match64: 0x00000000, model64: 0xe9510000e956},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f38, match64: 0x00000000, model64: 0xe9560000e95f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f39, match64: 0x00000000, model64: 0xe95f0000e964},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3a, match64: 0x00000000, model64: 0xe9640000e96e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3b, match64: 0x00000000, model64: 0xe96e0000e97a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3c, match64: 0x00000000, model64: 0xe97a0000e981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3d, match64: 0x00000000, model64: 0xe9810000e98c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3e, match64: 0x00000000, model64: 0xe98c0000e992},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f3f, match64: 0x00000000, model64: 0xe9920000e999},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f40, match64: 0x00000000, model64: 0xe9990000e99f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe99f0000e9ac, model64: 0xe9ac0000e9b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe9b70000e9c3, model64: 0xe9c30000e9ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f41, match64: 0x00000000, model64: 0xe9ca0000e9d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f42, match64: 0x00000000, model64: 0xe9d10000e9d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f43, match64: 0x00000000, model64: 0xe9d70000e9de},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f44, match64: 0x00000000, model64: 0xe9de0000e9eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f45, match64: 0x00000000, model64: 0xe9990000e99f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f46, match64: 0x00000000, model64: 0xe9eb0000e9fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f47, match64: 0x00000000, model64: 0xe9fa0000ea05},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f48, match64: 0x00000000, model64: 0xea050000ea0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f49, match64: 0x00000000, model64: 0xea0f0000ea16},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4a, match64: 0x00000000, model64: 0xea160000ea1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4b, match64: 0x00000000, model64: 0xea1c0000ea25},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4c, match64: 0x00000000, model64: 0xea250000ea30},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4d, match64: 0x00000000, model64: 0xea300000ea37},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4e, match64: 0x00000000, model64: 0xea370000ea3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f4f, match64: 0x00000000, model64: 0xea3e0000ea44},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f50, match64: 0x00000000, model64: 0xea440000ea53},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f51, match64: 0x00000000, model64: 0xea530000ea58},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f52, match64: 0x00000000, model64: 0xea580000ea5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f53, match64: 0x00000000, model64: 0xea5f0000ea69},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f54, match64: 0x00000000, model64: 0xea690000ea70},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f55, match64: 0x00000000, model64: 0xea700000ea7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f56, match64: 0x00000000, model64: 0xea7c0000ea87},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f57, match64: 0x00000000, model64: 0xea870000ea8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f58, match64: 0x00000000, model64: 0xe97a0000e981},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f59, match64: 0x00000000, model64: 0xea8e0000ea95},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5a, match64: 0x00000000, model64: 0xea950000eaa1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5b, match64: 0x00000000, model64: 0xeaa10000eaa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5c, match64: 0x00000000, model64: 0xeaa80000eab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5d, match64: 0x00000000, model64: 0xeab20000eabe},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5e, match64: 0x00000000, model64: 0xeabe0000eac5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f5f, match64: 0x00000000, model64: 0xeac50000eacf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f60, match64: 0x00000000, model64: 0xeacf0000eada},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f61, match64: 0x00000000, model64: 0xeada0000eae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f62, match64: 0x00000000, model64: 0xeae10000eaed},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f63, match64: 0x00000000, model64: 0xeaed0000eaf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f64, match64: 0x00000000, model64: 0xeaf40000eaf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f65, match64: 0x00000000, model64: 0xeaed0000eaf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f66, match64: 0x00000000, model64: 0xa6b00000a6b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f67, match64: 0x00000000, model64: 0xa6a30000a6a9},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f68, match64: 0x00000000, model64: 0xeaf60000eb01},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f69, match64: 0x00000000, model64: 0xeb010000eb09},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6a, match64: 0x00000000, model64: 0xeb090000eb0f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6b, match64: 0x00000000, model64: 0x702e00007034},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6c, match64: 0x00000000, model64: 0xeb0f0000eb15},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6d, match64: 0x00000000, model64: 0xeb150000eb1f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6e, match64: 0x00000000, model64: 0x93040000930a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f6f, match64: 0x00000000, model64: 0xeb1f0000eb2c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f70, match64: 0x00000000, model64: 0x70340000703a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f71, match64: 0x00000000, model64: 0xeb2c0000eb32},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f72, match64: 0x00000000, model64: 0xeb320000eb3d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f73, match64: 0x00000000, model64: 0xeb3d0000eb43},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f74, match64: 0x00000000, model64: 0xeb430000eb4a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f75, match64: 0x00000000, model64: 0xeb4a0000eb55},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f76, match64: 0x00000000, model64: 0xeb550000eb5c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f77, match64: 0x00000000, model64: 0xeb5c0000eb63},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f78, match64: 0x00000000, model64: 0xeb630000eb72},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f79, match64: 0x00000000, model64: 0xeb720000eb7a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7a, match64: 0x00000000, model64: 0xeb7a0000eb85},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7b, match64: 0x00000000, model64: 0xeb850000eb93},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7c, match64: 0x00000000, model64: 0xeb930000eb9e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7d, match64: 0x00000000, model64: 0xeb9e0000eba9},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7e, match64: 0x00000000, model64: 0xeba90000ebb0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f7f, match64: 0x00000000, model64: 0xebb00000ebbb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f80, match64: 0x00000000, model64: 0xebbb0000ebc3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f81, match64: 0x00000000, model64: 0xeb5c0000eb63},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f82, match64: 0x00000000, model64: 0xebc30000ebd1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f83, match64: 0x00000000, model64: 0xebd10000ebd8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f84, match64: 0x00000000, model64: 0xebd80000ebe0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f85, match64: 0x00000000, model64: 0xebe00000ebeb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f86, match64: 0x00000000, model64: 0xebeb0000ebf6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f87, match64: 0x00000000, model64: 0xebf60000ec00},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f88, match64: 0x00000000, model64: 0xec000000ec08},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f89, match64: 0x00000000, model64: 0xec080000ec13},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f8a, match64: 0x00000000, model64: 0xec130000ec22},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f8b, match64: 0x00000000, model64: 0xec220000ec30},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f8c, match64: 0x00000000, model64: 0xec300000ec3a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x0f8d, match64: 0x00000000, model64: 0xec3a0000ec41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f8e, match64: 0x00000000, model64: 0xec410000ec45},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f8f, match64: 0x00000000, model64: 0xec450000ec4d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0f90, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f91, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f92, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xec640000ec6c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xec770000ec81, model64: 0xec810000ec8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9a, match64: 0x00000000, model64: 0xec8b0000ec8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9b, match64: 0x00000000, model64: 0xec8d0000ec97},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9c, match64: 0x00000000, model64: 0x1da300001da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9d, match64: 0x00000000, model64: 0xec970000eca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9e, match64: 0x00000000, model64: 0xeca00000ecaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0f9f, match64: 0x00000000, model64: 0xecaf0000ecb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa0, match64: 0x00000000, model64: 0xecb50000ecbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa1, match64: 0x00000000, model64: 0xecbf0000ecc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa2, match64: 0x00000000, model64: 0xecc90000ecce},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa3, match64: 0x00000000, model64: 0xecce0000ecd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa4, match64: 0x00000000, model64: 0xecd40000ecd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fa5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecd90000ece7, model64: 0xece70000ecf6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xecf60000ed03, model64: 0xed030000ed10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed100000ed1d, model64: 0xed1d0000ed2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed2b0000ed38, model64: 0xed380000ed46},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed460000ed4f, model64: 0xed4f0000ed59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed590000ed63, model64: 0xed630000ed6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed6e0000ed78, model64: 0xed6e0000ed78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed780000ed83, model64: 0xed780000ed83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed830000ed89, model64: 0xed830000ed89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed890000ed94, model64: 0xed940000ed9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xed9f0000eda5, model64: 0xeda50000edab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xedab0000edb5, model64: 0xedb50000edbf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xedce0000edd4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fa9, match64: 0x00000000, model64: 0xedd80000ede5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0faa, match64: 0x00000000, model64: 0xede50000eded},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fab, match64: 0x00000000, model64: 0xeded0000edf6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fac, match64: 0x00000000, model64: 0xedf60000ee08},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xee080000ee13, model64: 0xee130000ee1a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fad, match64: 0x00000000, model64: 0xee1a0000ee22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee220000ee30, model64: 0xee300000ee3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fae, match64: 0x00000000, model64: 0xee3a0000ee46},
		modelTuple{type64: 0x2700000027, matchRI: 0x0faf, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee460000ee4f, model64: 0xee4f0000ee52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee520000ee5b, model64: 0xee5b0000ee64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb1, match64: 0x00000000, model64: 0x4cb000004cb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee640000ee68, model64: 0xeb5c0000eb63},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb2, match64: 0x00000000, model64: 0xee680000ee6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb3, match64: 0x00000000, model64: 0x5d7a00005d81},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee730000ee7e, model64: 0xee7e0000ee83},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb6, match64: 0x00000000, model64: 0xee830000ee8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee8d0000ee97, model64: 0xee970000ee9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xee9e0000eea9, model64: 0xeea90000eeab},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb7, match64: 0x00000000, model64: 0xeeab0000eeb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeeb00000eebd, model64: 0xeebd0000eecd},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xeecd0000eed7, model64: 0xeed70000eee0},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xeee00000eee9, model64: 0xeee90000eef2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xeef70000ef01, model64: 0xef010000ef07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xef0c0000ef14, model64: 0xef140000ef20},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fb9, match64: 0x00000000, model64: 0xef200000ef32},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fba, match64: 0x00000000, model64: 0xef320000ef3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbb, match64: 0x00000000, model64: 0xef3f0000ef4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbc, match64: 0x00000000, model64: 0xef4b0000ef52},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbd, match64: 0x00000000, model64: 0xef520000ef64},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbe, match64: 0x00000000, model64: 0xef640000ef75},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fbf, match64: 0x00000000, model64: 0xef750000ef82},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc0, match64: 0x00000000, model64: 0xef820000ef8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc1, match64: 0x00000000, model64: 0xef8e0000ef9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc2, match64: 0x00000000, model64: 0xef9b0000efa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc3, match64: 0x00000000, model64: 0xefa60000efb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc4, match64: 0x00000000, model64: 0xefb20000efbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc5, match64: 0x00000000, model64: 0xefbf0000efcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc6, match64: 0x00000000, model64: 0xefcc0000efd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc7, match64: 0x00000000, model64: 0xefd70000efe4},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc8, match64: 0x00000000, model64: 0xefe40000eff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fc9, match64: 0x00000000, model64: 0xeff10000f000},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fca, match64: 0x00000000, model64: 0xf0000000f00f},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcb, match64: 0x00000000, model64: 0xf00f0000f020},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcc, match64: 0x00000000, model64: 0xf0200000f02d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcd, match64: 0x00000000, model64: 0xf02d0000f041},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fce, match64: 0x00000000, model64: 0xf0410000f04d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fcf, match64: 0x00000000, model64: 0xf04d0000f05b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd0, match64: 0x00000000, model64: 0xf05b0000f064},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd1, match64: 0x00000000, model64: 0xf0640000f06b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf06b0000f073, model64: 0xf0730000f07b},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd2, match64: 0x00000000, model64: 0xf07b0000f082},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd3, match64: 0x00000000, model64: 0xf0820000f08a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd5, match64: 0x00000000, model64: 0xf08a0000f095},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd7, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fd8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fda, match64: 0x00000000, model64: 0x5d0400005d0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fdd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0a00000f0a6, model64: 0xf0a60000f0ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fde, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x0fe1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0fe2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe4, match64: 0x00000000, model64: 0xf0b60000f0bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe5, match64: 0x00000000, model64: 0xf0bd0000f0c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe6, match64: 0x00000000, model64: 0xf0c00000f0ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe7, match64: 0x00000000, model64: 0xf0ca0000f0d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0d20000f0e0, model64: 0xf0e00000f0ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf0ee0000f0fc, model64: 0xf0fc0000f10a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf10a0000f113, model64: 0xf1130000f11c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf11c0000f126, model64: 0xf1260000f130},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1300000f13c, model64: 0xf13c0000f148},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1480000f153, model64: 0xf1530000f15e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf15e0000f168, model64: 0xf1680000f172},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe8, match64: 0x00000000, model64: 0xf1720000f179},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fe9, match64: 0x00000000, model64: 0xf1790000f182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1820000f18b, model64: 0xf18b0000f18f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf18f0000f193, model64: 0xf18f0000f193},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1930000f19a, model64: 0xf19a0000f1a1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0fea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fec, match64: 0x00000000, model64: 0xf1a90000f1ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fed, match64: 0x00000000, model64: 0xf1ba0000f1c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf1c60000f1d2, model64: 0xf1d20000f1e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fee, match64: 0x00000000, model64: 0xf1ba0000f1c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x0fef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff6, match64: 0x00000000, model64: 0xf1fb0000f20c},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff7, match64: 0x00000000, model64: 0xf20c0000f21d},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff8, match64: 0x00000000, model64: 0xf21d0000f22e},
		modelTuple{type64: 0x2700000027, matchRI: 0x0ff9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x0ffa, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x0ffb, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x0ffc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf2330000f23d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf2410000f24a, model64: 0xf2410000f24a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf24a0000f254, model64: 0xf24a0000f254},
		modelTuple{type64: 0x2700000027, matchRI: 0x1000, match64: 0x00000000, model64: 0xf2580000f260},
		modelTuple{type64: 0x2700000027, matchRI: 0x1001, match64: 0x00000000, model64: 0xf2600000f265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf2690000f270, model64: 0xf2700000f277},
		modelTuple{type64: 0x2700000027, matchRI: 0x1003, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf27c0000f281},
		modelTuple{type64: 0x2700000027, matchRI: 0x1006, match64: 0x00000000, model64: 0xf2860000f28b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1007, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1008, match64: 0x00000000, model64: 0xf28b0000f290},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x100b, match64: 0x00000000, model64: 0xf29b0000f2a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x100c, match64: 0x00000000, model64: 0xf2a30000f2ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x100d, match64: 0x00000000, model64: 0xf2ab0000f2b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x100e, match64: 0x00000000, model64: 0xf2b20000f2b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x100f, match64: 0x00000000, model64: 0xf2b80000f2c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1010, match64: 0x00000000, model64: 0xf2c10000f2c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1011, match64: 0x00000000, model64: 0xf2c80000f2d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1012, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1013, match64: 0x00000000, model64: 0xf2d10000f2d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1014, match64: 0x00000000, model64: 0xf2d90000f2e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1015, match64: 0x00000000, model64: 0xf2e10000f2ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1016, match64: 0x00000000, model64: 0xf2ea0000f2ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1017, match64: 0x00000000, model64: 0xf2ef0000f2fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1018, match64: 0x00000000, model64: 0xb4200000b424},
		modelTuple{type64: 0x2700000027, matchRI: 0x1019, match64: 0x00000000, model64: 0x8e0500008e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x101a, match64: 0x00000000, model64: 0xf2fb0000f301},
		modelTuple{type64: 0x2700000027, matchRI: 0x101b, match64: 0x00000000, model64: 0xf3010000f30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x101c, match64: 0x00000000, model64: 0xf30a0000f317},
		modelTuple{type64: 0x2700000027, matchRI: 0x101d, match64: 0x00000000, model64: 0xf3170000f31f},
		modelTuple{type64: 0x2700000027, matchRI: 0x101e, match64: 0x00000000, model64: 0xf31f0000f32d},
		modelTuple{type64: 0x2700000027, matchRI: 0x101f, match64: 0x00000000, model64: 0xf32d0000f333},
		modelTuple{type64: 0x2700000027, matchRI: 0x1020, match64: 0x00000000, model64: 0xf3330000f339},
		modelTuple{type64: 0x2700000027, matchRI: 0x1021, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1023, match64: 0x00000000, model64: 0xf33c0000f349},
		modelTuple{type64: 0x2700000027, matchRI: 0x1024, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1026, match64: 0x00000000, model64: 0xf34d0000f35a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf35a0000f361, model64: 0xf35a0000f361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf3610000f367, model64: 0xf3670000f36e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1027, match64: 0x00000000, model64: 0xf36e0000f37d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1028, match64: 0x00000000, model64: 0xb7f90000b801},
		modelTuple{type64: 0x2700000027, matchRI: 0x1029, match64: 0x00000000, model64: 0xf37d0000f394},
		modelTuple{type64: 0x2700000027, matchRI: 0x102a, match64: 0x00000000, model64: 0xf3940000f3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x102b, match64: 0x00000000, model64: 0xf3a20000f3ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x102d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf3ba0000f3be},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf3c40000f3cc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf3e40000f3ed, model64: 0xf3ed0000f3f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1031, match64: 0x00000000, model64: 0xf3f50000f3fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1032, match64: 0x00000000, model64: 0xf3fd0000f407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4070000f40e, model64: 0xf4070000f40e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1033, match64: 0x00000000, model64: 0xf40e0000f417},
		modelTuple{type64: 0x2700000027, matchRI: 0x1034, match64: 0x00000000, model64: 0xf4170000f41f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf41f0000f42a, model64: 0xf42a0000f430},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4300000f439, model64: 0xf4390000f442},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4420000f449, model64: 0xf4490000f450},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4560000f45e, model64: 0xf45e0000f462},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4620000f473, model64: 0xf4730000f484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf48b0000f495, model64: 0xc1270000c12e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4950000f49f, model64: 0xf49f0000f4aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4aa0000f4b3, model64: 0xf4b30000f4be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4be0000f4c7, model64: 0xf4c70000f4ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4ce0000f4d7, model64: 0xf4d70000f4db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4db0000f4e4, model64: 0xf4e40000f4ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4ec0000f4f5, model64: 0xf4f50000f4f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4f90000f504, model64: 0xf4f90000f504},
		modelTuple{type64: 0x2700000027, matchRI: 0x1037, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1038, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x103b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x103c, match64: 0x00000000, model64: 0xf50d0000f51c},
		modelTuple{type64: 0x24700000251, matchRI: 0x103d, match64: 0x00000000, model64: 0xf51c0000f527},
		modelTuple{type64: 0x24700000251, matchRI: 0x103e, match64: 0x00000000, model64: 0xafe00000afeb},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xf52d0000f536, model64: 0xf5360000f53f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xf53f0000f54c, model64: 0xf53f0000f54c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0xf54c0000f555, model64: 0xf54c0000f555},
		modelTuple{type64: 0x2700000027, matchRI: 0x1040, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1041, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1044, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1045, match64: 0x00000000, model64: 0xf5640000f56c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1049, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x104a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x104c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x104d, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2700000027, matchRI: 0x104f, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf58c0000f593, model64: 0xf5930000f59b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1051, match64: 0x00000000, model64: 0xf59b0000f5a1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf5a10000f5ab, model64: 0xf5ab0000f5b5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf5b50000f5bc, model64: 0xf5bc0000f5c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1052, match64: 0x00000000, model64: 0xf5c30000f5c9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xf5c90000f5d0, model64: 0xf5d00000f5d7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf5eb0000f5f3, model64: 0xf5f30000f5f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xf6010000f60c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6120000f61b, model64: 0xf61b0000f624},
		modelTuple{type64: 0x2700000027, matchRI: 0x1058, match64: 0x00000000, model64: 0xf6240000f630},
		modelTuple{type64: 0x2700000027, matchRI: 0x1059, match64: 0x00000000, model64: 0xf6300000f638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6380000f641, model64: 0xf6410000f64a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf64a0000f658, model64: 0xf64a0000f658},
		modelTuple{type64: 0x2700000027, matchRI: 0x105a, match64: 0x00000000, model64: 0xf6580000f661},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6610000f66c, model64: 0xf66c0000f677},
		modelTuple{type64: 0x2700000027, matchRI: 0x105b, match64: 0x00000000, model64: 0xf6770000f687},
		modelTuple{type64: 0x2700000027, matchRI: 0x105c, match64: 0x00000000, model64: 0xf6870000f694},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6940000f69e, model64: 0xf69e0000f6a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6a80000f6b4, model64: 0xf6b40000f6c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6c00000f6c9, model64: 0xf6c90000f6d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6d20000f6df, model64: 0xf6df0000f6ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf6ec0000f6f4, model64: 0xf6f40000f6fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x105d, match64: 0x00000000, model64: 0xf6fc0000f704},
		modelTuple{type64: 0x24300000245, matchRI: 0x105e, match64: 0x00000000, model64: 0xf7040000f711},
		modelTuple{type64: 0x24300000245, matchRI: 0x105f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1061, match64: 0x00000000, model64: 0xf7160000f71c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf71c0000f724, model64: 0xf7240000f729},
		modelTuple{type64: 0x2700000027, matchRI: 0x1062, match64: 0x00000000, model64: 0xf7290000f731},
		modelTuple{type64: 0x2700000027, matchRI: 0x1063, match64: 0x00000000, model64: 0xf7310000f738},
		modelTuple{type64: 0x2700000027, matchRI: 0x1064, match64: 0x00000000, model64: 0xf7380000f73c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1065, match64: 0x00000000, model64: 0xf73c0000f741},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xf7410000f74b, model64: 0xf74b0000f753},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7600000f76c, model64: 0xf7600000f76c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf76c0000f777, model64: 0xf76c0000f777},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7770000f788, model64: 0xf7770000f788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7880000f794, model64: 0xf7880000f794},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7940000f79f, model64: 0xf7940000f79f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf79f0000f7ae, model64: 0xf79f0000f7ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7ae0000f7bc, model64: 0xf7ae0000f7bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7bc0000f7c9, model64: 0xf7bc0000f7c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1068, match64: 0x00000000, model64: 0xf7c90000f7d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1069, match64: 0x00000000, model64: 0xf7d60000f7de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf7de0000f7ed, model64: 0xf7de0000f7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x106a, match64: 0x00000000, model64: 0xf7ed0000f7f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x106b, match64: 0x00000000, model64: 0xf7f70000f805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8050000f814, model64: 0xf8050000f814},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8140000f826, model64: 0xf8140000f826},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8260000f834, model64: 0xf8260000f834},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8340000f83f, model64: 0xf8340000f83f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf83f0000f849, model64: 0xf83f0000f849},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8490000f853, model64: 0xf8490000f853},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8530000f860, model64: 0xf8530000f860},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8600000f86e, model64: 0xf8600000f86e},
		modelTuple{type64: 0x2700000027, matchRI: 0x106c, match64: 0x00000000, model64: 0xf86e0000f87a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf87a0000f882, model64: 0xf8820000f88b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf88b0000f896, model64: 0xf8960000f8ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8ac0000f8b3, model64: 0xf8b30000f8c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf8c40000f8cf, model64: 0xf8cf0000f8e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x106d, match64: 0x00000000, model64: 0xf8e30000f8f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x106e, match64: 0x00000000, model64: 0xf8f40000f900},
		modelTuple{type64: 0x2700000027, matchRI: 0x106f, match64: 0x00000000, model64: 0xf9000000f911},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9110000f921, model64: 0xf9110000f921},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9210000f92f, model64: 0xf9210000f92f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1070, match64: 0x00000000, model64: 0xf92f0000f93e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf93e0000f950, model64: 0xf93e0000f950},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9500000f964, model64: 0xf9500000f964},
		modelTuple{type64: 0x2700000027, matchRI: 0x1071, match64: 0x00000000, model64: 0xf9640000f974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9740000f97b, model64: 0xf97b0000f98c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf98c0000f995, model64: 0xf9950000f99e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf99e0000f9a7, model64: 0xf99e0000f9a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9a70000f9b0, model64: 0xf9a70000f9b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1072, match64: 0x00000000, model64: 0xf9b00000f9be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1073, match64: 0x00000000, model64: 0xf9be0000f9cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1074, match64: 0x00000000, model64: 0xf9cd0000f9db},
		modelTuple{type64: 0x38400000391, matchRI: 0x1075, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x1076, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1077, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1078, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1079, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x107b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x107c, match64: 0x00000000, model64: 0xf9df0000f9e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x107d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x107e, match64: 0x00000000, model64: 0xf9e10000f9e9},
		modelTuple{type64: 0x24300000245, matchRI: 0x107f, match64: 0x00000000, model64: 0xf9e90000f9ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9f30000f9fe, model64: 0xf9f30000f9fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf9fe0000fa0a, model64: 0xf9fe0000fa0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1081, match64: 0x00000000, model64: 0xfa0a0000fa16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1082, match64: 0x00000000, model64: 0xfa160000fa24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1083, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa2a0000fa31, model64: 0xfa310000fa3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1085, match64: 0x00000000, model64: 0xfa4e0000fa57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1086, match64: 0x00000000, model64: 0xfa570000fa65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa650000fa6d, model64: 0xfa6d0000fa76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1087, match64: 0x00000000, model64: 0xfa760000fa79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1088, match64: 0x00000000, model64: 0xfa790000fa83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa830000fa8d, model64: 0xfa8d0000fa8f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa8f0000fa98, model64: 0x1da300001da4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfa980000faa6, model64: 0xfaa60000faac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaac0000fab5, model64: 0xb5cd0000b5ce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xfab50000fac2, model64: 0xfac20000facf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xfacf0000fadb, model64: 0xfadb0000fae7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaec0000faf2, model64: 0xfaf20000faf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfaf90000fb01, model64: 0xfaf90000fb01},
		modelTuple{type64: 0x2700000027, matchRI: 0x108a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x108c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x108d, match64: 0x00000000, model64: 0xfb080000fb0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x108e, match64: 0x00000000, model64: 0x8fe100008fe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x108f, match64: 0x00000000, model64: 0xfb0f0000fb12},
		modelTuple{type64: 0x2700000027, matchRI: 0x1090, match64: 0x00000000, model64: 0x766100007665},
		modelTuple{type64: 0x2700000027, matchRI: 0x1091, match64: 0x00000000, model64: 0xfb120000fb17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1092, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfb1f0000fb32},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1096, match64: 0x00000000, model64: 0xfb3d0000fb48},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1097, match64: 0x00000000, model64: 0xfb480000fb59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1098, match64: 0x00000000, model64: 0xfb590000fb6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1099, match64: 0x00000000, model64: 0xfb6c0000fb7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfb7e0000fb88, model64: 0xfb880000fb98},
		modelTuple{type64: 0x2700000027, matchRI: 0x109a, match64: 0x00000000, model64: 0xfb980000fba7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x109b, match64: 0x00000000, model64: 0xfba70000fbac},
		modelTuple{type64: 0x2700000027, matchRI: 0x109c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x109d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x109f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a3, match64: 0x00000000, model64: 0xfbcf0000fbd9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfbd90000fbe1, model64: 0xfbe10000fbe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a5, match64: 0x00000000, model64: 0xfbed0000fbf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0xfbf90000fc01, model64: 0xfc010000fc08},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10ab, match64: 0x00000000, model64: 0xfc080000fc12},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ad, match64: 0x00000000, model64: 0xfc180000fc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ae, match64: 0x00000000, model64: 0xfc210000fc26},
		modelTuple{type64: 0x2700000027, matchRI: 0x10af, match64: 0x00000000, model64: 0xfc260000fc2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b0, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b1, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b2, match64: 0x00000000, model64: 0xfc2a0000fc2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b3, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b4, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b5, match64: 0x00000000, model64: 0xfc2f0000fc33},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b6, match64: 0x00000000, model64: 0xfc330000fc39},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b7, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b8, match64: 0x00000000, model64: 0xfc390000fc3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10b9, match64: 0x00000000, model64: 0xfc3e0000fc43},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc480000fc4b, model64: 0xfc480000fc4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bd, match64: 0x00000000, model64: 0xfc4b0000fc53},
		modelTuple{type64: 0x2700000027, matchRI: 0x10be, match64: 0x00000000, model64: 0xfc530000fc58},
		modelTuple{type64: 0x2700000027, matchRI: 0x10bf, match64: 0x00000000, model64: 0xfc580000fc67},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c0, match64: 0x00000000, model64: 0xfc670000fc72},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10c1, match64: 0x00000000, model64: 0xfc720000fc7b},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0xfc7b0000fc85, model64: 0xfc850000fc8a},
		modelTuple{type64: 0x24300000245, matchRI: 0x10c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c4, match64: 0x00000000, model64: 0xfc8f0000fc9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfc9c0000fca4, model64: 0xfca40000fcac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcac0000fcb4, model64: 0xfcac0000fcb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcb40000fcc0, model64: 0xfcb40000fcc0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcc00000fcca, model64: 0xfcc00000fcca},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcd30000fcdc, model64: 0xfcdc0000fce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfce70000fcec, model64: 0x98d7000098de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcec0000fcf2, model64: 0xfcf20000fcfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfcfc0000fd00, model64: 0xfd000000fd09},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cb, match64: 0x00000000, model64: 0xfd090000fd12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd120000fd16, model64: 0xfd160000fd20},
		modelTuple{type64: 0x2700000027, matchRI: 0x10cc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x836d0000837a, model64: 0x82810000828c},
		modelTuple{type64: 0x24300000245, matchRI: 0x10cd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x10ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d0, match64: 0x00000000, model64: 0xfd260000fd2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d1, match64: 0x00000000, model64: 0xfd2d0000fd33},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d2, match64: 0x00000000, model64: 0xfd330000fd39},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d3, match64: 0x00000000, model64: 0xfd390000fd40},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d4, match64: 0x00000000, model64: 0xfd400000fd46},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d5, match64: 0x00000000, model64: 0xfd460000fd4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d6, match64: 0x00000000, model64: 0xfd4d0000fd56},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d7, match64: 0x00000000, model64: 0xfd560000fd5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d8, match64: 0x00000000, model64: 0xfd5c0000fd62},
		modelTuple{type64: 0x2700000027, matchRI: 0x10d9, match64: 0x00000000, model64: 0xb7560000b75d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10da, match64: 0x00000000, model64: 0xfd620000fd68},
		modelTuple{type64: 0x2700000027, matchRI: 0x10db, match64: 0x00000000, model64: 0xfd680000fd6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dc, match64: 0x00000000, model64: 0xfd6f0000fd75},
		modelTuple{type64: 0x2700000027, matchRI: 0x10dd, match64: 0x00000000, model64: 0xfd750000fd7d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10df, match64: 0x00000000, model64: 0xfd7d0000fd87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfd8d0000fd93, model64: 0xfd930000fd97},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e1, match64: 0x00000000, model64: 0xfd970000fd9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x10e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfdab0000fdb6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xfdcc0000fdd2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdde0000fde7, model64: 0xfde70000fdf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfdf20000fdfd, model64: 0xfdfd0000fe08},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ec, match64: 0x00000000, model64: 0xfe080000fe0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfe0f0000fe1f, model64: 0xfe0f0000fe1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ed, match64: 0x00000000, model64: 0xfe1f0000fe27},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ee, match64: 0x00000000, model64: 0xfe270000fe33},
		modelTuple{type64: 0x2700000027, matchRI: 0x10ef, match64: 0x00000000, model64: 0xfe330000fe3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f0, match64: 0x00000000, model64: 0xfe3e0000fe45},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f1, match64: 0x00000000, model64: 0xfe450000fe4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f2, match64: 0x00000000, model64: 0xfe4e0000fe54},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f3, match64: 0x00000000, model64: 0xfe540000fe5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f4, match64: 0x00000000, model64: 0xfe5d0000fe68},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f5, match64: 0x00000000, model64: 0xfe680000fe73},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f6, match64: 0x00000000, model64: 0xfe730000fe7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f7, match64: 0x00000000, model64: 0xfe7b0000fe82},
		modelTuple{type64: 0x2700000027, matchRI: 0x10f8, match64: 0x00000000, model64: 0xfe820000fe88},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10f9, match64: 0x00000000, model64: 0xfe880000fe96},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10fa, match64: 0x00000000, model64: 0xfe960000fea4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10fb, match64: 0x00000000, model64: 0xfea40000feb2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10fc, match64: 0x00000000, model64: 0xfeb20000fec0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10fd, match64: 0x00000000, model64: 0xfe960000fea4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10fe, match64: 0x00000000, model64: 0xfec00000fec8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x10ff, match64: 0x00000000, model64: 0xfec80000fed6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1100, match64: 0x00000000, model64: 0xfe880000fe96},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1101, match64: 0x00000000, model64: 0xfed60000fee3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1102, match64: 0x00000000, model64: 0xfee30000fef0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1103, match64: 0x00000000, model64: 0xfef00000fefd},
		modelTuple{type64: 0x24300000245, matchRI: 0x1104, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1108, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1109, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x110b, match64: 0x00000000, model64: 0xff110000ff16},
		modelTuple{type64: 0x2700000027, matchRI: 0x110c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x110d, match64: 0x00000000, model64: 0xff160000ff22},
		modelTuple{type64: 0x2700000027, matchRI: 0x110f, match64: 0x00000000, model64: 0xff290000ff2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1110, match64: 0x00000000, model64: 0xff2f0000ff39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1111, match64: 0x00000000, model64: 0xff390000ff40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1112, match64: 0x00000000, model64: 0xff400000ff44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1113, match64: 0x00000000, model64: 0xff440000ff4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1114, match64: 0x00000000, model64: 0xff4b0000ff52},
		modelTuple{type64: 0x2700000027, matchRI: 0x1115, match64: 0x00000000, model64: 0xff520000ff59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1116, match64: 0x00000000, model64: 0xff590000ff60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1117, match64: 0x00000000, model64: 0xff600000ff67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1118, match64: 0x00000000, model64: 0xff670000ff70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1119, match64: 0x00000000, model64: 0xff700000ff75},
		modelTuple{type64: 0x2700000027, matchRI: 0x111a, match64: 0x00000000, model64: 0xff750000ff81},
		modelTuple{type64: 0x2700000027, matchRI: 0x111b, match64: 0x00000000, model64: 0xff810000ff8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x111c, match64: 0x00000000, model64: 0xff8c0000ff94},
		modelTuple{type64: 0x2700000027, matchRI: 0x111d, match64: 0x00000000, model64: 0xff940000ff9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x111e, match64: 0x00000000, model64: 0xff9e0000ffac},
		modelTuple{type64: 0x2700000027, matchRI: 0x111f, match64: 0x00000000, model64: 0xffac0000ffb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1120, match64: 0x00000000, model64: 0xffb40000ffbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1121, match64: 0x00000000, model64: 0xffbe0000ffc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1122, match64: 0x00000000, model64: 0xffc30000ffcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1123, match64: 0x00000000, model64: 0xffcd0000ffd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffd70000ffdc, model64: 0xffdc0000ffe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xffe60000ffeb, model64: 0xffeb0000fff6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xfff60000fffc, model64: 0xfffc00010006},
		modelTuple{type64: 0x2700000027, matchRI: 0x1124, match64: 0x00000000, model64: 0x1000600010010},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1001000010015, model64: 0x1001500010020},
		modelTuple{type64: 0x2700000027, matchRI: 0x1125, match64: 0x00000000, model64: 0x1002000010029},
		modelTuple{type64: 0x2700000027, matchRI: 0x1126, match64: 0x00000000, model64: 0x1002900010036},
		modelTuple{type64: 0x2700000027, matchRI: 0x1127, match64: 0x00000000, model64: 0x1003600010045},
		modelTuple{type64: 0x2700000027, matchRI: 0x1128, match64: 0x00000000, model64: 0x1004500010054},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1005400010059, model64: 0x100590001006b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1006b00010070, model64: 0x100700001007c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1007c00010083, model64: 0x1008300010089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x100890001008e, model64: 0x1008e00010097},
		modelTuple{type64: 0x2700000027, matchRI: 0x1129, match64: 0x00000000, model64: 0x100970001009e},
		modelTuple{type64: 0x2700000027, matchRI: 0x112a, match64: 0x00000000, model64: 0x1009e000100a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x112b, match64: 0x00000000, model64: 0x100a4000100ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x112c, match64: 0x00000000, model64: 0x100ae000100b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x112d, match64: 0x00000000, model64: 0x100b8000100cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x112e, match64: 0x00000000, model64: 0x100cc000100d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x112f, match64: 0x00000000, model64: 0x100d3000100dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1130, match64: 0x00000000, model64: 0x100dd000100e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1131, match64: 0x00000000, model64: 0x100e7000100f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1132, match64: 0x00000000, model64: 0x100f1000100fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1133, match64: 0x00000000, model64: 0x100fb00010104},
		modelTuple{type64: 0x2700000027, matchRI: 0x1134, match64: 0x00000000, model64: 0x101040001010e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1135, match64: 0x00000000, model64: 0x1010e00010118},
		modelTuple{type64: 0x2700000027, matchRI: 0x1136, match64: 0x00000000, model64: 0x1011800010122},
		modelTuple{type64: 0x2700000027, matchRI: 0x1137, match64: 0x00000000, model64: 0x1012200010127},
		modelTuple{type64: 0x2700000027, matchRI: 0x1138, match64: 0x00000000, model64: 0x101270001012e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1139, match64: 0x00000000, model64: 0x1012e00010135},
		modelTuple{type64: 0x2700000027, matchRI: 0x113a, match64: 0x00000000, model64: 0x1013500010142},
		modelTuple{type64: 0x2700000027, matchRI: 0x113b, match64: 0x00000000, model64: 0x101420001014b},
		modelTuple{type64: 0x2700000027, matchRI: 0x113c, match64: 0x00000000, model64: 0x1014b00010157},
		modelTuple{type64: 0x2700000027, matchRI: 0x113d, match64: 0x00000000, model64: 0x1015700010163},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x113e, match64: 0x00000000, model64: 0x101630001016f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x113f, match64: 0x00000000, model64: 0x1016f0001017a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1140, match64: 0x00000000, model64: 0x1017a00010184},
		modelTuple{type64: 0x2700000027, matchRI: 0x1141, match64: 0x00000000, model64: 0x1018400010189},
		modelTuple{type64: 0x2700000027, matchRI: 0x1142, match64: 0x00000000, model64: 0x1018900010194},
		modelTuple{type64: 0x2700000027, matchRI: 0x1143, match64: 0x00000000, model64: 0x101940001019e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1144, match64: 0x00000000, model64: 0x1019e000101a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1145, match64: 0x00000000, model64: 0x101a8000101b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1146, match64: 0x00000000, model64: 0x101b2000101bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1147, match64: 0x00000000, model64: 0x101bc000101c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1148, match64: 0x00000000, model64: 0x101c6000101d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1149, match64: 0x00000000, model64: 0x101d0000101dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x114a, match64: 0x00000000, model64: 0x101dc000101e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x114b, match64: 0x00000000, model64: 0x101e8000101ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x114c, match64: 0x00000000, model64: 0x101ee000101f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x114d, match64: 0x00000000, model64: 0x101f700010200},
		modelTuple{type64: 0x2700000027, matchRI: 0x114e, match64: 0x00000000, model64: 0x1020000010204},
		modelTuple{type64: 0x2700000027, matchRI: 0x114f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1150, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1151, match64: 0x00000000, model64: 0x1020400010212},
		modelTuple{type64: 0x2700000027, matchRI: 0x1152, match64: 0x00000000, model64: 0x1021200010221},
		modelTuple{type64: 0x2700000027, matchRI: 0x1153, match64: 0x00000000, model64: 0x102210001022f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1154, match64: 0x00000000, model64: 0x1022f0001023f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1155, match64: 0x00000000, model64: 0x1023f0001024c},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x1024c00010251, model64: 0x1025100010256},
		modelTuple{type64: 0x2700000027, matchRI: 0x1156, match64: 0x00000000, model64: 0x102560001025b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1157, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1158, match64: 0x00000000, model64: 0x70a0000070f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102650001026d, model64: 0x1026d00010275},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102750001027c, model64: 0x1027c00010283},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x102830001028c, model64: 0x102830001028c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1028c00010292, model64: 0x1029200010298},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10298000102a1, model64: 0x10298000102a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x115b, match64: 0x00000000, model64: 0x102a1000102ab},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x102ab000102b4, model64: 0x102b4000102bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x115d, match64: 0x00000000, model64: 0x102c2000102ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x115e, match64: 0x00000000, model64: 0x102ce000102d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1160, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1163, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1164, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1166, match64: 0x00000000, model64: 0x102e7000102fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1167, match64: 0x00000000, model64: 0x102fa000102fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1168, match64: 0x00000000, model64: 0x102fd00010300},
		modelTuple{type64: 0x2700000027, matchRI: 0x1169, match64: 0x00000000, model64: 0x1030000010303},
		modelTuple{type64: 0x2700000027, matchRI: 0x116a, match64: 0x00000000, model64: 0x1030300010306},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103060001030f, model64: 0x1030f00010316},
		modelTuple{type64: 0x2700000027, matchRI: 0x116b, match64: 0x00000000, model64: 0x1031600010319},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1031900010320, model64: 0x1032000010323},
		modelTuple{type64: 0x2700000027, matchRI: 0x116c, match64: 0x00000000, model64: 0x1032300010326},
		modelTuple{type64: 0x2700000027, matchRI: 0x116d, match64: 0x00000000, model64: 0x1032600010329},
		modelTuple{type64: 0x2700000027, matchRI: 0x116e, match64: 0x00000000, model64: 0x103290001032c},
		modelTuple{type64: 0x2700000027, matchRI: 0x116f, match64: 0x00000000, model64: 0x1032c0001032f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1170, match64: 0x00000000, model64: 0x1032f00010333},
		modelTuple{type64: 0x2700000027, matchRI: 0x1171, match64: 0x00000000, model64: 0x1033300010336},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1033600010340, model64: 0x1034000010349},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1034900010351, model64: 0x98d7000098de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103510001035b, model64: 0x1035b00010361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103610001036a, model64: 0x1036a00010378},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1037800010380, model64: 0x103800001038f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1172, match64: 0x00000000, model64: 0x1038f00010398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1173, match64: 0x00000000, model64: 0x10398000103a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103a1000103a8, model64: 0x103a8000103b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103b1000103b9, model64: 0x103b9000103c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1174, match64: 0x00000000, model64: 0x103c7000103c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1175, match64: 0x00000000, model64: 0x103c9000103d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1176, match64: 0x00000000, model64: 0x103d0000103d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1177, match64: 0x00000000, model64: 0x103d2000103da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103da000103e2, model64: 0x103e2000103e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1178, match64: 0x00000000, model64: 0x103e6000103e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1179, match64: 0x00000000, model64: 0x103e9000103f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x117a, match64: 0x00000000, model64: 0x103f0000103f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x103f900010400, model64: 0x1040000010409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1040900010410, model64: 0x1041000010413},
		modelTuple{type64: 0x2700000027, matchRI: 0x117b, match64: 0x00000000, model64: 0x1041300010415},
		modelTuple{type64: 0x2700000027, matchRI: 0x117c, match64: 0x00000000, model64: 0x1041500010418},
		modelTuple{type64: 0x2700000027, matchRI: 0x117d, match64: 0x00000000, model64: 0xf3b00000f3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x117e, match64: 0x00000000, model64: 0x1041800010421},
		modelTuple{type64: 0x2700000027, matchRI: 0x117f, match64: 0x00000000, model64: 0x1042100010424},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104240001042b, model64: 0x1042b00010432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1043200010439, model64: 0x1043900010441},
		modelTuple{type64: 0x2700000027, matchRI: 0x1180, match64: 0x00000000, model64: 0xcaf00000cb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1181, match64: 0x00000000, model64: 0x1044100010446},
		modelTuple{type64: 0x2700000027, matchRI: 0x1182, match64: 0x00000000, model64: 0x1044600010448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104480001044f, model64: 0x1044f00010455},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104550001045c, model64: 0x1045c00010462},
		modelTuple{type64: 0x2700000027, matchRI: 0x1183, match64: 0x00000000, model64: 0x1046200010468},
		modelTuple{type64: 0x2700000027, matchRI: 0x1184, match64: 0x00000000, model64: 0x1046800010470},
		modelTuple{type64: 0x2700000027, matchRI: 0x1185, match64: 0x00000000, model64: 0x104700001047a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1186, match64: 0x00000000, model64: 0xc11e0000c120},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1047a00010482, model64: 0x1048200010485},
		modelTuple{type64: 0x2700000027, matchRI: 0x1187, match64: 0x00000000, model64: 0x1048500010487},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104870001048e, model64: 0x1048e00010497},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104970001049e, model64: 0x1049e000104a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1188, match64: 0x00000000, model64: 0x1048e00010497},
		modelTuple{type64: 0x2700000027, matchRI: 0x1189, match64: 0x00000000, model64: 0x104a7000104b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x118a, match64: 0x00000000, model64: 0x104b6000104c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x118b, match64: 0x00000000, model64: 0x104c0000104cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x118c, match64: 0x00000000, model64: 0x104cd000104dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x118d, match64: 0x00000000, model64: 0x104dc000104df},
		modelTuple{type64: 0x2700000027, matchRI: 0x118e, match64: 0x00000000, model64: 0x104df000104e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x118f, match64: 0x00000000, model64: 0x104e2000104e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104e5000104ec, model64: 0x104ec000104ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104ef000104f5, model64: 0x104f5000104ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x104ff00010506, model64: 0x105060001050d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1190, match64: 0x00000000, model64: 0x1050d00010512},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1051200010519, model64: 0x105190001051f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1191, match64: 0x00000000, model64: 0x1051f00010527},
		modelTuple{type64: 0x2700000027, matchRI: 0x1192, match64: 0x00000000, model64: 0x105270001052e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1193, match64: 0x00000000, model64: 0x1052e00010535},
		modelTuple{type64: 0x2700000027, matchRI: 0x1194, match64: 0x00000000, model64: 0x105350001053b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1195, match64: 0x00000000, model64: 0x1053b00010540},
		modelTuple{type64: 0x2700000027, matchRI: 0x1196, match64: 0x00000000, model64: 0xe8080000e80c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1197, match64: 0x00000000, model64: 0x1054000010547},
		modelTuple{type64: 0x2700000027, matchRI: 0x1198, match64: 0x00000000, model64: 0x105470001054b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1199, match64: 0x00000000, model64: 0x1054b00010550},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1055000010559, model64: 0x883a0000883e},
		modelTuple{type64: 0x2700000027, matchRI: 0x119a, match64: 0x00000000, model64: 0x105590001055d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1055d00010566, model64: 0x1056600010578},
		modelTuple{type64: 0x2700000027, matchRI: 0x119b, match64: 0x00000000, model64: 0x105780001057d},
		modelTuple{type64: 0x2700000027, matchRI: 0x119c, match64: 0x00000000, model64: 0x1057d00010584},
		modelTuple{type64: 0x2700000027, matchRI: 0x119d, match64: 0x00000000, model64: 0x105840001058f},
		modelTuple{type64: 0x2700000027, matchRI: 0x119e, match64: 0x00000000, model64: 0x1058f0001059f},
		modelTuple{type64: 0x2700000027, matchRI: 0x119f, match64: 0x00000000, model64: 0x1059f000105a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105a8000105b0, model64: 0x105b0000105ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a0, match64: 0x00000000, model64: 0x105ba000105cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a1, match64: 0x00000000, model64: 0x105cc000105d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a2, match64: 0x00000000, model64: 0x105d9000105e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a3, match64: 0x00000000, model64: 0x105e6000105f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a4, match64: 0x00000000, model64: 0x105f300010605},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a5, match64: 0x00000000, model64: 0x1060500010610},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a6, match64: 0x00000000, model64: 0x106100001061d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a7, match64: 0x00000000, model64: 0x1061d00010627},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a8, match64: 0x00000000, model64: 0x1062700010634},
		modelTuple{type64: 0x2700000027, matchRI: 0x11a9, match64: 0x00000000, model64: 0x1063400010641},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1064100010648, model64: 0x1064800010652},
		modelTuple{type64: 0x2700000027, matchRI: 0x11aa, match64: 0x00000000, model64: 0x106520001065c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ab, match64: 0x00000000, model64: 0x1065c00010666},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106660001066e, model64: 0x1066e00010678},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ac, match64: 0x00000000, model64: 0x1067800010685},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ad, match64: 0x00000000, model64: 0x1068500010692},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106920001069a, model64: 0x1069a000106a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106a7000106ae, model64: 0x106ae000106bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x106bd000106c4, model64: 0x106c4000106ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ae, match64: 0x00000000, model64: 0x106ce000106db},
		modelTuple{type64: 0x2700000027, matchRI: 0x11af, match64: 0x00000000, model64: 0x106db000106ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b0, match64: 0x00000000, model64: 0x106ed000106f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b1, match64: 0x00000000, model64: 0x106f800010709},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b2, match64: 0x00000000, model64: 0x107090001071a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1071a0001071f, model64: 0x1071f00010733},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b3, match64: 0x00000000, model64: 0x1073300010736},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b4, match64: 0x00000000, model64: 0x1073600010743},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b5, match64: 0x00000000, model64: 0x107430001074d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1074d00010755, model64: 0x1075500010761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1076100010766, model64: 0x107660001076e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1076e00010775, model64: 0x107750001077d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b6, match64: 0x00000000, model64: 0x1077d00010785},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b7, match64: 0x00000000, model64: 0x1078500010792},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b8, match64: 0x00000000, model64: 0x1079200010794},
		modelTuple{type64: 0x2700000027, matchRI: 0x11b9, match64: 0x00000000, model64: 0x1079400010797},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ba, match64: 0x00000000, model64: 0x107970001079a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bb, match64: 0x00000000, model64: 0x1079a0001079c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bc, match64: 0x00000000, model64: 0x1079c0001079e},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bd, match64: 0x00000000, model64: 0x1079e000107a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11be, match64: 0x00000000, model64: 0x107a1000107a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11bf, match64: 0x00000000, model64: 0x107a4000107b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x107b0000107b8, model64: 0x107b8000107c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c0, match64: 0x00000000, model64: 0x107c1000107c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c1, match64: 0x00000000, model64: 0x107c6000107cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c2, match64: 0x00000000, model64: 0x107cd000107d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c3, match64: 0x00000000, model64: 0x107d4000107dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c4, match64: 0x00000000, model64: 0x107dd000107e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c5, match64: 0x00000000, model64: 0x107e9000107f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c6, match64: 0x00000000, model64: 0x107f0000107f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c7, match64: 0x00000000, model64: 0x107f7000107fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c8, match64: 0x00000000, model64: 0x107fe0001080a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11c9, match64: 0x00000000, model64: 0x1080a00010811},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ca, match64: 0x00000000, model64: 0x1081100010818},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cb, match64: 0x00000000, model64: 0x108180001081f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cc, match64: 0x00000000, model64: 0x1081f00010827},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1082700010830, model64: 0x1083000010838},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108380001083f, model64: 0x1083f00010846},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108460001084f, model64: 0x1084f00010858},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cd, match64: 0x00000000, model64: 0x1085800010860},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ce, match64: 0x00000000, model64: 0x108600001086b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11cf, match64: 0x00000000, model64: 0x1086b0001087b},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d0, match64: 0x00000000, model64: 0x1087b0001088a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d1, match64: 0x00000000, model64: 0x1088a00010891},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d2, match64: 0x00000000, model64: 0x1089100010899},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10899000108a0, model64: 0x108a0000108a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108a3000108ac, model64: 0x108ac000108af},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d3, match64: 0x00000000, model64: 0x108af000108b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108b2000108ba, model64: 0x108ba000108c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108c2000108ca, model64: 0x108ca000108cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d4, match64: 0x00000000, model64: 0x108cb000108cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d5, match64: 0x00000000, model64: 0x108cd000108d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d6, match64: 0x00000000, model64: 0x108d2000108d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d7, match64: 0x00000000, model64: 0x108d8000108e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d8, match64: 0x00000000, model64: 0x108e0000108e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108e7000108ef, model64: 0x108ef000108f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x11d9, match64: 0x00000000, model64: 0x108f5000108fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x11da, match64: 0x00000000, model64: 0x108fd00010906},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109060001090f, model64: 0x1090f00010918},
		modelTuple{type64: 0x2700000027, matchRI: 0x11db, match64: 0x00000000, model64: 0x109180001091a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dc, match64: 0x00000000, model64: 0x1091a0001091d},
		modelTuple{type64: 0x2700000027, matchRI: 0x11dd, match64: 0x00000000, model64: 0x1091d00010920},
		modelTuple{type64: 0x2700000027, matchRI: 0x11de, match64: 0x00000000, model64: 0x1092000010923},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109230001092b, model64: 0xbc340000bc37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1092b00010934, model64: 0x1093400010937},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1093700010940, model64: 0x1094000010947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1094700010951, model64: 0x1095100010954},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109540001095d, model64: 0x1095d00010960},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1096000010967, model64: 0x1096700010974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109740001097b, model64: 0x1097b00010982},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1098200010989, model64: 0x109890001098c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11df, match64: 0x00000000, model64: 0x1098c00010990},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e0, match64: 0x00000000, model64: 0x1099000010997},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109970001099e, model64: 0x109970001099e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1099e000109a6, model64: 0x883a0000883e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109a6000109af, model64: 0x109af000109b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109b3000109bb, model64: 0x109bb000109c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e1, match64: 0x00000000, model64: 0x109c4000109c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e2, match64: 0x00000000, model64: 0x109c6000109cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e3, match64: 0x00000000, model64: 0x109cc000109d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109d5000109dc, model64: 0x109dc000109df},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e4, match64: 0x00000000, model64: 0x109df000109e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109e3000109ea, model64: 0x109ea000109ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109ee000109f5, model64: 0x109f5000109f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x109f7000109fe, model64: 0x109fe00010a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e5, match64: 0x00000000, model64: 0x10a0200010a05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a0500010a0a, model64: 0x10a0a00010a0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a0f00010a14, model64: 0x10a1400010a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e6, match64: 0x00000000, model64: 0x809b0000809d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a1800010a21, model64: 0x10a2100010a23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a2300010a2b, model64: 0x10a2b00010a34},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e7, match64: 0x00000000, model64: 0x10a3400010a3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e8, match64: 0x00000000, model64: 0x10a3a00010a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x11e9, match64: 0x00000000, model64: 0x10a4200010a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ea, match64: 0x00000000, model64: 0x10a4a00010a53},
		modelTuple{type64: 0x2700000027, matchRI: 0x11eb, match64: 0x00000000, model64: 0x10a5300010a5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ec, match64: 0x00000000, model64: 0x10a5c00010a65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a6500010a6d, model64: 0x10a6d00010a77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a7700010a7f, model64: 0x10a7f00010a82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a8200010a8a, model64: 0x10a8a00010a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ed, match64: 0x00000000, model64: 0x10a9000010a93},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ee, match64: 0x00000000, model64: 0x10a9300010a9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10a9c00010aa6, model64: 0x10aa600010aa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ef, match64: 0x00000000, model64: 0x10aa900010aae},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f0, match64: 0x00000000, model64: 0x10aae00010ab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f1, match64: 0x00000000, model64: 0x10ab200010abb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f2, match64: 0x00000000, model64: 0x1073300010736},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f3, match64: 0x00000000, model64: 0x10abb00010abe},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f4, match64: 0x00000000, model64: 0x802000008027},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f5, match64: 0x00000000, model64: 0x10abe00010ac6},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f6, match64: 0x00000000, model64: 0x4a2c00004a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f7, match64: 0x00000000, model64: 0x10ac600010acf},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f8, match64: 0x00000000, model64: 0x10acf00010adb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10adb00010ae2, model64: 0x10ae200010aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x11f9, match64: 0x00000000, model64: 0x10aeb00010af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fa, match64: 0x00000000, model64: 0x10af700010b03},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fb, match64: 0x00000000, model64: 0x10b0300010b06},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fc, match64: 0x00000000, model64: 0x10b0600010b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fd, match64: 0x00000000, model64: 0x10b1400010b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x11fe, match64: 0x00000000, model64: 0x10b2200010b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x11ff, match64: 0x00000000, model64: 0x10b2400010b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1200, match64: 0x00000000, model64: 0x10b2d00010b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1201, match64: 0x00000000, model64: 0x10b2f00010b31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b3100010b38, model64: 0x10aae00010ab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1202, match64: 0x00000000, model64: 0x10b3800010b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1203, match64: 0x00000000, model64: 0x10b3b00010b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1204, match64: 0x00000000, model64: 0x104dc000104df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1205, match64: 0x00000000, model64: 0x10b4500010b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1206, match64: 0x00000000, model64: 0x10b4d00010b50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1207, match64: 0x00000000, model64: 0x108af000108b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1208, match64: 0x00000000, model64: 0x10b5000010b53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1209, match64: 0x00000000, model64: 0x10b5300010b56},
		modelTuple{type64: 0x2700000027, matchRI: 0x120a, match64: 0x00000000, model64: 0x10b5600010b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x120b, match64: 0x00000000, model64: 0x10b5900010b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x120c, match64: 0x00000000, model64: 0x10b5d00010b60},
		modelTuple{type64: 0x2700000027, matchRI: 0x120d, match64: 0x00000000, model64: 0x10b6000010b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x120e, match64: 0x00000000, model64: 0x10b6300010b6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x120f, match64: 0x00000000, model64: 0x10b6b00010b6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1210, match64: 0x00000000, model64: 0x10b6e00010b71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1211, match64: 0x00000000, model64: 0x10b7100010b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1212, match64: 0x00000000, model64: 0x10b7400010b76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10b7600010b7d, model64: 0x1095100010954},
		modelTuple{type64: 0x2700000027, matchRI: 0x1213, match64: 0x00000000, model64: 0x10b7d00010b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1214, match64: 0x00000000, model64: 0x10b7f00010b86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1215, match64: 0x00000000, model64: 0x10b8600010b8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1216, match64: 0x00000000, model64: 0x10b8f00010b96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1217, match64: 0x00000000, model64: 0x10b9600010b9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1218, match64: 0x00000000, model64: 0x98de000098e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1219, match64: 0x00000000, model64: 0x10b9f00010ba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x121a, match64: 0x00000000, model64: 0x10ba800010bb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x121b, match64: 0x00000000, model64: 0x10bb200010bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x121c, match64: 0x00000000, model64: 0x10bbf00010bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x121d, match64: 0x00000000, model64: 0x10bc800010bd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x121e, match64: 0x00000000, model64: 0x10bd500010bd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x121f, match64: 0x00000000, model64: 0x10bd900010be4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1220, match64: 0x00000000, model64: 0x10be400010bea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1221, match64: 0x00000000, model64: 0x10bea00010bf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10bf500010bfd, model64: 0x10bfd00010c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1222, match64: 0x00000000, model64: 0x10c0400010c0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1223, match64: 0x00000000, model64: 0x10c0b00010c10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c1000010c15, model64: 0x10c1500010c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1224, match64: 0x00000000, model64: 0x10c1c00010c23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c2300010c2a, model64: 0x10c2a00010c33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c3300010c38, model64: 0x10c3800010c3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c3e00010c46, model64: 0x10c4600010c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c4d00010c54, model64: 0x10c5400010c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c5d00010c65, model64: 0x10c6500010c6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1225, match64: 0x00000000, model64: 0x10c6b00010c72},
		modelTuple{type64: 0x2700000027, matchRI: 0x1226, match64: 0x00000000, model64: 0x10c7200010c76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c7600010c7e, model64: 0x10c7e00010c87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10c8700010c8f, model64: 0x10c8f00010c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1227, match64: 0x00000000, model64: 0x10c9e00010ca6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ca600010cad, model64: 0x10cad00010cb7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1228, match64: 0x00000000, model64: 0x10cb700010cba},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1229, match64: 0x00000000, model64: 0x10cba00010cbe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10cbe00010cc4, model64: 0x10cc400010ccd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122a, match64: 0x00000000, model64: 0x10ccd00010cde},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122b, match64: 0x00000000, model64: 0x10cde00010cec},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10cec00010cf3, model64: 0x10cf300010d00},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122c, match64: 0x00000000, model64: 0x10d0000010d0c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d0c00010d13, model64: 0x10d0000010d0c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122d, match64: 0x00000000, model64: 0x10d1300010d1f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d1f00010d27, model64: 0x10d2700010d34},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122e, match64: 0x00000000, model64: 0x10d3400010d3d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x122f, match64: 0x00000000, model64: 0x10d3d00010d4b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1230, match64: 0x00000000, model64: 0x10d4b00010d54},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d5400010d5b, model64: 0x10d5b00010d65},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d6500010d6c, model64: 0x10d6c00010d79},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d7900010d80, model64: 0x10d8000010d8d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10d8d00010d94, model64: 0x10d9400010da5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1231, match64: 0x00000000, model64: 0x10da500010db2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1232, match64: 0x00000000, model64: 0x10db200010dc4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1233, match64: 0x00000000, model64: 0x10dc400010ddb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10ddb00010de3, model64: 0x10de300010df8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10df800010dfd, model64: 0x10dfd00010e0a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e0a00010e0f, model64: 0x10e0f00010e1a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1234, match64: 0x00000000, model64: 0x10e1a00010e26},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e2600010e2d, model64: 0x10e2d00010e3a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e3a00010e41, model64: 0x10e4100010e53},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1235, match64: 0x00000000, model64: 0x10e5300010e61},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e6100010e66, model64: 0x10e6600010e70},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x10e7000010e75, model64: 0x10e7500010e7f},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x10e7f00010e88, model64: 0x10e7f00010e88},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x10e8800010e93, model64: 0x10e9300010e9c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x10e9c00010ea7, model64: 0x10e9c00010ea7},
		modelTuple{type64: 0x24300000245, matchRI: 0x1236, match64: 0x00000000, model64: 0x10ea700010eaf},
		modelTuple{type64: 0x24300000245, matchRI: 0x1237, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1238, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1239, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x123a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x10eaf00010eba, model64: 0x10eaf00010eba},
		modelTuple{type64: 0x24300000245, matchRI: 0x123b, match64: 0x00000000, model64: 0x10ea700010eaf},
		modelTuple{type64: 0x24300000245, matchRI: 0x123c, match64: 0x00000000, model64: 0x10eba00010ec1},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x10ec100010ed0, model64: 0x10ed000010edc},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x123d, match64: 0x00000000, model64: 0x10edc00010ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x123e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x123f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1240, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1241, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1242, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1243, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1244, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1245, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1246, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1247, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1248, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1249, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f0400010f11, model64: 0x10f1100010f18},
		modelTuple{type64: 0x2700000027, matchRI: 0x124e, match64: 0x00000000, model64: 0x5d3200005d39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f2100010f2b, model64: 0x10f2b00010f32},
		modelTuple{type64: 0x2700000027, matchRI: 0x124f, match64: 0x00000000, model64: 0xd1ef0000d1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1250, match64: 0x00000000, model64: 0xd14c0000d14f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1251, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1252, match64: 0x00000000, model64: 0x10f3200010f35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1253, match64: 0x00000000, model64: 0xc6cb0000c6d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1254, match64: 0x00000000, model64: 0xd1610000d164},
		modelTuple{type64: 0x2700000027, matchRI: 0x1255, match64: 0x00000000, model64: 0xd1730000d176},
		modelTuple{type64: 0x2700000027, matchRI: 0x1256, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1257, match64: 0x00000000, model64: 0x10f3500010f3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1258, match64: 0x00000000, model64: 0x10f3d00010f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1259, match64: 0x00000000, model64: 0x10f4000010f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x125a, match64: 0x00000000, model64: 0x10f4200010f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x125b, match64: 0x00000000, model64: 0x43600000439},
		modelTuple{type64: 0x2700000027, matchRI: 0x125c, match64: 0x00000000, model64: 0x10f4600010f49},
		modelTuple{type64: 0x2700000027, matchRI: 0x125d, match64: 0x00000000, model64: 0x10f4900010f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x125e, match64: 0x00000000, model64: 0x10f4c00010f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x125f, match64: 0x00000000, model64: 0x10f5500010f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1260, match64: 0x00000000, model64: 0xfa760000fa79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1261, match64: 0x00000000, model64: 0x10f5800010f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1262, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f6800010f6f, model64: 0x10f6f00010f76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f7600010f7d, model64: 0x10f7d00010f84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f8400010f8b, model64: 0x10f8b00010f92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10f9200010f99, model64: 0x10f9900010fa1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fa100010fa8, model64: 0x10fa800010fb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fb500010fbc, model64: 0x10fbc00010fc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fc300010fca, model64: 0x10fca00010fd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fd100010fd8, model64: 0x10fd800010fdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10fdf00010fe6, model64: 0x10fe600010fed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1266, match64: 0x00000000, model64: 0x10fed00010ff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x10ff400010ffb, model64: 0x10ffb00011003},
		modelTuple{type64: 0x2700000027, matchRI: 0x1267, match64: 0x00000000, model64: 0x110030001100a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1100a00011011, model64: 0x1101100011018},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110180001101f, model64: 0x1101f00011026},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110260001102d, model64: 0x1102d00011034},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110340001103b, model64: 0x1103b00011042},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1104200011049, model64: 0x110490001104f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1104f00011056, model64: 0x110560001105c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1105c00011063, model64: 0x1106300011069},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1106900011070, model64: 0x1107000011076},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110760001107d, model64: 0x1107d00011084},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110840001108b, model64: 0x1108b00011091},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1109100011098, model64: 0x110980001109f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1109f000110a6, model64: 0x110a6000110ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110ae000110b5, model64: 0x110b5000110bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110bd000110c4, model64: 0x110c4000110cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110cb000110d2, model64: 0x110d2000110da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110da000110e1, model64: 0x110e1000110ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110ea000110f1, model64: 0x110f1000110f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x110f7000110fe, model64: 0x110fe00011105},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111050001110c, model64: 0x1110c00011113},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111130001111a, model64: 0x1111a00011120},
		modelTuple{type64: 0x2700000027, matchRI: 0x1268, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1112c00011133},
		modelTuple{type64: 0x2700000027, matchRI: 0x126b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x126c, match64: 0x00000000, model64: 0x1113d00011146},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111460001114c, model64: 0x1114c00011152},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1115200011158, model64: 0x1115800011168},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x126d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1116e00011176, model64: 0x1117600011178},
		modelTuple{type64: 0x2700000027, matchRI: 0x126f, match64: 0x00000000, model64: 0x1117800011180},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1118a0001119a, model64: 0x1119a000111ab},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x111ab000111b7, model64: 0x111b7000111c3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1272, match64: 0x00000000, model64: 0x111c3000111cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x111cf000111d4, model64: 0x111d4000111df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1273, match64: 0x00000000, model64: 0x111df000111e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1274, match64: 0x00000000, model64: 0x111df000111e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1275, match64: 0x00000000, model64: 0x111e7000111f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1276, match64: 0x00000000, model64: 0x111f5000111fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1277, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x1278, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x127a, match64: 0x00000000, model64: 0x112020001120f},
		modelTuple{type64: 0x2700000027, matchRI: 0x127b, match64: 0x00000000, model64: 0x1120f00011226},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1122600011237, model64: 0x1123700011247},
		modelTuple{type64: 0x2700000027, matchRI: 0x127c, match64: 0x00000000, model64: 0x1124700011253},
		modelTuple{type64: 0x2700000027, matchRI: 0x127d, match64: 0x00000000, model64: 0x1125300011260},
		modelTuple{type64: 0x2700000027, matchRI: 0x127e, match64: 0x00000000, model64: 0x112600001126b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1126b00011276, model64: 0x1126b00011276},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1127600011284, model64: 0x1128400011293},
		modelTuple{type64: 0x2700000027, matchRI: 0x127f, match64: 0x00000000, model64: 0x112930001129f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1280, match64: 0x00000000, model64: 0x1129f000112aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x112aa000112b3, model64: 0x112b3000112bc},
		modelTuple{type64: 0x24700000251, matchRI: 0x1281, match64: 0x00000000, model64: 0x112bc000112c7},
		modelTuple{type64: 0x24700000251, matchRI: 0x1282, match64: 0x00000000, model64: 0x112c7000112d3},
		modelTuple{type64: 0x24700000251, matchRI: 0x1283, match64: 0x00000000, model64: 0x112d3000112dc},
		modelTuple{type64: 0x24700000251, matchRI: 0x1284, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x112dc000112e8, model64: 0x112e8000112f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1286, match64: 0x00000000, model64: 0x112f900011308},
		modelTuple{type64: 0x2700000027, matchRI: 0x1288, match64: 0x00000000, model64: 0x1130c00011313},
		modelTuple{type64: 0x2700000027, matchRI: 0x1289, match64: 0x00000000, model64: 0x113130001131f},
		modelTuple{type64: 0x2700000027, matchRI: 0x128a, match64: 0x00000000, model64: 0x1131f00011328},
		modelTuple{type64: 0x2700000027, matchRI: 0x128b, match64: 0x00000000, model64: 0x113280001132d},
		modelTuple{type64: 0x2700000027, matchRI: 0x128c, match64: 0x00000000, model64: 0x1132d00011336},
		modelTuple{type64: 0x2700000027, matchRI: 0x128d, match64: 0x00000000, model64: 0x113360001133e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1133e00011344, model64: 0x113440001134f},
		modelTuple{type64: 0x2700000027, matchRI: 0x128e, match64: 0x00000000, model64: 0x1134f00011357},
		modelTuple{type64: 0x2700000027, matchRI: 0x128f, match64: 0x00000000, model64: 0x1135700011360},
		modelTuple{type64: 0x2700000027, matchRI: 0x1290, match64: 0x00000000, model64: 0x1136000011369},
		modelTuple{type64: 0x2700000027, matchRI: 0x1291, match64: 0x00000000, model64: 0x1136900011372},
		modelTuple{type64: 0x2700000027, matchRI: 0x1292, match64: 0x00000000, model64: 0x1137200011379},
		modelTuple{type64: 0x2700000027, matchRI: 0x1293, match64: 0x00000000, model64: 0x1137900011382},
		modelTuple{type64: 0x2700000027, matchRI: 0x1294, match64: 0x00000000, model64: 0x1138200011389},
		modelTuple{type64: 0x2700000027, matchRI: 0x1295, match64: 0x00000000, model64: 0x1138900011390},
		modelTuple{type64: 0x2700000027, matchRI: 0x1296, match64: 0x00000000, model64: 0x1139000011398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1297, match64: 0x00000000, model64: 0x11398000113a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1298, match64: 0x00000000, model64: 0x113a4000113ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1299, match64: 0x00000000, model64: 0x113ac000113b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x129a, match64: 0x00000000, model64: 0x113b3000113c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x129b, match64: 0x00000000, model64: 0x113c0000113c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x129c, match64: 0x00000000, model64: 0x113c9000113d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x129d, match64: 0x00000000, model64: 0x113d2000113e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x129e, match64: 0x00000000, model64: 0x113e0000113e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x129f, match64: 0x00000000, model64: 0x4cb000004cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a0, match64: 0x00000000, model64: 0x7eb200007eb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113e8000113f2, model64: 0x113f2000113f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x113f4000113fa, model64: 0x113fa000113fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a1, match64: 0x00000000, model64: 0x113fd00011400},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a2, match64: 0x00000000, model64: 0x1140000011407},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a3, match64: 0x00000000, model64: 0x1140700011409},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a4, match64: 0x00000000, model64: 0x114090001140b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1140b00011414, model64: 0x1141400011417},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a5, match64: 0x00000000, model64: 0x108cb000108cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a6, match64: 0x00000000, model64: 0x114090001140b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a7, match64: 0x00000000, model64: 0x114170001141d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a8, match64: 0x00000000, model64: 0x113f2000113f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x12a9, match64: 0x00000000, model64: 0x1140700011409},
		modelTuple{type64: 0x2700000027, matchRI: 0x12aa, match64: 0x00000000, model64: 0x1141d00011421},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ab, match64: 0x00000000, model64: 0x1142100011423},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ac, match64: 0x00000000, model64: 0x1142300011425},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ad, match64: 0x00000000, model64: 0x114250001142d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1142d00011435, model64: 0x114350001143e},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ae, match64: 0x00000000, model64: 0x1143e00011441},
		modelTuple{type64: 0x2700000027, matchRI: 0x12af, match64: 0x00000000, model64: 0x1144100011444},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b0, match64: 0x00000000, model64: 0x1144400011447},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b1, match64: 0x00000000, model64: 0x114470001144a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b2, match64: 0x00000000, model64: 0x1144a0001144d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b3, match64: 0x00000000, model64: 0x1144d00011454},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b4, match64: 0x00000000, model64: 0x114540001145b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b5, match64: 0x00000000, model64: 0x1145b00011462},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b6, match64: 0x00000000, model64: 0x1146200011469},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b7, match64: 0x00000000, model64: 0x1146900011470},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b8, match64: 0x00000000, model64: 0x1147000011478},
		modelTuple{type64: 0x2700000027, matchRI: 0x12b9, match64: 0x00000000, model64: 0x114780001147f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ba, match64: 0x00000000, model64: 0x1147f0001148b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bb, match64: 0x00000000, model64: 0x1148b00011496},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bc, match64: 0x00000000, model64: 0x1149600011499},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bd, match64: 0x00000000, model64: 0x114990001149b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12be, match64: 0x00000000, model64: 0x1149b0001149e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1149e000114a5, model64: 0x114a5000114ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114ad000114b4, model64: 0x114b4000114bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114bb000114c1, model64: 0x114c1000114c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114c3000114c9, model64: 0x114c9000114d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114d0000114d6, model64: 0x6d3900006d40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114d6000114dc, model64: 0x114dc000114e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114e2000114e8, model64: 0x114e8000114f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x114f2000114f8, model64: 0x114f800011502},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1150200011508, model64: 0x1150800011510},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1151000011516, model64: 0x115160001151f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1151f00011525, model64: 0x115250001152d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12bf, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c1, match64: 0x00000000, model64: 0x1152d00011537},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1153700011543, model64: 0x1154300011554},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x115540001155f, model64: 0x1155f0001156b},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x1156b00011575, model64: 0x115750001157f},
		modelTuple{type64: 0x38400000391, matchRI: 0x12c2, match64: 0x00000000, model64: 0x1157f0001158f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12c3, match64: 0x00000000, model64: 0x1158f00011597},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12c4, match64: 0x00000000, model64: 0x115970001159e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12c5, match64: 0x00000000, model64: 0x1159e000115a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12c6, match64: 0x00000000, model64: 0x115a2000115a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c7, match64: 0x00000000, model64: 0x115a5000115b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c8, match64: 0x00000000, model64: 0x115b1000115b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x12ca, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x115be000115c4, model64: 0x115c4000115cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cc, match64: 0x00000000, model64: 0x115cf000115d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12cd, match64: 0x00000000, model64: 0x115d7000115e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d1, match64: 0x00000000, model64: 0x115eb000115f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d2, match64: 0x00000000, model64: 0x115f3000115fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d3, match64: 0x00000000, model64: 0x115fc00011601},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d4, match64: 0x00000000, model64: 0x1160100011609},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1160900011613, model64: 0x116130001161a},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d6, match64: 0x00000000, model64: 0x1161a00011622},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d7, match64: 0x00000000, model64: 0x116220001162d},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d8, match64: 0x00000000, model64: 0x1162d00011634},
		modelTuple{type64: 0x2700000027, matchRI: 0x12d9, match64: 0x00000000, model64: 0x1163400011638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1163800011644, model64: 0x6fb300006fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12da, match64: 0x00000000, model64: 0x116440001164c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12db, match64: 0x00000000, model64: 0x1164c00011652},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dc, match64: 0x00000000, model64: 0x1164c00011652},
		modelTuple{type64: 0x2700000027, matchRI: 0x12dd, match64: 0x00000000, model64: 0x1165200011657},
		modelTuple{type64: 0x2700000027, matchRI: 0x12de, match64: 0x00000000, model64: 0x116570001165f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12df, match64: 0x00000000, model64: 0x116570001165f},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1166b00011675, model64: 0x116750001167f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1167f00011688, model64: 0x1168800011691},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1169100011699, model64: 0x116990001169e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1169e000116a7, model64: 0x116a7000116ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ad000116b5, model64: 0x116b5000116ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116ba000116c1, model64: 0x116c1000116c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116c4000116d2, model64: 0x116d2000116dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x116dd000116eb, model64: 0x116eb000116f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e2, match64: 0x00000000, model64: 0x116f900011706},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1170600011711, model64: 0x79330000793b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117110001171f, model64: 0x1171f0001172a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1172a00011735, model64: 0x117350001173d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1173d00011743, model64: 0x1174300011746},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e5, match64: 0x00000000, model64: 0x1174c00011753},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117530001175a, model64: 0x1175a00011761},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e7, match64: 0x00000000, model64: 0x1176100011768},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1176800011774, model64: 0x1177400011780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x117800001178a, model64: 0x1178a00011794},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e8, match64: 0x00000000, model64: 0x117940001179c},
		modelTuple{type64: 0x2700000027, matchRI: 0x12e9, match64: 0x00000000, model64: 0x4cfe00004d06},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ea, match64: 0x00000000, model64: 0x1179c000117a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12eb, match64: 0x00000000, model64: 0x117a7000117af},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ec, match64: 0x00000000, model64: 0x117af000117b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ed, match64: 0x00000000, model64: 0x117b8000117bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ee, match64: 0x00000000, model64: 0x117bf000117c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x12ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x117c7000117d2, model64: 0x117d2000117de},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x117de000117ee, model64: 0x117ee000117f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x12f1, match64: 0x00000000, model64: 0x117f6000117ff},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1180600011810},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f4, match64: 0x00000000, model64: 0x1181700011821},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f5, match64: 0x00000000, model64: 0x1182100011833},
		modelTuple{type64: 0x2700000027, matchRI: 0x12f7, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x70a0000070f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x118480001184e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xb6060000b61b, matchRI: -0x0001, match64: 0x1185f00011870, model64: 0x118700001187b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1187b00011881, model64: 0x1187b00011881},
		modelTuple{type64: 0x2700000027, matchRI: 0x12fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1300, match64: 0x00000000, model64: 0x118870001188b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1301, match64: 0x00000000, model64: 0x1188b00011898},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11898000118a1, model64: 0x118a1000118ae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1302, match64: 0x00000000, model64: 0x118ae000118bb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1303, match64: 0x00000000, model64: 0x118bb000118c8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1304, match64: 0x00000000, model64: 0x118c8000118d6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x118d6000118de, model64: 0x118de000118e3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x118e3000118e9, model64: 0x118e9000118f7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1305, match64: 0x00000000, model64: 0x118f700011903},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1306, match64: 0x00000000, model64: 0x119030001190a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1307, match64: 0x00000000, model64: 0x1190a00011914},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1308, match64: 0x00000000, model64: 0x119140001191f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1191f00011927, model64: 0x1192700011933},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x119330001193b, model64: 0x1193b00011941},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1309, match64: 0x00000000, model64: 0x1194100011951},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1195100011959, model64: 0x1195900011964},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x119640001196c, model64: 0x1196c00011978},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1197800011980, model64: 0x1198000011990},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130a, match64: 0x00000000, model64: 0x119900001199b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1199b000119a3, model64: 0x119a3000119ad},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x119ad000119ba, model64: 0x119ba000119c6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130b, match64: 0x00000000, model64: 0x119c6000119cf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130c, match64: 0x00000000, model64: 0x119cf000119d8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130d, match64: 0x00000000, model64: 0x119d8000119de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130e, match64: 0x00000000, model64: 0x119de000119e9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x130f, match64: 0x00000000, model64: 0x119e9000119f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1310, match64: 0x00000000, model64: 0x119f0000119f6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x119f6000119fe, model64: 0x119fe00011a09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1311, match64: 0x00000000, model64: 0x11a0900011a15},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1312, match64: 0x00000000, model64: 0x11a1500011a1f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1313, match64: 0x00000000, model64: 0x11a1f00011a2a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1314, match64: 0x00000000, model64: 0x11a2a00011a32},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1315, match64: 0x00000000, model64: 0x11a3200011a39},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1316, match64: 0x00000000, model64: 0x11a3900011a40},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1317, match64: 0x00000000, model64: 0x11a4000011a46},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1318, match64: 0x00000000, model64: 0x11a4600011a4d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1319, match64: 0x00000000, model64: 0x11a4d00011a54},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131a, match64: 0x00000000, model64: 0x11a5400011a5f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11a5f00011a66, model64: 0x11a6600011a6d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11a6d00011a74, model64: 0x11a7400011a7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131b, match64: 0x00000000, model64: 0x11a7c00011a83},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131c, match64: 0x00000000, model64: 0x11a8300011a96},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131d, match64: 0x00000000, model64: 0x11a9600011aa5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131e, match64: 0x00000000, model64: 0x11aa500011ab1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x131f, match64: 0x00000000, model64: 0x11ab100011abc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1320, match64: 0x00000000, model64: 0x11abc00011acf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1321, match64: 0x00000000, model64: 0x11acf00011ade},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1322, match64: 0x00000000, model64: 0x11ade00011aec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1323, match64: 0x00000000, model64: 0x11aec00011af2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1324, match64: 0x00000000, model64: 0x11af200011af8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11af800011aff, model64: 0x11aff00011b0e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1325, match64: 0x00000000, model64: 0x11b0e00011b13},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11b1300011b1a, model64: 0x11b1a00011b20},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11b2000011b26, model64: 0x11b2600011b2b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1326, match64: 0x00000000, model64: 0x11b2b00011b3b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1327, match64: 0x00000000, model64: 0x11b3b00011b4a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11b4a00011b51, model64: 0x11b5100011b5c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11b5c00011b63, model64: 0x11b6300011b6d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1328, match64: 0x00000000, model64: 0x11b6d00011b77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1329, match64: 0x00000000, model64: 0x11b7700011b8b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132a, match64: 0x00000000, model64: 0x11b8b00011b9a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132b, match64: 0x00000000, model64: 0x11a3200011a39},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132c, match64: 0x00000000, model64: 0x11b9a00011ba0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132d, match64: 0x00000000, model64: 0x11ba000011bae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132e, match64: 0x00000000, model64: 0x11bae00011bbc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x132f, match64: 0x00000000, model64: 0x11bbc00011bcd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1330, match64: 0x00000000, model64: 0x11bcd00011be4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1331, match64: 0x00000000, model64: 0x11be400011bf7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1332, match64: 0x00000000, model64: 0x11bf700011c09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1333, match64: 0x00000000, model64: 0x11c0900011c16},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1334, match64: 0x00000000, model64: 0x11c1600011c20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1335, match64: 0x00000000, model64: 0x11c2000011c2c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11c2c00011c34, model64: 0x11c3400011c41},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1336, match64: 0x00000000, model64: 0x11c4100011c50},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1337, match64: 0x00000000, model64: 0x11c5000011c5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1338, match64: 0x00000000, model64: 0x11c5e00011c67},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11c6700011c6f, model64: 0x11c6f00011c8b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11c8b00011c92, model64: 0x11c9200011cac},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11cac00011cb3, model64: 0x11cb300011cc9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11cc900011cd2, model64: 0x11cd200011ce4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1339, match64: 0x00000000, model64: 0x11ce400011cf9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133a, match64: 0x00000000, model64: 0x11cf900011d06},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133b, match64: 0x00000000, model64: 0x11d0600011d10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133c, match64: 0x00000000, model64: 0x11d1000011d22},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133d, match64: 0x00000000, model64: 0x11d2200011d33},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133e, match64: 0x00000000, model64: 0x11d3300011d3e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x133f, match64: 0x00000000, model64: 0x11d3e00011d46},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11d4600011d4e, model64: 0x11d4e00011d55},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1340, match64: 0x00000000, model64: 0x11d5500011d62},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11d6200011d6a, model64: 0x11d6a00011d75},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11d7500011d7d, model64: 0x119e9000119f0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1341, match64: 0x00000000, model64: 0x11d7d00011d80},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1342, match64: 0x00000000, model64: 0x11d8000011d83},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1343, match64: 0x00000000, model64: 0x11d8300011d8c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1344, match64: 0x00000000, model64: 0x11d0600011d10},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11d8c00011d94, model64: 0x11d9400011d9c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x11d9c00011da4, model64: 0x11c5000011c5e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1345, match64: 0x00000000, model64: 0x11da400011db1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1346, match64: 0x00000000, model64: 0x11db100011dbd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1347, match64: 0x00000000, model64: 0x11dbd00011dc3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1348, match64: 0x00000000, model64: 0x11dc300011dd1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1349, match64: 0x00000000, model64: 0x11dd100011ddf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x134a, match64: 0x00000000, model64: 0x11ddf00011df4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x134b, match64: 0x00000000, model64: 0x11df400011dfe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x134c, match64: 0x00000000, model64: 0x11dfe00011e09},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x134d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e0900011e0f, model64: 0x11e0f00011e19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e1900011e1f, model64: 0x11e1f00011e29},
		modelTuple{type64: 0x2700000027, matchRI: 0x134e, match64: 0x00000000, model64: 0x6e5c00006e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x134f, match64: 0x00000000, model64: 0x10b2200010b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1350, match64: 0x00000000, model64: 0x185b0000185d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1351, match64: 0x00000000, model64: 0x11e2900011e2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1352, match64: 0x00000000, model64: 0x187200001874},
		modelTuple{type64: 0x2700000027, matchRI: 0x1353, match64: 0x00000000, model64: 0x11e2c00011e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1354, match64: 0x00000000, model64: 0x1140700011409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x42b00000432, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e2e00011e33, model64: 0x11e3300011e3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1355, match64: 0x00000000, model64: 0x11e3b00011e41},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11e4100011e46, model64: 0x11e4600011e50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1356, match64: 0x00000000, model64: 0x11e5000011e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1357, match64: 0x00000000, model64: 0x6bef00006bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1358, match64: 0x00000000, model64: 0x11e5600011e5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1359, match64: 0x00000000, model64: 0x11e5d00011e65},
		modelTuple{type64: 0x2700000027, matchRI: 0x135a, match64: 0x00000000, model64: 0x11e6500011e6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x135b, match64: 0x00000000, model64: 0x109f5000109f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x135c, match64: 0x00000000, model64: 0x11e6c00011e73},
		modelTuple{type64: 0x2700000027, matchRI: 0x135d, match64: 0x00000000, model64: 0x11e7300011e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x135e, match64: 0x00000000, model64: 0x11e7900011e81},
		modelTuple{type64: 0x2700000027, matchRI: 0x135f, match64: 0x00000000, model64: 0x11e8100011e88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1360, match64: 0x00000000, model64: 0x11e8800011e8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1361, match64: 0x00000000, model64: 0x108af000108b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1362, match64: 0x00000000, model64: 0x11e8f00011e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1363, match64: 0x00000000, model64: 0x11e9800011ea4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1364, match64: 0x00000000, model64: 0x11ea400011eab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1365, match64: 0x00000000, model64: 0x11eab00011eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1366, match64: 0x00000000, model64: 0x11eb200011eb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1367, match64: 0x00000000, model64: 0x11eb800011ebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1368, match64: 0x00000000, model64: 0x11ebf00011ec6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1369, match64: 0x00000000, model64: 0x11ec600011ed2},
		modelTuple{type64: 0x2700000027, matchRI: 0x136a, match64: 0x00000000, model64: 0x11ed200011ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x136b, match64: 0x00000000, model64: 0x11ed900011ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x136c, match64: 0x00000000, model64: 0x11ee600011eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x136d, match64: 0x00000000, model64: 0x11eef00011ef9},
		modelTuple{type64: 0x2700000027, matchRI: 0x136e, match64: 0x00000000, model64: 0x11ef900011f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x136f, match64: 0x00000000, model64: 0xa7220000a724},
		modelTuple{type64: 0x2700000027, matchRI: 0x1370, match64: 0x00000000, model64: 0x11f0500011f07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1371, match64: 0x00000000, model64: 0x1091d00010920},
		modelTuple{type64: 0x2700000027, matchRI: 0x1372, match64: 0x00000000, model64: 0xb31b0000b31d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1373, match64: 0x00000000, model64: 0x11f0700011f0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1374, match64: 0x00000000, model64: 0x11f0a00011f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1375, match64: 0x00000000, model64: 0x11f1100011f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1376, match64: 0x00000000, model64: 0x11f1900011f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1377, match64: 0x00000000, model64: 0x11f2100011f2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1378, match64: 0x00000000, model64: 0x11f2e00011f35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1379, match64: 0x00000000, model64: 0x11f3500011f3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x137a, match64: 0x00000000, model64: 0x11f3b00011f41},
		modelTuple{type64: 0x2700000027, matchRI: 0x137b, match64: 0x00000000, model64: 0x11f4100011f4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x137c, match64: 0x00000000, model64: 0x11f4a00011f51},
		modelTuple{type64: 0x2700000027, matchRI: 0x137d, match64: 0x00000000, model64: 0x11f5100011f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x137e, match64: 0x00000000, model64: 0x11f5d00011f60},
		modelTuple{type64: 0x2700000027, matchRI: 0x137f, match64: 0x00000000, model64: 0x11f6000011f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1380, match64: 0x00000000, model64: 0x11f6200011f68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1381, match64: 0x00000000, model64: 0x11f6800011f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1382, match64: 0x00000000, model64: 0x11f7100011f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1383, match64: 0x00000000, model64: 0x11f7700011f80},
		modelTuple{type64: 0x2700000027, matchRI: 0x1384, match64: 0x00000000, model64: 0x11f8000011f88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1385, match64: 0x00000000, model64: 0xa6a30000a6a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1386, match64: 0x00000000, model64: 0x11f8800011f91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1387, match64: 0x00000000, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: 0x1388, match64: 0x00000000, model64: 0x11f9100011f97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1389, match64: 0x00000000, model64: 0x11f9700011f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x138a, match64: 0x00000000, model64: 0x11f9b00011fa4},
		modelTuple{type64: 0x2700000027, matchRI: 0x138b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x138c, match64: 0x00000000, model64: 0x11fa400011fae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x138d, match64: 0x00000000, model64: 0x11fae00011fbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11fbe00011fc6, model64: 0x11fc600011fc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x11fc900011fd1, model64: 0x11fd100011fd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x138e, match64: 0x00000000, model64: 0x11fd600011fdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x138f, match64: 0x00000000, model64: 0x108cb000108cd},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x11fdd00011fe5, model64: 0x11fe500011ff0},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x11ff000011ff7, model64: 0x11ff700012002},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x120020001200e, model64: 0x1200e0001201b},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1390, match64: 0x00000000, model64: 0x1201b0001202d},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1391, match64: 0x00000000, model64: 0x1202d0001203f},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1392, match64: 0x00000000, model64: 0x1203f0001204e},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1393, match64: 0x00000000, model64: 0x1204e00012063},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x1394, match64: 0x00000000, model64: 0x1206300012074},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1395, match64: 0x00000000, model64: 0xf8800000f8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1396, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1397, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1207a00012083, model64: 0x120830001208d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1208d00012097, model64: 0x12097000120a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120a2000120ab, model64: 0x120ab000120b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120b7000120c4, model64: 0x120b7000120c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1399, match64: 0x00000000, model64: 0x120c4000120d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x139a, match64: 0x00000000, model64: 0x120d0000120d9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x120d9000120e1, model64: 0x120e1000120ed},
		modelTuple{type64: 0x38400000391, matchRI: 0x139c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x120f4000120f9, model64: 0x120f4000120f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x139d, match64: 0x00000000, model64: 0x120f900012100},
		modelTuple{type64: 0x2700000027, matchRI: 0x139e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x121050001210d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a1, match64: 0x00000000, model64: 0x4cb000004cb3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1211300012117, model64: 0x121170001211b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1211b0001211f, model64: 0x1211f00012124},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1212400012128, model64: 0x121280001212f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1212f00012133, model64: 0x1213300012139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1213900012142, model64: 0x121420001214b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1214b0001214f, model64: 0x1214f00012157},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121570001215b, model64: 0x1215b00012161},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1216100012165, model64: 0x121650001216c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1216c00012170, model64: 0x1217000012175},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1217500012179, model64: 0x1217900012180},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a2, match64: 0x00000000, model64: 0x1218000012189},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13a3, match64: 0x00000000, model64: 0x121890001218e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1218e00012199, model64: 0x12199000121a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121ac000121b4, model64: 0x121b4000121c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121c5000121cd, model64: 0x121cd000121d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121d3000121db, model64: 0x121db000121ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121ea000121f2, model64: 0x121f2000121fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x121fd00012205, model64: 0x1220500012212},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122120001221a, model64: 0x1221a00012233},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122330001223b, model64: 0x1223b0001224a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1224a00012252, model64: 0x122520001225c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1225c00012264, model64: 0x1226400012271},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1227100012279, model64: 0x1227900012288},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a6, match64: 0x00000000, model64: 0x1228800012294},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122940001229c, model64: 0x1229c000122aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122aa000122b2, model64: 0x122b2000122be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122be000122c6, model64: 0x122c6000122d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122d5000122dd, model64: 0x122dd000122ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122ee000122f6, model64: 0x122f6000122ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x122ff00012309, model64: 0x1230900012316},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1231600012320, model64: 0x1232000012335},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123350001233f, model64: 0x1233f0001234b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1234b00012355, model64: 0x123550001236f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1236f00012377, model64: 0x123770001237d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1237d00012385, model64: 0x123850001238d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123a1000123ab, model64: 0x42b00000432},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x13ad, match64: 0x00000000, model64: 0x123b1000123bd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x123bd000123c4, model64: 0x123bd000123c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123c4000123cd, model64: 0x123c4000123cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x123cd000123d8, model64: 0x123cd000123d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ae, match64: 0x00000000, model64: 0x123d8000123e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x123ed000123f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x123fd00012406},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1240b00012414, model64: 0x1240b00012414},
		modelTuple{type64: 0x2700000027, matchRI: 0x13b9, match64: 0x00000000, model64: 0x1241900012421},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ba, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bc, match64: 0x00000000, model64: 0x124210001242a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13bd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c0, match64: 0x00000000, model64: 0x1243a00012446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1244600012453, model64: 0x1244600012453},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1245300012461, model64: 0x1245300012461},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x124610001246f, model64: 0x124610001246f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1247600012483, model64: 0x1248300012493},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c2, match64: 0x00000000, model64: 0x124930001249c},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c3, match64: 0x00000000, model64: 0x1249c000124a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c4, match64: 0x00000000, model64: 0x124a8000124b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c5, match64: 0x00000000, model64: 0x124b1000124c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c6, match64: 0x00000000, model64: 0x124c3000124d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124d1000124da, model64: 0x124da000124e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c7, match64: 0x00000000, model64: 0x124e4000124f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x124f500012506, model64: 0x1250600012518},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1251800012521, model64: 0x1252100012530},
		modelTuple{type64: 0x2700000027, matchRI: 0x13c8, match64: 0x00000000, model64: 0x125300001253d},
		modelTuple{type64: 0x24700000251, matchRI: 0x13c9, match64: 0x00000000, model64: 0x1253d00012545},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ca, match64: 0x00000000, model64: 0x1254500012551},
		modelTuple{type64: 0x24700000251, matchRI: 0x13cb, match64: 0x00000000, model64: 0x125510001255b},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cc, match64: 0x00000000, model64: 0x1255b00012569},
		modelTuple{type64: 0x2700000027, matchRI: 0x13cd, match64: 0x00000000, model64: 0x1255b00012569},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1256900012572, model64: 0x1256900012572},
		modelTuple{type64: 0x24700000251, matchRI: 0x13cf, match64: 0x00000000, model64: 0x125720001257a},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d0, match64: 0x00000000, model64: 0x1257a00012588},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d1, match64: 0x00000000, model64: 0x1258800012591},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d2, match64: 0x00000000, model64: 0x125910001259e},
		modelTuple{type64: 0x2700000027, matchRI: 0x13d3, match64: 0x00000000, model64: 0x1259e000125a7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125a7000125ab, model64: 0x125a7000125ab},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125ab000125b3, model64: 0x125ab000125b3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125b3000125bc, model64: 0x125b3000125bc},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125bc000125c1, model64: 0x125c1000125c6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125c6000125cf, model64: 0x125c6000125cf},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125cf000125d4, model64: 0x125d4000125d9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125d9000125e0, model64: 0x125d9000125e0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125e0000125e7, model64: 0x125e0000125e7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125e7000125ee, model64: 0x125e7000125ee},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125ee000125f6, model64: 0x125ee000125f6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x125f6000125fe, model64: 0x125f6000125fe},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d4, match64: 0x00000000, model64: 0x125fe00012608},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d5, match64: 0x00000000, model64: 0x1260800012610},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d6, match64: 0x00000000, model64: 0x1261000012618},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d7, match64: 0x00000000, model64: 0x1261800012622},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d8, match64: 0x00000000, model64: 0x1262200012629},
		modelTuple{type64: 0x24700000251, matchRI: 0x13d9, match64: 0x00000000, model64: 0x1262900012632},
		modelTuple{type64: 0x24700000251, matchRI: 0x13da, match64: 0x00000000, model64: 0x1263200012639},
		modelTuple{type64: 0x24700000251, matchRI: 0x13db, match64: 0x00000000, model64: 0x1263900012642},
		modelTuple{type64: 0x24700000251, matchRI: 0x13dc, match64: 0x00000000, model64: 0x1264200012648},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x126480001264f, model64: 0x126480001264f},
		modelTuple{type64: 0x24700000251, matchRI: 0x13dd, match64: 0x00000000, model64: 0x1264f00012655},
		modelTuple{type64: 0x24700000251, matchRI: 0x13de, match64: 0x00000000, model64: 0x126550001265d},
		modelTuple{type64: 0x24700000251, matchRI: 0x13df, match64: 0x00000000, model64: 0x1265d00012669},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e0, match64: 0x00000000, model64: 0x1266900012672},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e1, match64: 0x00000000, model64: 0x126720001267b},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e2, match64: 0x00000000, model64: 0x1267b00012682},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e3, match64: 0x00000000, model64: 0x126820001268e},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e4, match64: 0x00000000, model64: 0x1268e00012696},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e5, match64: 0x00000000, model64: 0x1261000012618},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x12696000126a2, model64: 0x126a2000126af},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x126af000126b9, model64: 0x126b9000126c4},
		modelTuple{type64: 0x24700000251, matchRI: 0x13e6, match64: 0x00000000, model64: 0x126c4000126c9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x126d6000126dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x13e9, match64: 0x00000000, model64: 0x126e3000126e8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ee, match64: 0x00000000, model64: 0x52590000525f},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ef, match64: 0x00000000, model64: 0x1270000012707},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f0, match64: 0x00000000, model64: 0x127070001270a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f1, match64: 0x00000000, model64: 0x1270a00012711},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f8, match64: 0x00000000, model64: 0x51c6000051cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127270001272d, model64: 0x1272d00012734},
		modelTuple{type64: 0x2700000027, matchRI: 0x13f9, match64: 0x00000000, model64: 0x127340001273a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1273a00012743, model64: 0x127430001274d},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1275900012760, model64: 0x1276000012767},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fc, match64: 0x00000000, model64: 0x1276700012770},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fd, match64: 0x00000000, model64: 0x127700001277a},
		modelTuple{type64: 0x2700000027, matchRI: 0x13fe, match64: 0x00000000, model64: 0x1277a00012783},
		modelTuple{type64: 0x2700000027, matchRI: 0x13ff, match64: 0x00000000, model64: 0x127830001278d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1278d00012791, model64: 0x1279100012796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127960001279c, model64: 0x127960001279c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1279c000127a2, model64: 0x1279c000127a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127a2000127a7, model64: 0x127a7000127ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1400, match64: 0x00000000, model64: 0x127ad000127b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127bc000127c5, model64: 0x127c5000127ca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1402, match64: 0x00000000, model64: 0x127ca000127d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1403, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127db000127e2, model64: 0x127e2000127e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127e7000127ed, model64: 0x127ed000127f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x127f1000127f8, model64: 0x127f8000127fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1280200012808, model64: 0xf3b00000f3b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128080001280e, model64: 0x1280e00012812},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1281200012818, model64: 0x128180001281d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1281d00012823, model64: 0x128230001282a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1282a00012830, model64: 0x1283000012839},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128390001283f, model64: 0x1283f00012843},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1284300012849, model64: 0x1284900012851},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1285100012857, model64: 0x107c1000107c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128570001285d, model64: 0x1285d00012866},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128660001286c, model64: 0x1286c00012870},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1287000012876, model64: 0x1287600012882},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1288200012888, model64: 0x128880001288d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1288d00012893, model64: 0x128930001289a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1289a000128a0, model64: 0x128a0000128a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128a5000128ad, model64: 0x128ad000128b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128b4000128bb, model64: 0x128bb000128c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128c2000128c8, model64: 0x128c8000128d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128d3000128d9, model64: 0xdf3f0000df45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128d9000128df, model64: 0x128df000128e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128e8000128f0, model64: 0x128f0000128f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128f4000128fa, model64: 0x128fa00012902},
		modelTuple{type64: 0x2700000027, matchRI: 0x1406, match64: 0x00000000, model64: 0x129020001290b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1290b00012911, model64: 0x1291100012919},
		modelTuple{type64: 0x2700000027, matchRI: 0x1407, match64: 0x00000000, model64: 0x4adf00004ae2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1408, match64: 0x00000000, model64: 0x7eb200007eb5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x140c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129260001292b, model64: 0x1292b00012935},
		modelTuple{type64: 0x2700000027, matchRI: 0x140d, match64: 0x00000000, model64: 0x1293500012940},
		modelTuple{type64: 0x38400000391, matchRI: 0x140e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1414, match64: 0x00000000, model64: 0x129570001295e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1295e00012966, model64: 0x1295e00012966},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x129660001296f, model64: 0x129660001296f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1415, match64: 0x00000000, model64: 0x1296f00012974},
		modelTuple{type64: 0x2700000027, matchRI: 0x1416, match64: 0x00000000, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1419, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x141a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5ada00005ae3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1420, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1421, match64: 0x00000000, model64: 0x12993000129a1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1424, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1425, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1427, match64: 0x00000000, model64: 0x129af000129b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1429, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x142a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x142c, match64: 0x00000000, model64: 0x129bf000129cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x142d, match64: 0x00000000, model64: 0x129cb000129d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x142e, match64: 0x00000000, model64: 0x129d5000129e0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x142f, match64: 0x00000000, model64: 0x129e0000129e8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1430, match64: 0x00000000, model64: 0x129e8000129f6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1431, match64: 0x00000000, model64: 0x129f600012a05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1432, match64: 0x00000000, model64: 0x12a0500012a0f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1433, match64: 0x00000000, model64: 0x12a0f00012a20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1434, match64: 0x00000000, model64: 0x12a2000012a30},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1435, match64: 0x00000000, model64: 0x12a3000012a3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1436, match64: 0x00000000, model64: 0x12a3f00012a47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1437, match64: 0x00000000, model64: 0x12a4700012a56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1438, match64: 0x00000000, model64: 0x12a5600012a63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1439, match64: 0x00000000, model64: 0x12a6300012a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x143a, match64: 0x00000000, model64: 0x12a6b00012a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x143b, match64: 0x00000000, model64: 0x12a7300012a7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x143c, match64: 0x00000000, model64: 0x12a7e00012a8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x143d, match64: 0x00000000, model64: 0x12a8a00012a96},
		modelTuple{type64: 0x2700000027, matchRI: 0x143e, match64: 0x00000000, model64: 0x12a9600012aa5},
		modelTuple{type64: 0x2700000027, matchRI: 0x143f, match64: 0x00000000, model64: 0x12aa500012aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1440, match64: 0x00000000, model64: 0x12aaf00012ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1441, match64: 0x00000000, model64: 0x12ab700012aca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1442, match64: 0x00000000, model64: 0x12aca00012ad4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1443, match64: 0x00000000, model64: 0x12ad400012ae0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1444, match64: 0x00000000, model64: 0x12ae000012aee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1445, match64: 0x00000000, model64: 0x12aee00012af4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1446, match64: 0x00000000, model64: 0x12af400012afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1447, match64: 0x00000000, model64: 0x12afd00012b0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1448, match64: 0x00000000, model64: 0x12b0b00012b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1449, match64: 0x00000000, model64: 0x12b1600012b1e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x144a, match64: 0x00000000, model64: 0x12b1e00012b26},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x144b, match64: 0x00000000, model64: 0x12b2600012b35},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x144c, match64: 0x00000000, model64: 0x12b3500012b3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x144d, match64: 0x00000000, model64: 0x12b3d00012b45},
		modelTuple{type64: 0x2700000027, matchRI: 0x144e, match64: 0x00000000, model64: 0x12b4500012b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x144f, match64: 0x00000000, model64: 0x12b4700012b50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1450, match64: 0x00000000, model64: 0x12b5000012b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1451, match64: 0x00000000, model64: 0x12b5500012b5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1452, match64: 0x00000000, model64: 0x12b5e00012b64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1453, match64: 0x00000000, model64: 0x12b6400012b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1454, match64: 0x00000000, model64: 0x12b6d00012b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1455, match64: 0x00000000, model64: 0x12b7400012b7b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1456, match64: 0x00000000, model64: 0x12b7b00012b88},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1457, match64: 0x00000000, model64: 0x12b8800012b90},
		modelTuple{type64: 0x2700000027, matchRI: 0x1458, match64: 0x00000000, model64: 0x94b4000094be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1459, match64: 0x00000000, model64: 0x12b9000012b97},
		modelTuple{type64: 0x2700000027, matchRI: 0x145a, match64: 0x00000000, model64: 0x12b9700012b9c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x145b, match64: 0x00000000, model64: 0x12b9c00012ba4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x145c, match64: 0x00000000, model64: 0x12ba400012bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x145d, match64: 0x00000000, model64: 0x12bae00012bb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x145e, match64: 0x00000000, model64: 0xac410000ac46},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x145f, match64: 0x00000000, model64: 0x12bb300012bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1460, match64: 0x00000000, model64: 0x12bbc00012bc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1461, match64: 0x00000000, model64: 0x12bc100012bc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1462, match64: 0x00000000, model64: 0x12bc800012bd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1463, match64: 0x00000000, model64: 0x12bd000012bd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1464, match64: 0x00000000, model64: 0x12bd600012be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1465, match64: 0x00000000, model64: 0x12be500012bf9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1466, match64: 0x00000000, model64: 0x12bf900012c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1467, match64: 0x00000000, model64: 0x12c0a00012c10},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x146b, match64: 0x00000000, model64: 0x12c1d00012c25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xc0780000c084, model64: 0xc0780000c084},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x146c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c2d00012c38, model64: 0x12c2d00012c38},
		modelTuple{type64: 0x2700000027, matchRI: 0x146f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1470, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1471, match64: 0x00000000, model64: 0x12c3800012c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1472, match64: 0x00000000, model64: 0x12c4500012c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1473, match64: 0x00000000, model64: 0x12c5400012c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1474, match64: 0x00000000, model64: 0x12c6300012c71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c7100012c7b, model64: 0x12c7b00012c85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c8500012c90, model64: 0x12c9000012c9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12c9b00012ca4, model64: 0x12c9b00012ca4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1475, match64: 0x00000000, model64: 0x12ca400012cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1476, match64: 0x00000000, model64: 0x12cb000012cbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1477, match64: 0x00000000, model64: 0x12cbf00012ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1478, match64: 0x00000000, model64: 0x12ccc00012cda},
		modelTuple{type64: 0x24300000245, matchRI: 0x1479, match64: 0x00000000, model64: 0x12cda00012ce7},
		modelTuple{type64: 0x24300000245, matchRI: 0x147a, match64: 0x00000000, model64: 0x12ce700012cec},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x12cec00012cf4, model64: 0x12cf400012d06},
		modelTuple{type64: 0x24300000245, matchRI: 0x147b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x147d, match64: 0x00000000, model64: 0x12d0900012d11},
		modelTuple{type64: 0x2700000027, matchRI: 0x147e, match64: 0x00000000, model64: 0x12d1100012d1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d1d00012d27, model64: 0x12d2700012d31},
		modelTuple{type64: 0x2700000027, matchRI: 0x147f, match64: 0x00000000, model64: 0x12d3100012d3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d3e00012d44, model64: 0x12d4400012d4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d4b00012d51, model64: 0x12d5100012d58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12d5800012d5e, model64: 0x12d5e00012d6b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x12d6b00012d74, model64: 0x12d7400012d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1480, match64: 0x00000000, model64: 0x12d7a00012d80},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12d8c00012d95},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x12d9b00012da5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12da900012db2, model64: 0x12db200012dbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1483, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12dc400012dca, model64: 0x12dca00012dd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1485, match64: 0x00000000, model64: 0x12dd100012dd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12dd600012dde, model64: 0x12dde00012de7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1487, match64: 0x00000000, model64: 0x12ded00012df5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1488, match64: 0x00000000, model64: 0x12df500012e00},
		modelTuple{type64: 0x2700000027, matchRI: 0x148a, match64: 0x00000000, model64: 0x12e0800012e0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x148b, match64: 0x00000000, model64: 0x12e0c00012e0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x148c, match64: 0x00000000, model64: 0x12e0f00012e1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x148d, match64: 0x00000000, model64: 0x12e1b00012e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x148e, match64: 0x00000000, model64: 0x12e2300012e2b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x148f, match64: 0x00000000, model64: 0x12e2b00012e39},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1490, match64: 0x00000000, model64: 0x12e3900012e43},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x12e4300012e4a, model64: 0x12e4a00012e56},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x12e5600012e5d, model64: 0x12e5d00012e64},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1491, match64: 0x00000000, model64: 0x12e6400012e69},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1492, match64: 0x00000000, model64: 0x12e6400012e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x1493, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1494, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1495, match64: 0x00000000, model64: 0x12e6900012e71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1496, match64: 0x00000000, model64: 0x12e6900012e71},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x12e7c00012e8c, model64: 0x12e8c00012e96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1499, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x149b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x149c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x149e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12eaa00012eb2, model64: 0x12eb200012eba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12eba00012ec2, model64: 0x12ec200012eca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12eca00012ed2, model64: 0x12ed200012ed8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ed800012ee0, model64: 0x12ee000012ee7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12ee700012eef, model64: 0x12eef00012efa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12efa00012f02, model64: 0x12f0200012f09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f0900012f11, model64: 0x12f1100012f18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12f1800012f20, model64: 0x12f2000012f2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x149f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x14a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14a4, match64: 0x00000000, model64: 0x12f3c00012f41},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a5, match64: 0x00000000, model64: 0x12f3c00012f41},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a8, match64: 0x00000000, model64: 0x12f4d00012f52},
		modelTuple{type64: 0x2700000027, matchRI: 0x14a9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ab, match64: 0x00000000, model64: 0x12f5900012f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ac, match64: 0x00000000, model64: 0x12f6500012f6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ad, match64: 0x00000000, model64: 0x12f6c00012f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14af, match64: 0x00000000, model64: 0x12f7100012f7a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14b0, match64: 0x00000000, model64: 0x12f7a00012f85},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14b1, match64: 0x00000000, model64: 0x12f8500012f8e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x12f8e00012f98, model64: 0x12f9800012fa4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14b2, match64: 0x00000000, model64: 0x12fa400012faf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14b3, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fb700012fbe, model64: 0x12fbe00012fcc},
		modelTuple{type64: 0x24300000245, matchRI: 0x14b6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x12fe700012ff5, model64: 0x12ff500012ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14bd, match64: 0x00000000, model64: 0x12ffc00013003},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c0, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c1, match64: 0x00000000, model64: 0x130110001301a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c2, match64: 0x00000000, model64: 0x1301a0001301e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c4, match64: 0x00000000, model64: 0x1301e00013024},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1302400013030, model64: 0x1302400013030},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14c8, match64: 0x00000000, model64: 0x1303e00013045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130450001304d, model64: 0x130450001304d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cb, match64: 0x00000000, model64: 0x1305400013059},
		modelTuple{type64: 0x2700000027, matchRI: 0x14cc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14cd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d0, match64: 0x00000000, model64: 0x130670001306f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d1, match64: 0x00000000, model64: 0x1306f0001307c},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d2, match64: 0x00000000, model64: 0x1307c00013089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1308900013097, model64: 0x13097000130a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130a5000130b0, model64: 0x130b0000130bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d3, match64: 0x00000000, model64: 0x130670001306f},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d4, match64: 0x00000000, model64: 0x130bb000130c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130c4000130cd, model64: 0x130c4000130cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d5, match64: 0x00000000, model64: 0x130cd000130d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d6, match64: 0x00000000, model64: 0x130d5000130e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x130e0000130ec, model64: 0x130e0000130ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d7, match64: 0x00000000, model64: 0x130ec000130f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d8, match64: 0x00000000, model64: 0x130f4000130fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14d9, match64: 0x00000000, model64: 0x130fc00013109},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1310900013113, model64: 0x131130001311d},
		modelTuple{type64: 0x2700000027, matchRI: 0x14da, match64: 0x00000000, model64: 0x1311d0001312c},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x1312c00013132, model64: 0x1313200013139},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x14db, match64: 0x00000000, model64: 0x1313900013149},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1314900013158, model64: 0x1315800013167},
		modelTuple{type64: 0x2700000027, matchRI: 0x14dd, match64: 0x00000000, model64: 0x1316b00013172},
		modelTuple{type64: 0x2700000027, matchRI: 0x14de, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14df, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1317c00013186, model64: 0x1318600013190},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e2, match64: 0x00000000, model64: 0x1319000013196},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x131a4000131ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e6, match64: 0x00000000, model64: 0x131b1000131c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e7, match64: 0x00000000, model64: 0x131c6000131cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e8, match64: 0x00000000, model64: 0x131cb000131d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x14e9, match64: 0x00000000, model64: 0x131d9000131e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x131e4000131eb, model64: 0x131eb00013203},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x132030001320a, model64: 0x1320a00013222},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1322200013229, model64: 0x1322900013241},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ea, match64: 0x00000000, model64: 0x1324100013259},
		modelTuple{type64: 0x2700000027, matchRI: 0x14eb, match64: 0x00000000, model64: 0x1325900013273},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1327300013278, model64: 0x132780001328d},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ed, match64: 0x00000000, model64: 0x132930001329a},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ee, match64: 0x00000000, model64: 0x1329a000132a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ef, match64: 0x00000000, model64: 0x132a4000132ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f0, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f1, match64: 0x00000000, model64: 0x132ab000132b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f2, match64: 0x00000000, model64: 0x132b2000132bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f3, match64: 0x00000000, model64: 0x132bb000132c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f4, match64: 0x00000000, model64: 0x132c7000132d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f5, match64: 0x00000000, model64: 0x132d2000132dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f6, match64: 0x00000000, model64: 0x132dc000132e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f7, match64: 0x00000000, model64: 0x132e8000132ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f8, match64: 0x00000000, model64: 0x132ef000132f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x14f9, match64: 0x00000000, model64: 0x132f6000132f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fa, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fd, match64: 0x00000000, model64: 0x132ff0001330e},
		modelTuple{type64: 0x2700000027, matchRI: 0x14fe, match64: 0x00000000, model64: 0x1330e00013320},
		modelTuple{type64: 0x2700000027, matchRI: 0x14ff, match64: 0x00000000, model64: 0x133200001332f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1500, match64: 0x00000000, model64: 0x1332f00013343},
		modelTuple{type64: 0x2700000027, matchRI: 0x1501, match64: 0x00000000, model64: 0x1334300013357},
		modelTuple{type64: 0x2700000027, matchRI: 0x1502, match64: 0x00000000, model64: 0x1335700013368},
		modelTuple{type64: 0x2700000027, matchRI: 0x1503, match64: 0x00000000, model64: 0x1336800013378},
		modelTuple{type64: 0x2700000027, matchRI: 0x1504, match64: 0x00000000, model64: 0x1337800013388},
		modelTuple{type64: 0x2700000027, matchRI: 0x1505, match64: 0x00000000, model64: 0x1338800013398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1506, match64: 0x00000000, model64: 0x13398000133ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1507, match64: 0x00000000, model64: 0x133ab000133bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1508, match64: 0x00000000, model64: 0x133bb000133cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1509, match64: 0x00000000, model64: 0x133cb000133de},
		modelTuple{type64: 0x2700000027, matchRI: 0x150a, match64: 0x00000000, model64: 0x133de000133ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x150b, match64: 0x00000000, model64: 0x133ec000133fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x133fe00013408, model64: 0x1340800013419},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1341900013423, model64: 0x1342300013439},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x134390001343d, model64: 0x1343d00013450},
		modelTuple{type64: 0x2700000027, matchRI: 0x150c, match64: 0x00000000, model64: 0x1345000013462},
		modelTuple{type64: 0x2700000027, matchRI: 0x150d, match64: 0x00000000, model64: 0x1346200013473},
		modelTuple{type64: 0x2700000027, matchRI: 0x150e, match64: 0x00000000, model64: 0x1347300013487},
		modelTuple{type64: 0x2700000027, matchRI: 0x150f, match64: 0x00000000, model64: 0x1348700013497},
		modelTuple{type64: 0x2700000027, matchRI: 0x1510, match64: 0x00000000, model64: 0x13497000134aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1511, match64: 0x00000000, model64: 0x134aa000134bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1512, match64: 0x00000000, model64: 0x134bd000134ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1513, match64: 0x00000000, model64: 0x134ce000134e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1514, match64: 0x00000000, model64: 0x134e1000134f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1515, match64: 0x00000000, model64: 0x134f80001350c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1516, match64: 0x00000000, model64: 0x1350c00013520},
		modelTuple{type64: 0x2700000027, matchRI: 0x1517, match64: 0x00000000, model64: 0x1352000013531},
		modelTuple{type64: 0x2700000027, matchRI: 0x1518, match64: 0x00000000, model64: 0x1353100013547},
		modelTuple{type64: 0x2700000027, matchRI: 0x1519, match64: 0x00000000, model64: 0x135470001355e},
		modelTuple{type64: 0x2700000027, matchRI: 0x151a, match64: 0x00000000, model64: 0x1355e00013573},
		modelTuple{type64: 0x2700000027, matchRI: 0x151b, match64: 0x00000000, model64: 0x135730001358b},
		modelTuple{type64: 0x2700000027, matchRI: 0x151c, match64: 0x00000000, model64: 0x1358b000135a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x151d, match64: 0x00000000, model64: 0x135a5000135bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x151e, match64: 0x00000000, model64: 0x135bc000135d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x151f, match64: 0x00000000, model64: 0x135d8000135f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1520, match64: 0x00000000, model64: 0x135f30001360a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1521, match64: 0x00000000, model64: 0x1360a00013621},
		modelTuple{type64: 0x2700000027, matchRI: 0x1522, match64: 0x00000000, model64: 0x1362100013630},
		modelTuple{type64: 0x2700000027, matchRI: 0x1523, match64: 0x00000000, model64: 0x1363000013640},
		modelTuple{type64: 0x2700000027, matchRI: 0x1524, match64: 0x00000000, model64: 0x136400001364c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1525, match64: 0x00000000, model64: 0x1364c00013657},
		modelTuple{type64: 0x2700000027, matchRI: 0x1526, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1527, match64: 0x00000000, model64: 0x136570001366b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1528, match64: 0x00000000, model64: 0x1366b0001367e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1529, match64: 0x00000000, model64: 0x1367e00013692},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152a, match64: 0x00000000, model64: 0x13692000136a3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152b, match64: 0x00000000, model64: 0x136a3000136b4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152c, match64: 0x00000000, model64: 0x136b4000136c5},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152d, match64: 0x00000000, model64: 0x136c5000136d6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152e, match64: 0x00000000, model64: 0x136d6000136e7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x152f, match64: 0x00000000, model64: 0x136e7000136f8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1530, match64: 0x00000000, model64: 0x136f800013709},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1531, match64: 0x00000000, model64: 0x137090001371a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1532, match64: 0x00000000, model64: 0x1371a0001372c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1533, match64: 0x00000000, model64: 0x1372c0001373b},
		modelTuple{type64: 0x24700000251, matchRI: 0x1534, match64: 0x00000000, model64: 0x1373b0001374c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1535, match64: 0x00000000, model64: 0x1374c0001375d},
		modelTuple{type64: 0x24700000251, matchRI: 0x1536, match64: 0x00000000, model64: 0x1375d0001376c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1537, match64: 0x00000000, model64: 0x1376c0001377d},
		modelTuple{type64: 0x24700000251, matchRI: 0x1538, match64: 0x00000000, model64: 0x1377d0001378d},
		modelTuple{type64: 0x24700000251, matchRI: 0x1539, match64: 0x00000000, model64: 0x1378d0001379d},
		modelTuple{type64: 0x24700000251, matchRI: 0x153a, match64: 0x00000000, model64: 0x1377d0001378d},
		modelTuple{type64: 0x24700000251, matchRI: 0x153b, match64: 0x00000000, model64: 0x1375d0001376c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x153c, match64: 0x00000000, model64: 0x1375d0001376c},
		modelTuple{type64: 0x2700000027, matchRI: 0x153d, match64: 0x00000000, model64: 0x49010000490c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x153f, match64: 0x00000000, model64: 0x137a3000137ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1540, match64: 0x00000000, model64: 0x137ad000137b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1541, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1542, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1543, match64: 0x00000000, model64: 0x137a3000137ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1544, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1545, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1547, match64: 0x00000000, model64: 0x137bb000137c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137c1000137c9, model64: 0x137c9000137d4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1548, match64: 0x00000000, model64: 0x137d4000137db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1549, match64: 0x00000000, model64: 0x137db000137e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137e1000137e8, model64: 0x137e8000137ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x154a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x154b, match64: 0x00000000, model64: 0x137ec000137f3},
		modelTuple{type64: 0x24300000245, matchRI: 0x154c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x137fc00013809, model64: 0x138090001380f},
		modelTuple{type64: 0x2700000027, matchRI: 0x154f, match64: 0x00000000, model64: 0x9a4200009a44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1550, match64: 0x00000000, model64: 0xe6880000e68b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1551, match64: 0x00000000, model64: 0x1381400013816},
		modelTuple{type64: 0x2700000027, matchRI: 0x1552, match64: 0x00000000, model64: 0x550200005504},
		modelTuple{type64: 0x2700000027, matchRI: 0x1553, match64: 0x00000000, model64: 0x1142300011425},
		modelTuple{type64: 0x2700000027, matchRI: 0x1554, match64: 0x00000000, model64: 0x1381600013819},
		modelTuple{type64: 0x2700000027, matchRI: 0x1555, match64: 0x00000000, model64: 0x138190001381b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1556, match64: 0x00000000, model64: 0x6ac900006acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1557, match64: 0x00000000, model64: 0x1381b0001381e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1558, match64: 0x00000000, model64: 0x1381e0001381f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1559, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x155b, match64: 0x00000000, model64: 0x138240001382b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x155c, match64: 0x00000000, model64: 0x1382b00013833},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1383300013839, model64: 0x1383900013844},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x138440001384b, model64: 0x138440001384b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1384b00013853, model64: 0x1384b00013853},
		modelTuple{type64: 0x2700000027, matchRI: 0x155d, match64: 0x00000000, model64: 0x1385300013856},
		modelTuple{type64: 0x2700000027, matchRI: 0x155e, match64: 0x00000000, model64: 0x1385600013859},
		modelTuple{type64: 0x2700000027, matchRI: 0x155f, match64: 0x00000000, model64: 0x138590001385b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1560, match64: 0x00000000, model64: 0x1385b00013862},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1561, match64: 0x00000000, model64: 0x1386200013869},
		modelTuple{type64: 0x2700000027, matchRI: 0x1562, match64: 0x00000000, model64: 0x9a4200009a44},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1563, match64: 0x00000000, model64: 0x1386900013870},
		modelTuple{type64: 0x2700000027, matchRI: 0x1564, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1565, match64: 0x00000000, model64: 0x1387000013873},
		modelTuple{type64: 0x2700000027, matchRI: 0x1566, match64: 0x00000000, model64: 0x1387300013879},
		modelTuple{type64: 0x2700000027, matchRI: 0x1567, match64: 0x00000000, model64: 0x1d7900001d7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1568, match64: 0x00000000, model64: 0x138790001387c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1569, match64: 0x00000000, model64: 0x1387c0001387f},
		modelTuple{type64: 0x2700000027, matchRI: 0x156a, match64: 0x00000000, model64: 0x1387f00013882},
		modelTuple{type64: 0x2700000027, matchRI: 0x156b, match64: 0x00000000, model64: 0x1388200013889},
		modelTuple{type64: 0x2700000027, matchRI: 0x156c, match64: 0x00000000, model64: 0x138890001388c},
		modelTuple{type64: 0x2700000027, matchRI: 0x156d, match64: 0x00000000, model64: 0x1388c0001388f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1388f00013897, model64: 0x138970001389f},
		modelTuple{type64: 0x2700000027, matchRI: 0x156e, match64: 0x00000000, model64: 0x6ac900006acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x156f, match64: 0x00000000, model64: 0x1389f000138a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1570, match64: 0x00000000, model64: 0x138a6000138ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1571, match64: 0x00000000, model64: 0x138ad000138b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1572, match64: 0x00000000, model64: 0x138b2000138bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1573, match64: 0x00000000, model64: 0x138bd000138c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1574, match64: 0x00000000, model64: 0x138c3000138cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1575, match64: 0x00000000, model64: 0xa7c40000a7c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1576, match64: 0x00000000, model64: 0xeb3d0000eb43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1577, match64: 0x00000000, model64: 0x138cf000138d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1578, match64: 0x00000000, model64: 0x138d2000138db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1579, match64: 0x00000000, model64: 0x138db000138e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x157a, match64: 0x00000000, model64: 0x138e2000138e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x157b, match64: 0x00000000, model64: 0x138e9000138ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x157c, match64: 0x00000000, model64: 0x138ed000138f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x157d, match64: 0x00000000, model64: 0x138f0000138f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x157e, match64: 0x00000000, model64: 0x138f2000138f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x157f, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1580, match64: 0x00000000, model64: 0x138f9000138fb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1581, match64: 0x00000000, model64: 0x5d3200005d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1582, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1583, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1584, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1586, match64: 0x00000000, model64: 0x1390200013909},
		modelTuple{type64: 0x2700000027, matchRI: 0x1587, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1588, match64: 0x00000000, model64: 0x139090001391d},
		modelTuple{type64: 0x2700000027, matchRI: 0x158a, match64: 0x00000000, model64: 0x139220001392d},
		modelTuple{type64: 0x2700000027, matchRI: 0x158b, match64: 0x00000000, model64: 0x1392d0001393a},
		modelTuple{type64: 0x2700000027, matchRI: 0x158c, match64: 0x00000000, model64: 0x1393a0001394a},
		modelTuple{type64: 0x2700000027, matchRI: 0x158d, match64: 0x00000000, model64: 0x1394a00013958},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1395c00013963, model64: 0x1396300013965},
		modelTuple{type64: 0x5e8000005f5, matchRI: -0x0001, match64: 0x139650001396d, model64: 0x1396d00013976},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139760001397d, model64: 0x139760001397d},
		modelTuple{type64: 0x2700000027, matchRI: 0x158f, match64: 0x00000000, model64: 0x1397d00013984},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139840001398d, model64: 0x139840001398d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x5cd400005cd9, model64: 0x5cd400005cd9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x82810000828c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1591, match64: 0x00000000, model64: 0x139a0000139a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1592, match64: 0x00000000, model64: 0x139a8000139b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1593, match64: 0x00000000, model64: 0x139b1000139b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1594, match64: 0x00000000, model64: 0x139b8000139c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139c9000139dc, model64: 0x139dc000139e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x139e8000139ee, model64: 0x139ee000139fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1596, match64: 0x00000000, model64: 0x139fc00013a0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1597, match64: 0x00000000, model64: 0x13a0b00013a18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1598, match64: 0x00000000, model64: 0x13a1800013a26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1599, match64: 0x00000000, model64: 0x13a2600013a32},
		modelTuple{type64: 0x2700000027, matchRI: 0x159a, match64: 0x00000000, model64: 0x13a3200013a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x159b, match64: 0x00000000, model64: 0x13a3900013a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x159c, match64: 0x00000000, model64: 0x13a3e00013a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x159d, match64: 0x00000000, model64: 0x13a4300013a48},
		modelTuple{type64: 0x2700000027, matchRI: 0x159e, match64: 0x00000000, model64: 0x13a4800013a51},
		modelTuple{type64: 0x2700000027, matchRI: 0x159f, match64: 0x00000000, model64: 0x13a5100013a61},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a0, match64: 0x00000000, model64: 0x13a6100013a69},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a1, match64: 0x00000000, model64: 0x13a6900013a76},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15a2, match64: 0x00000000, model64: 0x13a7600013a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a3, match64: 0x00000000, model64: 0x13a8000013a88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a8800013a8c, model64: 0x13a8c00013a97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13a9700013a9c, model64: 0x13a9c00013ab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ab000013ab4, model64: 0x13ab400013ac2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ac200013ac6, model64: 0x13ac600013ad2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ad200013ad6, model64: 0x13ad600013ae8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ae800013aec, model64: 0x13aec00013aff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13aff00013b03, model64: 0x13b0300013b12},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a4, match64: 0x00000000, model64: 0x13b1200013b1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b1b00013b1f, model64: 0x13b1f00013b2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b2e00013b32, model64: 0x13b3200013b3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b3d00013b41, model64: 0x13b4100013b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a5, match64: 0x00000000, model64: 0x13b4900013b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a6, match64: 0x00000000, model64: 0x13b5900013b67},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a7, match64: 0x00000000, model64: 0x13b6700013b79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b7900013b7d, model64: 0x13b7d00013b88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13b8800013b8d, model64: 0x13b8d00013ba0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ba000013ba4, model64: 0x13ba400013bb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a8, match64: 0x00000000, model64: 0x13bb200013bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bb900013bbd, model64: 0x13bbd00013bca},
		modelTuple{type64: 0x2700000027, matchRI: 0x15a9, match64: 0x00000000, model64: 0x13bca00013bd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bd700013bdb, model64: 0x13bdb00013be8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13be800013bed, model64: 0x13bed00013bf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13bf900013bfe, model64: 0x13bfe00013c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15aa, match64: 0x00000000, model64: 0x13c0a00013c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ab, match64: 0x00000000, model64: 0x13c1d00013c2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ac, match64: 0x00000000, model64: 0x13c2c00013c40},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ad, match64: 0x00000000, model64: 0x13c4000013c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ae, match64: 0x00000000, model64: 0x13c4900013c52},
		modelTuple{type64: 0x2700000027, matchRI: 0x15af, match64: 0x00000000, model64: 0x13c5200013c60},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b0, match64: 0x00000000, model64: 0x13c6000013c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b1, match64: 0x00000000, model64: 0x13c6d00013c7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b2, match64: 0x00000000, model64: 0x13c7d00013c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b3, match64: 0x00000000, model64: 0x13c8c00013c99},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b4, match64: 0x00000000, model64: 0x13c9900013c9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b5, match64: 0x00000000, model64: 0x13c9f00013cae},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b6, match64: 0x00000000, model64: 0x13cae00013cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b7, match64: 0x00000000, model64: 0x13cbb00013cc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b8, match64: 0x00000000, model64: 0x13cc800013cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x15b9, match64: 0x00000000, model64: 0x13cd600013cdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ba, match64: 0x00000000, model64: 0x13cdf00013ce8},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bb, match64: 0x00000000, model64: 0x13ce800013cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bc, match64: 0x00000000, model64: 0x13cf100013cfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x15bd, match64: 0x00000000, model64: 0x13cfa00013cff},
		modelTuple{type64: 0x2700000027, matchRI: 0x15be, match64: 0x00000000, model64: 0x679c000067a2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15bf, match64: 0x00000000, model64: 0x13cff00013d0c},
		modelTuple{type64: 0x38400000391, matchRI: 0x15c0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x15c4, match64: 0x00000000, model64: 0x13d0c00013d12},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c5, match64: 0x00000000, model64: 0x13d1200013d1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c6, match64: 0x00000000, model64: 0x13d1b00013d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c7, match64: 0x00000000, model64: 0x13d2400013d2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d2d00013d3f, model64: 0x13d2d00013d3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c8, match64: 0x00000000, model64: 0x13d3f00013d48},
		modelTuple{type64: 0x2700000027, matchRI: 0x15c9, match64: 0x00000000, model64: 0x13d4800013d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ca, match64: 0x00000000, model64: 0x13d5100013d5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d5a00013d61, model64: 0x13d6100013d6a},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x13d6a00013d7a, model64: 0x13d6a00013d7a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x15cb, match64: 0x00000000, model64: 0x13d7a00013d86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d8600013d9c, model64: 0x13d8600013d9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13d9c00013da9, model64: 0x13d9c00013da9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13da900013dbb, model64: 0x13da900013dbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cc, match64: 0x00000000, model64: 0x13dbb00013dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cd, match64: 0x00000000, model64: 0x13dc400013dcd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13dcd00013dd4, model64: 0x13dd400013de0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13de000013de9, model64: 0x13de000013de9},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x13de900013dfe, model64: 0x13de900013dfe},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x13dfe00013e0a, model64: 0x13dfe00013e0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e0a00013e1c, model64: 0x13e0a00013e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ce, match64: 0x00000000, model64: 0x13e1c00013e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x15cf, match64: 0x00000000, model64: 0x13e2500013e2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e2f00013e39, model64: 0x13e2f00013e39},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x13e3900013e47, model64: 0x13e3900013e47},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x15d0, match64: 0x00000000, model64: 0x13e4700013e54},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13e5400013e61, model64: 0x13e5400013e61},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13e6100013e6c, model64: 0x13e6100013e6c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13e6c00013e75, model64: 0x13e6c00013e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d1, match64: 0x00000000, model64: 0x13e7500013e7d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13e8600013e8e, model64: 0x13e8e00013e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d3, match64: 0x00000000, model64: 0x13e9800013ea1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13eae00013eb6, model64: 0x13eb600013ebd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ebd00013ec7, model64: 0x13ec700013ece},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d6, match64: 0x00000000, model64: 0x13ece00013eda},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d7, match64: 0x00000000, model64: 0x13eda00013ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d8, match64: 0x00000000, model64: 0x13ee500013eed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13eed00013ef8, model64: 0x13ef800013efe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13efe00013f09, model64: 0x13f0900013f0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15d9, match64: 0x00000000, model64: 0x13f0f00013f16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f1600013f1c, model64: 0x13f1c00013f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f2200013f29, model64: 0x13f2900013f30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f3000013f38, model64: 0x13f3800013f3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15da, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dc, match64: 0x00000000, model64: 0x13f3f00013f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x15dd, match64: 0x00000000, model64: 0x13f4700013f4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13f4e00013f52, model64: 0x13f5200013f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x15de, match64: 0x00000000, model64: 0x13f5800013f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15df, match64: 0x00000000, model64: 0x13f5d00013f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e2, match64: 0x00000000, model64: 0x13f6700013f73},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e3, match64: 0x00000000, model64: 0x13f7300013f80},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15e4, match64: 0x00000000, model64: 0x13f7300013f80},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15e5, match64: 0x00000000, model64: 0x13f8000013f8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e7, match64: 0x00000000, model64: 0x13f9000013f98},
		modelTuple{type64: 0x2700000027, matchRI: 0x15e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x13f9800013fb0, model64: 0x13fb000013fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ea, match64: 0x00000000, model64: 0x13fc900013fd0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fd000013fd9, model64: 0x13fd900013fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x15eb, match64: 0x00000000, model64: 0x13fdf00013fe2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13fe200013fee, model64: 0x13fee00013ff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x13ff400014000, model64: 0x1400000014006},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ec, match64: 0x00000000, model64: 0xa9210000a923},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ed, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ee, match64: 0x00000000, model64: 0xad300000ad34},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ef, match64: 0x00000000, model64: 0x140060001400d},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f0, match64: 0x00000000, model64: 0x1400d0001400f},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f1, match64: 0x00000000, model64: 0x1400f00014012},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1401700014020, model64: 0x1402000014029},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15f3, match64: 0x00000000, model64: 0x1402900014030},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f4, match64: 0x00000000, model64: 0x1403000014036},
		modelTuple{type64: 0x24300000245, matchRI: 0x15f5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x15f8, match64: 0x00000000, model64: 0x1404a0001404e},
		modelTuple{type64: 0x2700000027, matchRI: 0x15f9, match64: 0x00000000, model64: 0x1404e00014059},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x15fb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x15ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1602, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1406f00014076, model64: 0x140760001407d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1604, match64: 0x00000000, model64: 0x140840001408c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1605, match64: 0x00000000, model64: 0x1408c0001409c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140a4000140aa, model64: 0x140aa000140b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140b0000140b7, model64: 0x140b7000140be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140be000140c6, model64: 0x140c6000140cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1607, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x2700000027, matchRI: 0x1608, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x160a, match64: 0x00000000, model64: 0x140d6000140e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140e1000140e7, model64: 0x140e7000140ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140ed000140f3, model64: 0x140f3000140f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140f9000140fd, model64: 0x140f9000140fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x160b, match64: 0x00000000, model64: 0x140fd000140ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x12fe100012fe7, model64: 0x12fe100012fe7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x140ff00014109, model64: 0x1410900014113},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141130001411f, model64: 0x1411f0001412b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1412b00014139, model64: 0x1412b00014139},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141390001413e, model64: 0x1413e00014143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1414300014148, model64: 0xb4140000b419},
		modelTuple{type64: 0x2700000027, matchRI: 0x160c, match64: 0x00000000, model64: 0x141480001414f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1414f00014155, model64: 0x141550001415c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1415c00014165, model64: 0x141650001416e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1416e00014175, model64: 0x141750001417c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1417c00014184, model64: 0x141840001418c},
		modelTuple{type64: 0x2700000027, matchRI: 0x160d, match64: 0x00000000, model64: 0x1418c00014196},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141960001419b, model64: 0x1419b000141a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141a0000141ab, model64: 0x141ab000141b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141b6000141c1, model64: 0x141c1000141cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141cc000141d2, model64: 0x141cc000141d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141d2000141d8, model64: 0x141d8000141de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141de000141e2, model64: 0x141e2000141e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141e6000141ef, model64: 0x141ef000141f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x141f8000141fd, model64: 0x141fd00014202},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1420200014208, model64: 0x142080001420f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1420f00014214, model64: 0x1421400014219},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1421900014220, model64: 0x1422000014228},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1422800014232, model64: 0x142320001423c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1423c00014244, model64: 0x142440001424c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1424c00014251, model64: 0x10c0b00010c10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1425100014255, model64: 0x1425500014259},
		modelTuple{type64: 0x2700000027, matchRI: 0x160e, match64: 0x00000000, model64: 0x142590001425b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1425b0001425f, model64: 0x1425f00014263},
		modelTuple{type64: 0x2700000027, matchRI: 0x160f, match64: 0x00000000, model64: 0x1426300014266},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142660001426d, model64: 0x1426d00014274},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142740001427a, model64: 0x1427a00014280},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1428000014287, model64: 0x142870001428e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1428e00014295, model64: 0x142950001429c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1429c000142a0, model64: 0x142a0000142a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142a4000142a8, model64: 0xded70000dedb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142a8000142ad, model64: 0x142ad000142b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142b2000142bb, model64: 0x142b2000142bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1610, match64: 0x00000000, model64: 0x142bb000142c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142c2000142c7, model64: 0x142c7000142ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142ca000142d2, model64: 0x142d2000142da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1611, match64: 0x00000000, model64: 0x142da000142e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142e0000142eb, model64: 0x142eb000142f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1612, match64: 0x00000000, model64: 0x142f6000142ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x142ff00014306, model64: 0x143060001430c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1430c00014314, model64: 0x143140001431b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1431b00014324, model64: 0x143240001432d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1432d00014331, model64: 0x1433100014335},
		modelTuple{type64: 0x2700000027, matchRI: 0x1613, match64: 0x00000000, model64: 0x143350001433d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1614, match64: 0x00000000, model64: 0x1433d00014341},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1434100014348, model64: 0x143480001434f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1434f00014358, model64: 0x1435800014361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x143610001436b, model64: 0x1436b00014375},
		modelTuple{type64: 0x2700000027, matchRI: 0x1615, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x143750001437b, model64: 0x1437b00014381},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1438100014385, model64: 0x1438500014389},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1616, match64: 0x00000000, model64: 0x1438900014396},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x14396000143a0, model64: 0x143a0000143aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1618, match64: 0x00000000, model64: 0x143b3000143b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1619, match64: 0x00000000, model64: 0x143b8000143c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x161a, match64: 0x00000000, model64: 0x143c1000143c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x161b, match64: 0x00000000, model64: 0x143c8000143cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x161c, match64: 0x00000000, model64: 0x143cd000143e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x161d, match64: 0x00000000, model64: 0x143e4000143f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x161e, match64: 0x00000000, model64: 0x143f6000143fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x161f, match64: 0x00000000, model64: 0x143fe00014410},
		modelTuple{type64: 0x2700000027, matchRI: 0x1620, match64: 0x00000000, model64: 0x144100001441b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1621, match64: 0x00000000, model64: 0x1441b00014427},
		modelTuple{type64: 0x2700000027, matchRI: 0x1622, match64: 0x00000000, model64: 0x143f6000143fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144270001443c, model64: 0x1443c00014447},
		modelTuple{type64: 0x2700000027, matchRI: 0x1623, match64: 0x00000000, model64: 0x1444700014452},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1445200014464, model64: 0x144640001446c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1624, match64: 0x00000000, model64: 0x1446c00014477},
		modelTuple{type64: 0x2700000027, matchRI: 0x1625, match64: 0x00000000, model64: 0x144770001447f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1626, match64: 0x00000000, model64: 0x1447f00014486},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1448600014497, model64: 0x144970001449e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1449e000144b5, model64: 0x144b5000144c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1627, match64: 0x00000000, model64: 0x144c2000144cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144cb000144da, model64: 0x144da000144df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144df000144f5, model64: 0x144f5000144fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x144fc00014503, model64: 0x144fc00014503},
		modelTuple{type64: 0x2700000027, matchRI: 0x1628, match64: 0x00000000, model64: 0xb7f90000b801},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1450300014513, model64: 0x145130001451e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1629, match64: 0x00000000, model64: 0x1451e00014524},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145240001453b, model64: 0x1453b00014542},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145420001455b, model64: 0x1455b00014564},
		modelTuple{type64: 0x2700000027, matchRI: 0x162a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x145720001457e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145850001458b, model64: 0x1458b00014593},
		modelTuple{type64: 0x2700000027, matchRI: 0x162d, match64: 0x00000000, model64: 0x145930001459f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1459f000145a5, model64: 0x145a5000145b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145b1000145b7, model64: 0x145b7000145c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145c0000145c6, model64: 0x145c6000145ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145ca000145d0, model64: 0x145d0000145d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145d4000145e3, model64: 0x145e3000145f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145f2000145fb, model64: 0x145f2000145fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x145fb00014604, model64: 0x146040001460a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1460a00014613, model64: 0x1461300014619},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1461900014622, model64: 0x1462200014631},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146310001463a, model64: 0x1463a00014647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1464700014650, model64: 0x146500001465e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1465e00014668, model64: 0x1465e00014668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146680001466d, model64: 0x1466d00014673},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1630, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1468500014690},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1469b000146a4, model64: 0x146a4000146ad},
		modelTuple{type64: 0x24700000251, matchRI: 0x1634, match64: 0x00000000, model64: 0x146b4000146c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x146c0000146ca, model64: 0x146ca000146d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1635, match64: 0x00000000, model64: 0x146d4000146de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1636, match64: 0x00000000, model64: 0x146d4000146de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1637, match64: 0x00000000, model64: 0x146de000146ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1638, match64: 0x00000000, model64: 0x146de000146ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1639, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x163a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x146f9000146ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147070001470d, model64: 0x1470d00014713},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x1472000014728, model64: 0x147280001472c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1472c00014738, model64: 0x1473800014744},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x147440001474c, model64: 0x1474c00014758},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1475800014762, model64: 0x1476200014770},
		modelTuple{type64: 0x2700000027, matchRI: 0x163f, match64: 0x00000000, model64: 0x1477000014775},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147750001477f, model64: 0x147750001477f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1477f0001478b, model64: 0x1478b00014793},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14793000147a0, model64: 0x147a0000147b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1640, match64: 0x00000000, model64: 0x147b2000147c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147c4000147cc, model64: 0x147cc000147d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1641, match64: 0x00000000, model64: 0x147d8000147e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x147e4000147fb, model64: 0x147fb0001480c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1480c0001481e, model64: 0x1481e0001482e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1482e00014836, model64: 0x1483600014846},
		modelTuple{type64: 0x2700000027, matchRI: 0x1642, match64: 0x00000000, model64: 0x1484600014852},
		modelTuple{type64: 0x2700000027, matchRI: 0x1643, match64: 0x00000000, model64: 0x1485200014856},
		modelTuple{type64: 0x2700000027, matchRI: 0x1644, match64: 0x00000000, model64: 0x148560001485c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1645, match64: 0x00000000, model64: 0x1485c00014865},
		modelTuple{type64: 0x2700000027, matchRI: 0x1646, match64: 0x00000000, model64: 0x1486500014870},
		modelTuple{type64: 0x2700000027, matchRI: 0x1647, match64: 0x00000000, model64: 0x1487000014878},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148780001488e, model64: 0x1488e0001489b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1489b000148af, model64: 0x148af000148ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x148ba000148c2, model64: 0x148c2000148cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1648, match64: 0x00000000, model64: 0x148cd000148d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1649, match64: 0x00000000, model64: 0x148d4000148de},
		modelTuple{type64: 0x2700000027, matchRI: 0x164a, match64: 0x00000000, model64: 0x148de000148e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x164b, match64: 0x00000000, model64: 0x148e7000148f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x164c, match64: 0x00000000, model64: 0x148f0000148f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x164d, match64: 0x00000000, model64: 0x148f6000148fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x164e, match64: 0x00000000, model64: 0x148fd00014901},
		modelTuple{type64: 0x2700000027, matchRI: 0x164f, match64: 0x00000000, model64: 0x149010001490c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1650, match64: 0x00000000, model64: 0x1490c00014913},
		modelTuple{type64: 0x2700000027, matchRI: 0x1651, match64: 0x00000000, model64: 0x149130001491a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1652, match64: 0x00000000, model64: 0x1491a00014923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1653, match64: 0x00000000, model64: 0x149230001492b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1654, match64: 0x00000000, model64: 0x1492b00014931},
		modelTuple{type64: 0x2700000027, matchRI: 0x1655, match64: 0x00000000, model64: 0x1493100014939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1656, match64: 0x00000000, model64: 0x149390001493e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1657, match64: 0x00000000, model64: 0x1493e0001494f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1658, match64: 0x00000000, model64: 0x1494f00014957},
		modelTuple{type64: 0x2700000027, matchRI: 0x1659, match64: 0x00000000, model64: 0x149570001495f},
		modelTuple{type64: 0x2700000027, matchRI: 0x165a, match64: 0x00000000, model64: 0x1495f00014968},
		modelTuple{type64: 0x2700000027, matchRI: 0x165b, match64: 0x00000000, model64: 0x149680001496c},
		modelTuple{type64: 0x2700000027, matchRI: 0x165c, match64: 0x00000000, model64: 0x1496c00014977},
		modelTuple{type64: 0x2700000027, matchRI: 0x165d, match64: 0x00000000, model64: 0x1497700014982},
		modelTuple{type64: 0x2700000027, matchRI: 0x165e, match64: 0x00000000, model64: 0x149820001498c},
		modelTuple{type64: 0x2700000027, matchRI: 0x165f, match64: 0x00000000, model64: 0x1498c00014998},
		modelTuple{type64: 0x2700000027, matchRI: 0x1660, match64: 0x00000000, model64: 0x14998000149a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1661, match64: 0x00000000, model64: 0x149a4000149ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1662, match64: 0x00000000, model64: 0x149ab000149b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1663, match64: 0x00000000, model64: 0x149b3000149be},
		modelTuple{type64: 0x2700000027, matchRI: 0x1664, match64: 0x00000000, model64: 0x149be000149ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1665, match64: 0x00000000, model64: 0x149ca000149d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1666, match64: 0x00000000, model64: 0x149d4000149e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1667, match64: 0x00000000, model64: 0x149e1000149ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1668, match64: 0x00000000, model64: 0x149ee000149fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1669, match64: 0x00000000, model64: 0x149fb00014a0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a0a00014a16, model64: 0x14a1600014a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x166a, match64: 0x00000000, model64: 0x14a2200014a2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a2a00014a36, model64: 0x14a3600014a42},
		modelTuple{type64: 0x2700000027, matchRI: 0x166b, match64: 0x00000000, model64: 0x14a4200014a4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x166c, match64: 0x00000000, model64: 0x14a4a00014a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x166d, match64: 0x00000000, model64: 0x14a5500014a60},
		modelTuple{type64: 0x2700000027, matchRI: 0x166e, match64: 0x00000000, model64: 0x14a6000014a6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a6e00014a76, model64: 0x14a7600014a7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a7e00014a87, model64: 0x14a8700014a90},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14a9000014a9d, model64: 0x14a9000014a9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x166f, match64: 0x00000000, model64: 0x14a9d00014aaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14aaf00014ab7, model64: 0x14ab700014ac3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1670, match64: 0x00000000, model64: 0x14ac300014ac9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1671, match64: 0x00000000, model64: 0x14ac900014ad6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1672, match64: 0x00000000, model64: 0x14ad600014ae3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1673, match64: 0x00000000, model64: 0x14ae300014aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1674, match64: 0x00000000, model64: 0x14aeb00014afb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1675, match64: 0x00000000, model64: 0x14afb00014b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1676, match64: 0x00000000, model64: 0x14b0700014b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1677, match64: 0x00000000, model64: 0x14b1400014b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1678, match64: 0x00000000, model64: 0x14b1400014b21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1679, match64: 0x00000000, model64: 0x14b2100014b33},
		modelTuple{type64: 0x2700000027, matchRI: 0x167a, match64: 0x00000000, model64: 0x14b3300014b41},
		modelTuple{type64: 0x2700000027, matchRI: 0x167b, match64: 0x00000000, model64: 0x14b4100014b4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x167c, match64: 0x00000000, model64: 0x14b4e00014b58},
		modelTuple{type64: 0x2700000027, matchRI: 0x167d, match64: 0x00000000, model64: 0x14b5800014b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x167e, match64: 0x00000000, model64: 0x14b6600014b6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x167f, match64: 0x00000000, model64: 0x14b6e00014b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1680, match64: 0x00000000, model64: 0x14b6e00014b77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1681, match64: 0x00000000, model64: 0x14ac300014ac9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14b7700014b7f, model64: 0x14b7f00014b8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1682, match64: 0x00000000, model64: 0x14b8b00014b95},
		modelTuple{type64: 0x2700000027, matchRI: 0x1683, match64: 0x00000000, model64: 0x14b9500014ba1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1684, match64: 0x00000000, model64: 0x14ba100014ba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1685, match64: 0x00000000, model64: 0x14ba800014bae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1686, match64: 0x00000000, model64: 0x14bae00014bb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14bb900014bc5, model64: 0x14bb900014bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1687, match64: 0x00000000, model64: 0x14bc500014bd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1688, match64: 0x00000000, model64: 0x14bd000014bd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1689, match64: 0x00000000, model64: 0x14bd600014bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x168a, match64: 0x00000000, model64: 0x14bdd00014be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x168b, match64: 0x00000000, model64: 0x14be800014bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x168c, match64: 0x00000000, model64: 0x14bf400014c01},
		modelTuple{type64: 0x2700000027, matchRI: 0x168d, match64: 0x00000000, model64: 0x14c0100014c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x168e, match64: 0x00000000, model64: 0x14c0900014c15},
		modelTuple{type64: 0x2700000027, matchRI: 0x168f, match64: 0x00000000, model64: 0x14c1500014c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1690, match64: 0x00000000, model64: 0x14c1c00014c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1691, match64: 0x00000000, model64: 0x14c2300014c2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1692, match64: 0x00000000, model64: 0x14c2f00014c37},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c3700014c3f, model64: 0x14c3f00014c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1693, match64: 0x00000000, model64: 0x14c4a00014c52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c5200014c5a, model64: 0x14c5a00014c62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c6200014c6a, model64: 0x14c6a00014c75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14c7500014c7d, model64: 0x14c7d00014c88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1694, match64: 0x00000000, model64: 0x14c8800014c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1695, match64: 0x00000000, model64: 0x14c8e00014c99},
		modelTuple{type64: 0x2700000027, matchRI: 0x1696, match64: 0x00000000, model64: 0x14c9900014ca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1697, match64: 0x00000000, model64: 0x14ca500014cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1698, match64: 0x00000000, model64: 0x14cb800014cc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1699, match64: 0x00000000, model64: 0x14cc400014cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x169a, match64: 0x00000000, model64: 0x14cd200014cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x169b, match64: 0x00000000, model64: 0x14cdd00014cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x169c, match64: 0x00000000, model64: 0x14cea00014cf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x169d, match64: 0x00000000, model64: 0x14cf000014cf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x169e, match64: 0x00000000, model64: 0x14cf700014d03},
		modelTuple{type64: 0x2700000027, matchRI: 0x169f, match64: 0x00000000, model64: 0x14d0300014d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a0, match64: 0x00000000, model64: 0x14d0e00014d1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a1, match64: 0x00000000, model64: 0x14d1a00014d27},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a2, match64: 0x00000000, model64: 0x14d2700014d2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a3, match64: 0x00000000, model64: 0x14d2e00014d34},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a4, match64: 0x00000000, model64: 0x14d3400014d40},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a5, match64: 0x00000000, model64: 0x14d4000014d48},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a6, match64: 0x00000000, model64: 0x14d4800014d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a7, match64: 0x00000000, model64: 0x14d5000014d58},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a8, match64: 0x00000000, model64: 0x14d5800014d68},
		modelTuple{type64: 0x2700000027, matchRI: 0x16a9, match64: 0x00000000, model64: 0x14d6800014d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x16aa, match64: 0x00000000, model64: 0xd1730000d176},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ab, match64: 0x00000000, model64: 0x14d7000014d78},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ac, match64: 0x00000000, model64: 0x14d7800014d80},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ad, match64: 0x00000000, model64: 0x14d8000014d96},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ae, match64: 0x00000000, model64: 0x14d9600014da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16af, match64: 0x00000000, model64: 0x14da400014dad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14dad00014db5, model64: 0x14db500014dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b0, match64: 0x00000000, model64: 0x14dbd00014dcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b1, match64: 0x00000000, model64: 0x14dcb00014dd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b2, match64: 0x00000000, model64: 0x14dbd00014dcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b3, match64: 0x00000000, model64: 0x14dd700014de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b4, match64: 0x00000000, model64: 0x14de400014def},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b5, match64: 0x00000000, model64: 0x14def00014dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b6, match64: 0x00000000, model64: 0x14dfa00014e0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b7, match64: 0x00000000, model64: 0x3baa00003bb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b8, match64: 0x00000000, model64: 0x14e0b00014e16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e1600014e1e, model64: 0x14e1e00014e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x16b9, match64: 0x00000000, model64: 0x14e2500014e29},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ba, match64: 0x00000000, model64: 0x14e2900014e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bb, match64: 0x00000000, model64: 0x14e3800014e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bc, match64: 0x00000000, model64: 0x14e4200014e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bd, match64: 0x00000000, model64: 0x14e4b00014e54},
		modelTuple{type64: 0x2700000027, matchRI: 0x16be, match64: 0x00000000, model64: 0x14e5400014e5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16bf, match64: 0x00000000, model64: 0x14e5c00014e6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c0, match64: 0x00000000, model64: 0x14e6b00014e75},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c1, match64: 0x00000000, model64: 0x14e7500014e7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e7f00014e91, model64: 0x14e9100014e9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14e9a00014eb0, model64: 0x14eb000014ebd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ebd00014ecf, model64: 0x14ecf00014ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c2, match64: 0x00000000, model64: 0x14ed800014ee2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14ee200014ef5, model64: 0x14e3800014e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c3, match64: 0x00000000, model64: 0x14ef500014f0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c4, match64: 0x00000000, model64: 0x14f0d00014f1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c5, match64: 0x00000000, model64: 0x14f1f00014f34},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c6, match64: 0x00000000, model64: 0x14f3400014f4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f4b00014f53, model64: 0x14f5300014f6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f6a00014f72, model64: 0x14f7200014f86},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c7, match64: 0x00000000, model64: 0x14f8600014f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14f9600014fa3, model64: 0x14fa300014fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c8, match64: 0x00000000, model64: 0x14fb000014fc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x14fc200014fca, model64: 0x14fca00014fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x16c9, match64: 0x00000000, model64: 0x14fdc00014fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ca, match64: 0x00000000, model64: 0x14fe800014ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cb, match64: 0x00000000, model64: 0x14ffb0001500e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1500e0001501a, model64: 0x14fdc00014fe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1501a00015024, model64: 0x150240001502e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cc, match64: 0x00000000, model64: 0x1502e00015039},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cd, match64: 0x00000000, model64: 0x1503900015044},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1504400015052, model64: 0x1505200015060},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ce, match64: 0x00000000, model64: 0x1506000015070},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1507000015079, model64: 0x1507900015082},
		modelTuple{type64: 0x2700000027, matchRI: 0x16cf, match64: 0x00000000, model64: 0x1508200015091},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1509100015099, model64: 0x15099000150a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d0, match64: 0x00000000, model64: 0x150a1000150a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d1, match64: 0x00000000, model64: 0x150a9000150b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d2, match64: 0x00000000, model64: 0x150b2000150bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150bc000150ca, model64: 0x150ca000150d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x150d8000150e0, model64: 0x150e0000150e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d3, match64: 0x00000000, model64: 0x150e8000150fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d4, match64: 0x00000000, model64: 0x150fb00015109},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d5, match64: 0x00000000, model64: 0x1510900015123},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d6, match64: 0x00000000, model64: 0x1512300015142},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d7, match64: 0x00000000, model64: 0x1514200015155},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d8, match64: 0x00000000, model64: 0x1515500015163},
		modelTuple{type64: 0x2700000027, matchRI: 0x16d9, match64: 0x00000000, model64: 0x1516300015171},
		modelTuple{type64: 0x2700000027, matchRI: 0x16da, match64: 0x00000000, model64: 0x151710001517e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16db, match64: 0x00000000, model64: 0x1517e0001518b},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dc, match64: 0x00000000, model64: 0x1518b00015193},
		modelTuple{type64: 0x2700000027, matchRI: 0x16dd, match64: 0x00000000, model64: 0x1518b00015193},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151930001519c, model64: 0x1519c000151a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x16de, match64: 0x00000000, model64: 0x14b6600014b6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x16df, match64: 0x00000000, model64: 0x151a5000151ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e0, match64: 0x00000000, model64: 0x151ad000151b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e1, match64: 0x00000000, model64: 0x151b3000151bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e2, match64: 0x00000000, model64: 0x151bc000151c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e3, match64: 0x00000000, model64: 0x151bc000151c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e4, match64: 0x00000000, model64: 0x151c7000151d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151d0000151d8, model64: 0x151d0000151d8},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x151d8000151e0, model64: 0x151d8000151e0},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x16e5, match64: 0x00000000, model64: 0x151e0000151e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x151e9000151f1, model64: 0x151f1000151f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e6, match64: 0x00000000, model64: 0x151f800015201},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e7, match64: 0x00000000, model64: 0x1520100015208},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e8, match64: 0x00000000, model64: 0x152080001520f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16e9, match64: 0x00000000, model64: 0x1520f0001521c},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ea, match64: 0x00000000, model64: 0x152080001520f},
		modelTuple{type64: 0x2700000027, matchRI: 0x16eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ee, match64: 0x00000000, model64: 0x1521c00015224},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ef, match64: 0x00000000, model64: 0x1521c00015224},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16f1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f6, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f7, match64: 0x00000000, model64: 0xa6a00000a6a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x16f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fa, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152470001524f, model64: 0x1524f00015253},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x16fc, match64: 0x00000000, model64: 0x152530001525a},
		modelTuple{type64: 0x2700000027, matchRI: 0x16fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x16ff, match64: 0x00000000, model64: 0x1525f0001526a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1700, match64: 0x00000000, model64: 0x1526a00015274},
		modelTuple{type64: 0x2700000027, matchRI: 0x1701, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1702, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1705, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1706, match64: 0x00000000, model64: 0x152860001528d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1707, match64: 0x00000000, model64: 0x1528d00015294},
		modelTuple{type64: 0x2700000027, matchRI: 0x1708, match64: 0x00000000, model64: 0x1529400015299},
		modelTuple{type64: 0x2700000027, matchRI: 0x1709, match64: 0x00000000, model64: 0x15299000152a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x170a, match64: 0x00000000, model64: 0x152a0000152aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x170b, match64: 0x00000000, model64: 0x152aa000152ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x170c, match64: 0x00000000, model64: 0x103c7000103c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x170d, match64: 0x00000000, model64: 0x152ab000152b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x170e, match64: 0x00000000, model64: 0x152b1000152b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x170f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1710, match64: 0x00000000, model64: 0x152b6000152ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1711, match64: 0x00000000, model64: 0x152ba000152c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1712, match64: 0x00000000, model64: 0x152c1000152cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152cb000152da, model64: 0x152da000152e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x152e9000152f6, model64: 0x152f600015303},
		modelTuple{type64: 0x2700000027, matchRI: 0x1713, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1714, match64: 0x00000000, model64: 0x153030001530d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1530d00015315, model64: 0x153150001531d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1715, match64: 0x00000000, model64: 0x1531d00015325},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1716, match64: 0x00000000, model64: 0x153250001532f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1717, match64: 0x00000000, model64: 0x1532f00015339},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1718, match64: 0x00000000, model64: 0x153390001534a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1719, match64: 0x00000000, model64: 0x1534a00015359},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171a, match64: 0x00000000, model64: 0x153590001536b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171b, match64: 0x00000000, model64: 0x1536b00015373},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171c, match64: 0x00000000, model64: 0x153730001537d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171d, match64: 0x00000000, model64: 0x1537d00015386},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171e, match64: 0x00000000, model64: 0x153860001538b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x171f, match64: 0x00000000, model64: 0x1538b00015394},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1720, match64: 0x00000000, model64: 0x1539400015399},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1721, match64: 0x00000000, model64: 0x153990001539f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1722, match64: 0x00000000, model64: 0x1539f000153aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1723, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1726, match64: 0x00000000, model64: 0x153bb000153c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x153c5000153db, model64: 0x153db000153f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1727, match64: 0x00000000, model64: 0x153f1000153f6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x172a, match64: 0x00000000, model64: 0x1540a00015413},
		modelTuple{type64: 0x2700000027, matchRI: 0x172b, match64: 0x00000000, model64: 0x154130001541c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1541c00015424, model64: 0x154240001542c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1542c00015437, model64: 0x154370001543b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1543b00015440, model64: 0x1544000015444},
		modelTuple{type64: 0x2700000027, matchRI: 0x172c, match64: 0x00000000, model64: 0x154440001544e},
		modelTuple{type64: 0x2700000027, matchRI: 0x172d, match64: 0x00000000, model64: 0x1544e00015457},
		modelTuple{type64: 0x2700000027, matchRI: 0x172e, match64: 0x00000000, model64: 0x154570001545d},
		modelTuple{type64: 0x2700000027, matchRI: 0x172f, match64: 0x00000000, model64: 0x1545d00015461},
		modelTuple{type64: 0x2700000027, matchRI: 0x1730, match64: 0x00000000, model64: 0x154610001546b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1731, match64: 0x00000000, model64: 0x1546b00015472},
		modelTuple{type64: 0x2700000027, matchRI: 0x1732, match64: 0x00000000, model64: 0x1547200015479},
		modelTuple{type64: 0x2700000027, matchRI: 0x1733, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1734, match64: 0x00000000, model64: 0x1547900015481},
		modelTuple{type64: 0x2700000027, matchRI: 0x1736, match64: 0x00000000, model64: 0x1548600015496},
		modelTuple{type64: 0x2700000027, matchRI: 0x1737, match64: 0x00000000, model64: 0x730200007307},
		modelTuple{type64: 0x2700000027, matchRI: 0x1738, match64: 0x00000000, model64: 0x136b00001370},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154a3000154a8, model64: 0x154a8000154ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154ae000154b9, model64: 0x154b9000154c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1739, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154d3000154dd, model64: 0x154dd000154e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x173d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154e1000154ef, model64: 0x154ef000154f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x154f700015504, model64: 0x155040001550b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1550b00015517, model64: 0x155170001551d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x173e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x173f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1742, match64: 0x00000000, model64: 0x155290001552f},
		modelTuple{type64: 0x24300000245, matchRI: 0x1743, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1745, match64: 0x00000000, model64: 0x155340001553d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1746, match64: 0x00000000, model64: 0x1553d00015545},
		modelTuple{type64: 0x2700000027, matchRI: 0x1747, match64: 0x00000000, model64: 0x155450001554d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1554d00015552, model64: 0x1555200015558},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x155580001555d, model64: 0x1555d00015563},
		modelTuple{type64: 0x2700000027, matchRI: 0x1748, match64: 0x00000000, model64: 0x155630001556a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1556f00015576, model64: 0x155760001557d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1557d00015585, model64: 0x155850001558d},
		modelTuple{type64: 0x2700000027, matchRI: 0x174b, match64: 0x00000000, model64: 0x155900001559e},
		modelTuple{type64: 0x2700000027, matchRI: 0x174c, match64: 0x00000000, model64: 0x1559e000155a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x174d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x174e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x174f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1750, match64: 0x00000000, model64: 0x155a6000155b4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1751, match64: 0x00000000, model64: 0x155b4000155cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1752, match64: 0x00000000, model64: 0x155cd000155de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1753, match64: 0x00000000, model64: 0x155de000155ee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1754, match64: 0x00000000, model64: 0x155ee000155fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1755, match64: 0x00000000, model64: 0x155fd0001560c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1756, match64: 0x00000000, model64: 0x1560c0001561c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1757, match64: 0x00000000, model64: 0x1561c0001562c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1758, match64: 0x00000000, model64: 0x1562c00015638},
		modelTuple{type64: 0x2700000027, matchRI: 0x175a, match64: 0x00000000, model64: 0x1563c00015641},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1565200015660, model64: 0x1566000015667},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1566700015671, model64: 0x1567100015674},
		modelTuple{type64: 0x2700000027, matchRI: 0x175e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1568900015697, model64: 0x15697000156a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1763, match64: 0x00000000, model64: 0x156a3000156b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156b0000156bd, model64: 0x156bd000156cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1764, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1765, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1766, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1767, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156d7000156e6, model64: 0x156d7000156e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x156e6000156f4, model64: 0x156e6000156f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x176b, match64: 0x00000000, model64: 0x157010001570b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1570b00015713, model64: 0x157130001571c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1571c00015729, model64: 0x1572900015738},
		modelTuple{type64: 0x2700000027, matchRI: 0x176c, match64: 0x00000000, model64: 0x1573800015743},
		modelTuple{type64: 0x2700000027, matchRI: 0x176d, match64: 0x00000000, model64: 0x1574300015749},
		modelTuple{type64: 0x2700000027, matchRI: 0x176e, match64: 0x00000000, model64: 0x1574900015750},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1575000015756, model64: 0x157560001575d},
		modelTuple{type64: 0x2700000027, matchRI: 0x176f, match64: 0x00000000, model64: 0x690400006908},
		modelTuple{type64: 0x2700000027, matchRI: 0x1770, match64: 0x00000000, model64: 0x1575d00015768},
		modelTuple{type64: 0x2700000027, matchRI: 0x1771, match64: 0x00000000, model64: 0x1576800015771},
		modelTuple{type64: 0x2700000027, matchRI: 0x1772, match64: 0x00000000, model64: 0x1577100015775},
		modelTuple{type64: 0x2700000027, matchRI: 0x1773, match64: 0x00000000, model64: 0x1577500015779},
		modelTuple{type64: 0x2700000027, matchRI: 0x1774, match64: 0x00000000, model64: 0x157790001577d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1775, match64: 0x00000000, model64: 0x1577d00015782},
		modelTuple{type64: 0x2700000027, matchRI: 0x1776, match64: 0x00000000, model64: 0x1578200015787},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157870001578f, model64: 0x107b8000107c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1578f00015796, model64: 0x157960001579e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1777, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1778, match64: 0x00000000, model64: 0x1579e000157a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1779, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x157aa000157b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x177c, match64: 0x00000000, model64: 0x157bc000157c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x177d, match64: 0x00000000, model64: 0x157c6000157d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x157d7000157e3, model64: 0x157d7000157e3},
		modelTuple{type64: 0x24300000245, matchRI: 0x177e, match64: 0x00000000, model64: 0x157e3000157e9},
		modelTuple{type64: 0x24300000245, matchRI: 0x177f, match64: 0x00000000, model64: 0x157e9000157f0},
		modelTuple{type64: 0x24300000245, matchRI: 0x1780, match64: 0x00000000, model64: 0x157f0000157f8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1580400015811},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1784, match64: 0x00000000, model64: 0x1581b00015820},
		modelTuple{type64: 0x2700000027, matchRI: 0x1785, match64: 0x00000000, model64: 0x4cb000004cb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1786, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1787, match64: 0x00000000, model64: 0x809b0000809d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1582000015826, model64: 0x158260001582d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1582d00015833, model64: 0x60e6000060e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1583300015839, model64: 0x158390001583c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1583c00015842, model64: 0x103c7000103c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1584200015848, model64: 0x158480001584b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1584b00015851, model64: 0x103d0000103d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1585100015857, model64: 0xcaf00000cb1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158570001585d, model64: 0x1585d00015860},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1586000015866, model64: 0x1586600015869},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158690001586f, model64: 0x1586f00015872},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1587200015878, model64: 0x158780001587c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1587c00015882, model64: 0x1588200015885},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158850001588b, model64: 0x1588b00015892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1589200015898, model64: 0x158980001589f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1788, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158a9000158af, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x178a, match64: 0x00000000, model64: 0x158af000158b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158b4000158bd, model64: 0x1413e00014143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158bd000158c4, model64: 0x158c4000158c7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158c7000158d0, model64: 0x158d0000158d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158d5000158df, model64: 0x158df000158e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158e5000158f1, model64: 0x158f1000158f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x158f900015900, model64: 0x94e0000094e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1590000015907, model64: 0x159070001590a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1590a00015911, model64: 0x1591100015914},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159140001591c, model64: 0x1591c00015920},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159200001592b, model64: 0x1592b00015932},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159320001593a, model64: 0x1593a0001593e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1593e00015947, model64: 0x159470001594c},
		modelTuple{type64: 0x2700000027, matchRI: 0x178b, match64: 0x00000000, model64: 0x1594c0001594f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1594f00015958, model64: 0x159580001595d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1595d00015964, model64: 0x1596400015967},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1596700015970, model64: 0x57f2000057f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1597000015977, model64: 0xb10f0000b112},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1597700015982, model64: 0x1598200015989},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159890001598d, model64: 0x149680001496c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1598d00015992, model64: 0x1217000012175},
		modelTuple{type64: 0x2700000027, matchRI: 0x178c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1599200015997, model64: 0x159470001594c},
		modelTuple{type64: 0x2700000027, matchRI: 0x178e, match64: 0x00000000, model64: 0x1599b000159ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x178f, match64: 0x00000000, model64: 0x159ac000159bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159bc000159c6, model64: 0x159c6000159d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159d5000159df, model64: 0x159df000159fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x159fd00015a07, model64: 0x15a0700015a0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a0d00015a17, model64: 0x15a1700015a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1791, match64: 0x00000000, model64: 0x15a2100015a25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1793, match64: 0x00000000, model64: 0x15a3000015a35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1794, match64: 0x00000000, model64: 0x15a3500015a3b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a4a00015a55, model64: 0x15a4a00015a55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15a5500015a5f, model64: 0x15a5f00015a69},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x15a6900015a77, model64: 0x15a7700015a85},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x15a8500015a8d, model64: 0x15a8d00015a95},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x15a9500015a9c, model64: 0x15a9c00015aa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15aaa00015ab2, model64: 0x15ab200015abb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x179a, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x2700000027, matchRI: 0x179b, match64: 0x00000000, model64: 0x15aca00015ad0},
		modelTuple{type64: 0x2700000027, matchRI: 0x179c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x179d, match64: 0x00000000, model64: 0x15ad000015ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x179e, match64: 0x00000000, model64: 0x15ad700015ae4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a0, match64: 0x00000000, model64: 0x15ae900015af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a1, match64: 0x00000000, model64: 0x15af600015afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a2, match64: 0x00000000, model64: 0x15afd00015b08},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a3, match64: 0x00000000, model64: 0x15b0800015b19},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a4, match64: 0x00000000, model64: 0x15b1900015b2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a5, match64: 0x00000000, model64: 0x15b2b00015b3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a6, match64: 0x00000000, model64: 0x15b3c00015b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a7, match64: 0x00000000, model64: 0x15b4800015b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a8, match64: 0x00000000, model64: 0x15b5500015b66},
		modelTuple{type64: 0x2700000027, matchRI: 0x17a9, match64: 0x00000000, model64: 0x15b6600015b72},
		modelTuple{type64: 0x2700000027, matchRI: 0x17aa, match64: 0x00000000, model64: 0x15b7200015b7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ab, match64: 0x00000000, model64: 0x15b7d00015b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ac, match64: 0x00000000, model64: 0x15b8700015b92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15b9200015b9e, model64: 0x15b9e00015bac},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ad, match64: 0x00000000, model64: 0x79330000793b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17af, match64: 0x00000000, model64: 0x15bac00015bbf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17b0, match64: 0x00000000, model64: 0x15bbf00015bd7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17b1, match64: 0x00000000, model64: 0x15bd700015be1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17b2, match64: 0x00000000, model64: 0x15be100015bec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17b3, match64: 0x00000000, model64: 0x15bec00015bf9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17b4, match64: 0x00000000, model64: 0x15bf900015c06},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b8, match64: 0x00000000, model64: 0x15c1b00015c1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17b9, match64: 0x00000000, model64: 0x15c1e00015c21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c2100015c2f, model64: 0x5ce000005ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c2f00015c39, model64: 0xab7a0000ab7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bc, match64: 0x00000000, model64: 0x15c3f00015c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x17bd, match64: 0x00000000, model64: 0x1b8200001b84},
		modelTuple{type64: 0x2700000027, matchRI: 0x17be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x52590000525f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c2, match64: 0x00000000, model64: 0x15c4d00015c5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c3, match64: 0x00000000, model64: 0x15c5a00015c64},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c6400015c6a, model64: 0x15c6a00015c75},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15c7e00015c84},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c5, match64: 0x00000000, model64: 0x924c00009251},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c6, match64: 0x00000000, model64: 0x15c9000015c97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15c9e00015ca4, model64: 0x15ca400015caf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x15cb500015cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x17c8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ca, match64: 0x00000000, model64: 0xa91f0000a921},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15cf600015cfe, model64: 0x15cfe00015d07},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x15d0700015d0f, model64: 0x15d0f00015d1d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d1d00015d26, model64: 0x15d2600015d35},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d6100015d6a, model64: 0x15d6100015d6a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d6a00015d75, model64: 0x15d6a00015d75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d7500015d81, model64: 0x15d8100015d8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d8d00015d94, model64: 0x15d9400015d9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15d9b00015da2, model64: 0x15da200015da4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15da400015da8, model64: 0x15da400015da8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15da800015db4, model64: 0x15da800015db4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15db400015dbf, model64: 0x15db400015dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x17da, match64: 0x00000000, model64: 0x15dbf00015dc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x17db, match64: 0x00000000, model64: 0x15dc400015dc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x17dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15dd100015dda, model64: 0x15dda00015de6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15de600015def, model64: 0x15def00015df5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15df500015dff, model64: 0x15dff00015e06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e0600015e10, model64: 0x15e1000015e17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e1700015e22, model64: 0x15e2200015e2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e2a00015e34, model64: 0x15e3400015e3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e3c00015e47, model64: 0x15e4700015e4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e4e00015e5a, model64: 0x15e5a00015e62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e6200015e6d, model64: 0x15e6d00015e74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e7400015e7c, model64: 0x15e7c00015e85},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e8500015e8e, model64: 0x15e8e00015e9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15e9b00015ea4, model64: 0x3c6600003c67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ea400015eac, model64: 0x15eac00015eb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15eb000015eb6, model64: 0x15eb600015ebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x17df, match64: 0x00000000, model64: 0xf1720000f179},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17e9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x17ea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ec, match64: 0x00000000, model64: 0x1381e0001381f},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ed, match64: 0x00000000, model64: 0x1bf600001bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ee, match64: 0x00000000, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ef, match64: 0x00000000, model64: 0x15ee700015ee8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15ee800015eef, model64: 0x1c3a00001c3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f0, match64: 0x00000000, model64: 0x3c6600003c67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15eef00015efe, model64: 0x15efe00015f07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f0700015f13, model64: 0x15f1300015f19},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f1, match64: 0x00000000, model64: 0x15f1900015f21},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f2, match64: 0x00000000, model64: 0x15f2100015f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f3, match64: 0x00000000, model64: 0x15f2900015f31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f3100015f3d, model64: 0x15f3d00015f43},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f4, match64: 0x00000000, model64: 0x15f4300015f4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f4c00015f5b, model64: 0x15f5b00015f63},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f5, match64: 0x00000000, model64: 0x15f6300015f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f6, match64: 0x00000000, model64: 0x15f6500015f69},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f6900015f6f, model64: 0x15f6f00015f73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f7300015f79, model64: 0xa3c00000a3c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f7900015f80, model64: 0x15f8000015f87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f8700015f8d, model64: 0xa2ee0000a2f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15f8d00015f94, model64: 0x15f9400015f9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f7, match64: 0x00000000, model64: 0x15f9b00015fa2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fa200015fac, model64: 0x15fac00015fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f8, match64: 0x00000000, model64: 0x15fb000015fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x17f9, match64: 0x00000000, model64: 0x15fb800015fc8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fc800015fd1, model64: 0x15fd100015fd6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fd600015fdf, model64: 0x15fdf00015fe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fe300015fef, model64: 0x15fef00015fff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x15fff00016011, model64: 0x160110001601a},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fa, match64: 0x00000000, model64: 0x1601a00016027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1602700016032, model64: 0x1603200016036},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1603600016041, model64: 0x1604100016045},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1604500016050, model64: 0x1605000016054},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160540001605f, model64: 0x1605f00016063},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160630001606e, model64: 0x1606e00016072},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fb, match64: 0x00000000, model64: 0x160720001607e},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fc, match64: 0x00000000, model64: 0x1607e00016088},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fd, match64: 0x00000000, model64: 0x1608800016090},
		modelTuple{type64: 0x2700000027, matchRI: 0x17fe, match64: 0x00000000, model64: 0x1609000016097},
		modelTuple{type64: 0x2700000027, matchRI: 0x17ff, match64: 0x00000000, model64: 0x16097000160a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1800, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1801, match64: 0x00000000, model64: 0x160a0000160a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1802, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1803, match64: 0x00000000, model64: 0x160a7000160b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1804, match64: 0x00000000, model64: 0x160b1000160ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1805, match64: 0x00000000, model64: 0x160ba000160c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160c3000160c9, model64: 0x160c9000160d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1806, match64: 0x00000000, model64: 0x160d2000160db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1807, match64: 0x00000000, model64: 0x160db000160e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x160e4000160eb, model64: 0x160eb000160f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1808, match64: 0x00000000, model64: 0x160f4000160fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1809, match64: 0x00000000, model64: 0x160fd00016107},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161070001610d, model64: 0x1610d00016116},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161160001611f, model64: 0x161160001611f},
		modelTuple{type64: 0x2700000027, matchRI: 0x180a, match64: 0x00000000, model64: 0x1611f00016128},
		modelTuple{type64: 0x2700000027, matchRI: 0x180b, match64: 0x00000000, model64: 0x1612800016132},
		modelTuple{type64: 0x2700000027, matchRI: 0x180c, match64: 0x00000000, model64: 0x161320001613b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1613b00016144, model64: 0x161440001614d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1614d00016153, model64: 0x161530001615c},
		modelTuple{type64: 0x2700000027, matchRI: 0x180d, match64: 0x00000000, model64: 0x1615c00016165},
		modelTuple{type64: 0x2700000027, matchRI: 0x180e, match64: 0x00000000, model64: 0x161650001616e},
		modelTuple{type64: 0x2700000027, matchRI: 0x180f, match64: 0x00000000, model64: 0x1616e00016177},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1617700016180, model64: 0x161800001618a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1618a00016191, model64: 0x161910001619a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1810, match64: 0x00000000, model64: 0x1619a000161a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1811, match64: 0x00000000, model64: 0x161a4000161b0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1812, match64: 0x00000000, model64: 0x161b0000161b3},
		modelTuple{type64: 0x24300000245, matchRI: 0x1813, match64: 0x00000000, model64: 0x161b3000161bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1814, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1815, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1816, match64: 0x00000000, model64: 0x82dc000082df},
		modelTuple{type64: 0x2700000027, matchRI: 0x1817, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1818, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1819, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x181a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x181b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x181c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x161bf000161ca, model64: 0x161ca000161ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x181d, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x181e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x181f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x1820, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1822, match64: 0x00000000, model64: 0x161d2000161d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1823, match64: 0x00000000, model64: 0x161d8000161dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1824, match64: 0x00000000, model64: 0x161dd000161e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1825, match64: 0x00000000, model64: 0x161e3000161e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1826, match64: 0x00000000, model64: 0x161e9000161f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1827, match64: 0x00000000, model64: 0x161f300016201},
		modelTuple{type64: 0x2700000027, matchRI: 0x1828, match64: 0x00000000, model64: 0x1620100016207},
		modelTuple{type64: 0x2700000027, matchRI: 0x1829, match64: 0x00000000, model64: 0x162070001620d},
		modelTuple{type64: 0x2700000027, matchRI: 0x182a, match64: 0x00000000, model64: 0x1620d00016214},
		modelTuple{type64: 0x2700000027, matchRI: 0x182b, match64: 0x00000000, model64: 0x162140001621a},
		modelTuple{type64: 0x2700000027, matchRI: 0x182c, match64: 0x00000000, model64: 0x1621a00016220},
		modelTuple{type64: 0x2700000027, matchRI: 0x182d, match64: 0x00000000, model64: 0x1622000016226},
		modelTuple{type64: 0x2700000027, matchRI: 0x182e, match64: 0x00000000, model64: 0x162260001622b},
		modelTuple{type64: 0x2700000027, matchRI: 0x182f, match64: 0x00000000, model64: 0x1622b00016231},
		modelTuple{type64: 0x2700000027, matchRI: 0x1830, match64: 0x00000000, model64: 0x1623100016236},
		modelTuple{type64: 0x2700000027, matchRI: 0x1831, match64: 0x00000000, model64: 0x162360001623c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1832, match64: 0x00000000, model64: 0x1623c00016243},
		modelTuple{type64: 0x2700000027, matchRI: 0x1833, match64: 0x00000000, model64: 0x162430001624b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1834, match64: 0x00000000, model64: 0x1624b00016252},
		modelTuple{type64: 0x2700000027, matchRI: 0x1835, match64: 0x00000000, model64: 0x1625200016259},
		modelTuple{type64: 0x2700000027, matchRI: 0x1836, match64: 0x00000000, model64: 0x1625900016261},
		modelTuple{type64: 0x2700000027, matchRI: 0x1837, match64: 0x00000000, model64: 0x162610001626c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1838, match64: 0x00000000, model64: 0x984e00009854},
		modelTuple{type64: 0x2700000027, matchRI: 0x1839, match64: 0x00000000, model64: 0x82d9000082dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x183a, match64: 0x00000000, model64: 0x57f2000057f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x183b, match64: 0x00000000, model64: 0x1626c00016270},
		modelTuple{type64: 0x2700000027, matchRI: 0x183c, match64: 0x00000000, model64: 0x128a0000128a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x183d, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x24300000245, matchRI: 0x183e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x162700001627e, model64: 0x1627e00016285},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x183f, match64: 0x00000000, model64: 0x1628500016290},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1840, match64: 0x00000000, model64: 0x162900001629b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1841, match64: 0x00000000, model64: 0x1629b000162a5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1842, match64: 0x00000000, model64: 0x162a5000162af},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1843, match64: 0x00000000, model64: 0x162af000162ba},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1844, match64: 0x00000000, model64: 0x162ba000162c9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1845, match64: 0x00000000, model64: 0x162c9000162ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1846, match64: 0x00000000, model64: 0x162ce000162d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1847, match64: 0x00000000, model64: 0x162d7000162de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1848, match64: 0x00000000, model64: 0x162de000162e9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1849, match64: 0x00000000, model64: 0x162e9000162f3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184a, match64: 0x00000000, model64: 0x162f300016303},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184b, match64: 0x00000000, model64: 0x163030001630e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184c, match64: 0x00000000, model64: 0x1630e0001631d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184d, match64: 0x00000000, model64: 0x1631d00016327},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184e, match64: 0x00000000, model64: 0x1632700016331},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x184f, match64: 0x00000000, model64: 0x163310001633c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1850, match64: 0x00000000, model64: 0x1633c00016346},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1851, match64: 0x00000000, model64: 0xfb120000fb17},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1852, match64: 0x00000000, model64: 0x1634600016351},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1853, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1854, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1855, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1857, match64: 0x00000000, model64: 0x1635500016358},
		modelTuple{type64: 0x2700000027, matchRI: 0x1858, match64: 0x00000000, model64: 0x10f3d00010f40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1859, match64: 0x00000000, model64: 0x1635800016360},
		modelTuple{type64: 0x2700000027, matchRI: 0x185a, match64: 0x00000000, model64: 0x1636000016363},
		modelTuple{type64: 0x2700000027, matchRI: 0x185b, match64: 0x00000000, model64: 0x802e00008035},
		modelTuple{type64: 0x2700000027, matchRI: 0x185c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x185d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1860, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1638d0001639b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1863, match64: 0x00000000, model64: 0x154dd000154e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1864, match64: 0x00000000, model64: 0x1639e000163a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1865, match64: 0x00000000, model64: 0x163a6000163ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1866, match64: 0x00000000, model64: 0x163ad000163b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1867, match64: 0x00000000, model64: 0x163b1000163b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1868, match64: 0x00000000, model64: 0x163b8000163bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x186a, match64: 0x00000000, model64: 0x5aa600005aad},
		modelTuple{type64: 0x2700000027, matchRI: 0x186b, match64: 0x00000000, model64: 0x163c3000163ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163ca000163cf, model64: 0x163cf000163dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x186c, match64: 0x00000000, model64: 0x163dc000163e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x186e, match64: 0x00000000, model64: 0x163e8000163ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x186f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1870, match64: 0x00000000, model64: 0x163fe0001640e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1871, match64: 0x00000000, model64: 0x1640e00016419},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1874, match64: 0x00000000, model64: 0x164230001642b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1875, match64: 0x00000000, model64: 0x1642b00016434},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164340001643b, model64: 0x164340001643b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1876, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1644700016453},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x187b, match64: 0x00000000, model64: 0x1646000016474},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164740001647b, model64: 0x1647b00016484},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164840001648a, model64: 0x1648a00016491},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1649100016496, model64: 0x164960001649c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1649c000164a2, model64: 0x164a2000164aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164aa000164af, model64: 0x164af000164b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164b4000164b9, model64: 0x164b9000164c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164c0000164c6, model64: 0x164c6000164d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x187c, match64: 0x00000000, model64: 0x164d2000164da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164da000164e0, model64: 0x164e0000164e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164e3000164e9, model64: 0x164e9000164f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x164f2000164f8, model64: 0x164f800016500},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1650000016506, model64: 0x165060001650f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1650f00016515, model64: 0x165150001651c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1651c00016522, model64: 0x1652200016529},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165290001652f, model64: 0x1652f00016537},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165370001653d, model64: 0x1653d00016546},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165460001654c, model64: 0x1654c00016562},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1656200016568, model64: 0x1656800016577},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165770001657d, model64: 0x1657d0001658c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1658c00016592, model64: 0x16592000165a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165a1000165a7, model64: 0x165a7000165b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165b7000165bd, model64: 0x165bd000165cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x187d, match64: 0x00000000, model64: 0x165cd000165d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165d8000165de, model64: 0x165de000165e9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165e9000165ef, model64: 0x165ef000165fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x165fb00016601, model64: 0x166010001660f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1660f00016615, model64: 0x1661500016620},
		modelTuple{type64: 0x2700000027, matchRI: 0x187e, match64: 0x00000000, model64: 0x1662000016627},
		modelTuple{type64: 0x2700000027, matchRI: 0x187f, match64: 0x00000000, model64: 0x166270001662f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1662f00016635, model64: 0x1663500016638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166380001663e, model64: 0x1663e00016640},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1664000016646, model64: 0x166460001664d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1664d00016653, model64: 0x1665300016659},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166590001665f, model64: 0x1665f00016661},
		modelTuple{type64: 0x2700000027, matchRI: 0x1880, match64: 0x00000000, model64: 0x1666100016668},
		modelTuple{type64: 0x2700000027, matchRI: 0x1881, match64: 0x00000000, model64: 0x166680001666e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1666e00016674, model64: 0x166740001667f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1667f00016685, model64: 0x1668500016688},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1668800016691, model64: 0x1669100016698},
		modelTuple{type64: 0x2700000027, matchRI: 0x1882, match64: 0x00000000, model64: 0x16698000166a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1883, match64: 0x00000000, model64: 0x166a2000166aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166aa000166b0, model64: 0x166b0000166b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166b3000166b9, model64: 0x166b9000166bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166bd000166c3, model64: 0x166c3000166cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166cb000166d1, model64: 0x138590001385b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166d1000166d7, model64: 0x166d7000166da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1884, match64: 0x00000000, model64: 0x166da000166e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166e2000166e8, model64: 0x166e8000166f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x166f2000166f8, model64: 0x166f800016700},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1670000016706, model64: 0x167060001670a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1670a00016710, model64: 0x1671000016713},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1671300016719, model64: 0x167190001671c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1671c00016722, model64: 0x167220001672a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1672a00016730, model64: 0x1673000016739},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167390001673f, model64: 0x10a2100010a23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1673f00016745, model64: 0x167450001674e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1674e00016754, model64: 0x1675400016760},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1676000016766, model64: 0x1283f00012843},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167660001676c, model64: 0x1676c00016773},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1677300016779, model64: 0x1677900016780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1678000016786, model64: 0x1678600016788},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167880001678e, model64: 0x1678e00016795},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167950001679b, model64: 0x1679b0001679d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1885, match64: 0x00000000, model64: 0x1679d0001679f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1679f000167a9, model64: 0x167a9000167ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x1886, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1888, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1889, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x188a, match64: 0x00000000, model64: 0x167b0000167b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x167ba000167c9, model64: 0x167c9000167d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x188c, match64: 0x00000000, model64: 0x167d9000167e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x188d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x188e, match64: 0x00000000, model64: 0x167e6000167f7},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x167f70001680d, model64: 0x1680d0001681a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1681a00016827, model64: 0x1682700016830},
		modelTuple{type64: 0x1060000010d, matchRI: -0x0001, match64: 0x1683000016836, model64: 0x1683600016845},
		modelTuple{type64: 0x2700000027, matchRI: 0x1890, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1891, match64: 0x00000000, model64: 0x168470001684a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1892, match64: 0x00000000, model64: 0x1684a00016854},
		modelTuple{type64: 0x2700000027, matchRI: 0x1893, match64: 0x00000000, model64: 0x168540001685a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1894, match64: 0x00000000, model64: 0x1685a0001686c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1895, match64: 0x00000000, model64: 0x1686c0001687a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1896, match64: 0x00000000, model64: 0x1687a00016883},
		modelTuple{type64: 0x2700000027, matchRI: 0x1897, match64: 0x00000000, model64: 0x2680000026b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1898, match64: 0x00000000, model64: 0x168830001688e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1899, match64: 0x00000000, model64: 0x1688e00016894},
		modelTuple{type64: 0x24300000245, matchRI: 0x189b, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x189c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x189d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x189e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x189f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168a8000168ad, model64: 0xfb120000fb17},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a5, match64: 0x00000000, model64: 0x168ad000168b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x168bc000168c4, model64: 0x168bc000168c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18a9, match64: 0x00000000, model64: 0x296f00002972},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x18ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x168c7000168d2, model64: 0x168d2000168dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18af, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b0, match64: 0x00000000, model64: 0x168e1000168ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x9f1c00009f24, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b2, match64: 0x00000000, model64: 0x168f800016900},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1690000016908, model64: 0x1690800016912},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169120001691c, model64: 0x1295e00012966},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1691c00016925, model64: 0x1692500016934},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169340001693c, model64: 0x1693c00016946},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1694600016950, model64: 0x169500001695c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1695c00016966, model64: 0x1696600016972},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1697200016977, model64: 0x169770001697d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1697d00016982, model64: 0x1698200016988},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b3, match64: 0x00000000, model64: 0x1698800016993},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169930001699c, model64: 0x169930001699c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b4, match64: 0x00000000, model64: 0x1699c000169a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b5, match64: 0x00000000, model64: 0x169a4000169ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169ad000169b5, model64: 0x169b5000169bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169bb000169c2, model64: 0x169c2000169c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169c9000169d1, model64: 0x169d1000169db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x169db000169e5, model64: 0x169e5000169f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b6, match64: 0x00000000, model64: 0x169f300016a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b7, match64: 0x00000000, model64: 0x16a0200016a0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a0e00016a1a, model64: 0x16a1a00016a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x18b9, match64: 0x00000000, model64: 0x16a2d00016a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ba, match64: 0x00000000, model64: 0x16a3000016a36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a3600016a3f, model64: 0x16a3f00016a45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a4500016a4b, model64: 0x16a4b00016a51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a5100016a57, model64: 0x16a5700016a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bb, match64: 0x00000000, model64: 0x16a5d00016a63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a6300016a6a, model64: 0x16a6a00016a6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a6d00016a73, model64: 0x16a7300016a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16a7800016a7e, model64: 0x16a7e00016a87},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bc, match64: 0x00000000, model64: 0x16a8700016a8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bd, match64: 0x00000000, model64: 0x16a8c00016a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x18be, match64: 0x00000000, model64: 0x16a9500016a99},
		modelTuple{type64: 0x2700000027, matchRI: 0x18bf, match64: 0x00000000, model64: 0x16a9900016a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c0, match64: 0x00000000, model64: 0x16a9c00016aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c1, match64: 0x00000000, model64: 0x16aa000016aa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16aa400016aab, model64: 0x16aab00016aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c2, match64: 0x00000000, model64: 0x16aaf00016ab3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ab300016aba, model64: 0x16aba00016abd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16abd00016ac4, model64: 0x16ac400016ac8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ac800016acf, model64: 0x158390001583c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16acf00016ad5, model64: 0x16a9500016a99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ad500016adc, model64: 0x16adc00016adf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16adf00016ae6, model64: 0x16ae600016aea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16aea00016af1, model64: 0x16af100016af4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c3, match64: 0x00000000, model64: 0x16af400016af7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16af700016afe, model64: 0x16afe00016b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c4, match64: 0x00000000, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c5, match64: 0x00000000, model64: 0x16b0100016b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c6, match64: 0x00000000, model64: 0x16b0700016b0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c7, match64: 0x00000000, model64: 0x16b0b00016b0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c8, match64: 0x00000000, model64: 0x16b0e00016b11},
		modelTuple{type64: 0x2700000027, matchRI: 0x18c9, match64: 0x00000000, model64: 0x16b1100016b14},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ca, match64: 0x00000000, model64: 0x16b1400016b17},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cb, match64: 0x00000000, model64: 0x16b1700016b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cc, match64: 0x00000000, model64: 0x65ec000065ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cd, match64: 0x00000000, model64: 0x185b0000185d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ce, match64: 0x00000000, model64: 0x16b1a00016b23},
		modelTuple{type64: 0x2700000027, matchRI: 0x18cf, match64: 0x00000000, model64: 0x16b2300016b29},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d0, match64: 0x00000000, model64: 0x16b2900016b2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d1, match64: 0x00000000, model64: 0x16b2c00016b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d2, match64: 0x00000000, model64: 0x16b2f00016b32},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d3, match64: 0x00000000, model64: 0x16b3200016b35},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d4, match64: 0x00000000, model64: 0x16b3500016b39},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d5, match64: 0x00000000, model64: 0x16b3900016b40},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d6, match64: 0x00000000, model64: 0x16b4000016b46},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d7, match64: 0x00000000, model64: 0x16b4600016b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d8, match64: 0x00000000, model64: 0x16b4900016b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18d9, match64: 0x00000000, model64: 0x16b4d00016b53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b5300016b5a, model64: 0x16b5a00016b5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18da, match64: 0x00000000, model64: 0x16b5d00016b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b6000016b67, model64: 0x16b6700016b6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18db, match64: 0x00000000, model64: 0x16b6d00016b74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b7400016b7a, model64: 0x16b7a00016b80},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dc, match64: 0x00000000, model64: 0x16b8000016b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x18dd, match64: 0x00000000, model64: 0x16b8300016b8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b8d00016b93, model64: 0x16b9300016b99},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16b9900016ba0, model64: 0x16ba000016ba3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ba300016ba9, model64: 0x16ba900016bac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bac00016bb2, model64: 0x16bb200016bb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18de, match64: 0x00000000, model64: 0x16bb500016bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18df, match64: 0x00000000, model64: 0x187200001874},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e0, match64: 0x00000000, model64: 0x16bb800016bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e1, match64: 0x00000000, model64: 0x16bbb00016bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e2, match64: 0x00000000, model64: 0xee4f0000ee52},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e3, match64: 0x00000000, model64: 0x16bc500016bcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e4, match64: 0x00000000, model64: 0x16bcb00016bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e5, match64: 0x00000000, model64: 0x16bce00016bd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e6, match64: 0x00000000, model64: 0x16bd400016bdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16bdb00016be2, model64: 0x16be200016be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e7, match64: 0x00000000, model64: 0x16be500016be8},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e8, match64: 0x00000000, model64: 0x16be800016bee},
		modelTuple{type64: 0x2700000027, matchRI: 0x18e9, match64: 0x00000000, model64: 0x16bee00016bf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ea, match64: 0x00000000, model64: 0x16bf400016bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x18eb, match64: 0x00000000, model64: 0x16bf700016bfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ec, match64: 0x00000000, model64: 0x16bfa00016c00},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ed, match64: 0x00000000, model64: 0x16c0000016c04},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ee, match64: 0x00000000, model64: 0x16c0400016c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ef, match64: 0x00000000, model64: 0x16c0700016c0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f0, match64: 0x00000000, model64: 0x11e2c00011e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f1, match64: 0x00000000, model64: 0x16c0a00016c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f2, match64: 0x00000000, model64: 0x16c0d00016c17},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f3, match64: 0x00000000, model64: 0x47a0000047c},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f4, match64: 0x00000000, model64: 0x16c1700016c20},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f5, match64: 0x00000000, model64: 0x73a2000073a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f6, match64: 0x00000000, model64: 0x16c2000016c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f7, match64: 0x00000000, model64: 0x16c2300016c27},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f8, match64: 0x00000000, model64: 0x16c2700016c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18f9, match64: 0x00000000, model64: 0x16c2a00016c2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c2e00016c34, model64: 0x16c3400016c3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c3a00016c41, model64: 0x16c4100016c47},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fa, match64: 0x00000000, model64: 0x16c4700016c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fb, match64: 0x00000000, model64: 0x16bce00016bd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fc, match64: 0x00000000, model64: 0x16c4a00016c4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c4d00016c54, model64: 0x16c4700016c4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fd, match64: 0x00000000, model64: 0x16c5400016c57},
		modelTuple{type64: 0x2700000027, matchRI: 0x18fe, match64: 0x00000000, model64: 0x16c5700016c5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x18ff, match64: 0x00000000, model64: 0x16c5a00016c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1900, match64: 0x00000000, model64: 0x16c5e00016c61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c6100016c68, model64: 0x16c6800016c6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1901, match64: 0x00000000, model64: 0x16c6f00016c77},
		modelTuple{type64: 0x2700000027, matchRI: 0x1902, match64: 0x00000000, model64: 0x16c7700016c7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c7e00016c85, model64: 0x16c8500016c8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c8b00016c92, model64: 0x16c9200016c9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16c9c00016ca3, model64: 0x16ca300016cae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1903, match64: 0x00000000, model64: 0x16cae00016cb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1904, match64: 0x00000000, model64: 0x16cb100016cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1905, match64: 0x00000000, model64: 0x16cb800016cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1906, match64: 0x00000000, model64: 0x16cbb00016cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1907, match64: 0x00000000, model64: 0x16cc200016cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1908, match64: 0x00000000, model64: 0x16cc500016cc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1909, match64: 0x00000000, model64: 0x16cc700016cce},
		modelTuple{type64: 0x2700000027, matchRI: 0x190a, match64: 0x00000000, model64: 0x12b4500012b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x190b, match64: 0x00000000, model64: 0x16cce00016cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x190c, match64: 0x00000000, model64: 0x739700007399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16cd600016cde, model64: 0x16cd600016cde},
		modelTuple{type64: 0x2700000027, matchRI: 0x190d, match64: 0x00000000, model64: 0x16cde00016ce0},
		modelTuple{type64: 0x2700000027, matchRI: 0x190e, match64: 0x00000000, model64: 0x16ce000016ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x190f, match64: 0x00000000, model64: 0x16ce600016cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1910, match64: 0x00000000, model64: 0x16cea00016cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1911, match64: 0x00000000, model64: 0x16cf100016cfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1912, match64: 0x00000000, model64: 0x16cfd00016d03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1913, match64: 0x00000000, model64: 0x16d0300016d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1914, match64: 0x00000000, model64: 0x16d0e00016d14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1915, match64: 0x00000000, model64: 0x16d1400016d1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1916, match64: 0x00000000, model64: 0x16d1b00016d24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1917, match64: 0x00000000, model64: 0x16d2400016d2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1918, match64: 0x00000000, model64: 0x16d2a00016d31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1919, match64: 0x00000000, model64: 0x16d3100016d3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x191a, match64: 0x00000000, model64: 0x16d3d00016d49},
		modelTuple{type64: 0x2700000027, matchRI: 0x191b, match64: 0x00000000, model64: 0x16d4900016d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x191c, match64: 0x00000000, model64: 0x16d5000016d5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x191d, match64: 0x00000000, model64: 0x16d5b00016d66},
		modelTuple{type64: 0x2700000027, matchRI: 0x191e, match64: 0x00000000, model64: 0x16d6600016d71},
		modelTuple{type64: 0x2700000027, matchRI: 0x191f, match64: 0x00000000, model64: 0x16d7100016d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1920, match64: 0x00000000, model64: 0x16d7a00016d84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1921, match64: 0x00000000, model64: 0x16d8400016d8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1922, match64: 0x00000000, model64: 0x16d8b00016d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1923, match64: 0x00000000, model64: 0x16d9100016da3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1924, match64: 0x00000000, model64: 0x16da300016daa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1925, match64: 0x00000000, model64: 0x16daa00016db6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1926, match64: 0x00000000, model64: 0x16db600016dc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1927, match64: 0x00000000, model64: 0x16dc100016dc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1928, match64: 0x00000000, model64: 0x16dc800016dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1929, match64: 0x00000000, model64: 0x16dd300016dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x192a, match64: 0x00000000, model64: 0x16dde00016dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x192b, match64: 0x00000000, model64: 0x16dea00016df1},
		modelTuple{type64: 0x2700000027, matchRI: 0x192c, match64: 0x00000000, model64: 0x16df100016dfc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16dfc00016e02, model64: 0x16e0200016e0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e0d00016e13, model64: 0x16e1300016e1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e1a00016e20, model64: 0x16e2000016e27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e2700016e2d, model64: 0x16e2d00016e3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e3a00016e40, model64: 0x16e4000016e50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e5000016e56, model64: 0x16e5600016e61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16e6100016e68, model64: 0x16e6800016e6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x192d, match64: 0x00000000, model64: 0x16e6f00016e77},
		modelTuple{type64: 0x2700000027, matchRI: 0x192e, match64: 0x00000000, model64: 0xa91f0000a921},
		modelTuple{type64: 0x2700000027, matchRI: 0x192f, match64: 0x00000000, model64: 0x58400000586},
		modelTuple{type64: 0x2700000027, matchRI: 0x1930, match64: 0x00000000, model64: 0x10b2200010b24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1931, match64: 0x00000000, model64: 0x109f5000109f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1932, match64: 0x00000000, model64: 0x10b2d00010b2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1933, match64: 0x00000000, model64: 0x16e7700016e7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1934, match64: 0x00000000, model64: 0x16e7a00016e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1935, match64: 0x00000000, model64: 0x16e7d00016e81},
		modelTuple{type64: 0x2700000027, matchRI: 0x1936, match64: 0x00000000, model64: 0x16e8100016e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1937, match64: 0x00000000, model64: 0x10b3800010b3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1938, match64: 0x00000000, model64: 0x16e8400016e8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1939, match64: 0x00000000, model64: 0x16e8a00016e94},
		modelTuple{type64: 0x2700000027, matchRI: 0x193a, match64: 0x00000000, model64: 0x16e9400016e9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x193b, match64: 0x00000000, model64: 0x16e9a00016e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x193c, match64: 0x00000000, model64: 0x16a7300016a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x193d, match64: 0x00000000, model64: 0x16e9f00016ea6},
		modelTuple{type64: 0x2700000027, matchRI: 0x193e, match64: 0x00000000, model64: 0x16ea600016eac},
		modelTuple{type64: 0x2700000027, matchRI: 0x193f, match64: 0x00000000, model64: 0x16eac00016eb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1940, match64: 0x00000000, model64: 0x16eb300016eba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1941, match64: 0x00000000, model64: 0x1679d0001679f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1942, match64: 0x00000000, model64: 0x142c7000142ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1943, match64: 0x00000000, model64: 0x16eba00016ebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1944, match64: 0x00000000, model64: 0x16ebf00016ec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1945, match64: 0x00000000, model64: 0x16ec400016ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1946, match64: 0x00000000, model64: 0x16ec900016ecf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1947, match64: 0x00000000, model64: 0x16ecf00016ed4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1948, match64: 0x00000000, model64: 0x16ed400016ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1949, match64: 0x00000000, model64: 0x16ed700016edf},
		modelTuple{type64: 0x2700000027, matchRI: 0x194a, match64: 0x00000000, model64: 0x16edf00016ee2},
		modelTuple{type64: 0x2700000027, matchRI: 0x194b, match64: 0x00000000, model64: 0x16ee200016ee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x194c, match64: 0x00000000, model64: 0x16ee500016eee},
		modelTuple{type64: 0x2700000027, matchRI: 0x194d, match64: 0x00000000, model64: 0x16eee00016ef2},
		modelTuple{type64: 0x2700000027, matchRI: 0x194e, match64: 0x00000000, model64: 0x16ef200016ef5},
		modelTuple{type64: 0x2700000027, matchRI: 0x194f, match64: 0x00000000, model64: 0x16ef500016efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1950, match64: 0x00000000, model64: 0x16efc00016f00},
		modelTuple{type64: 0x2700000027, matchRI: 0x1951, match64: 0x00000000, model64: 0x16f0000016f03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f0300016f0a, model64: 0x16f0a00016f12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f1200016f22, model64: 0x16f1200016f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f2200016f29, model64: 0x16f2200016f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1952, match64: 0x00000000, model64: 0x16f2900016f30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1953, match64: 0x00000000, model64: 0x16f3000016f37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1954, match64: 0x00000000, model64: 0x16f3700016f3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1955, match64: 0x00000000, model64: 0x16f3a00016f3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1956, match64: 0x00000000, model64: 0x114c1000114c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1957, match64: 0x00000000, model64: 0x16f3d00016f44},
		modelTuple{type64: 0x2700000027, matchRI: 0x1958, match64: 0x00000000, model64: 0x16f4400016f4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1959, match64: 0x00000000, model64: 0x16f4c00016f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x195a, match64: 0x00000000, model64: 0x142590001425b},
		modelTuple{type64: 0x2700000027, matchRI: 0x195b, match64: 0x00000000, model64: 0x16f4f00016f56},
		modelTuple{type64: 0x2700000027, matchRI: 0x195c, match64: 0x00000000, model64: 0x16f5600016f5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x195d, match64: 0x00000000, model64: 0x16f5f00016f66},
		modelTuple{type64: 0x2700000027, matchRI: 0x195e, match64: 0x00000000, model64: 0x16f6600016f69},
		modelTuple{type64: 0x2700000027, matchRI: 0x195f, match64: 0x00000000, model64: 0x16f6900016f71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1960, match64: 0x00000000, model64: 0x16f7100016f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1961, match64: 0x00000000, model64: 0x16f7500016f7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1962, match64: 0x00000000, model64: 0x16f7b00016f88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f8800016f8e, model64: 0x16f8e00016f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16f9600016f9c, model64: 0x16f9c00016fa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fa300016faa, model64: 0x16faa00016fb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1963, match64: 0x00000000, model64: 0x16fb400016fc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1964, match64: 0x00000000, model64: 0x16fc200016fd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1965, match64: 0x00000000, model64: 0x16fd100016fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1966, match64: 0x00000000, model64: 0x16fdc00016fe3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1967, match64: 0x00000000, model64: 0x16fe300016fea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16fea00016ff1, model64: 0x16ff100016ffb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x16ffb00017002, model64: 0x170020001700e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1700e00017015, model64: 0x1701500017021},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1702100017028, model64: 0x1702800017036},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170360001703d, model64: 0x1703d00017047},
		modelTuple{type64: 0x2700000027, matchRI: 0x1968, match64: 0x00000000, model64: 0x170470001704d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1969, match64: 0x00000000, model64: 0x1704d00017054},
		modelTuple{type64: 0x2700000027, matchRI: 0x196a, match64: 0x00000000, model64: 0x170540001705b},
		modelTuple{type64: 0x2700000027, matchRI: 0x196b, match64: 0x00000000, model64: 0x1705b00017061},
		modelTuple{type64: 0x2700000027, matchRI: 0x196c, match64: 0x00000000, model64: 0x1706100017068},
		modelTuple{type64: 0x2700000027, matchRI: 0x196d, match64: 0x00000000, model64: 0x1706800017071},
		modelTuple{type64: 0x2700000027, matchRI: 0x196e, match64: 0x00000000, model64: 0x170710001707b},
		modelTuple{type64: 0x2700000027, matchRI: 0x196f, match64: 0x00000000, model64: 0x1707b00017086},
		modelTuple{type64: 0x2700000027, matchRI: 0x1970, match64: 0x00000000, model64: 0x170860001708f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1971, match64: 0x00000000, model64: 0x1708f0001709a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1972, match64: 0x00000000, model64: 0x1709a000170a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1973, match64: 0x00000000, model64: 0x170a7000170b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1974, match64: 0x00000000, model64: 0x170b0000170bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1975, match64: 0x00000000, model64: 0x170bd000170ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1976, match64: 0x00000000, model64: 0x170ca000170d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1977, match64: 0x00000000, model64: 0x170d4000170db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1978, match64: 0x00000000, model64: 0x170db000170e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1979, match64: 0x00000000, model64: 0x170e2000170ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x197a, match64: 0x00000000, model64: 0x170ed000170f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x197b, match64: 0x00000000, model64: 0x170f6000170fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x170fd00017107, model64: 0x1710700017111},
		modelTuple{type64: 0x2700000027, matchRI: 0x197c, match64: 0x00000000, model64: 0x1711100017118},
		modelTuple{type64: 0x2700000027, matchRI: 0x197d, match64: 0x00000000, model64: 0x171180001711f},
		modelTuple{type64: 0x2700000027, matchRI: 0x197e, match64: 0x00000000, model64: 0x1711f0001712c},
		modelTuple{type64: 0x2700000027, matchRI: 0x197f, match64: 0x00000000, model64: 0x1712c0001713e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1980, match64: 0x00000000, model64: 0x1713e00017145},
		modelTuple{type64: 0x2700000027, matchRI: 0x1981, match64: 0x00000000, model64: 0x171450001714b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1982, match64: 0x00000000, model64: 0x1714b00017156},
		modelTuple{type64: 0x2700000027, matchRI: 0x1983, match64: 0x00000000, model64: 0x1715600017160},
		modelTuple{type64: 0x2700000027, matchRI: 0x1984, match64: 0x00000000, model64: 0x171600001716d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1985, match64: 0x00000000, model64: 0x1716d0001717c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1986, match64: 0x00000000, model64: 0x1717c00017182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1987, match64: 0x00000000, model64: 0x1718200017188},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171880001718f, model64: 0x1718f00017196},
		modelTuple{type64: 0x2700000027, matchRI: 0x1988, match64: 0x00000000, model64: 0x171960001719d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1989, match64: 0x00000000, model64: 0x1719d000171a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x198a, match64: 0x00000000, model64: 0x171a6000171b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x198b, match64: 0x00000000, model64: 0x171b0000171ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171ba000171c0, model64: 0x171c0000171cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171cb000171d2, model64: 0x171d2000171da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171da000171e0, model64: 0x171e0000171e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x198c, match64: 0x00000000, model64: 0x171e6000171ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171ed000171f3, model64: 0x171f3000171f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x171f9000171ff, model64: 0x171ff0001720a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1720a00017210, model64: 0x172100001721a},
		modelTuple{type64: 0x2700000027, matchRI: 0x198d, match64: 0x00000000, model64: 0x1721a00017222},
		modelTuple{type64: 0x2700000027, matchRI: 0x198e, match64: 0x00000000, model64: 0x172220001722b},
		modelTuple{type64: 0x2700000027, matchRI: 0x198f, match64: 0x00000000, model64: 0x1722b00017230},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172300001723e, model64: 0x172300001723e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1990, match64: 0x00000000, model64: 0x1723e00017246},
		modelTuple{type64: 0x2700000027, matchRI: 0x1991, match64: 0x00000000, model64: 0x1724600017250},
		modelTuple{type64: 0x2700000027, matchRI: 0x1992, match64: 0x00000000, model64: 0x1725000017257},
		modelTuple{type64: 0x2700000027, matchRI: 0x1993, match64: 0x00000000, model64: 0x172570001725d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1994, match64: 0x00000000, model64: 0x1725d00017261},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1726100017268, model64: 0x172680001726e},
		modelTuple{type64: 0x24300000245, matchRI: 0x1995, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1996, match64: 0x00000000, model64: 0x1726e00017275},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x172750001727c, model64: 0x1727c00017285},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1997, match64: 0x00000000, model64: 0x172850001728c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1998, match64: 0x00000000, model64: 0x1728c00017291},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1729100017298, model64: 0xee1a0000ee22},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x1999, match64: 0x00000000, model64: 0x17298000172a2},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x172a2000172a8, model64: 0x172a8000172b2},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x172b2000172b8, model64: 0x172b8000172c4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x199a, match64: 0x00000000, model64: 0x172c4000172c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x199b, match64: 0x00000000, model64: 0x7eb200007eb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x199c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x199d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172cc000172d4, model64: 0x172d4000172dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x199f, match64: 0x00000000, model64: 0x172dc000172e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172e4000172eb, model64: 0x172e4000172eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172eb000172f2, model64: 0x172f2000172f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x172f9000172ff, model64: 0x172ff00017306},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a0, match64: 0x00000000, model64: 0x173060001730e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19a2, match64: 0x00000000, model64: 0x1730e00017319},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19a3, match64: 0x00000000, model64: 0x5de800005dee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1731900017321, model64: 0x1731900017321},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1732a00017335, model64: 0x173350001733c},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a5, match64: 0x00000000, model64: 0x1733c0001733f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1733f00017347, model64: 0x173470001734f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19a8, match64: 0x00000000, model64: 0x173550001735e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ab, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ac, match64: 0x00000000, model64: 0x173670001736e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ae, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: 0x19af, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1737a00017384, model64: 0xea690000ea70},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b4, match64: 0x00000000, model64: 0x1738b00017392},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b5, match64: 0x00000000, model64: 0x1739200017399},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b6, match64: 0x00000000, model64: 0x173990001739f},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b7, match64: 0x00000000, model64: 0x1739f000173a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b8, match64: 0x00000000, model64: 0x173a5000173a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19b9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ba, match64: 0x00000000, model64: 0x173a8000173b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bb, match64: 0x00000000, model64: 0x173b1000173b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bc, match64: 0x00000000, model64: 0x173b8000173c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bd, match64: 0x00000000, model64: 0x173c0000173c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x19be, match64: 0x00000000, model64: 0x173c3000173ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x19bf, match64: 0x00000000, model64: 0x173ca000173d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c0, match64: 0x00000000, model64: 0x173d1000173d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c1, match64: 0x00000000, model64: 0x173d6000173de},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c2, match64: 0x00000000, model64: 0x173de000173e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c6, match64: 0x00000000, model64: 0x173ee00017403},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c7, match64: 0x00000000, model64: 0x174030001740e},
		modelTuple{type64: 0x2700000027, matchRI: 0x19c9, match64: 0x00000000, model64: 0x1741200017420},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ca, match64: 0x00000000, model64: 0x1742000017428},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1742800017436, model64: 0x1743600017446},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174460001744f, model64: 0x1744f00017458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174580001746d, model64: 0x1746d00017482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1748200017495, model64: 0x17495000174a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174a8000174b6, model64: 0x174b6000174c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174c5000174d4, model64: 0x174d4000174e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x174e4000174f6, model64: 0x174f600017509},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1750900017514, model64: 0x175140001751f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1751f0001752f, model64: 0x1752f0001753f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1753f00017550, model64: 0x1755000017562},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175620001756e, model64: 0x1756e0001757c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1757c00017587, model64: 0x1758700017594},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17594000175a4, model64: 0x175a4000175b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175b4000175c1, model64: 0x175c1000175ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x175ce000175da, model64: 0x175da000175e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cb, match64: 0x00000000, model64: 0x175e6000175fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cc, match64: 0x00000000, model64: 0x175fa00017607},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cd, match64: 0x00000000, model64: 0x1760700017613},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ce, match64: 0x00000000, model64: 0x176130001761e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1761e0001762a, model64: 0x1762a00017636},
		modelTuple{type64: 0x2700000027, matchRI: 0x19cf, match64: 0x00000000, model64: 0x1763600017641},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d0, match64: 0x00000000, model64: 0x176410001764d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1764d00017654, model64: 0x176540001765b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1765b0001766a, model64: 0x1766a0001767a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1767a00017688, model64: 0x1768800017697},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17697000176a2, model64: 0x176a2000176ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ae000176bc, model64: 0x176bc000176cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d1, match64: 0x00000000, model64: 0x176cb000176d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176d2000176dd, model64: 0x176dd000176ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x176ea000176f6, model64: 0x176f600017702},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177020001770a, model64: 0x1770a0001770f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1770f00017714, model64: 0x177140001771a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1771a00017728, model64: 0x1772800017736},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d2, match64: 0x00000000, model64: 0x177360001773d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1773d00017741, model64: 0x1774100017745},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1774500017756, model64: 0x1775600017767},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177670001776d, model64: 0x1776d00017775},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d3, match64: 0x00000000, model64: 0x177750001777c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1777c00017785, model64: 0x177850001778a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1778a00017796, model64: 0x17796000177a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177a2000177b0, model64: 0x177b0000177be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177be000177cd, model64: 0x177cd000177dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177dc000177e8, model64: 0x177e8000177ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d4, match64: 0x00000000, model64: 0x177ef000177fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x177fe00017809, model64: 0x1780900017816},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178160001781f, model64: 0x1781f00017828},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1782800017833, model64: 0x178330001783e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1783e00017849, model64: 0x1784900017854},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1785400017863, model64: 0x1786300017872},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d5, match64: 0x00000000, model64: 0x178720001787d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d6, match64: 0x00000000, model64: 0x1787d00017889},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d7, match64: 0x00000000, model64: 0x1788900017896},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178960001789b, model64: 0x1789b000178a0},
		modelTuple{type64: 0x24700000251, matchRI: 0x19d8, match64: 0x00000000, model64: 0x178a0000178a9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x178a9000178b2, model64: 0x178b2000178bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x19d9, match64: 0x00000000, model64: 0x178bb000178c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x19da, match64: 0x00000000, model64: 0x178c2000178c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19db, match64: 0x00000000, model64: 0x178c6000178ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x19dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19de, match64: 0x00000000, model64: 0x178d3000178db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x178db000178e9, model64: 0x178e9000178f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e0, match64: 0x00000000, model64: 0x178f800017904},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e1, match64: 0x00000000, model64: 0xf8000000f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e2, match64: 0x00000000, model64: 0x179040001790a},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e3, match64: 0x00000000, model64: 0x1790a00017910},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e4, match64: 0x00000000, model64: 0x5cff00005d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x179150001791f, model64: 0x1791f00017927},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19e8, match64: 0x00000000, model64: 0x1792b00017933},
		modelTuple{type64: 0x2700000027, matchRI: 0x19e9, match64: 0x00000000, model64: 0x179330001793b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x179450001794d},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ed, match64: 0x00000000, model64: 0x1795400017958},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ef, match64: 0x00000000, model64: 0x1795c00017960},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f0, match64: 0x00000000, model64: 0x1796000017963},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f1, match64: 0x00000000, model64: 0x1796300017970},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f2, match64: 0x00000000, model64: 0x179700001797d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f3, match64: 0x00000000, model64: 0x1797d00017989},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f4, match64: 0x00000000, model64: 0x179890001799c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1799c000179a8, model64: 0x179a8000179b8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f5, match64: 0x00000000, model64: 0x179b8000179c8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x179c8000179da, model64: 0x179da000179ed},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x179ed000179fe, model64: 0x179fe00017a10},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17a1000017a1a, model64: 0x17a1a00017a25},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17a2500017a33, model64: 0x17a3300017a42},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17a4200017a4b, model64: 0x17a4b00017a56},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f6, match64: 0x00000000, model64: 0x17a5600017a6b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f7, match64: 0x00000000, model64: 0x17a6b00017a78},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f8, match64: 0x00000000, model64: 0x17a7800017a84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19f9, match64: 0x00000000, model64: 0x17a8400017a8a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19fa, match64: 0x00000000, model64: 0x17a8a00017a9a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19fb, match64: 0x00000000, model64: 0x17a9a00017aa5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19fc, match64: 0x00000000, model64: 0x17aa500017ab0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x19fd, match64: 0x00000000, model64: 0x17ab000017ab6},
		modelTuple{type64: 0x2700000027, matchRI: 0x19fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x19ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17abe00017acc, model64: 0x17acc00017ada},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a01, match64: 0x00000000, model64: 0x17ada00017ae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a02, match64: 0x00000000, model64: 0x17ae500017aef},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a05, match64: 0x00000000, model64: 0x17afd00017aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a06, match64: 0x00000000, model64: 0x17aff00017b02},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a07, match64: 0x00000000, model64: 0x17b0200017b05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a08, match64: 0x00000000, model64: 0x17b0500017b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a09, match64: 0x00000000, model64: 0xb5e40000b5e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0a, match64: 0x00000000, model64: 0x17b0700017b0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0b, match64: 0x00000000, model64: 0x17b0d00017b11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0c, match64: 0x00000000, model64: 0x17b1100017b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0d, match64: 0x00000000, model64: 0x17b1600017b22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0e, match64: 0x00000000, model64: 0x17b2200017b28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a0f, match64: 0x00000000, model64: 0x17b2800017b2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a10, match64: 0x00000000, model64: 0x17b2d00017b36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a11, match64: 0x00000000, model64: 0x84c0000084f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a12, match64: 0x00000000, model64: 0x17b3600017b3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a13, match64: 0x00000000, model64: 0x17b3c00017b43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a14, match64: 0x00000000, model64: 0x17b4300017b55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a15, match64: 0x00000000, model64: 0x17b5500017b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a16, match64: 0x00000000, model64: 0x17b5c00017b63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a17, match64: 0x00000000, model64: 0x17b6300017b6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17b6d00017b74, model64: 0x17b7400017b7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a18, match64: 0x00000000, model64: 0x17b7d00017b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a19, match64: 0x00000000, model64: 0x17b8300017b94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1a, match64: 0x00000000, model64: 0x17b9400017ba2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1b, match64: 0x00000000, model64: 0x17ba200017bb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1c, match64: 0x00000000, model64: 0x17bb000017bbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1d, match64: 0x00000000, model64: 0x17bbc00017bc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1e, match64: 0x00000000, model64: 0x13f5200013f58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a1f, match64: 0x00000000, model64: 0x17bc500017bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a20, match64: 0x00000000, model64: 0x17bce00017bda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17bda00017be1, model64: 0x17be100017bed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a21, match64: 0x00000000, model64: 0x17bed00017bf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a22, match64: 0x00000000, model64: 0x17bf800017c03},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a23, match64: 0x00000000, model64: 0x17c0300017c11},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a24, match64: 0x00000000, model64: 0x17c1100017c1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a25, match64: 0x00000000, model64: 0x17c1c00017c24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a26, match64: 0x00000000, model64: 0x17c2400017c2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a27, match64: 0x00000000, model64: 0x17c2f00017c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a28, match64: 0x00000000, model64: 0x17c3c00017c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a29, match64: 0x00000000, model64: 0x17c4500017c4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2a, match64: 0x00000000, model64: 0x17c4e00017c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2b, match64: 0x00000000, model64: 0x17c5300017c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2c, match64: 0x00000000, model64: 0x17c5500017c5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2d, match64: 0x00000000, model64: 0x3c6600003c67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2e, match64: 0x00000000, model64: 0x17c5b00017c62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a2f, match64: 0x00000000, model64: 0xb5cd0000b5ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a30, match64: 0x00000000, model64: 0x17c6200017c68},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a31, match64: 0x00000000, model64: 0x17c6800017c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a32, match64: 0x00000000, model64: 0x17c6a00017c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a33, match64: 0x00000000, model64: 0x17c6d00017c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a34, match64: 0x00000000, model64: 0x17c7300017c79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a35, match64: 0x00000000, model64: 0xb5bf0000b5c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a36, match64: 0x00000000, model64: 0x17c7900017c8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a37, match64: 0x00000000, model64: 0xb5de0000b5e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a38, match64: 0x00000000, model64: 0x17c8f00017c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a39, match64: 0x00000000, model64: 0x1c3a00001c3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3a, match64: 0x00000000, model64: 0x17c9400017c96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3b, match64: 0x00000000, model64: 0x17c9600017c9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3c, match64: 0x00000000, model64: 0x17c9c00017ca5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3d, match64: 0x00000000, model64: 0x17c5300017c55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3e, match64: 0x00000000, model64: 0x17ca500017cab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a3f, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a40, match64: 0x00000000, model64: 0x1381e0001381f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a41, match64: 0x00000000, model64: 0x1da300001da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a42, match64: 0x00000000, model64: 0x17cab00017cad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a43, match64: 0x00000000, model64: 0x1bf600001bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a44, match64: 0x00000000, model64: 0x17cad00017caf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a45, match64: 0x00000000, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a46, match64: 0x00000000, model64: 0x15ee700015ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a47, match64: 0x00000000, model64: 0x17caf00017cb1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a48, match64: 0x00000000, model64: 0x17cb100017cc0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a49, match64: 0x00000000, model64: 0x17cc000017cd0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a4a, match64: 0x00000000, model64: 0x17cd000017cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a4d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a4e, match64: 0x00000000, model64: 0x17ce200017cf0},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a4f, match64: 0x00000000, model64: 0x2894000028a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a51, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a52, match64: 0x00000000, model64: 0x17cf400017d00},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a53, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a56, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d2300017d2f, model64: 0x17d2f00017d3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d3b00017d44, model64: 0x17d4400017d4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d4e00017d60, model64: 0x17d6000017d67},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d6700017d79, model64: 0x17d7900017d83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17d8300017d96, model64: 0x17d9600017d9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17da400017db5, model64: 0x17db500017dc6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17dc600017dd3, model64: 0x17dd300017de0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5b, match64: 0x00000000, model64: 0x17de000017dec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5c, match64: 0x00000000, model64: 0x17dec00017df4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5d, match64: 0x00000000, model64: 0x17df400017dfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17dfe00017e04, model64: 0x17e0400017e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a5e, match64: 0x00000000, model64: 0x17e0a00017e0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e1500017e1e, model64: 0x17e1e00017e27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e2700017e30, model64: 0x17e3000017e39},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a60, match64: 0x00000000, model64: 0x17e3900017e43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a62, match64: 0x00000000, model64: 0x17e4900017e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a63, match64: 0x00000000, model64: 0x17e4900017e51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a64, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a65, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e5700017e61, model64: 0x17e6100017e66},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x17e6c00017e74, model64: 0x17e7400017e80},
		modelTuple{type64: 0x24300000245, matchRI: 0x1a68, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a69, match64: 0x00000000, model64: 0x17e8000017e89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6a, match64: 0x00000000, model64: 0x17e8900017e92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17e9200017e9b, model64: 0x17e9b00017ea4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ea400017eac, model64: 0x17eac00017eb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17eb400017ebc, model64: 0x17ebc00017ec4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ec400017ece, model64: 0x17ece00017ed8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17ed800017ede, model64: 0x17ed800017ede},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6b, match64: 0x00000000, model64: 0x17ede00017ee3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17ee300017ee7, model64: 0x17ee300017ee7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a6c, match64: 0x00000000, model64: 0x17ee700017ef0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17ef000017efe, model64: 0x17efe00017f0a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17f0a00017f17, model64: 0x17f1700017f27},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17f2700017f36, model64: 0x17f3600017f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6d, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6e, match64: 0x00000000, model64: 0x17f3e00017f4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a6f, match64: 0x00000000, model64: 0x17f4a00017f51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a71, match64: 0x00000000, model64: 0x17f5100017f57},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f6500017f6b, model64: 0x70e4000070ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f6b00017f71, model64: 0x17f7100017f75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f7500017f7b, model64: 0x17f7b00017f7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f7f00017f85, model64: 0x17f8500017f8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f8b00017f92, model64: 0x17f9200017f9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17f9b00017fa1, model64: 0xf3b00000f3b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fa100017fa7, model64: 0x911a0000911d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x17fa700017fac, model64: 0x17fac00017fb3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a79, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a7a, match64: 0x00000000, model64: 0x17fca00017fd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fd700017fdf, model64: 0x17fd700017fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a7f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x17fe600017ff0, model64: 0x17fe600017ff0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a81, match64: 0x00000000, model64: 0x17ff000017ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a82, match64: 0x00000000, model64: 0x17ff400017ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a83, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a84, match64: 0x00000000, model64: 0x17ff700017fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a85, match64: 0x00000000, model64: 0x8b1900008b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a86, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a87, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a88, match64: 0x00000000, model64: 0x17fff00018005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a89, match64: 0x00000000, model64: 0x1800500018014},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8b, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1801400018020, model64: 0x180200001802c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1802c00018035, model64: 0x180350001803e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1803e00018045, model64: 0x1803e00018045},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1a8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a8e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1804c00018052, model64: 0x180520001805d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1805d0001806c, model64: 0x1805d0001806c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1806c0001807b, model64: 0x1806c0001807b},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a90, match64: 0x00000000, model64: 0x1807b00018084},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1808400018090, model64: 0x180900001809d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1809d000180aa, model64: 0x1809d000180aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a91, match64: 0x00000000, model64: 0x180aa000180b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a92, match64: 0x00000000, model64: 0x180aa000180b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x180bd000180c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a95, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1a96, match64: 0x00000000, model64: 0x180c9000180d4},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a98, match64: 0x00000000, model64: 0x180db000180e7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x180e7000180ef, model64: 0x180ef000180f8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x180f8000180ff, model64: 0x180ff00018107},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a99, match64: 0x00000000, model64: 0x1810700018111},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9a, match64: 0x00000000, model64: 0x181110001811c},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9b, match64: 0x00000000, model64: 0x1811c00018125},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9c, match64: 0x00000000, model64: 0x1812500018130},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9d, match64: 0x00000000, model64: 0x1813000018137},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9e, match64: 0x00000000, model64: 0x1813700018148},
		modelTuple{type64: 0x24700000251, matchRI: 0x1a9f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa1, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1814800018151, model64: 0x181510001815a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1815e00018164},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa7, match64: 0x00000000, model64: 0x1816f00018178},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aa8, match64: 0x00000000, model64: 0x1817800018181},
		modelTuple{type64: 0x24700000251, matchRI: 0x1aa9, match64: 0x00000000, model64: 0x181810001818e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181950001819c, model64: 0x1819c000181a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aad, match64: 0x00000000, model64: 0x181a9000181b1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x181c6000181d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181d8000181e4, model64: 0x181e4000181e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181e7000181f3, model64: 0x181f3000181f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x181f600018203, model64: 0x1820300018207},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x182070001820f, model64: 0x1820f00018218},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1821800018220, model64: 0x8fe100008fe6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1aaf, match64: 0x00000000, model64: 0x161b0000161b3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ab0, match64: 0x00000000, model64: 0x1822000018229},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x182290001823b, model64: 0x1823b00018249},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1824c00018253, model64: 0x1825300018260},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ab7, match64: 0x00000000, model64: 0x1827100018277},
		modelTuple{type64: 0x24300000245, matchRI: 0x1ab8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abb, match64: 0x00000000, model64: 0x1828200018288},
		modelTuple{type64: 0x2700000027, matchRI: 0x1abc, match64: 0x00000000, model64: 0x182880001828f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1828f000182a0, model64: 0x182a0000182a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x182a7000182b2, model64: 0x182b2000182b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x182bc000182c2, model64: 0x182bc000182c2},
		modelTuple{type64: 0x7130000071d, matchRI: 0x1abf, match64: 0x00000000, model64: 0x182c6000182d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac1, match64: 0x00000000, model64: 0x108cb000108cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac2, match64: 0x00000000, model64: 0x182d4000182da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac3, match64: 0x00000000, model64: 0x182da000182dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac4, match64: 0x00000000, model64: 0x182dc000182e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac5, match64: 0x00000000, model64: 0x182e5000182ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac6, match64: 0x00000000, model64: 0x182ea000182f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac7, match64: 0x00000000, model64: 0x182f0000182f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x182f600018300, model64: 0xb5580000b55a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac8, match64: 0x00000000, model64: 0x16cc500016cc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ac9, match64: 0x00000000, model64: 0x1830000018306},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aca, match64: 0x00000000, model64: 0x12b4500012b47},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acb, match64: 0x00000000, model64: 0x138590001385b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acc, match64: 0x00000000, model64: 0x183060001830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acd, match64: 0x00000000, model64: 0x1174c00011753},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ace, match64: 0x00000000, model64: 0x1830f00018318},
		modelTuple{type64: 0x2700000027, matchRI: 0x1acf, match64: 0x00000000, model64: 0x183180001831d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad0, match64: 0x00000000, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad1, match64: 0x00000000, model64: 0xe67f0000e682},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1831d00018327, model64: 0x183270001832c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad2, match64: 0x00000000, model64: 0x9a4200009a44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1832c00018336, model64: 0x183360001833f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1833f00018349, model64: 0x1834900018353},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad3, match64: 0x00000000, model64: 0x1835300018359},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad4, match64: 0x00000000, model64: 0x183590001835f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad5, match64: 0x00000000, model64: 0x138f9000138fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1835f00018369, model64: 0x183690001836e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad6, match64: 0x00000000, model64: 0x1836e00018374},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad7, match64: 0x00000000, model64: 0x183740001837a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad8, match64: 0x00000000, model64: 0x1837a0001837f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ad9, match64: 0x00000000, model64: 0xec8b0000ec8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ada, match64: 0x00000000, model64: 0x1837f00018384},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adb, match64: 0x00000000, model64: 0x183840001838d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adc, match64: 0x00000000, model64: 0x1838d00018392},
		modelTuple{type64: 0x2700000027, matchRI: 0x1add, match64: 0x00000000, model64: 0x183920001839b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ade, match64: 0x00000000, model64: 0x1839b000183a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1adf, match64: 0x00000000, model64: 0x183a4000183a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae0, match64: 0x00000000, model64: 0x183a9000183ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae1, match64: 0x00000000, model64: 0x183ae000183b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae2, match64: 0x00000000, model64: 0x183b0000183b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae3, match64: 0x00000000, model64: 0x183b2000183b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae4, match64: 0x00000000, model64: 0x183b5000183b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae5, match64: 0x00000000, model64: 0xa91c0000a91f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae6, match64: 0x00000000, model64: 0x183b8000183bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x183bb000183c5, model64: 0x183c5000183c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae7, match64: 0x00000000, model64: 0x183c8000183cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae8, match64: 0x00000000, model64: 0x183cb000183ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ae9, match64: 0x00000000, model64: 0x183ce000183d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aea, match64: 0x00000000, model64: 0x183d1000183d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aeb, match64: 0x00000000, model64: 0x183d7000183e0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x183e0000183ea, model64: 0x183ea000183f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aed, match64: 0x00000000, model64: 0x183f900018402},
		modelTuple{type64: 0x2700000027, matchRI: 0x1aee, match64: 0x00000000, model64: 0xa91f0000a921},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af1, match64: 0x00000000, model64: 0x1841a0001842a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af4, match64: 0x00000000, model64: 0x90e9000090ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x184470001844d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1846600018475},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x184810001848c, model64: 0x1848c00018497},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x184970001849f, model64: 0x1849f000184a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af8, match64: 0x00000000, model64: 0x184a7000184b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1af9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x184b5000184c4, model64: 0x184b5000184c4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x184d4000184e0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afb, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afd, match64: 0x00000000, model64: 0x184f5000184fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x184fc00018504, model64: 0x184fc00018504},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185040001850a, model64: 0x1850a00018510},
		modelTuple{type64: 0x2700000027, matchRI: 0x1afe, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x185170001851e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b00, match64: 0x00000000, model64: 0x1852700018535},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b01, match64: 0x00000000, model64: 0x1853500018541},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b02, match64: 0x00000000, model64: 0x1854100018548},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b03, match64: 0x00000000, model64: 0x185480001854f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b04, match64: 0x00000000, model64: 0x1854f00018557},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b05, match64: 0x00000000, model64: 0x185570001855f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b06, match64: 0x00000000, model64: 0x185570001855f},
		modelTuple{type64: 0x50000000b, matchRI: 0x1b07, match64: 0x00000000, model64: 0x1855f00018567},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b08, match64: 0x00000000, model64: 0x1856700018578},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b09, match64: 0x00000000, model64: 0x1857800018583},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b0a, match64: 0x00000000, model64: 0x1858300018591},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185910001859c, model64: 0x185910001859c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1859c000185a3, model64: 0x1859c000185a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b0b, match64: 0x00000000, model64: 0x185a3000185aa},
		modelTuple{type64: 0x38400000391, matchRI: 0x1b0c, match64: 0x00000000, model64: 0x185aa000185af},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x185af000185c2, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b0d, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b0e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x185c2000185d4, model64: 0x185d4000185de},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b0f, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b10, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b11, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b13, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b14, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b15, match64: 0x00000000, model64: 0x185de000185ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b16, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1861000018617, model64: 0x186170001861d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1861d00018624, model64: 0x186240001862d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1862d00018634, model64: 0x186340001863b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1863b00018643, model64: 0x186430001864c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b1b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b1f, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b20, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b24, match64: 0x00000000, model64: 0x128df000128e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186670001866e, model64: 0x1866e00018675},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1867b00018688, model64: 0x186880001868e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1868e0001869c, model64: 0x1869c000186a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b27, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b28, match64: 0x00000000, model64: 0x186a9000186b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b29, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186b0000186bb, model64: 0x186bb000186bf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186bf000186c6, model64: 0x818d00008194},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2a, match64: 0x00000000, model64: 0x186c6000186cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b2b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186d2000186d7, model64: 0x186d7000186e2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x186e2000186e9, model64: 0x186e9000186f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2e, match64: 0x00000000, model64: 0x186ff00018707},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b2f, match64: 0x00000000, model64: 0x1870700018719},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b30, match64: 0x00000000, model64: 0x1871900018723},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b31, match64: 0x00000000, model64: 0x187230001872c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b32, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x24700000251, matchRI: 0x1b33, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1873200018741, model64: 0x1874100018747},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1874700018756, model64: 0x187560001875a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1875a00018769, model64: 0x187690001876f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b35, match64: 0x00000000, model64: 0x187760001877c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b36, match64: 0x00000000, model64: 0x1877c00018784},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b37, match64: 0x00000000, model64: 0x187840001878d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b38, match64: 0x00000000, model64: 0x1878d00018796},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b39, match64: 0x00000000, model64: 0x187960001879d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3a, match64: 0x00000000, model64: 0x1879d000187a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x187aa000187b2, model64: 0x187b2000187ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3c, match64: 0x00000000, model64: 0x187ba000187c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b3d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b3e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b3f, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b40, match64: 0x00000000, model64: 0x187c0000187ce},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b41, match64: 0x00000000, model64: 0x187ce000187d4},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x1b43, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b44, match64: 0x00000000, model64: 0x187db000187e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b45, match64: 0x00000000, model64: 0x187db000187e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b46, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b47, match64: 0x00000000, model64: 0xb3550000b35f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b48, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b49, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b4a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b4b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b4c, match64: 0x00000000, model64: 0x187e4000187f0},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b4d, match64: 0x00000000, model64: 0x187f000018806},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b4e, match64: 0x00000000, model64: 0x188060001880f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b4f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b50, match64: 0x00000000, model64: 0x1880f00018815},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b51, match64: 0x00000000, model64: 0x188150001882b},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b52, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b53, match64: 0x00000000, model64: 0x1882b00018837},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1883700018845, model64: 0x1884500018851},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b54, match64: 0x00000000, model64: 0x1885100018859},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x1885900018862, model64: 0x1885900018862},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x1886200018868, model64: 0x1886800018873},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b55, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b57, match64: 0x00000000, model64: 0x1887b00018883},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b58, match64: 0x00000000, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b59, match64: 0x00000000, model64: 0x1888300018887},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5a, match64: 0x00000000, model64: 0x188870001888e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5b, match64: 0x00000000, model64: 0x12ee000012ee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x188920001889b, model64: 0x1880f00018815},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1889f000188a8, model64: 0x188a8000188b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b60, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b61, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b63, match64: 0x00000000, model64: 0x188b9000188bb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x188bb000188c3, model64: 0x188c3000188d0},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x1b64, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x1b65, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x188d0000188d7, model64: 0x188d0000188d7},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b66, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b68, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x188ee000188f9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1d0b00001d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6d, match64: 0x00000000, model64: 0x1890800018910},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6e, match64: 0x00000000, model64: 0x189100001891e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1891e00018926, model64: 0x1891e00018926},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189260001892f, model64: 0x189260001892f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1892f00018936, model64: 0x1892f00018936},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b6f, match64: 0x00000000, model64: 0x189360001893c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b70, match64: 0x00000000, model64: 0x1893c00018941},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b71, match64: 0x00000000, model64: 0x1894100018945},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b72, match64: 0x00000000, model64: 0x1894500018949},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b73, match64: 0x00000000, model64: 0x177850001778a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b74, match64: 0x00000000, model64: 0x189490001894e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b75, match64: 0x00000000, model64: 0x1894e00018958},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b76, match64: 0x00000000, model64: 0x1895800018962},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b77, match64: 0x00000000, model64: 0x189620001896d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b78, match64: 0x00000000, model64: 0x1896d00018978},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b79, match64: 0x00000000, model64: 0x1897800018986},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7a, match64: 0x00000000, model64: 0xb3c50000b3cb},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x189860001898a, model64: 0x189860001898a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1898a00018993, model64: 0x1899300018996},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x18996000189a1, model64: 0x189a1000189a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7d, match64: 0x00000000, model64: 0x189b6000189bf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b7f, match64: 0x00000000, model64: 0x189d7000189df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189e5000189ee, model64: 0x189ee000189f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x189f900018a06, model64: 0x18a0600018a13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b81, match64: 0x00000000, model64: 0x18a1300018a1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a1e00018a22, model64: 0x18a2200018a29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a2900018a2d, model64: 0x18a2d00018a32},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a3200018a36, model64: 0x18a3600018a3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a3d00018a41, model64: 0x18a4100018a4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18a4a00018a4e, model64: 0x18a4e00018a55},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18a5500018a59, model64: 0x18a5900018a63},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18a6300018a67, model64: 0x18a6700018a70},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18a7000018a74, model64: 0x18a7400018a7e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b86, match64: 0x00000000, model64: 0x187200001874},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b87, match64: 0x00000000, model64: 0x18a9600018a9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b88, match64: 0x00000000, model64: 0x18a9c00018a9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b89, match64: 0x00000000, model64: 0x18a9f00018aa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8a, match64: 0x00000000, model64: 0x18aa800018ab8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8b, match64: 0x00000000, model64: 0x18ab800018ac4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ad000018ad4, model64: 0x18ad000018ad4},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x18ae100018af2, model64: 0x18af200018b06},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x18b0600018b17, model64: 0x18b1700018b2a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x18b2a00018b32, model64: 0x18b3200018b42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b4200018b4e, model64: 0x18b4e00018b5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8e, match64: 0x00000000, model64: 0x18b5b00018b68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b6800018b75, model64: 0x18b7500018b7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b7e00018b8a, model64: 0x18b8a00018b97},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18b9700018ba7, model64: 0x18ba700018bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b8f, match64: 0x00000000, model64: 0x18bb800018bc4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18bc400018bd2, model64: 0x18bd200018bdc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18bdc00018be9, model64: 0x18be900018bf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b90, match64: 0x00000000, model64: 0x18bf600018bff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b91, match64: 0x00000000, model64: 0x18bff00018c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c1d00018c23, model64: 0x18c2300018c2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c2b00018c31, model64: 0x18c3100018c39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c3900018c3f, model64: 0x18c3f00018c47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c4700018c50, model64: 0x18c5000018c5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c5d00018c63, model64: 0x18c6300018c6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b96, match64: 0x00000000, model64: 0xf3f50000f3fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c6a00018c73, model64: 0x18c7300018c7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c7b00018c81, model64: 0x18c8100018c88},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c8800018c8e, model64: 0x18c8e00018c9a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18c9a00018ca3, model64: 0x18ca300018cab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cab00018cb4, model64: 0x18cb400018cc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cc100018cc7, model64: 0x18cc700018cce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cce00018cd7, model64: 0x18cd700018cdf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cdf00018ce8, model64: 0x18ce800018cf0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cf000018cf6, model64: 0x18cf600018cff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18cff00018d05, model64: 0x18d0500018d0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d0e00018d14, model64: 0x18d1400018d1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d1b00018d24, model64: 0x18d2400018d2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d2c00018d32, model64: 0x18d3200018d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b97, match64: 0x00000000, model64: 0x18d3500018d3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d3c00018d43, model64: 0x18d4300018d4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d4c00018d53, model64: 0x18d5300018d58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d5800018d5f, model64: 0x18d5f00018d66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b98, match64: 0x00000000, model64: 0x18d6600018d6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1b99, match64: 0x00000000, model64: 0x18d6d00018d72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d7200018d79, model64: 0x18d7900018d87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18d8700018d8f, model64: 0x18d8f00018d93},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x18d9300018d98, model64: 0x18d9800018da2},
		modelTuple{type64: 0x24300000245, matchRI: 0x1b9a, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b9b, match64: 0x00000000, model64: 0x18da200018dac},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18dac00018db6, model64: 0x18db600018dc7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b9c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b9d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1b9e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x18c1500018c1d, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18dde00018de3, model64: 0x881e00008824},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba4, match64: 0x00000000, model64: 0x18de300018df0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18df000018df5, model64: 0x18df500018dfe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba5, match64: 0x00000000, model64: 0x18dfe00018e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba6, match64: 0x00000000, model64: 0x18e0a00018e13},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba7, match64: 0x00000000, model64: 0x18e1300018e1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba8, match64: 0x00000000, model64: 0x18e1c00018e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ba9, match64: 0x00000000, model64: 0x18e2500018e2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baa, match64: 0x00000000, model64: 0x18e2e00018e37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bab, match64: 0x00000000, model64: 0x18e3700018e40},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bac, match64: 0x00000000, model64: 0x18e4000018e49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bad, match64: 0x00000000, model64: 0x18e4900018e55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bae, match64: 0x00000000, model64: 0x18e5500018e5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1baf, match64: 0x00000000, model64: 0x18e5e00018e67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb0, match64: 0x00000000, model64: 0x18e6700018e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb1, match64: 0x00000000, model64: 0x18e7000018e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb2, match64: 0x00000000, model64: 0x18e7b00018e8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18e8a00018e8f, model64: 0x18e8f00018e94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18e9400018e99, model64: 0x18e9900018ea6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ea600018eab, model64: 0x18eab00018eb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18eb400018eb9, model64: 0x18eb900018ec2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ec200018ec7, model64: 0x18ec700018ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb3, match64: 0x00000000, model64: 0x18ed000018edb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb4, match64: 0x00000000, model64: 0x18edb00018ee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb5, match64: 0x00000000, model64: 0x18ee300018eee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18eee00018ef3, model64: 0x18ef300018efd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18efd00018f02, model64: 0x18f0200018f11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f1100018f16, model64: 0x18f1600018f1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f1e00018f23, model64: 0x18f2300018f34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb6, match64: 0x00000000, model64: 0x18f3400018f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb7, match64: 0x00000000, model64: 0x18f3e00018f49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb8, match64: 0x00000000, model64: 0x18f4900018f53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bb9, match64: 0x00000000, model64: 0x18f5300018f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bba, match64: 0x00000000, model64: 0x18f5d00018f6c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f6c00018f73, model64: 0x18f6c00018f73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f7300018f78, model64: 0x18f7300018f78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18f7800018f7d, model64: 0x18f7d00018f85},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bbb, match64: 0x00000000, model64: 0x18f8500018f92},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bbc, match64: 0x00000000, model64: 0x18f9200018f9c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bbf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x817c0000817e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18fe600018fee, model64: 0x18fee00018ff6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc2, match64: 0x00000000, model64: 0x883a0000883e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x18ff600019002, model64: 0x18ff600019002},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190020001900d, model64: 0x190020001900d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc4, match64: 0x00000000, model64: 0x1900d00019017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190170001901b, model64: 0x1901b00019026},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190260001902b, model64: 0x1902b00019036},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190360001903e, model64: 0x190360001903e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1903e00019045, model64: 0x1903e00019045},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x190450001904a, model64: 0x190450001904a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1904a00019056, model64: 0x1905600019062},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc6, match64: 0x00000000, model64: 0x1906e00019074},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc7, match64: 0x00000000, model64: 0x1907400019080},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc8, match64: 0x00000000, model64: 0x1908000019090},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bc9, match64: 0x00000000, model64: 0x190900001909b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bca, match64: 0x00000000, model64: 0x1909b000190a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcb, match64: 0x00000000, model64: 0x190a4000190ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcc, match64: 0x00000000, model64: 0x190ae000190b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcd, match64: 0x00000000, model64: 0x190b9000190c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bce, match64: 0x00000000, model64: 0x190c3000190ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bcf, match64: 0x00000000, model64: 0x190ce000190d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd0, match64: 0x00000000, model64: 0x190d6000190de},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd1, match64: 0x00000000, model64: 0x190de000190e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd2, match64: 0x00000000, model64: 0x190e6000190ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bd3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bd4, match64: 0x00000000, model64: 0x190ec000190f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bd5, match64: 0x00000000, model64: 0x190f2000190fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x190fb00019102, model64: 0x1910200019109},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1910f0001911b, model64: 0xf8000000f82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1911b00019121, model64: 0x1912100019127},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x191270001912a, model64: 0x191270001912a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1912a00019136, model64: 0x191360001913a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1913a00019146, model64: 0x191460001914a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1914a00019156, model64: 0x191560001915a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1915a00019166, model64: 0x191660001916a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd8, match64: 0x00000000, model64: 0x1916a00019174},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bd9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1917d0001918f, model64: 0x1918f000191a2},
		modelTuple{type64: 0x24700000251, matchRI: 0x1bdb, match64: 0x00000000, model64: 0x191a2000191b3},
		modelTuple{type64: 0x24700000251, matchRI: 0x1bdc, match64: 0x00000000, model64: 0x191b3000191c0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x191c0000191ca, model64: 0x191ca000191d2},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x191d2000191dc, model64: 0x191dc000191e8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x191e8000191f2, model64: 0x191f2000191fe},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x191fe00019208, model64: 0x1920800019210},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192100001921a, model64: 0x1921a00019222},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192220001922c, model64: 0x1922c00019234},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192340001923e, model64: 0x1923e00019246},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1924600019250, model64: 0x192500001925c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1925c00019266, model64: 0x192660001926e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1926e00019278, model64: 0x1927800019284},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192840001928e, model64: 0x1928e00019296},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19296000192a0, model64: 0x192a0000192ac},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192ac000192b6, model64: 0x192b6000192be},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192be000192c8, model64: 0x192c8000192cf},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192cf000192d9, model64: 0x192d9000192e4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192e4000192ee, model64: 0x192ee000192f9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x192f900019303, model64: 0x193030001930e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1930e00019318, model64: 0x1931800019323},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193230001932d, model64: 0x1932d00019338},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1933800019342, model64: 0x1934200019349},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1934900019353, model64: 0x193530001935e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1935e00019368, model64: 0x1936800019373},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193730001937d, model64: 0x1937d00019384},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193840001938e, model64: 0x1938e00019399},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x19399000193a3, model64: 0x193a3000193ae},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193ae000193b8, model64: 0x193b8000193c3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193c3000193cd, model64: 0x193cd000193d8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193d8000193e2, model64: 0x193e2000193ed},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x193ed000193f7, model64: 0x193f700019402},
		modelTuple{type64: 0x24700000251, matchRI: 0x1bdd, match64: 0x00000000, model64: 0x1940200019409},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1940900019413, model64: 0x194130001941a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1941a00019424, model64: 0x194240001942b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1942b00019435, model64: 0x194350001943c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1943c00019446, model64: 0x194460001944d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1944d00019457, model64: 0x194570001945e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1945e00019468, model64: 0x194680001946f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1946f00019479, model64: 0x1947900019480},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194800001948a, model64: 0x1948a00019492},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194920001949c, model64: 0x1949c000194a3},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194a3000194ad, model64: 0x194ad000194b4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194b4000194be, model64: 0x194be000194c9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194c9000194d3, model64: 0x194d3000194da},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194da000194e4, model64: 0x194e4000194ec},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194ec000194f6, model64: 0x194f6000194fe},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x194fe00019508, model64: 0x1950800019510},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x195100001951a, model64: 0x1951a00019522},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195220001952c, model64: 0x1952c00019536},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1953600019540, model64: 0x1954000019557},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1955700019561, model64: 0x195610001956b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1956b00019576, model64: 0x195760001957f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1957f00019588, model64: 0x1958800019595},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19595000195a1, model64: 0x195a1000195ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195ad000195b7, model64: 0x195b7000195c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195c4000195cb, model64: 0x195cb000195d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195d5000195dc, model64: 0x195dc000195e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x195e7000195f1, model64: 0x195f10001960b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bde, match64: 0x00000000, model64: 0x1960b0001961c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bdf, match64: 0x00000000, model64: 0x1961c0001962b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be0, match64: 0x00000000, model64: 0x1962b0001963c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be1, match64: 0x00000000, model64: 0x1963c00019648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1964800019652, model64: 0x1965200019668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1966800019672, model64: 0x1967200019677},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be2, match64: 0x00000000, model64: 0x196770001968b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be3, match64: 0x00000000, model64: 0x1968b00019696},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be4, match64: 0x00000000, model64: 0x19696000196a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be5, match64: 0x00000000, model64: 0x196a1000196a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1be6, match64: 0x00000000, model64: 0x196a6000196ab},
		modelTuple{type64: 0x24300000245, matchRI: 0x1be7, match64: 0x00000000, model64: 0x196ab000196b5},
		modelTuple{type64: 0x24300000245, matchRI: 0x1be8, match64: 0x00000000, model64: 0x196b5000196c3},
		modelTuple{type64: 0x24300000245, matchRI: 0x1be9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1beb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bed, match64: 0x00000000, model64: 0x196cb000196d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bee, match64: 0x00000000, model64: 0x196d4000196db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf0, match64: 0x00000000, model64: 0x196e1000196ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf1, match64: 0x00000000, model64: 0x196ea000196f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf2, match64: 0x00000000, model64: 0x196f1000196f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf3, match64: 0x00000000, model64: 0x196f9000196fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf4, match64: 0x00000000, model64: 0x196fe00019704},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf5, match64: 0x00000000, model64: 0x5a5100005a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bf6, match64: 0x00000000, model64: 0x197040001970e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bf7, match64: 0x00000000, model64: 0x1970e00019710},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bf8, match64: 0x00000000, model64: 0x1971000019717},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bf9, match64: 0x00000000, model64: 0x197170001971f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1bfa, match64: 0x00000000, model64: 0x1971f00019727},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1972d00019735, model64: 0x197350001973d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1973d00019744, model64: 0x197440001974b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1974b00019752, model64: 0x1975200019759},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1975900019761, model64: 0x1976100019769},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfc, match64: 0x00000000, model64: 0x1976900019770},
		modelTuple{type64: 0x2700000027, matchRI: 0x1bfd, match64: 0x00000000, model64: 0x11d7d00011d80},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1977000019776, model64: 0x1977600019778},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197780001977d, model64: 0x1977d0001978b},
		modelTuple{type64: 0x24700000251, matchRI: 0x1bff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c00, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c02, match64: 0x00000000, model64: 0x197990001979e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c03, match64: 0x00000000, model64: 0x1979e000197a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c06, match64: 0x00000000, model64: 0x197b4000197bd},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x197bd000197c1, model64: 0x197c1000197c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c07, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x197e3000197eb, model64: 0x197e3000197eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c0f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x197fd00019805, model64: 0x197fd00019805},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c12, match64: 0x00000000, model64: 0x90dc000090e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c13, match64: 0x00000000, model64: 0x90e9000090ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c15, match64: 0x00000000, model64: 0x1981000019819},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198200001982d, model64: 0x1982d0001983b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c17, match64: 0x00000000, model64: 0x1983b00019846},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1984600019852, model64: 0x198520001985e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c18, match64: 0x00000000, model64: 0x1985e00019865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xf4800000f4f, model64: 0xf4800000f4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c19, match64: 0x00000000, model64: 0x198650001986e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1986e00019875, model64: 0x1987500019881},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1a, match64: 0x00000000, model64: 0x1985e00019865},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1988100019888, model64: 0x1988100019888},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1988800019891, model64: 0x1988800019891},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1b, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xe90f0000e914, model64: 0xe90f0000e914},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1c, match64: 0x00000000, model64: 0x198910001989e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1989e000198aa, model64: 0x1989e000198aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198aa000198b5, model64: 0x198b5000198c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198c0000198cd, model64: 0x198cd000198da},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198da000198e2, model64: 0x198e2000198ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198ea000198f2, model64: 0x198ea000198f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x198f2000198fa, model64: 0x198fa00019902},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1990200019908, model64: 0x199080001990e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1990e00019914, model64: 0x199140001991a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1d, match64: 0x00000000, model64: 0x1991a00019923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1e, match64: 0x00000000, model64: 0x199230001992e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c1f, match64: 0x00000000, model64: 0x1992e00019938},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1993800019940, model64: 0x199400001994a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1994a00019951, model64: 0x1995100019958},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1995800019960, model64: 0x1995800019960},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199600001996b, model64: 0x1996b0001996e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1996e0001997a, model64: 0x1997a00019986},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1998600019991, model64: 0x1998600019991},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c20, match64: 0x00000000, model64: 0x199910001999e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1999e000199aa, model64: 0x1999e000199aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199aa000199b4, model64: 0x199aa000199b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199b4000199bf, model64: 0x199b4000199bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c21, match64: 0x00000000, model64: 0x199bf000199c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c22, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199c6000199d7, model64: 0x199c6000199d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199d7000199e7, model64: 0x199d7000199e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x199e7000199f6, model64: 0x199f600019a05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a0500019a14, model64: 0x19a1400019a23},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a2300019a31, model64: 0x19a3100019a3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a3f00019a50, model64: 0x19a3f00019a50},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c23, match64: 0x00000000, model64: 0x19a5000019a5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c24, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c25, match64: 0x00000000, model64: 0x19a5d00019a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c26, match64: 0x00000000, model64: 0x19a6400019a6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c27, match64: 0x00000000, model64: 0x19a6c00019a6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c28, match64: 0x00000000, model64: 0x19a6f00019a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c29, match64: 0x00000000, model64: 0x86be000086c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c2a, match64: 0x00000000, model64: 0x19a7800019a7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c2b, match64: 0x00000000, model64: 0x19a7800019a7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2c, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2d, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c2e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a7e00019a88, model64: 0x19a7e00019a88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c30, match64: 0x00000000, model64: 0x19a8d00019a93},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19a9e00019aa6, model64: 0x19aa600019ab0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ab000019ab9, model64: 0x19ab900019ac3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ac300019acd, model64: 0x19acd00019ad7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ad700019adf, model64: 0x19adf00019ae9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ae900019af2, model64: 0x19af200019afc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19afc00019b04, model64: 0x19b0400019b0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b0e00019b17, model64: 0x19b1700019b21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b2100019b2b, model64: 0x19b2b00019b36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b3600019b40, model64: 0x19b4000019b4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c33, match64: 0x00000000, model64: 0x19b4b00019b56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b5600019b5f, model64: 0x19b5f00019b6a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19b6a00019b70, model64: 0x10b7400010b76},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19b7000019b78, model64: 0x19b7800019b80},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19b8000019b87, model64: 0x19b8700019b8f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19b8f00019b97, model64: 0x19b9700019ba1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19ba100019ba7, model64: 0x19ba700019bae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19bae00019bb7, model64: 0x19bb700019bc2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c34, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19bc200019bc9, model64: 0x19bc900019bce},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19bce00019bd6, model64: 0x19bd600019bdb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c35, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c36, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19bdb00019be0, model64: 0x19be000019be4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c38, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1c39, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3b, match64: 0x00000000, model64: 0x19bef00019bf9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3c, match64: 0x00000000, model64: 0x19bf900019c05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c0500019c0d, model64: 0x19c0500019c0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3d, match64: 0x00000000, model64: 0x19c0d00019c1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3e, match64: 0x00000000, model64: 0x19c1a00019c22},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c3f, match64: 0x00000000, model64: 0x19c2200019c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c40, match64: 0x00000000, model64: 0x19c2a00019c38},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c43, match64: 0x00000000, model64: 0x19c4300019c4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c44, match64: 0x00000000, model64: 0x19c4b00019c4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c45, match64: 0x00000000, model64: 0x19c4f00019c54},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c46, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c47, match64: 0x00000000, model64: 0x19c5400019c5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c48, match64: 0x00000000, model64: 0x19c5b00019c61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c49, match64: 0x00000000, model64: 0x19c6100019c63},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4a, match64: 0x00000000, model64: 0x19c6300019c6e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c4b, match64: 0x00000000, model64: 0x19c6e00019c79},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c4c, match64: 0x00000000, model64: 0x19c7900019c82},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c4f, match64: 0x00000000, model64: 0x19c8c00019c93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19c9300019c9c, model64: 0x19c9c00019ca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c50, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c51, match64: 0x00000000, model64: 0x19ca000019ca4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19cab00019cba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cba00019cc0, model64: 0x19cc000019cc6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c54, match64: 0x00000000, model64: 0x19ccc00019cd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c56, match64: 0x00000000, model64: 0x19cd500019cdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c57, match64: 0x00000000, model64: 0x19cdc00019ce1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c58, match64: 0x00000000, model64: 0x19ce100019cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c59, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1c5a, match64: 0x00000000, model64: 0x19cea00019cf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19cf700019cff, model64: 0x19cff00019d04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d0400019d0c, model64: 0x19d0c00019d11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d1100019d19, model64: 0x19d1900019d1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d1e00019d26, model64: 0x19d2600019d2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19d2f00019d35},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19d3900019d3e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19d4d00019d5b, model64: 0x16f7100016f75},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c61, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19d5b00019d65, model64: 0x19d6500019d76},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c62, match64: 0x00000000, model64: 0x19d7600019d82},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c63, match64: 0x00000000, model64: 0x19d8200019d92},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19d9200019d9d, model64: 0x19d9d00019dac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c64, match64: 0x00000000, model64: 0x19dac00019db7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19db700019dc2, model64: 0x19dc200019dd3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19dd300019ddd, model64: 0x19ddd00019dee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c65, match64: 0x00000000, model64: 0x19dee00019dfe},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19dfe00019e0a, model64: 0x19e0a00019e19},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19e1900019e24, model64: 0x19e2400019e33},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x1c66, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1c67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c68, match64: 0x00000000, model64: 0x19e3300019e38},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c69, match64: 0x00000000, model64: 0x19e3800019e3c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19e4200019e4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6c, match64: 0x00000000, model64: 0x19e5900019e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c6e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1c6f, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: 0x1c70, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c72, match64: 0x00000000, model64: 0x19e6900019e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c74, match64: 0x00000000, model64: 0x19e7300019e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c75, match64: 0x00000000, model64: 0x19e8400019e8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19e8a00019e92, model64: 0x83090000830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c76, match64: 0x00000000, model64: 0x19e9200019e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c77, match64: 0x00000000, model64: 0x19e9800019e9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c78, match64: 0x00000000, model64: 0x19e9f00019ea3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ea300019eab, model64: 0x19eab00019eb6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19eb600019ebe, model64: 0x19ebe00019ec8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19ec800019ed0, model64: 0x605f00006065},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c79, match64: 0x00000000, model64: 0x19ed000019ed8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7a, match64: 0x00000000, model64: 0x51df000051e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7b, match64: 0x00000000, model64: 0x19ed800019ee7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7c, match64: 0x00000000, model64: 0x19ee700019ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7d, match64: 0x00000000, model64: 0x19ef800019f05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c7e, match64: 0x00000000, model64: 0x19f0500019f18},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c7f, match64: 0x00000000, model64: 0x19ef800019f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c80, match64: 0x00000000, model64: 0x19ef800019f05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f1800019f1c, model64: 0x19f1c00019f29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c81, match64: 0x00000000, model64: 0x19f2900019f31},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f3100019f35, model64: 0x19f3500019f3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f3e00019f42, model64: 0x19f3e00019f42},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c82, match64: 0x00000000, model64: 0x19f4200019f4a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f4a00019f54, model64: 0x19f4a00019f54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f5b00019f69, model64: 0x19f5b00019f69},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c87, match64: 0x00000000, model64: 0x19f7b00019f83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19f8300019f8a, model64: 0x19f8a00019f92},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x19f9500019f9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fa300019fa7, model64: 0x19fa700019faa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19faa00019fb0, model64: 0x19fb000019fb5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fb500019fb9, model64: 0x19fb900019fbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fbd00019fc1, model64: 0x19fc100019fca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fca00019fce, model64: 0x19fce00019fd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19fda00019fe1, model64: 0x19fe100019fe9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x19fe900019ff2, model64: 0x19ff200019ffc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1c8d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0120001a01e, model64: 0x1a01e0001a02a},
		modelTuple{type64: 0x1060000010d, matchRI: -0x0001, match64: 0x1a02f0001a03c, model64: 0x1a03c0001a043},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x163c3000163ca, model64: 0x163c3000163ca},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c94, match64: 0x00000000, model64: 0x1a04f0001a056},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c95, match64: 0x00000000, model64: 0x1a0560001a05d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c96, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0690001a070, model64: 0x1a0700001a079},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0790001a080, model64: 0x1a0800001a085},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0850001a08c, model64: 0x1a08c0001a095},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0950001a09c, model64: 0x1a09c0001a0a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c99, match64: 0x00000000, model64: 0x1a0a30001a0ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0ab0001a0b2, model64: 0x1a0b20001a0ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9a, match64: 0x00000000, model64: 0x1a0ba0001a0be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0be0001a0c5, model64: 0x1a0c50001a0ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9b, match64: 0x00000000, model64: 0x1a0ca0001a0d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0d20001a0d9, model64: 0x1a0d90001a0e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0e40001a0eb, model64: 0x1a0eb0001a0f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a0f60001a0fd, model64: 0x1a0fd0001a105},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9c, match64: 0x00000000, model64: 0x1a1050001a110},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9d, match64: 0x00000000, model64: 0x1b8100001b82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1100001a117, model64: 0xb5de0000b5e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9e, match64: 0x00000000, model64: 0x1381e0001381f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1c9f, match64: 0x00000000, model64: 0x1a1170001a11c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca0, match64: 0x00000000, model64: 0x1bf600001bf7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a11c0001a123, model64: 0x1a1230001a125},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca1, match64: 0x00000000, model64: 0x1a1250001a12a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca2, match64: 0x00000000, model64: 0x1da300001da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca3, match64: 0x00000000, model64: 0x108cb000108cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a12a0001a131, model64: 0x15f9b00015fa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca4, match64: 0x00000000, model64: 0x1a1310001a137},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1370001a13e, model64: 0x1a13e0001a143},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1430001a14a, model64: 0x1a14a0001a150},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1500001a157, model64: 0x1a1570001a160},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1600001a167, model64: 0x1a1670001a16c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a16c0001a173, model64: 0x1a1730001a176},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1760001a17d, model64: 0x1a17d0001a183},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1830001a18a, model64: 0x1a18a0001a18c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a18c0001a193, model64: 0x1a1930001a196},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca5, match64: 0x00000000, model64: 0x1a1960001a19b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca6, match64: 0x00000000, model64: 0x1a19b0001a1a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca7, match64: 0x00000000, model64: 0x1a1a40001a1a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca8, match64: 0x00000000, model64: 0x1c2800001c29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ca9, match64: 0x00000000, model64: 0x1a1a60001a1ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caa, match64: 0x00000000, model64: 0x1a1ab0001a1ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1ad0001a1b4, model64: 0x1a1b40001a1b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cab, match64: 0x00000000, model64: 0x15ee700015ee8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cac, match64: 0x00000000, model64: 0x1a1b60001a1b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1b80001a1bf, model64: 0x1a1bf0001a1c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cad, match64: 0x00000000, model64: 0x1a1c10001a1c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cae, match64: 0x00000000, model64: 0x1c3a00001c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1c60001a1cd, model64: 0x1a1cd0001a1cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1cf0001a1d6, model64: 0x17c8f00017c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1d60001a1dd, model64: 0x1a1dd0001a1f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1f30001a1fa, model64: 0x17c4e00017c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x1caf, match64: 0x00000000, model64: 0x3c6600003c67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb0, match64: 0x00000000, model64: 0x1a1fa0001a1fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a1fc0001a203, model64: 0x1a2030001a205},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2050001a20c, model64: 0x1a20c0001a210},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb1, match64: 0x00000000, model64: 0x1a2100001a212},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2120001a219, model64: 0x1a2190001a21e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a21e0001a225, model64: 0xb5cd0000b5ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb2, match64: 0x00000000, model64: 0x1a2250001a229},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb3, match64: 0x00000000, model64: 0x1a2290001a232},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb4, match64: 0x00000000, model64: 0x1a2320001a23a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb5, match64: 0x00000000, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a23a0001a241, model64: 0x1a2410001a244},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb6, match64: 0x00000000, model64: 0x1a2440001a24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb7, match64: 0x00000000, model64: 0x1a24d0001a257},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2570001a25e, model64: 0x1a25e0001a268},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2680001a26f, model64: 0x1a26f0001a276},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2760001a27d, model64: 0x1a27d0001a286},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2860001a28d, model64: 0x1a28d0001a293},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2930001a29a, model64: 0x1a29a0001a2a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb8, match64: 0x00000000, model64: 0xb5e40000b5e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2a00001a2a7, model64: 0x1a2a70001a2ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2ac0001a2b3, model64: 0x1a2b30001a2bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2bc0001a2c3, model64: 0x1a2c30001a2c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2c90001a2d0, model64: 0x1a2d00001a2d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2d70001a2de, model64: 0x1a2de0001a2e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2e80001a2ef, model64: 0x1a2ef0001a2f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cb9, match64: 0x00000000, model64: 0x1a2f50001a2fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a2fa0001a301, model64: 0x17b0500017b07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3010001a308, model64: 0x1a3080001a30e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a30e0001a315, model64: 0x1a3150001a318},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3180001a31f, model64: 0x1a31f0001a325},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cba, match64: 0x00000000, model64: 0x1a3250001a32e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbb, match64: 0x00000000, model64: 0x1a32e0001a338},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3380001a33f, model64: 0x1a33f0001a345},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3450001a34c, model64: 0x1a34c0001a351},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3510001a358, model64: 0x1a3580001a35e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a35e0001a365, model64: 0x1a3650001a36f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbc, match64: 0x00000000, model64: 0x1a36f0001a371},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbd, match64: 0x00000000, model64: 0x58400000586},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbe, match64: 0x00000000, model64: 0x6bef00006bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cbf, match64: 0x00000000, model64: 0x183b0000183b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc0, match64: 0x00000000, model64: 0x1a3710001a374},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc1, match64: 0x00000000, model64: 0x1a3740001a377},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc2, match64: 0x00000000, model64: 0x1a3770001a37a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc3, match64: 0x00000000, model64: 0x1a37a0001a38e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc4, match64: 0x00000000, model64: 0x1a38e0001a391},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc5, match64: 0x00000000, model64: 0x1a3910001a394},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc6, match64: 0x00000000, model64: 0x1a3940001a397},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc7, match64: 0x00000000, model64: 0x1a3970001a39b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc8, match64: 0x00000000, model64: 0x1a39b0001a39e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cc9, match64: 0x00000000, model64: 0x1a39e0001a3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cca, match64: 0x00000000, model64: 0x1a3a20001a3a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccb, match64: 0x00000000, model64: 0x183b2000183b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccc, match64: 0x00000000, model64: 0x1a3a60001a3a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3a90001a3b0, model64: 0x1a3b00001a3b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccd, match64: 0x00000000, model64: 0x1a3b40001a3b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cce, match64: 0x00000000, model64: 0x1a3b70001a3ba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3ba0001a3c1, model64: 0x183c5000183c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3c10001a3c8, model64: 0xa91c0000a91f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3c80001a3cf, model64: 0x1a3cf0001a3d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ccf, match64: 0x00000000, model64: 0x1a3d30001a3d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3d60001a3dd, model64: 0x183c8000183cb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3dd0001a3e4, model64: 0x1a3e40001a3e7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3e70001a3ee, model64: 0x1a3ee0001a3f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3f40001a3fb, model64: 0x183cb000183ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a3fb0001a402, model64: 0x1a4020001a405},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4050001a40c, model64: 0x1a40c0001a412},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4120001a419, model64: 0x1a4190001a41f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a41f0001a426, model64: 0x183ce000183d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4260001a42d, model64: 0x1a42d0001a437},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd0, match64: 0x00000000, model64: 0x1a4370001a43b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a43b0001a442, model64: 0x1a4420001a44a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a44a0001a451, model64: 0x1a4510001a455},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd1, match64: 0x00000000, model64: 0x1a4550001a45d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd2, match64: 0x00000000, model64: 0x1a45d0001a461},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4610001a468, model64: 0x1a4680001a47c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd3, match64: 0x00000000, model64: 0x1a47c0001a482},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd4, match64: 0x00000000, model64: 0x1a4820001a48a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd5, match64: 0x00000000, model64: 0x1a48a0001a492},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd6, match64: 0x00000000, model64: 0x1a4920001a49f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd7, match64: 0x00000000, model64: 0x1a49f0001a4a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd8, match64: 0x00000000, model64: 0x1a4a80001a4b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4b10001a4b8, model64: 0x1a0eb0001a0f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cd9, match64: 0x00000000, model64: 0x1a4b80001a4c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cda, match64: 0x00000000, model64: 0x1a4c90001a4d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdb, match64: 0x00000000, model64: 0x1a4d50001a4e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4e10001a4e8, model64: 0x1a4e80001a4f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a4f00001a4f7, model64: 0x1a4f70001a500},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5000001a507, model64: 0x1a5070001a510},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5100001a517, model64: 0x1a5170001a51f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a51f0001a526, model64: 0x1a5260001a531},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5310001a538, model64: 0x1a5380001a541},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5410001a548, model64: 0x1a5480001a550},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5500001a557, model64: 0x1a5570001a562},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5620001a569, model64: 0x1a5690001a575},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5750001a57c, model64: 0x1a57c0001a58b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdc, match64: 0x00000000, model64: 0x1a58b0001a59a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a59a0001a5a1, model64: 0x1a5a10001a5aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5aa0001a5b1, model64: 0x1a5b10001a5c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5c00001a5c7, model64: 0x1a5c70001a5d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5d20001a5d9, model64: 0x1a5d90001a5e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5e40001a5eb, model64: 0x1a5eb0001a5fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a5fc0001a603, model64: 0x1a6030001a612},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6120001a619, model64: 0x1a6190001a622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6220001a629, model64: 0x1a6290001a632},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdd, match64: 0x00000000, model64: 0xa9210000a923},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cde, match64: 0x00000000, model64: 0x1a6320001a638},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cdf, match64: 0x00000000, model64: 0x1a6380001a63f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce0, match64: 0x00000000, model64: 0x1a63f0001a646},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce1, match64: 0x00000000, model64: 0x1a6460001a650},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce2, match64: 0x00000000, model64: 0x1a6500001a65e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce3, match64: 0x00000000, model64: 0xec8b0000ec8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce4, match64: 0x00000000, model64: 0x1a65e0001a66b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a66b0001a672, model64: 0xec8b0000ec8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6720001a682, model64: 0x1a6820001a68b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce5, match64: 0x00000000, model64: 0x1a68b0001a68e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce6, match64: 0x00000000, model64: 0x1a68e0001a693},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce7, match64: 0x00000000, model64: 0x1a6930001a698},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6980001a69f, model64: 0x10abb00010abe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce8, match64: 0x00000000, model64: 0x1a69f0001a6a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6a50001a6ac, model64: 0x1a6ac0001a6b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ce9, match64: 0x00000000, model64: 0x1a6b30001a6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cea, match64: 0x00000000, model64: 0x1a6b90001a6bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ceb, match64: 0x00000000, model64: 0x1073300010736},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6bf0001a6c6, model64: 0x1a6c60001a6c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6c90001a6d0, model64: 0x1a6d00001a6d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6d40001a6db, model64: 0x1a6db0001a6de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6de0001a6e5, model64: 0x10abb00010abe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6e50001a6ec, model64: 0x1a6ec0001a6ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6ef0001a6f6, model64: 0x1a6f60001a6fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a6fa0001a701, model64: 0x4a2c00004a2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7010001a708, model64: 0x1a7080001a70c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a70c0001a713, model64: 0x1a7130001a718},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7180001a71f, model64: 0x1a71f0001a727},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cec, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ced, match64: 0x00000000, model64: 0x1a7270001a72a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cee, match64: 0x00000000, model64: 0x1728c00017291},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cef, match64: 0x00000000, model64: 0x1a72a0001a72f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1cf0, match64: 0x00000000, model64: 0x1a72f0001a737},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a7370001a749, model64: 0x1a7370001a749},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x1cf3, match64: 0x00000000, model64: 0x1a7500001a757},
		modelTuple{type64: 0x24300000245, matchRI: 0x1cf4, match64: 0x00000000, model64: 0x1a7570001a760},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cf7, match64: 0x00000000, model64: 0x1a76d0001a77d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7830001a790, model64: 0x1a7900001a797},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7970001a7a2, model64: 0x17c8f00017c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7a20001a7aa, model64: 0x1c3a00001c3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7b00001a7b6, model64: 0x1a7b60001a7bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7bc0001a7c5, model64: 0x1a7c50001a7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7ce0001a7d6, model64: 0x1a7d60001a7df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7df0001a7e5, model64: 0x1a7e50001a7ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfb, match64: 0x00000000, model64: 0x1a7ec0001a7f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a7f10001a7f9, model64: 0x1a7f90001a805},
		modelTuple{type64: 0x2700000027, matchRI: 0x1cfc, match64: 0x00000000, model64: 0x1a8050001a80a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a80a0001a816, model64: 0x1a80a0001a816},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a8160001a821, model64: 0x1a8160001a821},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8210001a829, model64: 0x1a8290001a832},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8320001a841, model64: 0x1a8410001a852},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8520001a85f, model64: 0x1a85f0001a86c},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a86c0001a87e, model64: 0x1a87e0001a892},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8920001a89f, model64: 0x1a89f0001a8ac},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8ac0001a8c1, model64: 0x1a8c10001a8d8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8d80001a8e9, model64: 0x1a8d80001a8e9},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a8e90001a8f9, model64: 0x1a8e90001a8f9},
		modelTuple{type64: 0x24700000251, matchRI: 0x1cfd, match64: 0x00000000, model64: 0x1a8f90001a909},
		modelTuple{type64: 0x24700000251, matchRI: 0x1cfe, match64: 0x00000000, model64: 0x1a9090001a91d},
		modelTuple{type64: 0x24700000251, matchRI: 0x1cff, match64: 0x00000000, model64: 0x1a91d0001a929},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9290001a931, model64: 0x1a9310001a939},
		modelTuple{type64: 0x24700000251, matchRI: 0x1d00, match64: 0x00000000, model64: 0x1a9390001a940},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9400001a94e, model64: 0x1a94e0001a957},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9570001a969, model64: 0x1a9570001a969},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9690001a97b, model64: 0x1a9690001a97b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a97b0001a988, model64: 0x1a97b0001a988},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9880001a993, model64: 0x1a9880001a993},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9390001a940, model64: 0x1a9390001a940},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1a9930001a99e, model64: 0x1a9930001a99e},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1a99e0001a9a7, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d04, match64: 0x00000000, model64: 0x1a9ba0001a9be},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d06, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x19b000001af, model64: 0x1af000001b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9c80001a9d4, model64: 0x1a9d40001a9dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d08, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1a9e50001a9ea, model64: 0x1a9ea0001a9ed},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1a9f20001a9f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa040001aa11, model64: 0x1aa110001aa14},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1aa1d0001aa21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa3b0001aa44, model64: 0x1aa440001aa50},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d0e, match64: 0x00000000, model64: 0x1aa5b0001aa61},
		modelTuple{type64: 0x24700000251, matchRI: 0x1d0f, match64: 0x00000000, model64: 0x1aa610001aa67},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1aa6f0001aa74},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa7f0001aa8b, model64: 0x1aa8b0001aa98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aa980001aaa0, model64: 0x1aaa00001aaa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d14, match64: 0x00000000, model64: 0x1aaa80001aab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d15, match64: 0x00000000, model64: 0x1aab40001aac0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d16, match64: 0x00000000, model64: 0x1aac00001aacb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1aaed0001aaf6},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab030001ab08, model64: 0x1ab030001ab08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab080001ab0e, model64: 0x1ab080001ab0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab0e0001ab16, model64: 0x1ab0e0001ab16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab160001ab1b, model64: 0x1ab160001ab1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab1f0001ab24, model64: 0x1ab240001ab2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ab2b0001ab34, model64: 0x1ab340001ab39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2700000027, model64: 0x1ab390001ab4d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1ab540001ab5f, model64: 0x1ab540001ab5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1d, match64: 0x00000000, model64: 0x1ab5f0001ab6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1e, match64: 0x00000000, model64: 0x1ab6d0001ab7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ab890001ab90},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x1d24, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d25, match64: 0x00000000, model64: 0x1ab9d0001aba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d26, match64: 0x00000000, model64: 0x1aba80001abb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d27, match64: 0x00000000, model64: 0x1abb40001abbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abc70001abd3, model64: 0x1abd30001abd9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d2b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abdf0001abe8, model64: 0x1abdf0001abe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abe80001abef, model64: 0x1abe80001abef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1abf60001abfb, model64: 0x1abf60001abfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d2f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d31, match64: 0x00000000, model64: 0x1ac0a0001ac15},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d33, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d34, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac190001ac1f, model64: 0x1ac1f0001ac26},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d35, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac2b0001ac30, model64: 0x1ac2b0001ac30},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ac300001ac37, model64: 0xb31b0000b31d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac3b0001ac46, model64: 0x1ac3b0001ac46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d39, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d3c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d3f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d40, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d42, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1ac610001ac68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac730001ac7e, model64: 0x1ac7e0001ac84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ac6c0001ac73, model64: 0x114990001149b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d48, match64: 0x00000000, model64: 0x1ac990001aca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d49, match64: 0x00000000, model64: 0x1aca00001acab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4a, match64: 0x00000000, model64: 0x1acab0001acb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1acbb0001acc1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d4f, match64: 0x00000000, model64: 0x1acc40001accf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d50, match64: 0x00000000, model64: 0x1accf0001acdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d51, match64: 0x00000000, model64: 0x1acdb0001ace4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d52, match64: 0x00000000, model64: 0x1ace40001acef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d53, match64: 0x00000000, model64: 0x1acef0001acfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d54, match64: 0x00000000, model64: 0x1acfa0001ad0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d55, match64: 0x00000000, model64: 0x1ad0a0001ad16},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d56, match64: 0x00000000, model64: 0x1ad160001ad1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d57, match64: 0x00000000, model64: 0x1ad1f0001ad28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d58, match64: 0x00000000, model64: 0x1ad280001ad32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d59, match64: 0x00000000, model64: 0x1ad320001ad36},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5a, match64: 0x00000000, model64: 0x1ad360001ad41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5b, match64: 0x00000000, model64: 0x1ad410001ad4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5c, match64: 0x00000000, model64: 0x1ad4c0001ad55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5d, match64: 0x00000000, model64: 0x1ad550001ad61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5e, match64: 0x00000000, model64: 0x1ad610001ad6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d5f, match64: 0x00000000, model64: 0x1ad6d0001ad79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d60, match64: 0x00000000, model64: 0x1ad790001ad8a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d61, match64: 0x00000000, model64: 0x1ad8a0001ad96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d62, match64: 0x00000000, model64: 0x1ad960001ada0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d63, match64: 0x00000000, model64: 0x1ada00001adaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d64, match64: 0x00000000, model64: 0x1adaa0001adb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d65, match64: 0x00000000, model64: 0x1adb20001adbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d66, match64: 0x00000000, model64: 0x1adbd0001adc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d67, match64: 0x00000000, model64: 0x1adc90001add2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1add20001add9, model64: 0x1add20001add9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d68, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1addd0001ade6, model64: 0x1ade60001adea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adea0001adf2, model64: 0x1adf20001adf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1adfb0001ae07, model64: 0x994f0000995a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae070001ae18, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6b, match64: 0x00000000, model64: 0x1ae240001ae2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d6c, match64: 0x00000000, model64: 0x1ae2d0001ae40},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae4d0001ae56, model64: 0x1ae560001ae5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae5f0001ae6d, model64: 0x1ae5f0001ae6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae6d0001ae7d, model64: 0x1ae7d0001ae8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ae8d0001ae9a, model64: 0x1ae9a0001aea7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1aeae0001aeb7, model64: 0x1aeb70001aec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aecc0001aed6, model64: 0x1aed60001aee0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aee00001aeea, model64: 0x1aeea0001aef4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1af010001af08},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af0c0001af1b, model64: 0x1af1b0001af2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af2a0001af34, model64: 0x1af340001af3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d78, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d79, match64: 0x00000000, model64: 0xded70000dedb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af430001af48, model64: 0x1af480001af4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7a, match64: 0x00000000, model64: 0x1af4d0001af51},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7b, match64: 0x00000000, model64: 0x1af510001af5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7c, match64: 0x00000000, model64: 0x1af5a0001af5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7d, match64: 0x00000000, model64: 0x1af5e0001af65},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7e, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d7f, match64: 0x00000000, model64: 0x1af650001af6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d80, match64: 0x00000000, model64: 0x1af6a0001af6d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1af710001af7a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1af820001af92, model64: 0x1af920001afa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d83, match64: 0x00000000, model64: 0x1afa20001afb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d84, match64: 0x00000000, model64: 0x1afb40001afbf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afbf0001afca, model64: 0x1afbf0001afca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afca0001afd5, model64: 0x1afd50001afe0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1afe00001afea, model64: 0x1afea0001aff4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1aff40001b001, model64: 0x1b0010001b00e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d85, match64: 0x00000000, model64: 0x1b00e0001b017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0170001b029, model64: 0x1b0290001b03b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b03b0001b049, model64: 0x1b0490001b057},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0570001b063, model64: 0x1b0630001b06f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d86, match64: 0x00000000, model64: 0x1b06f0001b079},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d87, match64: 0x00000000, model64: 0x1b0790001b082},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0820001b08b, model64: 0x1b0820001b08b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b08b0001b093, model64: 0x1b0930001b09b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b09b0001b0a1, model64: 0x1b0a10001b0a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b0a70001b0ac, model64: 0x1b0a70001b0ac},
		modelTuple{type64: 0x24700000251, matchRI: 0x1d88, match64: 0x00000000, model64: 0x1b0ac0001b0ba},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b0ba0001b0c8, model64: 0x1b0c80001b0d2},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b0d20001b0e0, model64: 0x1b0e00001b0ea},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b0ea0001b0f7, model64: 0x1b0f70001b100},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b1000001b109, model64: 0xea530000ea58},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b1090001b114, model64: 0x1b1140001b11b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b11b0001b127, model64: 0x1b1270001b12f},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b12f0001b13b, model64: 0x1b13b0001b143},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x1b1430001b14a, model64: 0x1b14a0001b14d},
		modelTuple{type64: 0x24700000251, matchRI: 0x1d89, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b14d0001b15c, model64: 0x1b15c0001b167},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b1670001b170, model64: 0x1b1700001b175},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d8b, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b17f0001b182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1900001b197, model64: 0x1b1900001b197},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1970001b1a2, model64: 0x1b1970001b1a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1a20001b1ad, model64: 0x1b1ad0001b1b8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1b80001b1be, model64: 0x1b1be0001b1c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1c40001b1ce, model64: 0x1b1ce0001b1d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1d80001b1e4, model64: 0x1b1e40001b1f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1f00001b1f7, model64: 0x1b1f70001b1fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b1fe0001b206, model64: 0x1b2060001b20e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b20e0001b215, model64: 0x1b2150001b21c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b21c0001b223, model64: 0x1b21c0001b223},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2310001b237, model64: 0x1b2310001b237},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2370001b23e, model64: 0x1b2370001b23e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b23e0001b24b, model64: 0x1b24b0001b258},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2580001b264, model64: 0x1b2580001b264},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d91, match64: 0x00000000, model64: 0x1b2640001b271},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d92, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2770001b27e, model64: 0x1b2770001b27e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d95, match64: 0x00000000, model64: 0x70a0000070f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d97, match64: 0x00000000, model64: 0x1b2850001b291},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b2910001b29c, model64: 0x1b29c0001b2a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d98, match64: 0x00000000, model64: 0x1b2a70001b2b1},
		modelTuple{type64: 0x24300000245, matchRI: 0x1d99, match64: 0x00000000, model64: 0x1b2b10001b2ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9b, match64: 0x00000000, model64: 0x1b2c70001b2cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9c, match64: 0x00000000, model64: 0x1b2cf0001b2d4},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x1b2d40001b2db, model64: 0x1b2db0001b2e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1d9d, match64: 0x00000000, model64: 0x1b2e10001b2e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1d9f, match64: 0x00000000, model64: 0x1b2eb0001b2f3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b2f60001b2fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da3, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da5, match64: 0x00000000, model64: 0x1b30b0001b313},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da6, match64: 0x00000000, model64: 0x1b3130001b322},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3220001b32e, model64: 0x1b32e0001b33a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b33a0001b348, model64: 0x1b33a0001b348},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3480001b350, model64: 0x1b3500001b358},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3580001b362, model64: 0x1b3620001b36c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b36c0001b375, model64: 0x1b3750001b37e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b37e0001b387, model64: 0x1b3870001b390},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3900001b399, model64: 0x1b3990001b3a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3a20001b3ac, model64: 0x1b3a20001b3ac},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b3ac0001b3b7, model64: 0x1b3b70001b3c0},
		modelTuple{type64: 0x38400000391, matchRI: 0x1da8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1da9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1b3cd0001b3da, model64: 0x1b3da0001b3e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dad, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1dae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1daf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db2, match64: 0x00000000, model64: 0x1b3ec0001b3fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db5, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1db6, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b4010001b409, model64: 0x1b4090001b412},
		modelTuple{type64: 0x24300000245, matchRI: 0x1db8, match64: 0x00000000, model64: 0x1b4120001b41b},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b41b0001b421, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x1db9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1b4210001b42a, model64: 0x1b42a0001b439},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dba, match64: 0x00000000, model64: 0x1b4390001b449},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dbb, match64: 0x00000000, model64: 0x1b4490001b45e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dbc, match64: 0x00000000, model64: 0x1b45e0001b474},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dbd, match64: 0x00000000, model64: 0x1b4740001b489},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dbe, match64: 0x00000000, model64: 0x1b4890001b49d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dbf, match64: 0x00000000, model64: 0x1b49d0001b4ae},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc0, match64: 0x00000000, model64: 0x1b4ae0001b4c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc1, match64: 0x00000000, model64: 0x1b4c40001b4d9},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc2, match64: 0x00000000, model64: 0x1b4d90001b4e3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc3, match64: 0x00000000, model64: 0x1b4e30001b4f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc4, match64: 0x00000000, model64: 0x1b4f20001b506},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc5, match64: 0x00000000, model64: 0x1b5060001b518},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc6, match64: 0x00000000, model64: 0x1b5180001b52f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc7, match64: 0x00000000, model64: 0x1b52f0001b543},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc8, match64: 0x00000000, model64: 0x1b5430001b555},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dc9, match64: 0x00000000, model64: 0x1b5550001b56c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dca, match64: 0x00000000, model64: 0x1b56c0001b582},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dcb, match64: 0x00000000, model64: 0x1b5820001b594},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dcc, match64: 0x00000000, model64: 0x1b5940001b5a8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dcd, match64: 0x00000000, model64: 0x1b5a80001b5b7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1b5b70001b5bd, model64: 0x1b5bd0001b5d1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dce, match64: 0x00000000, model64: 0x1b5d10001b5e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dcf, match64: 0x00000000, model64: 0x1b5e10001b5f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd0, match64: 0x00000000, model64: 0x1b5f10001b607},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd1, match64: 0x00000000, model64: 0x1b6070001b61f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd2, match64: 0x00000000, model64: 0x1b61f0001b642},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd3, match64: 0x00000000, model64: 0x1b6420001b660},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd4, match64: 0x00000000, model64: 0x1b6600001b682},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd5, match64: 0x00000000, model64: 0x1b6820001b69b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd6, match64: 0x00000000, model64: 0x1b69b0001b6af},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd7, match64: 0x00000000, model64: 0x1b6af0001b6c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd8, match64: 0x00000000, model64: 0x1b6c70001b6ef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dd9, match64: 0x00000000, model64: 0x1b6ef0001b718},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dda, match64: 0x00000000, model64: 0x1b7180001b73f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ddb, match64: 0x00000000, model64: 0x1b73f0001b767},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ddc, match64: 0x00000000, model64: 0x1b7670001b783},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ddd, match64: 0x00000000, model64: 0x1b7830001b79f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dde, match64: 0x00000000, model64: 0x1b79f0001b7bd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ddf, match64: 0x00000000, model64: 0x1b7bd0001b7dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de0, match64: 0x00000000, model64: 0x1b7dc0001b7fe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de1, match64: 0x00000000, model64: 0x1b7fe0001b821},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de2, match64: 0x00000000, model64: 0x1b8210001b838},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de3, match64: 0x00000000, model64: 0x1b8210001b838},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de4, match64: 0x00000000, model64: 0x1b8380001b851},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de5, match64: 0x00000000, model64: 0x1b8510001b863},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de6, match64: 0x00000000, model64: 0x1b8630001b87a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de7, match64: 0x00000000, model64: 0x1b87a0001b895},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de8, match64: 0x00000000, model64: 0x1b8950001b8ac},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1de9, match64: 0x00000000, model64: 0x1b8ac0001b8c4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dea, match64: 0x00000000, model64: 0x1b8c40001b8dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1deb, match64: 0x00000000, model64: 0x1b8dc0001b8fa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dec, match64: 0x00000000, model64: 0x1b8fa0001b90d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1ded, match64: 0x00000000, model64: 0x1b90d0001b921},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dee, match64: 0x00000000, model64: 0x1b9210001b93a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1def, match64: 0x00000000, model64: 0x1b93a0001b94d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df0, match64: 0x00000000, model64: 0x1b94d0001b964},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df1, match64: 0x00000000, model64: 0x1b9640001b97c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df2, match64: 0x00000000, model64: 0x1b97c0001b999},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df3, match64: 0x00000000, model64: 0x1b9990001b9b1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df4, match64: 0x00000000, model64: 0x1b9b10001b9c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df5, match64: 0x00000000, model64: 0x1b9c70001b9df},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df6, match64: 0x00000000, model64: 0x1b9df0001b9fd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df7, match64: 0x00000000, model64: 0x1b9fd0001ba1b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df8, match64: 0x00000000, model64: 0x1ba1b0001ba37},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1df9, match64: 0x00000000, model64: 0x1ba370001ba4b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dfa, match64: 0x00000000, model64: 0x1ba4b0001ba62},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dfb, match64: 0x00000000, model64: 0x1ba620001ba78},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dfc, match64: 0x00000000, model64: 0x1ba780001ba92},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dfd, match64: 0x00000000, model64: 0x1ba920001baab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dfe, match64: 0x00000000, model64: 0x1baab0001bac7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1dff, match64: 0x00000000, model64: 0x1bac70001badd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e00, match64: 0x00000000, model64: 0x1badd0001baf3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e01, match64: 0x00000000, model64: 0x1baf30001bb10},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e02, match64: 0x00000000, model64: 0x1bb100001bb2a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e03, match64: 0x00000000, model64: 0x1bb2a0001bb42},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e04, match64: 0x00000000, model64: 0x1bb420001bb50},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e05, match64: 0x00000000, model64: 0x1bb500001bb66},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e06, match64: 0x00000000, model64: 0x1bb660001bb7c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e07, match64: 0x00000000, model64: 0x1bb7c0001bb8d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e08, match64: 0x00000000, model64: 0x1bb8d0001bba3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e09, match64: 0x00000000, model64: 0x1bba30001bbb7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0a, match64: 0x00000000, model64: 0x1bbb70001bbcc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0b, match64: 0x00000000, model64: 0x1bbcc0001bbe7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0c, match64: 0x00000000, model64: 0x1bbe70001bbfd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0d, match64: 0x00000000, model64: 0x1bbfd0001bc11},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0e, match64: 0x00000000, model64: 0x1bc110001bc22},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e0f, match64: 0x00000000, model64: 0x1bc220001bc37},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e10, match64: 0x00000000, model64: 0x1bc370001bc4d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e11, match64: 0x00000000, model64: 0x1bc4d0001bc62},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e12, match64: 0x00000000, model64: 0x1bc620001bc7a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e13, match64: 0x00000000, model64: 0x1bc7a0001bc90},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e14, match64: 0x00000000, model64: 0x1bc900001bcab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e15, match64: 0x00000000, model64: 0x1bcab0001bcbd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e16, match64: 0x00000000, model64: 0x1bcbd0001bcd4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e17, match64: 0x00000000, model64: 0x1bcd40001bcea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e18, match64: 0x00000000, model64: 0x1bcea0001bd01},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e19, match64: 0x00000000, model64: 0x1bd010001bd18},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1a, match64: 0x00000000, model64: 0x1bd180001bd2e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1b, match64: 0x00000000, model64: 0x1bd2e0001bd43},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1c, match64: 0x00000000, model64: 0x1bd430001bd5a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1d, match64: 0x00000000, model64: 0x1bd5a0001bd70},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1e, match64: 0x00000000, model64: 0x1bd700001bd87},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e1f, match64: 0x00000000, model64: 0x1bd870001bd9d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e20, match64: 0x00000000, model64: 0x1bd9d0001bdb4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e21, match64: 0x00000000, model64: 0x1bdb40001bdca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e22, match64: 0x00000000, model64: 0x1bdca0001bde1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e23, match64: 0x00000000, model64: 0x1bde10001bdf7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e24, match64: 0x00000000, model64: 0x1bdf70001be0f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e25, match64: 0x00000000, model64: 0x1be0f0001be28},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e26, match64: 0x00000000, model64: 0x1be280001be3f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e27, match64: 0x00000000, model64: 0x1be3f0001be57},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e28, match64: 0x00000000, model64: 0x1be570001be6e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e29, match64: 0x00000000, model64: 0x1be6e0001be84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2a, match64: 0x00000000, model64: 0x1be840001be9e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2b, match64: 0x00000000, model64: 0x1be9e0001beb7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2c, match64: 0x00000000, model64: 0x1beb70001bed2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2d, match64: 0x00000000, model64: 0x1bed20001beee},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2e, match64: 0x00000000, model64: 0x1beee0001bf05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e2f, match64: 0x00000000, model64: 0x1bf050001bf1e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e30, match64: 0x00000000, model64: 0x1bf1e0001bf34},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e31, match64: 0x00000000, model64: 0x1bf340001bf4c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e32, match64: 0x00000000, model64: 0x1bf4c0001bf62},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e33, match64: 0x00000000, model64: 0x1bf620001bf77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e34, match64: 0x00000000, model64: 0x1bf770001bf8d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e35, match64: 0x00000000, model64: 0x1bf8d0001bfa2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e36, match64: 0x00000000, model64: 0x1bfa20001bfbe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e37, match64: 0x00000000, model64: 0x1b7830001b79f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e38, match64: 0x00000000, model64: 0x1bfbe0001bfdb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e39, match64: 0x00000000, model64: 0x1bfdb0001bff1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3a, match64: 0x00000000, model64: 0x1bff10001c006},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3b, match64: 0x00000000, model64: 0x1c0060001c024},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3c, match64: 0x00000000, model64: 0x1c0240001c041},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3d, match64: 0x00000000, model64: 0x1c0410001c05e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3e, match64: 0x00000000, model64: 0x1c05e0001c077},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e3f, match64: 0x00000000, model64: 0x1c0770001c088},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e40, match64: 0x00000000, model64: 0x1c0880001c09e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e41, match64: 0x00000000, model64: 0x1c09e0001c0b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e42, match64: 0x00000000, model64: 0x1c0b20001c0c6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e43, match64: 0x00000000, model64: 0x1c0c60001c0e1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e44, match64: 0x00000000, model64: 0x1c0e10001c0f7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e45, match64: 0x00000000, model64: 0x1c0f70001c112},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e46, match64: 0x00000000, model64: 0x1c1120001c12a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e47, match64: 0x00000000, model64: 0x1c12a0001c147},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e48, match64: 0x00000000, model64: 0x1c1470001c15f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e49, match64: 0x00000000, model64: 0x1c15f0001c17c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e4a, match64: 0x00000000, model64: 0x1c17c0001c197},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e4b, match64: 0x00000000, model64: 0x1c1970001c1b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e4c, match64: 0x00000000, model64: 0x1c1b70001c1cc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x1e4d, match64: 0x00000000, model64: 0x1c1cc0001c1d8},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c1d80001c1df, model64: 0x1c1df0001c1f9},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c1f90001c201, model64: 0x1c2010001c20c},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c20c0001c214, model64: 0x1c2140001c223},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2230001c22b, model64: 0x1c22b0001c238},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2380001c241, model64: 0x1c2410001c252},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2520001c259, model64: 0x1c2590001c277},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2770001c27e, model64: 0x1c27e0001c298},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2980001c29f, model64: 0x1c29f0001c2bd},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2bd0001c2c4, model64: 0x1c2c40001c2d5},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c2d50001c2dc, model64: 0x1c2dc0001c2ef},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x1e4e, match64: 0x00000000, model64: 0x1c2ef0001c302},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x1e4f, match64: 0x00000000, model64: 0x1c3020001c315},
		modelTuple{type64: 0x29be000029c6, matchRI: 0x1e50, match64: 0x00000000, model64: 0x1c3150001c328},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3280001c32f, model64: 0x1c32f0001c346},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3460001c34d, model64: 0x1c34d0001c364},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3640001c36b, model64: 0x1c36b0001c386},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3860001c38d, model64: 0x1c38d0001c3a8},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3a80001c3af, model64: 0x1c3af0001c3c4},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3c40001c3cb, model64: 0x1c3cb0001c3de},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3de0001c3e5, model64: 0x1c3e50001c3f6},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c3f60001c3fd, model64: 0x1c3fd0001c412},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4120001c419, model64: 0x1c4190001c434},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4340001c43b, model64: 0x1c43b0001c44e},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c44e0001c455, model64: 0x1c4550001c46b},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c46b0001c472, model64: 0x1c4720001c48e},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c48e0001c495, model64: 0x1c4950001c4a8},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4a80001c4af, model64: 0x1c4af0001c4c2},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4c20001c4c9, model64: 0x1c4c90001c4d4},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4d40001c4db, model64: 0x1c4db0001c4e7},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c4e70001c4ee, model64: 0x1c4ee0001c50a},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c50a0001c511, model64: 0x1c5110001c52c},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c52c0001c533, model64: 0x1c5330001c54a},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c54a0001c551, model64: 0x1c5510001c564},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c5640001c56b, model64: 0x1c56b0001c57e},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c57e0001c585, model64: 0x1c5850001c59b},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1c59b0001c5a4, model64: 0x1c59b0001c5a4},
		modelTuple{type64: 0x7130000071d, matchRI: 0x1e51, match64: 0x00000000, model64: 0x1c5a40001c5ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e52, match64: 0x00000000, model64: 0x1c5ae0001c5b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e53, match64: 0x00000000, model64: 0x1c5b80001c5c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e54, match64: 0x00000000, model64: 0x1c5c50001c5d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e55, match64: 0x00000000, model64: 0x1c5d10001c5dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e56, match64: 0x00000000, model64: 0x1c5dc0001c5e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e57, match64: 0x00000000, model64: 0x1c5e70001c5f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e58, match64: 0x00000000, model64: 0x1c5f40001c600},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e59, match64: 0x00000000, model64: 0x1c6000001c611},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5a, match64: 0x00000000, model64: 0x1c6110001c61b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5b, match64: 0x00000000, model64: 0x1c61b0001c627},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5c, match64: 0x00000000, model64: 0x1c6270001c634},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5d, match64: 0x00000000, model64: 0x1c6340001c63c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5e, match64: 0x00000000, model64: 0x1c63c0001c644},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e5f, match64: 0x00000000, model64: 0x1c6440001c64b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e60, match64: 0x00000000, model64: 0x1c64b0001c652},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e61, match64: 0x00000000, model64: 0x1c6520001c659},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e62, match64: 0x00000000, model64: 0x1c6590001c664},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e63, match64: 0x00000000, model64: 0x1c6640001c669},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e64, match64: 0x00000000, model64: 0x1c6690001c670},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e65, match64: 0x00000000, model64: 0x1c6700001c678},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e66, match64: 0x00000000, model64: 0x1c6780001c689},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e67, match64: 0x00000000, model64: 0x1c6890001c693},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e68, match64: 0x00000000, model64: 0x1c6930001c6a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e69, match64: 0x00000000, model64: 0x1c6a30001c6af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6a, match64: 0x00000000, model64: 0x1c6af0001c6bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6b, match64: 0x00000000, model64: 0x1c6bb0001c6cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6c, match64: 0x00000000, model64: 0x1c6cc0001c6dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6d, match64: 0x00000000, model64: 0x1c6dd0001c6ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6e, match64: 0x00000000, model64: 0x1c6ed0001c6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e6f, match64: 0x00000000, model64: 0x1c6f80001c70a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e70, match64: 0x00000000, model64: 0x1c70a0001c71b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e71, match64: 0x00000000, model64: 0x1c71b0001c73a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e72, match64: 0x00000000, model64: 0x1c73a0001c745},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e73, match64: 0x00000000, model64: 0x1c7450001c758},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e74, match64: 0x00000000, model64: 0x1c7580001c767},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e75, match64: 0x00000000, model64: 0x1c7670001c77b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e76, match64: 0x00000000, model64: 0x1c77b0001c77d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e77, match64: 0x00000000, model64: 0x1c77d0001c788},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e78, match64: 0x00000000, model64: 0x1c7880001c795},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e79, match64: 0x00000000, model64: 0x1c7950001c7a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7a, match64: 0x00000000, model64: 0x1c7a00001c7ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7b, match64: 0x00000000, model64: 0x1c7ad0001c7b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7c, match64: 0x00000000, model64: 0x1c7b70001c7c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7d, match64: 0x00000000, model64: 0x1c7450001c758},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7e, match64: 0x00000000, model64: 0x1c7c50001c7d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e7f, match64: 0x00000000, model64: 0x1c7d30001c7dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e80, match64: 0x00000000, model64: 0x1c7dc0001c7e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e81, match64: 0x00000000, model64: 0x1c7e50001c7ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e82, match64: 0x00000000, model64: 0x1c7ed0001c7fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e83, match64: 0x00000000, model64: 0x1c7fa0001c803},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e84, match64: 0x00000000, model64: 0x1c8030001c81a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e85, match64: 0x00000000, model64: 0x1c81a0001c82a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e86, match64: 0x00000000, model64: 0x1c6ed0001c6f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e87, match64: 0x00000000, model64: 0x1c82a0001c83b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e88, match64: 0x00000000, model64: 0x1c83b0001c843},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e89, match64: 0x00000000, model64: 0x1c8430001c853},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8a, match64: 0x00000000, model64: 0x1c8530001c861},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8b, match64: 0x00000000, model64: 0x1c8610001c86f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8c, match64: 0x00000000, model64: 0x1c86f0001c886},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8d, match64: 0x00000000, model64: 0x1c8860001c896},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8e, match64: 0x00000000, model64: 0x1c8960001c8a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e8f, match64: 0x00000000, model64: 0x1c8a20001c8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e90, match64: 0x00000000, model64: 0x1c8b20001c8bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e91, match64: 0x00000000, model64: 0x1c8bb0001c8ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e92, match64: 0x00000000, model64: 0x1c8ce0001c8db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e93, match64: 0x00000000, model64: 0x1c8db0001c8e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e94, match64: 0x00000000, model64: 0x1c8e60001c8f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e95, match64: 0x00000000, model64: 0x1c8f80001c909},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e96, match64: 0x00000000, model64: 0x1c9090001c918},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e97, match64: 0x00000000, model64: 0x1c9180001c92c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e98, match64: 0x00000000, model64: 0x1c92c0001c938},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e99, match64: 0x00000000, model64: 0x1c9380001c949},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9a, match64: 0x00000000, model64: 0x1c9490001c957},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9b, match64: 0x00000000, model64: 0x1c9570001c969},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9c, match64: 0x00000000, model64: 0x1c9690001c982},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9d, match64: 0x00000000, model64: 0x1c9820001c98d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9e, match64: 0x00000000, model64: 0x1c98d0001c99d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1e9f, match64: 0x00000000, model64: 0x1c99d0001c9a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea0, match64: 0x00000000, model64: 0x1c9a80001c9b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea1, match64: 0x00000000, model64: 0x1c9b50001c9c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea2, match64: 0x00000000, model64: 0x1c9c10001c9d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea3, match64: 0x00000000, model64: 0x1c9d00001c9dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea4, match64: 0x00000000, model64: 0x1c9dc0001c9ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea5, match64: 0x00000000, model64: 0x1c9ed0001c9fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea6, match64: 0x00000000, model64: 0x1c9fe0001ca0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea7, match64: 0x00000000, model64: 0x1ca0c0001ca19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea8, match64: 0x00000000, model64: 0x1ca190001ca28},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ea9, match64: 0x00000000, model64: 0x1ca280001ca37},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaa, match64: 0x00000000, model64: 0x1ca370001ca46},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eab, match64: 0x00000000, model64: 0x1ca460001ca55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eac, match64: 0x00000000, model64: 0x1ca550001ca67},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ead, match64: 0x00000000, model64: 0x1ca670001ca76},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eae, match64: 0x00000000, model64: 0x1ca760001ca86},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eaf, match64: 0x00000000, model64: 0x1ca860001ca97},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb0, match64: 0x00000000, model64: 0x1ca970001caad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb1, match64: 0x00000000, model64: 0x1caad0001cabc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb2, match64: 0x00000000, model64: 0x1cabc0001cacf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb3, match64: 0x00000000, model64: 0x1cacf0001cade},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb4, match64: 0x00000000, model64: 0x1a1300001a17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb5, match64: 0x00000000, model64: 0x1cade0001cae5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb6, match64: 0x00000000, model64: 0x1cae50001caeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb7, match64: 0x00000000, model64: 0x1caeb0001caf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb8, match64: 0x00000000, model64: 0x1caf10001caf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eb9, match64: 0x00000000, model64: 0x1caf70001caff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eba, match64: 0x00000000, model64: 0x1caff0001cb07},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebb, match64: 0x00000000, model64: 0x1cb070001cb0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebc, match64: 0x00000000, model64: 0x1cb0f0001cb17},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebd, match64: 0x00000000, model64: 0x1cb170001cb25},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebe, match64: 0x00000000, model64: 0x1cb250001cb32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ebf, match64: 0x00000000, model64: 0x1cb320001cb3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec0, match64: 0x00000000, model64: 0x1cb3f0001cb4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec1, match64: 0x00000000, model64: 0x1cb4c0001cb5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec2, match64: 0x00000000, model64: 0x1cb5c0001cb6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec3, match64: 0x00000000, model64: 0x1cb6d0001cb8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec4, match64: 0x00000000, model64: 0x1c7580001c767},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec5, match64: 0x00000000, model64: 0x1cb8c0001cb9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec6, match64: 0x00000000, model64: 0x1cb9f0001cbae},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec7, match64: 0x00000000, model64: 0x1cbae0001cbbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec8, match64: 0x00000000, model64: 0x1cbbf0001cbcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ec9, match64: 0x00000000, model64: 0x1cbcd0001cbdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eca, match64: 0x00000000, model64: 0x1cbdf0001cbed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecb, match64: 0x00000000, model64: 0x1cbed0001cbf6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecc, match64: 0x00000000, model64: 0x1cbf60001cc04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecd, match64: 0x00000000, model64: 0x1cc040001cc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ece, match64: 0x00000000, model64: 0x1cc140001cc21},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ecf, match64: 0x00000000, model64: 0x1cc210001cc32},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed0, match64: 0x00000000, model64: 0x1cc320001cc3b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed1, match64: 0x00000000, model64: 0x1cc040001cc14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed2, match64: 0x00000000, model64: 0x1cc3b0001cc49},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed3, match64: 0x00000000, model64: 0x1cc490001cc58},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed4, match64: 0x00000000, model64: 0x1cc580001cc61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed5, match64: 0x00000000, model64: 0x1cc610001cc6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed6, match64: 0x00000000, model64: 0x1cc6f0001cc7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed7, match64: 0x00000000, model64: 0x1cc7f0001cc88},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed8, match64: 0x00000000, model64: 0x1cc880001cc96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ed9, match64: 0x00000000, model64: 0x1cc960001cca6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eda, match64: 0x00000000, model64: 0x1cca60001ccb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edb, match64: 0x00000000, model64: 0x1ccb00001ccb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edc, match64: 0x00000000, model64: 0x1ccb90001ccc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edd, match64: 0x00000000, model64: 0x1ccc30001cccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ede, match64: 0x00000000, model64: 0x1cccd0001ccdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1edf, match64: 0x00000000, model64: 0x1ccdc0001cce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1cce70001cced, model64: 0x1cced0001cd0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee0, match64: 0x00000000, model64: 0x1cd0e0001cd19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee1, match64: 0x00000000, model64: 0x1cd190001cd23},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee2, match64: 0x00000000, model64: 0x1cd230001cd30},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee3, match64: 0x00000000, model64: 0x1cd300001cd3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee4, match64: 0x00000000, model64: 0x1cd3d0001cd4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee5, match64: 0x00000000, model64: 0x1cd4d0001cd60},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee6, match64: 0x00000000, model64: 0x1cd600001cd6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee7, match64: 0x00000000, model64: 0x1cd6b0001cd79},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee8, match64: 0x00000000, model64: 0x1cd790001cd89},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ee9, match64: 0x00000000, model64: 0x1cd890001cd96},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eea, match64: 0x00000000, model64: 0x1cd960001cda6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eeb, match64: 0x00000000, model64: 0x1cda60001cdc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eec, match64: 0x00000000, model64: 0x1cdc90001cddc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eed, match64: 0x00000000, model64: 0x1cddc0001cdea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eee, match64: 0x00000000, model64: 0x1cdea0001cdf4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eef, match64: 0x00000000, model64: 0x1cdf40001ce04},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef0, match64: 0x00000000, model64: 0x1ce040001ce0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef1, match64: 0x00000000, model64: 0x1ce0f0001ce19},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef2, match64: 0x00000000, model64: 0x1ce190001ce24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef3, match64: 0x00000000, model64: 0x1ce240001ce34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef4, match64: 0x00000000, model64: 0x1ce340001ce41},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef5, match64: 0x00000000, model64: 0x1ce410001ce4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef6, match64: 0x00000000, model64: 0x1ce4b0001ce56},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef7, match64: 0x00000000, model64: 0x1ce560001ce66},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef8, match64: 0x00000000, model64: 0x1ce660001ce73},
		modelTuple{type64: 0x2700000027, matchRI: 0x1ef9, match64: 0x00000000, model64: 0x1ce730001ce83},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efa, match64: 0x00000000, model64: 0x1ce830001ce91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efb, match64: 0x00000000, model64: 0x1ce910001cea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efc, match64: 0x00000000, model64: 0x1cea20001ceb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efd, match64: 0x00000000, model64: 0x1ceb10001cebf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1efe, match64: 0x00000000, model64: 0x1cebf0001cec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1eff, match64: 0x00000000, model64: 0x1cec90001ced5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f00, match64: 0x00000000, model64: 0x1ced50001cee5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f01, match64: 0x00000000, model64: 0x1cee50001ceef},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f02, match64: 0x00000000, model64: 0x1ceef0001cefe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f03, match64: 0x00000000, model64: 0x1cefe0001cf09},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f04, match64: 0x00000000, model64: 0x1cf090001cf14},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f05, match64: 0x00000000, model64: 0x1cf140001cf1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f06, match64: 0x00000000, model64: 0x1cf1e0001cf29},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f07, match64: 0x00000000, model64: 0x1cf290001cf34},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f08, match64: 0x00000000, model64: 0x1cf340001cf3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f09, match64: 0x00000000, model64: 0x1cf3e0001cf4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0a, match64: 0x00000000, model64: 0x1cf4d0001cf57},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0b, match64: 0x00000000, model64: 0x1cf570001cf61},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0c, match64: 0x00000000, model64: 0x1cf610001cf6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0d, match64: 0x00000000, model64: 0x1cf6c0001cf7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0e, match64: 0x00000000, model64: 0x1cf7a0001cf84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f0f, match64: 0x00000000, model64: 0x1cf840001cf91},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f10, match64: 0x00000000, model64: 0x1cf910001cf9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f11, match64: 0x00000000, model64: 0x1cf9b0001cfa8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f12, match64: 0x00000000, model64: 0x1cfa80001cfb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f13, match64: 0x00000000, model64: 0x1cfb20001cfbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f14, match64: 0x00000000, model64: 0x1cfbc0001cfc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f15, match64: 0x00000000, model64: 0x1cfc80001cfd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f16, match64: 0x00000000, model64: 0x1cfd50001cfe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f17, match64: 0x00000000, model64: 0x1cfe50001cff5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f18, match64: 0x00000000, model64: 0x1cff50001d005},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f19, match64: 0x00000000, model64: 0x1d0050001d012},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1a, match64: 0x00000000, model64: 0x1d0120001d01f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1b, match64: 0x00000000, model64: 0x1d01f0001d028},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1c, match64: 0x00000000, model64: 0x1d0280001d031},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1d, match64: 0x00000000, model64: 0x1d0310001d03f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1e, match64: 0x00000000, model64: 0x1d03f0001d04f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f1f, match64: 0x00000000, model64: 0x1d04f0001d05f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f20, match64: 0x00000000, model64: 0x1d05f0001d06f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f21, match64: 0x00000000, model64: 0x1d06f0001d079},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f22, match64: 0x00000000, model64: 0x1d0790001d086},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f23, match64: 0x00000000, model64: 0x1d0860001d094},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f24, match64: 0x00000000, model64: 0x1d0940001d09d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f25, match64: 0x00000000, model64: 0x1d09d0001d0a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f26, match64: 0x00000000, model64: 0x1d0a70001d0b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f27, match64: 0x00000000, model64: 0x1d0b80001d0c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f28, match64: 0x00000000, model64: 0x1d0c20001d0cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f29, match64: 0x00000000, model64: 0x1d0cb0001d0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2a, match64: 0x00000000, model64: 0x1d0db0001d0eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2b, match64: 0x00000000, model64: 0x1d0eb0001d0fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2c, match64: 0x00000000, model64: 0x1d0fb0001d105},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2d, match64: 0x00000000, model64: 0x1d1050001d10f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2e, match64: 0x00000000, model64: 0x1d10f0001d11c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f2f, match64: 0x00000000, model64: 0x1d11c0001d129},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f30, match64: 0x00000000, model64: 0x1d1290001d132},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f31, match64: 0x00000000, model64: 0x1d1320001d140},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f32, match64: 0x00000000, model64: 0x1d1400001d150},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f33, match64: 0x00000000, model64: 0x1d1500001d15a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f34, match64: 0x00000000, model64: 0x1d15a0001d16a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f35, match64: 0x00000000, model64: 0x1d16a0001d17b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f36, match64: 0x00000000, model64: 0x1d17b0001d184},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f37, match64: 0x00000000, model64: 0x1d1840001d18f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f38, match64: 0x00000000, model64: 0x1d18f0001d19f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f39, match64: 0x00000000, model64: 0x1d19f0001d1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3a, match64: 0x00000000, model64: 0x1d1ad0001d1ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3b, match64: 0x00000000, model64: 0x1d1ba0001d1c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3c, match64: 0x00000000, model64: 0x1d1c40001d1cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3d, match64: 0x00000000, model64: 0x1d1cf0001d1da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3e, match64: 0x00000000, model64: 0x1cf7a0001cf84},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f3f, match64: 0x00000000, model64: 0x1d1da0001d1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f40, match64: 0x00000000, model64: 0x1d1e40001d1f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f41, match64: 0x00000000, model64: 0x1d1f10001d1fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f42, match64: 0x00000000, model64: 0x1d1fb0001d205},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f43, match64: 0x00000000, model64: 0x1d2050001d20f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f44, match64: 0x00000000, model64: 0x1d20f0001d21a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f45, match64: 0x00000000, model64: 0x1d21a0001d225},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f46, match64: 0x00000000, model64: 0x1d2250001d230},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f47, match64: 0x00000000, model64: 0x1d2300001d23a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f48, match64: 0x00000000, model64: 0x1d23a0001d247},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f49, match64: 0x00000000, model64: 0x1d2470001d251},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4a, match64: 0x00000000, model64: 0x1d2510001d25c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4b, match64: 0x00000000, model64: 0x1d25c0001d266},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4c, match64: 0x00000000, model64: 0x1d2660001d270},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4d, match64: 0x00000000, model64: 0x1d2700001d27d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4e, match64: 0x00000000, model64: 0x1d27d0001d28a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f4f, match64: 0x00000000, model64: 0x1d28a0001d294},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f50, match64: 0x00000000, model64: 0x1d2940001d29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f51, match64: 0x00000000, model64: 0x1d29f0001d2a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f52, match64: 0x00000000, model64: 0x1d2a90001d2b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f53, match64: 0x00000000, model64: 0x1d2b60001d2c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f54, match64: 0x00000000, model64: 0x1d2c00001d2cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f55, match64: 0x00000000, model64: 0x1d2c00001d2cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f56, match64: 0x00000000, model64: 0x1d2cb0001d2d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f57, match64: 0x00000000, model64: 0x1d2d50001d2e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f58, match64: 0x00000000, model64: 0x1d2e20001d2f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f59, match64: 0x00000000, model64: 0x1d2f20001d2ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5a, match64: 0x00000000, model64: 0x1d2ff0001d30f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5b, match64: 0x00000000, model64: 0x1d30f0001d31c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5c, match64: 0x00000000, model64: 0x1d31c0001d329},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5d, match64: 0x00000000, model64: 0x1d3290001d333},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5e, match64: 0x00000000, model64: 0x1d3330001d33e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f5f, match64: 0x00000000, model64: 0x1d33e0001d348},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f60, match64: 0x00000000, model64: 0x1d3480001d352},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f61, match64: 0x00000000, model64: 0x1d3520001d35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f62, match64: 0x00000000, model64: 0x1d35f0001d36a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f63, match64: 0x00000000, model64: 0x1d36a0001d374},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f64, match64: 0x00000000, model64: 0x1d3740001d37e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f65, match64: 0x00000000, model64: 0x1d37e0001d38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f66, match64: 0x00000000, model64: 0x1d38b0001d398},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f67, match64: 0x00000000, model64: 0x1d3980001d3a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f68, match64: 0x00000000, model64: 0x1d3a20001d3af},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f69, match64: 0x00000000, model64: 0x1d3af0001d3bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6a, match64: 0x00000000, model64: 0x1d3bc0001d3c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6b, match64: 0x00000000, model64: 0x1d3c60001d3d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6c, match64: 0x00000000, model64: 0x1d3d30001d3e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6d, match64: 0x00000000, model64: 0x1d3e00001d3ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6e, match64: 0x00000000, model64: 0x1d3ed0001d3f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f6f, match64: 0x00000000, model64: 0x1d3f70001d407},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f70, match64: 0x00000000, model64: 0x1d4070001d412},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f71, match64: 0x00000000, model64: 0x1d4120001d41e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f72, match64: 0x00000000, model64: 0x1d41e0001d427},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f73, match64: 0x00000000, model64: 0x1d4270001d435},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f74, match64: 0x00000000, model64: 0x1d4350001d449},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f75, match64: 0x00000000, model64: 0x1d4490001d459},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f76, match64: 0x00000000, model64: 0x1d4590001d466},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f77, match64: 0x00000000, model64: 0x1d4660001d46f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f78, match64: 0x00000000, model64: 0x1d46f0001d47d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f79, match64: 0x00000000, model64: 0x1d47d0001d48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7a, match64: 0x00000000, model64: 0x1d48b0001d499},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7b, match64: 0x00000000, model64: 0x1d4990001d4a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7c, match64: 0x00000000, model64: 0x1d4a60001d4b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7d, match64: 0x00000000, model64: 0x1d4b50001d4c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7e, match64: 0x00000000, model64: 0x1d4c20001d4cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f7f, match64: 0x00000000, model64: 0x1d4cf0001d4e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f80, match64: 0x00000000, model64: 0x1d4e10001d4f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f81, match64: 0x00000000, model64: 0x1d4f00001d500},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f82, match64: 0x00000000, model64: 0x1d5000001d50e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f83, match64: 0x00000000, model64: 0x1d50e0001d51c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f84, match64: 0x00000000, model64: 0x1d51c0001d52d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f85, match64: 0x00000000, model64: 0x1d52d0001d53e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f86, match64: 0x00000000, model64: 0x1d4cf0001d4e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f87, match64: 0x00000000, model64: 0x1d53e0001d54e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f88, match64: 0x00000000, model64: 0x1d54e0001d55e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f89, match64: 0x00000000, model64: 0x1d55e0001d56e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8a, match64: 0x00000000, model64: 0x1d56e0001d57e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8b, match64: 0x00000000, model64: 0x1d57e0001d587},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8c, match64: 0x00000000, model64: 0x1d5870001d597},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8d, match64: 0x00000000, model64: 0x1d5970001d5a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8e, match64: 0x00000000, model64: 0x1d5a70001d5bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f8f, match64: 0x00000000, model64: 0x1d5bb0001d5cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f90, match64: 0x00000000, model64: 0x1d5cb0001d5da},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f91, match64: 0x00000000, model64: 0x1d5da0001d5e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f92, match64: 0x00000000, model64: 0x1d5e30001d5ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f93, match64: 0x00000000, model64: 0x1d5ed0001d5fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f94, match64: 0x00000000, model64: 0x1d5fb0001d605},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f95, match64: 0x00000000, model64: 0x1d6050001d60f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f96, match64: 0x00000000, model64: 0x1d60f0001d618},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f97, match64: 0x00000000, model64: 0x1d6180001d628},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f98, match64: 0x00000000, model64: 0x1d6280001d638},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f99, match64: 0x00000000, model64: 0x1d6380001d648},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9a, match64: 0x00000000, model64: 0x1d6480001d658},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9b, match64: 0x00000000, model64: 0x1d6580001d667},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9c, match64: 0x00000000, model64: 0x1d6670001d676},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9d, match64: 0x00000000, model64: 0x1d6760001d687},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9e, match64: 0x00000000, model64: 0x1d6870001d694},
		modelTuple{type64: 0x2700000027, matchRI: 0x1f9f, match64: 0x00000000, model64: 0x1d6940001d6a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa0, match64: 0x00000000, model64: 0x1d6a50001d6b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa1, match64: 0x00000000, model64: 0x1d6b20001d6c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa2, match64: 0x00000000, model64: 0x1d6c00001d6cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa3, match64: 0x00000000, model64: 0x1d6cd0001d6dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa4, match64: 0x00000000, model64: 0x1d6dc0001d6e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa5, match64: 0x00000000, model64: 0x1d6e70001d6f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d6f20001d6fc, model64: 0x1d6fc0001d70a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d70a0001d713, model64: 0x1d7130001d720},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa6, match64: 0x00000000, model64: 0x1d7200001d729},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa7, match64: 0x00000000, model64: 0x1d7290001d73a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa8, match64: 0x00000000, model64: 0x1d73a0001d749},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7490001d750, model64: 0x1d7500001d75e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d75e0001d766, model64: 0x1d7660001d773},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1d7730001d77b, model64: 0x1d77b0001d788},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fa9, match64: 0x00000000, model64: 0x1d7880001d792},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faa, match64: 0x00000000, model64: 0x1d7920001d79c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fab, match64: 0x00000000, model64: 0x1d79c0001d7ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fac, match64: 0x00000000, model64: 0x1d7ab0001d7b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fad, match64: 0x00000000, model64: 0x1d7b60001d7c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fae, match64: 0x00000000, model64: 0x1d7c10001d7cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1faf, match64: 0x00000000, model64: 0x1d7cb0001d7d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb0, match64: 0x00000000, model64: 0x1d7d50001d7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb1, match64: 0x00000000, model64: 0x1d7e00001d7ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb2, match64: 0x00000000, model64: 0x1d7ea0001d7f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb3, match64: 0x00000000, model64: 0x1d7f40001d7fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb4, match64: 0x00000000, model64: 0x1d7fe0001d80b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb5, match64: 0x00000000, model64: 0x1d80b0001d818},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb6, match64: 0x00000000, model64: 0x1d8180001d825},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb7, match64: 0x00000000, model64: 0x1d8250001d82f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb8, match64: 0x00000000, model64: 0x1d82f0001d839},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fb9, match64: 0x00000000, model64: 0x1d8390001d84a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fba, match64: 0x00000000, model64: 0x1d84a0001d854},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbb, match64: 0x00000000, model64: 0x1d8540001d862},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbc, match64: 0x00000000, model64: 0x1d8620001d86f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbd, match64: 0x00000000, model64: 0x1d86f0001d87a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbe, match64: 0x00000000, model64: 0x1d87a0001d884},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fbf, match64: 0x00000000, model64: 0x1d8840001d88e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc0, match64: 0x00000000, model64: 0x1d88e0001d898},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc1, match64: 0x00000000, model64: 0x1d8980001d8a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc2, match64: 0x00000000, model64: 0x1d8a50001d8b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc3, match64: 0x00000000, model64: 0x1d8b20001d8bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc4, match64: 0x00000000, model64: 0x1d8bd0001d8ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc5, match64: 0x00000000, model64: 0x1d8ca0001d8d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc6, match64: 0x00000000, model64: 0x1d8d70001d8e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc7, match64: 0x00000000, model64: 0x1d8e10001d8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc8, match64: 0x00000000, model64: 0x1d8ee0001d8f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fc9, match64: 0x00000000, model64: 0x1d8f80001d905},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fca, match64: 0x00000000, model64: 0x1d9050001d915},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcb, match64: 0x00000000, model64: 0x1d9150001d922},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcc, match64: 0x00000000, model64: 0x1d9220001d92f},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcd, match64: 0x00000000, model64: 0x1d92f0001d939},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fce, match64: 0x00000000, model64: 0x1d9390001d946},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fcf, match64: 0x00000000, model64: 0x1d9460001d953},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd0, match64: 0x00000000, model64: 0x1d9530001d95d},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd1, match64: 0x00000000, model64: 0x1d95d0001d967},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd2, match64: 0x00000000, model64: 0x1d9670001d971},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd3, match64: 0x00000000, model64: 0x1d9710001d981},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd4, match64: 0x00000000, model64: 0x1d9810001d990},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd5, match64: 0x00000000, model64: 0x1d9900001d99c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd6, match64: 0x00000000, model64: 0x1d99c0001d9a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd7, match64: 0x00000000, model64: 0x1d9a60001d9b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd8, match64: 0x00000000, model64: 0x1d9b70001d9c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fd9, match64: 0x00000000, model64: 0x1d9c10001d9d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fda, match64: 0x00000000, model64: 0x1d9d20001d9e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdb, match64: 0x00000000, model64: 0x1d9e20001d9eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdc, match64: 0x00000000, model64: 0x1d9eb0001d9f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdd, match64: 0x00000000, model64: 0x1d9f80001da05},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fde, match64: 0x00000000, model64: 0x1da050001da0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fdf, match64: 0x00000000, model64: 0x1da0e0001da1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe0, match64: 0x00000000, model64: 0x1da1b0001da24},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe1, match64: 0x00000000, model64: 0x1da240001da31},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe2, match64: 0x00000000, model64: 0x1da310001da3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe3, match64: 0x00000000, model64: 0x1da3a0001da43},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe4, match64: 0x00000000, model64: 0x1da430001da4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe5, match64: 0x00000000, model64: 0x1da4c0001da55},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe6, match64: 0x00000000, model64: 0x1da550001da62},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe7, match64: 0x00000000, model64: 0x1da620001da71},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe8, match64: 0x00000000, model64: 0x1da710001da7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fe9, match64: 0x00000000, model64: 0x1da7b0001da87},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fea, match64: 0x00000000, model64: 0x1da870001da93},
		modelTuple{type64: 0x2700000027, matchRI: 0x1feb, match64: 0x00000000, model64: 0x1da930001da9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fec, match64: 0x00000000, model64: 0x1da9e0001dab0},
		modelTuple{type64: 0x2700000027, matchRI: 0x1fed, match64: 0x00000000, model64: 0x1dab00001dac9},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1fee, match64: 0x00000000, model64: 0x1dac90001dad4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1fef, match64: 0x00000000, model64: 0x1dad40001dae3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff0, match64: 0x00000000, model64: 0x1dae30001daf2},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff1, match64: 0x00000000, model64: 0x1daf20001db01},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff2, match64: 0x00000000, model64: 0x1db010001db10},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff3, match64: 0x00000000, model64: 0x1db100001db1f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff4, match64: 0x00000000, model64: 0x1db1f0001db2e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff5, match64: 0x00000000, model64: 0x1db2e0001db3d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff6, match64: 0x00000000, model64: 0x1db3d0001db4c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff7, match64: 0x00000000, model64: 0x1db4c0001db5e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff8, match64: 0x00000000, model64: 0x1db5e0001db70},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ff9, match64: 0x00000000, model64: 0x1db700001db7f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ffa, match64: 0x00000000, model64: 0x1db7f0001db8e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ffb, match64: 0x00000000, model64: 0x1db8e0001db9d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ffc, match64: 0x00000000, model64: 0x1db9d0001dbad},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ffd, match64: 0x00000000, model64: 0x1dbad0001dbc2},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1ffe, match64: 0x00000000, model64: 0x1dbc20001dbce},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x1fff, match64: 0x00000000, model64: 0x1dbce0001dbdf},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2000, match64: 0x00000000, model64: 0x1dbdf0001dbf0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2001, match64: 0x00000000, model64: 0x1dbf00001dbfb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2002, match64: 0x00000000, model64: 0x1dbfb0001dc0b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2003, match64: 0x00000000, model64: 0x1dc0b0001dc22},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2004, match64: 0x00000000, model64: 0x1dc220001dc30},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2005, match64: 0x00000000, model64: 0x1dc300001dc42},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2006, match64: 0x00000000, model64: 0x1dc420001dc50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2007, match64: 0x00000000, model64: 0x1dc500001dc60},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2008, match64: 0x00000000, model64: 0x1dc600001dc72},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2009, match64: 0x00000000, model64: 0x1dc720001dc8c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200a, match64: 0x00000000, model64: 0x1dc8c0001dca3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200b, match64: 0x00000000, model64: 0x1dca30001dcb7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200c, match64: 0x00000000, model64: 0x1dcb70001dcc6},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200d, match64: 0x00000000, model64: 0x1dcc60001dcdc},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200e, match64: 0x00000000, model64: 0x1dcdc0001dced},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x200f, match64: 0x00000000, model64: 0x1dced0001dcff},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2010, match64: 0x00000000, model64: 0x1dcff0001dd10},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2011, match64: 0x00000000, model64: 0x1dd100001dd1d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2012, match64: 0x00000000, model64: 0x1dd1d0001dd2a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2013, match64: 0x00000000, model64: 0x1dd2a0001dd3b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2014, match64: 0x00000000, model64: 0x1dd3b0001dd4d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2015, match64: 0x00000000, model64: 0x1dd4d0001dd5a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2016, match64: 0x00000000, model64: 0x1dd5a0001dd6c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2017, match64: 0x00000000, model64: 0x1dd6c0001dd79},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2018, match64: 0x00000000, model64: 0x1dd790001dd88},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2019, match64: 0x00000000, model64: 0x1dd880001dd97},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201a, match64: 0x00000000, model64: 0x1dd970001dda4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201b, match64: 0x00000000, model64: 0x1dda40001ddb1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201c, match64: 0x00000000, model64: 0x1ddb10001ddbe},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201d, match64: 0x00000000, model64: 0x1ddbe0001ddcd},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201e, match64: 0x00000000, model64: 0x1ddcd0001dddb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x201f, match64: 0x00000000, model64: 0x1dddb0001ddee},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2020, match64: 0x00000000, model64: 0x1ddee0001ddff},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2021, match64: 0x00000000, model64: 0x1ddff0001de13},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2022, match64: 0x00000000, model64: 0x1de130001de21},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2023, match64: 0x00000000, model64: 0x1de210001de38},
		modelTuple{type64: 0x2700000027, matchRI: 0x2024, match64: 0x00000000, model64: 0x1de380001de3f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2025, match64: 0x00000000, model64: 0x1de3f0001de50},
		modelTuple{type64: 0x38400000391, matchRI: 0x2026, match64: 0x00000000, model64: 0x1de500001de55},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x1de550001de61, model64: 0x1de550001de61},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x1de610001de70, model64: 0x1de610001de70},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2027, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1de700001de76, model64: 0x1c6ed0001c6f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2028, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2029, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1de760001de7e, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x202a, match64: 0x00000000, model64: 0x1de7e0001de87},
		modelTuple{type64: 0x2700000027, matchRI: 0x202b, match64: 0x00000000, model64: 0x1de7e0001de87},
		modelTuple{type64: 0x2700000027, matchRI: 0x202c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x202d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x202e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x202f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2030, match64: 0x00000000, model64: 0x1de870001de8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2031, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2032, match64: 0x00000000, model64: 0x1de8c0001de92},
		modelTuple{type64: 0x2700000027, matchRI: 0x2033, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2034, match64: 0x00000000, model64: 0x1de8c0001de92},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dea50001dea8, model64: 0x1dea50001dea8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dea80001deab, model64: 0x1dea80001deab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1deab0001deb0, model64: 0x1deb00001deb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2038, match64: 0x00000000, model64: 0xa1f70000a1fa},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1dec30001decd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ded30001deda, model64: 0x98b0000098b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x203a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x203c, match64: 0x00000000, model64: 0x1dee00001deea},
		modelTuple{type64: 0x2700000027, matchRI: 0x203d, match64: 0x00000000, model64: 0x1deea0001def3},
		modelTuple{type64: 0x2700000027, matchRI: 0x203e, match64: 0x00000000, model64: 0x1def30001def9},
		modelTuple{type64: 0x2700000027, matchRI: 0x203f, match64: 0x00000000, model64: 0x1def90001df03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2040, match64: 0x00000000, model64: 0x1df030001df0f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2041, match64: 0x00000000, model64: 0x1df0f0001df1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2042, match64: 0x00000000, model64: 0xabfe0000ac0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2043, match64: 0x00000000, model64: 0x1df1d0001df26},
		modelTuple{type64: 0x2700000027, matchRI: 0x2044, match64: 0x00000000, model64: 0x1df260001df2c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2045, match64: 0x00000000, model64: 0x1df2c0001df36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2046, match64: 0x00000000, model64: 0x1df360001df3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2047, match64: 0x00000000, model64: 0x1df3c0001df46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2048, match64: 0x00000000, model64: 0x57ed000057f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2049, match64: 0x00000000, model64: 0x1df460001df4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x204a, match64: 0x00000000, model64: 0x1df4b0001df51},
		modelTuple{type64: 0x2700000027, matchRI: 0x204b, match64: 0x00000000, model64: 0x1df510001df59},
		modelTuple{type64: 0x2700000027, matchRI: 0x204c, match64: 0x00000000, model64: 0x1df590001df64},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x204d, match64: 0x00000000, model64: 0x1df640001df6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x204e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x204f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2050, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2052, match64: 0x00000000, model64: 0x1df6b0001df7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2053, match64: 0x00000000, model64: 0x1df7b0001df84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2054, match64: 0x00000000, model64: 0x1df840001df8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2055, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2056, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfa30001dfb2, model64: 0x1dfb20001dfbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1dfbb0001dfc9, model64: 0x1dfc90001dfd9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x205d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x205f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2060, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2062, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2063, match64: 0x00000000, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2064, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e00e0001e01b, model64: 0x1e01b0001e022},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0220001e02d, model64: 0x1e02d0001e038},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0380001e04d, model64: 0x1e04d0001e05b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e05b0001e06a, model64: 0x1e06a0001e072},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0720001e081, model64: 0x1e0810001e089},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0890001e09b, model64: 0x1e09b0001e0a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e0a60001e0be, model64: 0x1e0be0001e0cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2066, match64: 0x00000000, model64: 0x1e0d50001e0e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2067, match64: 0x00000000, model64: 0x1e0e30001e0ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2068, match64: 0x00000000, model64: 0x1e0ef0001e101},
		modelTuple{type64: 0x2700000027, matchRI: 0x2069, match64: 0x00000000, model64: 0x1e1010001e10d},
		modelTuple{type64: 0x2700000027, matchRI: 0x206a, match64: 0x00000000, model64: 0x1e10d0001e119},
		modelTuple{type64: 0x2700000027, matchRI: 0x206b, match64: 0x00000000, model64: 0x1e1190001e125},
		modelTuple{type64: 0x2700000027, matchRI: 0x206c, match64: 0x00000000, model64: 0x1e1250001e12e},
		modelTuple{type64: 0x2700000027, matchRI: 0x206d, match64: 0x00000000, model64: 0x1e12e0001e13c},
		modelTuple{type64: 0x2700000027, matchRI: 0x206e, match64: 0x00000000, model64: 0x1e13c0001e14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x206f, match64: 0x00000000, model64: 0x1e14a0001e155},
		modelTuple{type64: 0x2700000027, matchRI: 0x2070, match64: 0x00000000, model64: 0x1e1550001e161},
		modelTuple{type64: 0x2700000027, matchRI: 0x2071, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2072, match64: 0x00000000, model64: 0x1e1610001e166},
		modelTuple{type64: 0x24700000251, matchRI: 0x2073, match64: 0x00000000, model64: 0x1e1660001e171},
		modelTuple{type64: 0x2700000027, matchRI: 0x2074, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e17e0001e18a, model64: 0x1e18a0001e197},
		modelTuple{type64: 0x2700000027, matchRI: 0x2077, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x207a, match64: 0x00000000, model64: 0x97da000097de},
		modelTuple{type64: 0x2700000027, matchRI: 0x207b, match64: 0x00000000, model64: 0x223f00002243},
		modelTuple{type64: 0x2700000027, matchRI: 0x207c, match64: 0x00000000, model64: 0x1e1a30001e1a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x207d, match64: 0x00000000, model64: 0x1e1a30001e1a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x207e, match64: 0x00000000, model64: 0x1e1a70001e1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x207f, match64: 0x00000000, model64: 0x1e1ad0001e1b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2080, match64: 0x00000000, model64: 0x1e1b80001e1c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2081, match64: 0x00000000, model64: 0x6e5c00006e5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2082, match64: 0x00000000, model64: 0x1e1c20001e1c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2083, match64: 0x00000000, model64: 0x128df000128e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2084, match64: 0x00000000, model64: 0x1e1c70001e1ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2085, match64: 0x00000000, model64: 0x1e1ce0001e1d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2086, match64: 0x00000000, model64: 0x1e1d20001e1d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2087, match64: 0x00000000, model64: 0x1e1d90001e1e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2088, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x208a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x208b, match64: 0x00000000, model64: 0x1e1e50001e1ee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x208e, match64: 0x00000000, model64: 0x1e1f80001e201},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e2010001e20b, model64: 0x1e20b0001e212},
		modelTuple{type64: 0x2700000027, matchRI: 0x208f, match64: 0x00000000, model64: 0x1e2120001e220},
		modelTuple{type64: 0x2700000027, matchRI: 0x2090, match64: 0x00000000, model64: 0x1e2200001e229},
		modelTuple{type64: 0x2700000027, matchRI: 0x2091, match64: 0x00000000, model64: 0x1e2290001e231},
		modelTuple{type64: 0x2700000027, matchRI: 0x2092, match64: 0x00000000, model64: 0x1e2310001e239},
		modelTuple{type64: 0x2700000027, matchRI: 0x2093, match64: 0x00000000, model64: 0x1e2390001e244},
		modelTuple{type64: 0x2700000027, matchRI: 0x2094, match64: 0x00000000, model64: 0x1e2440001e252},
		modelTuple{type64: 0x2700000027, matchRI: 0x2095, match64: 0x00000000, model64: 0x1e2520001e260},
		modelTuple{type64: 0x2700000027, matchRI: 0x2096, match64: 0x00000000, model64: 0x1e2600001e26e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2097, match64: 0x00000000, model64: 0x1e26e0001e27c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2098, match64: 0x00000000, model64: 0x1e27c0001e286},
		modelTuple{type64: 0x2700000027, matchRI: 0x2099, match64: 0x00000000, model64: 0x1e2860001e292},
		modelTuple{type64: 0x2700000027, matchRI: 0x209a, match64: 0x00000000, model64: 0x1e2920001e29e},
		modelTuple{type64: 0x2700000027, matchRI: 0x209b, match64: 0x00000000, model64: 0x1e29e0001e2ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x209c, match64: 0x00000000, model64: 0x1e2ae0001e2bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x209d, match64: 0x00000000, model64: 0x1e2bb0001e2cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x209e, match64: 0x00000000, model64: 0x1e2cb0001e2de},
		modelTuple{type64: 0x2700000027, matchRI: 0x209f, match64: 0x00000000, model64: 0x1e2de0001e2eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a0, match64: 0x00000000, model64: 0x1e2eb0001e2fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a1, match64: 0x00000000, model64: 0x1e2fd0001e30a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a2, match64: 0x00000000, model64: 0x1e30a0001e318},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a3, match64: 0x00000000, model64: 0x1e3180001e32a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a4, match64: 0x00000000, model64: 0x1e32a0001e337},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a5, match64: 0x00000000, model64: 0x1e3370001e345},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a6, match64: 0x00000000, model64: 0x1e3450001e34e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a7, match64: 0x00000000, model64: 0x1e34e0001e35f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a8, match64: 0x00000000, model64: 0x1e35f0001e369},
		modelTuple{type64: 0x2700000027, matchRI: 0x20a9, match64: 0x00000000, model64: 0x1e3690001e373},
		modelTuple{type64: 0x2700000027, matchRI: 0x20aa, match64: 0x00000000, model64: 0x1e3730001e37f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ab, match64: 0x00000000, model64: 0x1e37f0001e38b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ac, match64: 0x00000000, model64: 0x1e38b0001e39e},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ad, match64: 0x00000000, model64: 0x1e39e0001e3ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ae, match64: 0x00000000, model64: 0x1e3ac0001e3bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x20af, match64: 0x00000000, model64: 0x1e3bc0001e3c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b0, match64: 0x00000000, model64: 0x1e3c80001e3da},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b1, match64: 0x00000000, model64: 0x1e3da0001e3e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b2, match64: 0x00000000, model64: 0x1e3e80001e3f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b3, match64: 0x00000000, model64: 0x1e3f90001e401},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b4, match64: 0x00000000, model64: 0x1e4010001e408},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b5, match64: 0x00000000, model64: 0x1e4080001e417},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b6, match64: 0x00000000, model64: 0x1e4170001e41f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b7, match64: 0x00000000, model64: 0x1e41f0001e42f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b8, match64: 0x00000000, model64: 0x1e42f0001e438},
		modelTuple{type64: 0x2700000027, matchRI: 0x20b9, match64: 0x00000000, model64: 0x1e4380001e445},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ba, match64: 0x00000000, model64: 0x1e4450001e451},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bb, match64: 0x00000000, model64: 0x1e4510001e458},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bc, match64: 0x00000000, model64: 0x1e4580001e461},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bd, match64: 0x00000000, model64: 0x1e4610001e469},
		modelTuple{type64: 0x2700000027, matchRI: 0x20be, match64: 0x00000000, model64: 0x1e4690001e474},
		modelTuple{type64: 0x2700000027, matchRI: 0x20bf, match64: 0x00000000, model64: 0x1e4740001e47d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c0, match64: 0x00000000, model64: 0x1e47d0001e487},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c1, match64: 0x00000000, model64: 0x1e4870001e49a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c2, match64: 0x00000000, model64: 0x1e49a0001e4ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c3, match64: 0x00000000, model64: 0x1e4ad0001e4b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c4, match64: 0x00000000, model64: 0x1e4b70001e4c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c5, match64: 0x00000000, model64: 0x1e4c40001e4d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c6, match64: 0x00000000, model64: 0x1e4d10001e4e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c7, match64: 0x00000000, model64: 0x1e4e00001e4ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c8, match64: 0x00000000, model64: 0x1e4ef0001e4f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x20c9, match64: 0x00000000, model64: 0x1e4f60001e4fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ca, match64: 0x00000000, model64: 0x1e4fd0001e504},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cb, match64: 0x00000000, model64: 0x1e5040001e511},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cc, match64: 0x00000000, model64: 0x1e5110001e519},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cd, match64: 0x00000000, model64: 0x1e5190001e525},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ce, match64: 0x00000000, model64: 0x1e5250001e52d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20cf, match64: 0x00000000, model64: 0x1e52d0001e53a},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d0, match64: 0x00000000, model64: 0x1e53a0001e547},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d1, match64: 0x00000000, model64: 0x1e5470001e54f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d2, match64: 0x00000000, model64: 0x1e54f0001e557},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d3, match64: 0x00000000, model64: 0x1e5570001e564},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d4, match64: 0x00000000, model64: 0x1e5640001e572},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d5, match64: 0x00000000, model64: 0x1e5720001e57f},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d6, match64: 0x00000000, model64: 0x1e57f0001e58c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d7, match64: 0x00000000, model64: 0x1e42f0001e438},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d8, match64: 0x00000000, model64: 0x1e58c0001e594},
		modelTuple{type64: 0x2700000027, matchRI: 0x20d9, match64: 0x00000000, model64: 0x1e5940001e59c},
		modelTuple{type64: 0x2700000027, matchRI: 0x20da, match64: 0x00000000, model64: 0x1e59c0001e5a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20db, match64: 0x00000000, model64: 0x1e5a80001e5b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dc, match64: 0x00000000, model64: 0x1e5b30001e5bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20dd, match64: 0x00000000, model64: 0x1e5bb0001e5c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20de, match64: 0x00000000, model64: 0x1e5c20001e5c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20df, match64: 0x00000000, model64: 0x1e5c80001e5cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e0, match64: 0x00000000, model64: 0x1e5cb0001e5d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e1, match64: 0x00000000, model64: 0xe6770000e679},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e2, match64: 0x00000000, model64: 0x114090001140b},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e3, match64: 0x00000000, model64: 0x113f2000113f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e4, match64: 0x00000000, model64: 0x188b9000188bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e5, match64: 0x00000000, model64: 0x16f3a00016f3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e6, match64: 0x00000000, model64: 0x1e5d20001e5d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e7, match64: 0x00000000, model64: 0x1e5d90001e5e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e8, match64: 0x00000000, model64: 0x1e5e50001e5ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e5ee0001e5f5, model64: 0x1e5f50001e602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6020001e607, model64: 0x1e6070001e612},
		modelTuple{type64: 0x2700000027, matchRI: 0x20e9, match64: 0x00000000, model64: 0x1e6120001e622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6220001e628, model64: 0x1e6280001e637},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ea, match64: 0x00000000, model64: 0x1e6370001e645},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6450001e64d, model64: 0x1e64d0001e65b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e65b0001e662, model64: 0x1e6620001e671},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e6710001e678, model64: 0x1e6780001e684},
		modelTuple{type64: 0x2700000027, matchRI: 0x20eb, match64: 0x00000000, model64: 0x1e6840001e698},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ec, match64: 0x00000000, model64: 0x1e6980001e6a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ed, match64: 0x00000000, model64: 0x1e3da0001e3e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ee, match64: 0x00000000, model64: 0x1e6a40001e6af},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ef, match64: 0x00000000, model64: 0x1e6af0001e6b8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20f0, match64: 0x00000000, model64: 0x1e6b80001e6c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20f1, match64: 0x00000000, model64: 0x1e6c70001e6d6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20f2, match64: 0x00000000, model64: 0xdcfc0000dd03},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x20f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x20f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1e6d60001e6e5, model64: 0x1e6e50001e6f1},
		modelTuple{type64: 0x24300000245, matchRI: 0x20f5, match64: 0x00000000, model64: 0x1e6f10001e6ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x20f7, match64: 0x00000000, model64: 0x1e6ff0001e709},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x20f9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e71c0001e722},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e72b0001e736},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x20ff, match64: 0x00000000, model64: 0x1e7410001e747},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7470001e74d, model64: 0x1e74d0001e753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7530001e75b, model64: 0x1e75b0001e761},
		modelTuple{type64: 0x2700000027, matchRI: 0x2100, match64: 0x00000000, model64: 0x3d3000003d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2101, match64: 0x00000000, model64: 0x1e7610001e766},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7660001e76e, model64: 0x1e76e0001e778},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7780001e77d, model64: 0x1e77d0001e783},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7830001e789, model64: 0x1e7830001e789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7890001e795, model64: 0x19d1900019d1e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e7950001e7a1, model64: 0x1e1d90001e1e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x987800009881, model64: 0x987800009881},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x792700007933, model64: 0x792700007933},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2102, match64: 0x00000000, model64: 0x1e7a10001e7a6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e7a60001e7b2, model64: 0x1e7b20001e7bf},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e7bf0001e7c7, model64: 0x1e7c70001e7d0},
		modelTuple{type64: 0x38400000391, matchRI: 0x2104, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2105, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2106, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2107, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2108, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x210a, match64: 0x00000000, model64: 0x1e7d70001e7de},
		modelTuple{type64: 0x2700000027, matchRI: 0x210b, match64: 0x00000000, model64: 0x1e7de0001e7ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x210c, match64: 0x00000000, model64: 0x1e7ee0001e7fa},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x210d, match64: 0x00000000, model64: 0x1e7fa0001e809},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e8090001e81a, model64: 0x1e81a0001e82b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x210e, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x210f, match64: 0x00000000, model64: 0x1e82b0001e838},
		modelTuple{type64: 0x2700000027, matchRI: 0x2110, match64: 0x00000000, model64: 0x1e8380001e843},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e8570001e863},
		modelTuple{type64: 0x2700000027, matchRI: 0x2113, match64: 0x00000000, model64: 0x1e86a0001e875},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8750001e87d, model64: 0x1e8750001e87d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e87d0001e884, model64: 0x1e87d0001e884},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8840001e88b, model64: 0x1e8840001e88b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2114, match64: 0x00000000, model64: 0x1e88b0001e899},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8990001e89f, model64: 0x1e8990001e89f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e89f0001e8a4, model64: 0x1e89f0001e8a4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e8a40001e8a8, model64: 0x1e8a40001e8a8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2117, match64: 0x00000000, model64: 0x102ce000102d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2118, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2119, match64: 0x00000000, model64: 0x1e8b60001e8c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x211a, match64: 0x00000000, model64: 0x1e8c10001e8cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x211c, match64: 0x00000000, model64: 0x1e8d60001e8db},
		modelTuple{type64: 0x2700000027, matchRI: 0x211e, match64: 0x00000000, model64: 0x1e8e50001e8ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x211f, match64: 0x00000000, model64: 0x1e8ee0001e8f5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1e8fb0001e904},
		modelTuple{type64: 0x2700000027, matchRI: 0x2122, match64: 0x00000000, model64: 0x1e9040001e911},
		modelTuple{type64: 0x2700000027, matchRI: 0x2123, match64: 0x00000000, model64: 0x1e9110001e91e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2124, match64: 0x00000000, model64: 0x1e91e0001e931},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e9310001e941, model64: 0x1e9410001e952},
		modelTuple{type64: 0x2700000027, matchRI: 0x2125, match64: 0x00000000, model64: 0x1e9520001e95e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2126, match64: 0x00000000, model64: 0x1e95e0001e96d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2127, match64: 0x00000000, model64: 0x1e96d0001e978},
		modelTuple{type64: 0x2700000027, matchRI: 0x2128, match64: 0x00000000, model64: 0x1e9780001e983},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2129, match64: 0x00000000, model64: 0x1e9830001e992},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212a, match64: 0x00000000, model64: 0x1e9920001e99c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212b, match64: 0x00000000, model64: 0x1e99c0001e9a5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212c, match64: 0x00000000, model64: 0x5de800005dee},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e9a50001e9ae, model64: 0x1e9ae0001e9b4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1e9b40001e9bf, model64: 0x1e9bf0001e9c7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212d, match64: 0x00000000, model64: 0x1e9c70001e9d5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212e, match64: 0x00000000, model64: 0x1e9d50001e9e2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x212f, match64: 0x00000000, model64: 0x1e9e20001e9ef},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2130, match64: 0x00000000, model64: 0x1e9ef0001e9fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2131, match64: 0x00000000, model64: 0x1e9fb0001ea05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2132, match64: 0x00000000, model64: 0x1ea050001ea12},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea120001ea20, model64: 0x1ea200001ea2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea2e0001ea3c, model64: 0x1ea3c0001ea4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea4b0001ea57, model64: 0x1ea570001ea64},
		modelTuple{type64: 0x2700000027, matchRI: 0x2133, match64: 0x00000000, model64: 0x1ea640001ea72},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea720001ea7e, model64: 0x1ea7e0001ea8b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ea8b0001ea92, model64: 0x1ea920001ea9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2134, match64: 0x00000000, model64: 0x117940001179c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2135, match64: 0x00000000, model64: 0x1ea9b0001eaa7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2136, match64: 0x00000000, model64: 0x117940001179c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2137, match64: 0x00000000, model64: 0x1eaa70001eab2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2138, match64: 0x00000000, model64: 0x1eab20001eaba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2139, match64: 0x00000000, model64: 0xf6300000f638},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaba0001eac5, model64: 0x1eac50001eacc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eacc0001ead6, model64: 0x1ead60001eae0},
		modelTuple{type64: 0x2700000027, matchRI: 0x213a, match64: 0x00000000, model64: 0x1828200018288},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eae00001eae7, model64: 0x1eae70001eaea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaea0001eaf2, model64: 0x1eaf20001eafb},
		modelTuple{type64: 0x2700000027, matchRI: 0x213b, match64: 0x00000000, model64: 0x1eafb0001eb05},
		modelTuple{type64: 0x2700000027, matchRI: 0x213c, match64: 0x00000000, model64: 0x1eb050001eb0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x213d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1eb0d0001eb12, model64: 0x1eb120001eb18},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1eb180001eb1d, model64: 0x1eb1d0001eb22},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1eb220001eb27, model64: 0x1eb270001eb2c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1eb2c0001eb31, model64: 0x1eb270001eb2c},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1eb310001eb36, model64: 0x1eb360001eb3e},
		modelTuple{type64: 0x24300000245, matchRI: 0x213e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2140, match64: 0x00000000, model64: 0x1eb470001eb4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2141, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2144, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2145, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb5e0001eb68, model64: 0x1eb5e0001eb68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb680001eb72, model64: 0x1eb720001eb7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2147, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2148, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x214a, match64: 0x00000000, model64: 0x1eb830001eb89},
		modelTuple{type64: 0x2700000027, matchRI: 0x214b, match64: 0x00000000, model64: 0x1eb890001eb91},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eb970001eba5, model64: 0x1eba50001ebad},
		modelTuple{type64: 0x2700000027, matchRI: 0x214e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2150, match64: 0x00000000, model64: 0x1ebb90001ebbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2153, match64: 0x00000000, model64: 0x1ebd20001ebd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2154, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2157, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ebed0001ebf5, model64: 0x1ebf50001ec05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec050001ec0b, model64: 0x1ec0b0001ec17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec170001ec1d, model64: 0x1ec1d0001ec27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec270001ec2d, model64: 0x1ec2d0001ec38},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec380001ec3e, model64: 0x1ec3e0001ec49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec490001ec4f, model64: 0x1ec4f0001ec5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec5b0001ec61, model64: 0x1ec610001ec70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec700001ec76, model64: 0x1ec760001ec81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec810001ec87, model64: 0x1ec870001ec91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ec910001ec97, model64: 0x1ec970001eca1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eca10001ecaf, model64: 0x1ecaf0001ecbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2159, match64: 0x00000000, model64: 0x1ecbd0001ecc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x215a, match64: 0x00000000, model64: 0x1ecbd0001ecc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x215b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x215c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x215e, match64: 0x00000000, model64: 0x1ecd10001ecd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ecd30001ecd8, model64: 0x1ecd80001ecda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ecda0001ecdf, model64: 0x1ecdf0001ece1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ece10001ece6, model64: 0x1ece60001ece9},
		modelTuple{type64: 0x2700000027, matchRI: 0x215f, match64: 0x00000000, model64: 0xa9210000a923},
		modelTuple{type64: 0x2700000027, matchRI: 0x2160, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2161, match64: 0x00000000, model64: 0xecc90000ecce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2162, match64: 0x00000000, model64: 0x188b9000188bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2163, match64: 0x00000000, model64: 0x1ece90001ecf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2164, match64: 0x00000000, model64: 0x1ecf30001ecf8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2165, match64: 0x00000000, model64: 0x1ecf80001ecfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2166, match64: 0x00000000, model64: 0x1ecfd0001ed06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2167, match64: 0x00000000, model64: 0x1ed060001ed13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ed130001ed23, model64: 0x1ed230001ed29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2169, match64: 0x00000000, model64: 0x1ed2f0001ed36},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ed360001ed3e, model64: 0x1ed360001ed3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ed4b0001ed55, model64: 0x1ed4b0001ed55},
		modelTuple{type64: 0x2700000027, matchRI: 0x216b, match64: 0x00000000, model64: 0x1ed550001ed64},
		modelTuple{type64: 0x2700000027, matchRI: 0x216c, match64: 0x00000000, model64: 0x1ed640001ed6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x216d, match64: 0x00000000, model64: 0x1ed6d0001ed78},
		modelTuple{type64: 0x2700000027, matchRI: 0x216e, match64: 0x00000000, model64: 0x1ed780001ed86},
		modelTuple{type64: 0x2700000027, matchRI: 0x216f, match64: 0x00000000, model64: 0x1ed860001ed95},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2170, match64: 0x00000000, model64: 0x1ed640001ed6d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eda80001edb5, model64: 0x1edb50001edcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edcf0001edd8, model64: 0x1485200014856},
		modelTuple{type64: 0x2700000027, matchRI: 0x2173, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2175, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2176, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2177, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1edf00001edf5, model64: 0x1edf50001ee05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee050001ee0a, model64: 0x1ee0a0001ee1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee1b0001ee20, model64: 0x1ee200001ee2e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee2e0001ee38, model64: 0x1ee380001ee3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ee3e0001ee47, model64: 0x1ee470001ee50},
		modelTuple{type64: 0x2700000027, matchRI: 0x217a, match64: 0x00000000, model64: 0x1ee500001ee5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x217b, match64: 0x00000000, model64: 0x1ee5b0001ee65},
		modelTuple{type64: 0x2700000027, matchRI: 0x217c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x217e, match64: 0x00000000, model64: 0x1ee6a0001ee70},
		modelTuple{type64: 0x2700000027, matchRI: 0x217f, match64: 0x00000000, model64: 0x1ee700001ee73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2180, match64: 0x00000000, model64: 0x1ee730001ee7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2181, match64: 0x00000000, model64: 0x1ee7b0001ee7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2182, match64: 0x00000000, model64: 0x1ee7f0001ee82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2183, match64: 0x00000000, model64: 0x1ee820001ee85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2184, match64: 0x00000000, model64: 0x1ee850001ee88},
		modelTuple{type64: 0x2700000027, matchRI: 0x2185, match64: 0x00000000, model64: 0x1ee880001ee8b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2186, match64: 0x00000000, model64: 0x1ee8b0001ee8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2188, match64: 0x00000000, model64: 0x1ee8f0001ee9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2189, match64: 0x00000000, model64: 0x1ee9e0001eeb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x218a, match64: 0x00000000, model64: 0x1eeb10001eeba},
		modelTuple{type64: 0x2700000027, matchRI: 0x218b, match64: 0x00000000, model64: 0x1eeba0001eec4},
		modelTuple{type64: 0x2700000027, matchRI: 0x218c, match64: 0x00000000, model64: 0x1eec40001eed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x218d, match64: 0x00000000, model64: 0x1eed00001eedc},
		modelTuple{type64: 0x2700000027, matchRI: 0x218e, match64: 0x00000000, model64: 0x1eedc0001eee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x218f, match64: 0x00000000, model64: 0x1eee60001eef1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2190, match64: 0x00000000, model64: 0x1eef10001eefb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2191, match64: 0x00000000, model64: 0x1eefb0001ef06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2192, match64: 0x00000000, model64: 0x1ef060001ef13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2193, match64: 0x00000000, model64: 0x1ef130001ef1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2194, match64: 0x00000000, model64: 0x1ef1d0001ef27},
		modelTuple{type64: 0x2700000027, matchRI: 0x2195, match64: 0x00000000, model64: 0x1ef270001ef36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2196, match64: 0x00000000, model64: 0x1ef360001ef40},
		modelTuple{type64: 0x2700000027, matchRI: 0x2197, match64: 0x00000000, model64: 0x1ef400001ef45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2198, match64: 0x00000000, model64: 0x1ef450001ef50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ef500001ef5d, model64: 0x1ef500001ef5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2199, match64: 0x00000000, model64: 0x1ef5d0001ef6e},
		modelTuple{type64: 0x38400000391, matchRI: 0x219a, match64: 0x00000000, model64: 0x1ef6e0001ef71},
		modelTuple{type64: 0x38400000391, matchRI: 0x219b, match64: 0x00000000, model64: 0x1ef710001ef78},
		modelTuple{type64: 0x38400000391, matchRI: 0x219c, match64: 0x00000000, model64: 0x1ef780001ef7d},
		modelTuple{type64: 0x38400000391, matchRI: 0x219d, match64: 0x00000000, model64: 0x1ef7d0001ef82},
		modelTuple{type64: 0x38400000391, matchRI: 0x219e, match64: 0x00000000, model64: 0x1ef820001ef87},
		modelTuple{type64: 0x38400000391, matchRI: 0x219f, match64: 0x00000000, model64: 0x1ef870001ef8a},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a0, match64: 0x00000000, model64: 0x1ef8a0001ef8f},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a1, match64: 0x00000000, model64: 0x1ef8f0001ef93},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a2, match64: 0x00000000, model64: 0x1ef930001ef97},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a3, match64: 0x00000000, model64: 0x1ef970001ef9c},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a4, match64: 0x00000000, model64: 0x1ef9c0001efa1},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a5, match64: 0x00000000, model64: 0x1efa10001efaa},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a6, match64: 0x00000000, model64: 0x1efaa0001efae},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a7, match64: 0x00000000, model64: 0x1efae0001efb3},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a8, match64: 0x00000000, model64: 0x1efb30001efb8},
		modelTuple{type64: 0x38400000391, matchRI: 0x21a9, match64: 0x00000000, model64: 0x1efb80001efbc},
		modelTuple{type64: 0x38400000391, matchRI: 0x21aa, match64: 0x00000000, model64: 0x1efbc0001efc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ab, match64: 0x00000000, model64: 0x1efc70001efd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ac, match64: 0x00000000, model64: 0x1efd00001efdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ad, match64: 0x00000000, model64: 0x1efdc0001efe6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1efe60001efec, model64: 0x1efec0001eff5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eff50001effb, model64: 0x1effb0001f004},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0040001f009, model64: 0x1f0090001f017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f0170001f01d, model64: 0x1f01d0001f026},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ae, match64: 0x00000000, model64: 0x1f0260001f02f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21af, match64: 0x00000000, model64: 0x1ef130001ef1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b0, match64: 0x00000000, model64: 0x1f02f0001f03c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b1, match64: 0x00000000, model64: 0x1f03c0001f04a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b2, match64: 0x00000000, model64: 0x1f04a0001f056},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b3, match64: 0x00000000, model64: 0x1f0560001f063},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b4, match64: 0x00000000, model64: 0x1f0630001f06e},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b5, match64: 0x00000000, model64: 0x1f06e0001f07a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b6, match64: 0x00000000, model64: 0x1f07a0001f08c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b7, match64: 0x00000000, model64: 0x1f08c0001f098},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b8, match64: 0x00000000, model64: 0x1f0980001f0a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21b9, match64: 0x00000000, model64: 0x1f0a60001f0b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ba, match64: 0x00000000, model64: 0x1f0b40001f0bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bb, match64: 0x00000000, model64: 0x1f0bc0001f0d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bc, match64: 0x00000000, model64: 0x1f0d90001f0e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bd, match64: 0x00000000, model64: 0x1f0e40001f0f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21be, match64: 0x00000000, model64: 0x1f0f00001f0fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x21bf, match64: 0x00000000, model64: 0x1f0fb0001f105},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c0, match64: 0x00000000, model64: 0x1f1050001f110},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c1, match64: 0x00000000, model64: 0x1f1100001f118},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c2, match64: 0x00000000, model64: 0x1f1180001f120},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c3, match64: 0x00000000, model64: 0x1f1200001f12d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c4, match64: 0x00000000, model64: 0x1f12d0001f135},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c5, match64: 0x00000000, model64: 0x1f1350001f140},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c6, match64: 0x00000000, model64: 0x1f1400001f14a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c7, match64: 0x00000000, model64: 0x1f14a0001f156},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c8, match64: 0x00000000, model64: 0x1f1560001f161},
		modelTuple{type64: 0x2700000027, matchRI: 0x21c9, match64: 0x00000000, model64: 0x1f1610001f169},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ca, match64: 0x00000000, model64: 0x1f1690001f176},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cb, match64: 0x00000000, model64: 0x1f1760001f17f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cc, match64: 0x00000000, model64: 0x1f17f0001f187},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cd, match64: 0x00000000, model64: 0x1f1870001f192},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ce, match64: 0x00000000, model64: 0x1f1920001f1a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21cf, match64: 0x00000000, model64: 0x1f1a00001f1ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d0, match64: 0x00000000, model64: 0x1f1ad0001f1b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d1, match64: 0x00000000, model64: 0x1f1b70001f1c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d2, match64: 0x00000000, model64: 0x1f1c00001f1cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d3, match64: 0x00000000, model64: 0x1f1cc0001f1d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d4, match64: 0x00000000, model64: 0x1f1d40001f1e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d5, match64: 0x00000000, model64: 0x1f1e40001f1ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d6, match64: 0x00000000, model64: 0x1f1ef0001f1fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d7, match64: 0x00000000, model64: 0x1f1fa0001f202},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d8, match64: 0x00000000, model64: 0x1f2020001f20b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21d9, match64: 0x00000000, model64: 0x1f20b0001f214},
		modelTuple{type64: 0x2700000027, matchRI: 0x21da, match64: 0x00000000, model64: 0x1f2140001f21c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21db, match64: 0x00000000, model64: 0x1f21c0001f225},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dc, match64: 0x00000000, model64: 0x1f2250001f22d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21dd, match64: 0x00000000, model64: 0x1f22d0001f23a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21de, match64: 0x00000000, model64: 0x1f23a0001f243},
		modelTuple{type64: 0x2700000027, matchRI: 0x21df, match64: 0x00000000, model64: 0x1f2430001f24d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e0, match64: 0x00000000, model64: 0x1f24d0001f255},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e1, match64: 0x00000000, model64: 0x1f2550001f262},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e2, match64: 0x00000000, model64: 0x1f2620001f26a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e3, match64: 0x00000000, model64: 0x1f26a0001f272},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e4, match64: 0x00000000, model64: 0x1f2720001f27b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e5, match64: 0x00000000, model64: 0x1f27b0001f284},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e6, match64: 0x00000000, model64: 0x1f2840001f28d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e7, match64: 0x00000000, model64: 0x1f28d0001f297},
		modelTuple{type64: 0x2700000027, matchRI: 0x21e8, match64: 0x00000000, model64: 0x1f2970001f29f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x21e9, match64: 0x00000000, model64: 0x1f29f0001f2ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ea, match64: 0x00000000, model64: 0x1f2970001f29f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21eb, match64: 0x00000000, model64: 0x1f2ad0001f2b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ec, match64: 0x00000000, model64: 0x1f2b60001f2c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ed, match64: 0x00000000, model64: 0x1f2c40001f2cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ee, match64: 0x00000000, model64: 0x1f2cd0001f2db},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ef, match64: 0x00000000, model64: 0x1f2db0001f2ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f0, match64: 0x00000000, model64: 0x1f2ea0001f2f3},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f1, match64: 0x00000000, model64: 0x1f2f30001f301},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f3010001f306, model64: 0x1f3060001f30f},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f2, match64: 0x00000000, model64: 0x1f30f0001f31d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f3, match64: 0x00000000, model64: 0x1f31d0001f326},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f4, match64: 0x00000000, model64: 0x1f3260001f334},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f5, match64: 0x00000000, model64: 0x1f3340001f33d},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f6, match64: 0x00000000, model64: 0x1f33d0001f34b},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f7, match64: 0x00000000, model64: 0x1f34b0001f359},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f8, match64: 0x00000000, model64: 0x1f3590001f36c},
		modelTuple{type64: 0x2700000027, matchRI: 0x21f9, match64: 0x00000000, model64: 0x1f36c0001f375},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fa, match64: 0x00000000, model64: 0x1f3750001f383},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fb, match64: 0x00000000, model64: 0x1f3830001f391},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fc, match64: 0x00000000, model64: 0x1f3910001f39a},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fd, match64: 0x00000000, model64: 0x1f39a0001f3a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x21fe, match64: 0x00000000, model64: 0x1f3a30001f3b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x21ff, match64: 0x00000000, model64: 0x1f3b10001f3c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2200, match64: 0x00000000, model64: 0x1f3c00001f3d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2201, match64: 0x00000000, model64: 0x1f3d40001f3dd},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2202, match64: 0x00000000, model64: 0x1f3dd0001f3ec},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2203, match64: 0x00000000, model64: 0x1f3ec0001f400},
		modelTuple{type64: 0x2700000027, matchRI: 0x2204, match64: 0x00000000, model64: 0x1f4000001f411},
		modelTuple{type64: 0x2700000027, matchRI: 0x2205, match64: 0x00000000, model64: 0x1f4110001f41a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2206, match64: 0x00000000, model64: 0x1f41a0001f42b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1f42b0001f440, model64: 0x1f4400001f455},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2207, match64: 0x00000000, model64: 0x1f4550001f465},
		modelTuple{type64: 0x2700000027, matchRI: 0x2208, match64: 0x00000000, model64: 0x1f4650001f46e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f46e0001f473, model64: 0x1f4730001f47d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2209, match64: 0x00000000, model64: 0x1f47d0001f486},
		modelTuple{type64: 0x2700000027, matchRI: 0x220a, match64: 0x00000000, model64: 0x1f4860001f494},
		modelTuple{type64: 0x2700000027, matchRI: 0x220b, match64: 0x00000000, model64: 0x1f4940001f49e},
		modelTuple{type64: 0x2700000027, matchRI: 0x220c, match64: 0x00000000, model64: 0x1f49e0001f4a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x220d, match64: 0x00000000, model64: 0x1f4a80001f4b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f4b10001f4b6, model64: 0x1f4b60001f4c0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x220e, match64: 0x00000000, model64: 0x1f4a80001f4b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x220f, match64: 0x00000000, model64: 0x1f4c00001f4d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2210, match64: 0x00000000, model64: 0x1f4d10001f4da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2211, match64: 0x00000000, model64: 0x1f4da0001f4e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2212, match64: 0x00000000, model64: 0x1f4e80001f4f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2213, match64: 0x00000000, model64: 0x1f4f90001f50f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2214, match64: 0x00000000, model64: 0x1f50f0001f518},
		modelTuple{type64: 0x2700000027, matchRI: 0x2215, match64: 0x00000000, model64: 0x1f5180001f526},
		modelTuple{type64: 0x2700000027, matchRI: 0x2216, match64: 0x00000000, model64: 0x1f5260001f535},
		modelTuple{type64: 0x2700000027, matchRI: 0x2217, match64: 0x00000000, model64: 0x1f5350001f549},
		modelTuple{type64: 0x2700000027, matchRI: 0x2218, match64: 0x00000000, model64: 0x1f5490001f552},
		modelTuple{type64: 0x2700000027, matchRI: 0x2219, match64: 0x00000000, model64: 0x1f5520001f55c},
		modelTuple{type64: 0x2700000027, matchRI: 0x221a, match64: 0x00000000, model64: 0x1f55c0001f56e},
		modelTuple{type64: 0x2700000027, matchRI: 0x221b, match64: 0x00000000, model64: 0x1f56e0001f577},
		modelTuple{type64: 0x2700000027, matchRI: 0x221c, match64: 0x00000000, model64: 0x1f5770001f581},
		modelTuple{type64: 0x2700000027, matchRI: 0x221d, match64: 0x00000000, model64: 0x1f5810001f590},
		modelTuple{type64: 0x2700000027, matchRI: 0x221e, match64: 0x00000000, model64: 0x1f5900001f5a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x221f, match64: 0x00000000, model64: 0x1f5a40001f5b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2220, match64: 0x00000000, model64: 0x1f5b40001f5be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2221, match64: 0x00000000, model64: 0x1f5be0001f5cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2222, match64: 0x00000000, model64: 0x1f5cd0001f5dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f5dc0001f5e1, model64: 0x1f5dc0001f5e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2223, match64: 0x00000000, model64: 0x1f5e10001f5f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2224, match64: 0x00000000, model64: 0x1f5f10001f5fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2225, match64: 0x00000000, model64: 0x1f5fb0001f60c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2226, match64: 0x00000000, model64: 0x1f60c0001f616},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f6160001f61b, model64: 0x1f61b0001f62a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f62a0001f630, model64: 0x1f6300001f642},
		modelTuple{type64: 0x2700000027, matchRI: 0x2227, match64: 0x00000000, model64: 0x1f6420001f659},
		modelTuple{type64: 0x2700000027, matchRI: 0x2228, match64: 0x00000000, model64: 0x1f6590001f663},
		modelTuple{type64: 0x2700000027, matchRI: 0x2229, match64: 0x00000000, model64: 0x1f6630001f66c},
		modelTuple{type64: 0x2700000027, matchRI: 0x222a, match64: 0x00000000, model64: 0x1f66c0001f67a},
		modelTuple{type64: 0x2700000027, matchRI: 0x222b, match64: 0x00000000, model64: 0x1f67a0001f682},
		modelTuple{type64: 0x2700000027, matchRI: 0x222c, match64: 0x00000000, model64: 0x1f6820001f68b},
		modelTuple{type64: 0x2700000027, matchRI: 0x222d, match64: 0x00000000, model64: 0x1f68b0001f694},
		modelTuple{type64: 0x2700000027, matchRI: 0x222e, match64: 0x00000000, model64: 0x1f6940001f69c},
		modelTuple{type64: 0x2700000027, matchRI: 0x222f, match64: 0x00000000, model64: 0x1f69c0001f6a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2230, match64: 0x00000000, model64: 0x1f6a90001f6b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2231, match64: 0x00000000, model64: 0x1f6b90001f6cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2232, match64: 0x00000000, model64: 0x1f6cd0001f6e6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2233, match64: 0x00000000, model64: 0x1f6e60001f6f5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2234, match64: 0x00000000, model64: 0x1f6f50001f705},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2235, match64: 0x00000000, model64: 0x1f7050001f715},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2236, match64: 0x00000000, model64: 0x1f7150001f72d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2237, match64: 0x00000000, model64: 0x1f72d0001f73c},
		modelTuple{type64: 0x29be000029c6, matchRI: -0x0001, match64: 0x1f73c0001f748, model64: 0x1f73c0001f748},
		modelTuple{type64: 0x24300000245, matchRI: 0x2238, match64: 0x00000000, model64: 0x1f7480001f751},
		modelTuple{type64: 0x24300000245, matchRI: 0x2239, match64: 0x00000000, model64: 0x1f7510001f761},
		modelTuple{type64: 0x24300000245, matchRI: 0x223a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x223b, match64: 0x00000000, model64: 0x1f7610001f76b},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x223c, match64: 0x00000000, model64: 0x1f76b0001f775},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1f7750001f77a, model64: 0x1f7750001f77a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1f77a0001f782, model64: 0x1f7820001f78a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1f78a0001f792, model64: 0x1f7920001f79a},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1f79a0001f7a3, model64: 0x1f7a30001f7ac},
		modelTuple{type64: 0x24300000245, matchRI: 0x223d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x223e, match64: 0x00000000, model64: 0x1f7ac0001f7bf},
		modelTuple{type64: 0x24300000245, matchRI: 0x223f, match64: 0x00000000, model64: 0x1f7bf0001f7cd},
		modelTuple{type64: 0x24300000245, matchRI: 0x2240, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2241, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2242, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2243, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2244, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x2700000027, matchRI: 0x2245, match64: 0x00000000, model64: 0x1f7cd0001f7d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2246, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x2247, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2248, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x2249, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x224a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x224b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x224c, match64: 0x00000000, model64: 0x1f7d70001f7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x224d, match64: 0x00000000, model64: 0x1f7d70001f7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x224e, match64: 0x00000000, model64: 0x1f7d70001f7e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x224f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2250, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2251, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2255, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7f50001f7fa, model64: 0x1f7f50001f7fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f7fa0001f802, model64: 0x1f8020001f80a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1e75b0001e761, model64: 0x1e75b0001e761},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f80f0001f81a, model64: 0x1f80f0001f81a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f81a0001f825, model64: 0x1f81a0001f825},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8250001f82f, model64: 0x1f8250001f82f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2258, match64: 0x00000000, model64: 0x1f82f0001f839},
		modelTuple{type64: 0x2700000027, matchRI: 0x2259, match64: 0x00000000, model64: 0x1f8390001f844},
		modelTuple{type64: 0x2700000027, matchRI: 0x225a, match64: 0x00000000, model64: 0x52590000525f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1770a0001770f, model64: 0x1770a0001770f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8440001f84c, model64: 0x1f8440001f84c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f84c0001f857, model64: 0x1f84c0001f857},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8570001f85e, model64: 0x1f8570001f85e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f85e0001f866, model64: 0x1f8660001f868},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x225d, match64: 0x00000000, model64: 0x1f87b0001f887},
		modelTuple{type64: 0x2700000027, matchRI: 0x225e, match64: 0x00000000, model64: 0x1f8870001f893},
		modelTuple{type64: 0x2700000027, matchRI: 0x225f, match64: 0x00000000, model64: 0x1f8930001f89e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2260, match64: 0x00000000, model64: 0x1f89e0001f8ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2262, match64: 0x00000000, model64: 0x1f8ab0001f8b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2263, match64: 0x00000000, model64: 0x1f8b30001f8bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8bd0001f8c9, model64: 0x1f8c90001f8d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8d50001f8e2, model64: 0x1f8e20001f8f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f8f00001f901, model64: 0x1f9010001f913},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9130001f924, model64: 0x1f9240001f937},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2264, match64: 0x00000000, model64: 0x1f9370001f93d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2265, match64: 0x00000000, model64: 0x1f93d0001f942},
		modelTuple{type64: 0x2700000027, matchRI: 0x2266, match64: 0x00000000, model64: 0x1f9370001f93d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2267, match64: 0x00000000, model64: 0x1f93d0001f942},
		modelTuple{type64: 0x2700000027, matchRI: 0x2268, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2269, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1f9420001f947},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f94b0001f950, model64: 0x702e00007034},
		modelTuple{type64: 0x2700000027, matchRI: 0x226c, match64: 0x00000000, model64: 0x82dc000082df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9590001f962, model64: 0x1f9620001f96b},
		modelTuple{type64: 0x2700000027, matchRI: 0x226e, match64: 0x00000000, model64: 0x1f96b0001f976},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9760001f97f, model64: 0x1f97f0001f988},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9880001f992, model64: 0x1f9920001f99c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f99c0001f9a4, model64: 0x1f9a40001f9ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9ac0001f9b6, model64: 0x1f9b60001f9c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9c00001f9ca, model64: 0x1f9ca0001f9d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9d40001f9da, model64: 0x1f9da0001f9e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9e00001f9ea, model64: 0x1f9ea0001f9f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1f9f40001f9ff, model64: 0x1f9ff0001fa0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x226f, match64: 0x00000000, model64: 0x1fa0a0001fa14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fa140001fa1e, model64: 0x1fa1e0001fa28},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fa280001fa38, model64: 0x1fa380001fa3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fa3e0001fa4c, model64: 0x1fa4c0001fa52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2271, match64: 0x00000000, model64: 0x1fa5c0001fa63},
		modelTuple{type64: 0x2700000027, matchRI: 0x2272, match64: 0x00000000, model64: 0x1fa630001fa68},
		modelTuple{type64: 0x2700000027, matchRI: 0x2273, match64: 0x00000000, model64: 0x1fa680001fa72},
		modelTuple{type64: 0x2700000027, matchRI: 0x2274, match64: 0x00000000, model64: 0x1fa720001fa79},
		modelTuple{type64: 0x2700000027, matchRI: 0x2275, match64: 0x00000000, model64: 0x1fa790001fa7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2276, match64: 0x00000000, model64: 0x1fa7e0001fa8b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fa920001fa9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2279, match64: 0x00000000, model64: 0x1faa70001faaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fab60001fac1, model64: 0x1fab60001fac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x227b, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x227d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x227e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2280, match64: 0x00000000, model64: 0x1facd0001fad7},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x1fad70001fae5, model64: 0x1fae50001faec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2282, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2284, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2285, match64: 0x00000000, model64: 0x1fafc0001fb02},
		modelTuple{type64: 0x24300000245, matchRI: 0x2286, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2288, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2289, match64: 0x00000000, model64: 0x1fb070001fb0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb0c0001fb13, model64: 0x1fb130001fb1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb1a0001fb22, model64: 0x1fb220001fb2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb2a0001fb37, model64: 0x1fb370001fb44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb440001fb4b, model64: 0x1fb4b0001fb52},
		modelTuple{type64: 0x2700000027, matchRI: 0x228a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x228b, match64: 0x00000000, model64: 0x1fb520001fb5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x228c, match64: 0x00000000, model64: 0x1fb5a0001fb6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x228d, match64: 0x00000000, model64: 0x1fb6a0001fb79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb790001fb81, model64: 0x1fb810001fb89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb890001fb92, model64: 0x1fb920001fb9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fb9b0001fba4, model64: 0x1fba40001fbad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbad0001fbb5, model64: 0x1fbb50001fbbd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbbd0001fbc2, model64: 0x1fbc20001fbc9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbc90001fbd1, model64: 0x1fbc90001fbd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbd10001fbda, model64: 0x1fbda0001fbe3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbe30001fbeb, model64: 0x1fbeb0001fbf3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fbf30001fbfb, model64: 0x1fbfb0001fc03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc030001fc0a, model64: 0x1fc030001fc0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc0a0001fc10, model64: 0x1fc100001fc16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc160001fc1b, model64: 0x98a9000098b0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc1b0001fc24, model64: 0x1fc240001fc2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc2d0001fc35, model64: 0x1fc350001fc3d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc3d0001fc43, model64: 0x1fc430001fc49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc490001fc4f, model64: 0x1fc4f0001fc55},
		modelTuple{type64: 0x2700000027, matchRI: 0x228e, match64: 0x00000000, model64: 0x1fc550001fc5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x228f, match64: 0x00000000, model64: 0x1fc5e0001fc66},
		modelTuple{type64: 0x2700000027, matchRI: 0x2290, match64: 0x00000000, model64: 0x1fc660001fc6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc6d0001fc76, model64: 0x1fc760001fc7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1271100012715, model64: 0x1271100012715},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc7f0001fc84, model64: 0x88580000885f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc840001fc8e, model64: 0x1fc8e0001fc98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fc980001fc9e, model64: 0x1fc9e0001fca4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fca40001fcae, model64: 0x1fcae0001fcb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fcb80001fcc1, model64: 0x1fcc10001fcca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x48c7000048cc, model64: 0x1fcca0001fccf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fccf0001fcd3, model64: 0x1fcd30001fcd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fcd70001fcdd, model64: 0x1e8000001ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fcdd0001fcea, model64: 0x1fcdd0001fcea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2291, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2292, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2293, match64: 0x00000000, model64: 0x1fcea0001fcf6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1fcf60001fcfb, model64: 0x1fcfb0001fd06},
		modelTuple{type64: 0x2700000027, matchRI: 0x2295, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2296, match64: 0x00000000, model64: 0x11e7900011e81},
		modelTuple{type64: 0x2700000027, matchRI: 0x2298, match64: 0x00000000, model64: 0x1fd100001fd17},
		modelTuple{type64: 0x2700000027, matchRI: 0x2299, match64: 0x00000000, model64: 0x172ff00017306},
		modelTuple{type64: 0x2700000027, matchRI: 0x229a, match64: 0x00000000, model64: 0x1fd170001fd1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x229b, match64: 0x00000000, model64: 0x66a1000066a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x229c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x229e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x229f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd330001fd41, model64: 0x1fd410001fd4f},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x5e8000005f5, matchRI: 0x22a7, match64: 0x00000000, model64: 0x1fd540001fd5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22a8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fd5c0001fd65, model64: 0x1fd650001fd6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22ac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x22ad, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x24300000245, matchRI: 0x22ae, match64: 0x00000000, model64: 0x1fd730001fd81},
		modelTuple{type64: 0x24300000245, matchRI: 0x22af, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x22b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b3, match64: 0x00000000, model64: 0x1fd900001fd99},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b4, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b5, match64: 0x00000000, model64: 0x1fd990001fda1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22b6, match64: 0x00000000, model64: 0x1fda10001fda7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fdbc0001fdc2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fdd30001fdda, model64: 0x1fdda0001fde1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fde10001fde8, model64: 0x1fde80001fdef},
		modelTuple{type64: 0x2700000027, matchRI: 0x22bc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fdf70001fdfe, model64: 0x1fdf70001fdfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe060001fe10, model64: 0x1fe100001fe1a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22be, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22bf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fe2b0001fe32},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c3, match64: 0x00000000, model64: 0x1fe380001fe42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe420001fe49, model64: 0x1fe490001fe51},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe5b0001fe68, model64: 0x1fe5b0001fe68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe680001fe75, model64: 0x1fe680001fe75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fe750001fe83, model64: 0x1fe750001fe83},
		modelTuple{type64: 0x2700000027, matchRI: 0x22c6, match64: 0x00000000, model64: 0x117940001179c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22c7, match64: 0x00000000, model64: 0x1fe830001fe8a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22c8, match64: 0x00000000, model64: 0x1fe8a0001fe92},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1fea10001feaa},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cc, match64: 0x00000000, model64: 0x1feae0001feb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ce, match64: 0x00000000, model64: 0x1febb0001fec1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fec10001fec6, model64: 0x1fec10001fec6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22cf, match64: 0x00000000, model64: 0x1fec60001fecf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fecf0001fed3, model64: 0x1fecf0001fed3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fed30001fed8, model64: 0x1fed80001fedd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1fedd0001feed, model64: 0x1feed0001fef4},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d0, match64: 0x00000000, model64: 0x1fef40001fefb},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d1, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d2, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d3, match64: 0x00000000, model64: 0x1fefb0001ff03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff030001ff0b, model64: 0x1ff030001ff0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22d6, match64: 0x00000000, model64: 0x1ff0b0001ff14},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x1ff140001ff1e, model64: 0x1ff1e0001ff28},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22d8, match64: 0x00000000, model64: 0x1ff350001ff3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff470001ff4e, model64: 0x1ff4e0001ff55},
		modelTuple{type64: 0x2700000027, matchRI: 0x22da, match64: 0x00000000, model64: 0x1ff550001ff61},
		modelTuple{type64: 0x2700000027, matchRI: 0x22db, match64: 0x00000000, model64: 0x1ff610001ff68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff680001ff70, model64: 0x1ff700001ff7b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff7b0001ff84, model64: 0x1ff840001ff93},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dc, match64: 0x00000000, model64: 0x1ff930001ff9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ff9b0001ffa7, model64: 0x1ffa70001ffb3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22dd, match64: 0x00000000, model64: 0x1ffb30001ffbe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1ffbe0001ffc5, model64: 0x6f4c00006f56},
		modelTuple{type64: 0x2700000027, matchRI: 0x22de, match64: 0x00000000, model64: 0x1ffc50001ffcc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22df, match64: 0x00000000, model64: 0x1ffcc0001ffd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e0, match64: 0x00000000, model64: 0x1ffd60001ffe0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e1, match64: 0x00000000, model64: 0x1ffe00001ffee},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e2, match64: 0x00000000, model64: 0x1ffee0001fffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e3, match64: 0x00000000, model64: 0x1fffc00020008},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2000800020015, model64: 0x2000800020015},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e4, match64: 0x00000000, model64: 0x2001500020025},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e5, match64: 0x00000000, model64: 0x2002500020031},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e6, match64: 0x00000000, model64: 0x200310002003c},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e7, match64: 0x00000000, model64: 0x2003c00020046},
		modelTuple{type64: 0x2700000027, matchRI: 0x22e8, match64: 0x00000000, model64: 0x200460002004d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2004d00020055, model64: 0x2005500020061},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x22e9, match64: 0x00000000, model64: 0x2006100020069},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x22eb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x186bb000186bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ed, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ef, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2007a0002008b, model64: 0x2008b00020099},
		modelTuple{type64: 0x24700000251, matchRI: 0x22f0, match64: 0x00000000, model64: 0x200990002009e},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f3, match64: 0x00000000, model64: 0x200ab000200b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f5, match64: 0x00000000, model64: 0x200b6000200be},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f6, match64: 0x00000000, model64: 0x200be000200c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f7, match64: 0x00000000, model64: 0x200c3000200c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f8, match64: 0x00000000, model64: 0x127070001270a},
		modelTuple{type64: 0x2700000027, matchRI: 0x22f9, match64: 0x00000000, model64: 0x200c8000200d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fa, match64: 0x00000000, model64: 0x200d1000200d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fb, match64: 0x00000000, model64: 0x200d4000200d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fc, match64: 0x00000000, model64: 0x200d7000200da},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fd, match64: 0x00000000, model64: 0x200da000200dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x22fe, match64: 0x00000000, model64: 0x200dd000200e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x22ff, match64: 0x00000000, model64: 0x200e0000200e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2300, match64: 0x00000000, model64: 0x200e3000200e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2301, match64: 0x00000000, model64: 0x200e7000200ea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200ea000200ef, model64: 0x200dd000200e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2302, match64: 0x00000000, model64: 0x200ef000200f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2303, match64: 0x00000000, model64: 0x200f2000200f5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200f5000200fa, model64: 0x200fa000200fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x200fe00020103, model64: 0x2010300020108},
		modelTuple{type64: 0x2700000027, matchRI: 0x2304, match64: 0x00000000, model64: 0x201080002010b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2305, match64: 0x00000000, model64: 0x2010b00020110},
		modelTuple{type64: 0x2700000027, matchRI: 0x2306, match64: 0x00000000, model64: 0x2011000020113},
		modelTuple{type64: 0x2700000027, matchRI: 0x2307, match64: 0x00000000, model64: 0x201130002012b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2308, match64: 0x00000000, model64: 0x2012b00020133},
		modelTuple{type64: 0x2700000027, matchRI: 0x2309, match64: 0x00000000, model64: 0x2013300020136},
		modelTuple{type64: 0x2700000027, matchRI: 0x230a, match64: 0x00000000, model64: 0x2013600020139},
		modelTuple{type64: 0x2700000027, matchRI: 0x230b, match64: 0x00000000, model64: 0x201390002013c},
		modelTuple{type64: 0x2700000027, matchRI: 0x230c, match64: 0x00000000, model64: 0x2013c0002013f},
		modelTuple{type64: 0x2700000027, matchRI: 0x230d, match64: 0x00000000, model64: 0x2013f00020141},
		modelTuple{type64: 0x2700000027, matchRI: 0x230e, match64: 0x00000000, model64: 0x182e00001830},
		modelTuple{type64: 0x2700000027, matchRI: 0x230f, match64: 0x00000000, model64: 0x2014100020144},
		modelTuple{type64: 0x2700000027, matchRI: 0x2310, match64: 0x00000000, model64: 0x187400001877},
		modelTuple{type64: 0x2700000027, matchRI: 0x2311, match64: 0x00000000, model64: 0x6bf100006bf3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2312, match64: 0x00000000, model64: 0x2014400020146},
		modelTuple{type64: 0x2700000027, matchRI: 0x2313, match64: 0x00000000, model64: 0x6a7600006a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2314, match64: 0x00000000, model64: 0x2014600020148},
		modelTuple{type64: 0x2700000027, matchRI: 0x2315, match64: 0x00000000, model64: 0x1ac990001aca0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2316, match64: 0x00000000, model64: 0x201480002014b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2317, match64: 0x00000000, model64: 0x2014b0002014e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2318, match64: 0x00000000, model64: 0x2014e00020152},
		modelTuple{type64: 0x2700000027, matchRI: 0x2319, match64: 0x00000000, model64: 0x201520002015a},
		modelTuple{type64: 0x2700000027, matchRI: 0x231a, match64: 0x00000000, model64: 0x138190001381b},
		modelTuple{type64: 0x2700000027, matchRI: 0x231b, match64: 0x00000000, model64: 0x2015a0002015f},
		modelTuple{type64: 0x2700000027, matchRI: 0x231c, match64: 0x00000000, model64: 0x2015f00020163},
		modelTuple{type64: 0x2700000027, matchRI: 0x231d, match64: 0x00000000, model64: 0xae770000ae7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x231e, match64: 0x00000000, model64: 0x2016300020168},
		modelTuple{type64: 0x2700000027, matchRI: 0x231f, match64: 0x00000000, model64: 0x2016800020170},
		modelTuple{type64: 0x2700000027, matchRI: 0x2320, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2321, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2322, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2323, match64: 0x00000000, model64: 0x2017000020172},
		modelTuple{type64: 0x2700000027, matchRI: 0x2324, match64: 0x00000000, model64: 0xe6770000e679},
		modelTuple{type64: 0x2700000027, matchRI: 0x2325, match64: 0x00000000, model64: 0x2017200020175},
		modelTuple{type64: 0x2700000027, matchRI: 0x2326, match64: 0x00000000, model64: 0x201750002017a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2327, match64: 0x00000000, model64: 0x2017a00020182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2328, match64: 0x00000000, model64: 0x2018200020185},
		modelTuple{type64: 0x2700000027, matchRI: 0x2329, match64: 0x00000000, model64: 0x201850002018a},
		modelTuple{type64: 0x2700000027, matchRI: 0x232a, match64: 0x00000000, model64: 0x2018a0002018f},
		modelTuple{type64: 0x2700000027, matchRI: 0x232b, match64: 0x00000000, model64: 0x2018f00020193},
		modelTuple{type64: 0x2700000027, matchRI: 0x232c, match64: 0x00000000, model64: 0x2019300020198},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201980002019d, model64: 0x2019d000201a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x232d, match64: 0x00000000, model64: 0x201a2000201a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201a5000201aa, model64: 0x201aa000201ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x232e, match64: 0x00000000, model64: 0x201ac000201b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x232f, match64: 0x00000000, model64: 0x201b0000201b7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x201b7000201bd, model64: 0x201bd000201c1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2330, match64: 0x00000000, model64: 0x201c1000201c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2331, match64: 0x00000000, model64: 0x201c6000201ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2332, match64: 0x00000000, model64: 0x201ce000201d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2333, match64: 0x00000000, model64: 0x201d3000201d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2334, match64: 0x00000000, model64: 0x201d9000201dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2335, match64: 0x00000000, model64: 0x201dc000201e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2336, match64: 0x00000000, model64: 0x201e1000201e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2337, match64: 0x00000000, model64: 0x201e6000201ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2338, match64: 0x00000000, model64: 0xb5de0000b5e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2339, match64: 0x00000000, model64: 0x201ef000201f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x233a, match64: 0x00000000, model64: 0x201f5000201fa},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x233b, match64: 0x00000000, model64: 0x201fa00020205},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x202050002020a, model64: 0x2020a00020219},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x202190002021e, model64: 0x2021e0002022c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2022c00020231, model64: 0x202310002023c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2023c00020242, model64: 0x202420002024d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x233c, match64: 0x00000000, model64: 0x2024d00020255},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x233d, match64: 0x00000000, model64: 0x202550002025e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2025e00020263, model64: 0x2026300020269},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x202690002026e, model64: 0x2026e00020276},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x202760002027b, model64: 0x2027b00020287},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x202870002028c, model64: 0x2028c0002029a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2029a0002029f, model64: 0x2029f000202a8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x233e, match64: 0x00000000, model64: 0x202a8000202b2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x233f, match64: 0x00000000, model64: 0x917300009179},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2340, match64: 0x00000000, model64: 0x202b2000202bb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2341, match64: 0x00000000, model64: 0x202bb000202c2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2342, match64: 0x00000000, model64: 0x202c2000202d5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2343, match64: 0x00000000, model64: 0x202d5000202e7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2344, match64: 0x00000000, model64: 0x202e7000202f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2345, match64: 0x00000000, model64: 0x202f1000202fc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2346, match64: 0x00000000, model64: 0x202fc00020308},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2347, match64: 0x00000000, model64: 0x2030800020315},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2348, match64: 0x00000000, model64: 0x2031500020321},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2032100020326, model64: 0x203260002032e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2032e00020333, model64: 0x203330002033d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2033d00020342, model64: 0x2034200020349},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x203490002034e, model64: 0x2034e00020358},
		modelTuple{type64: 0x24300000245, matchRI: 0x2349, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x234a, match64: 0x00000000, model64: 0x2035800020364},
		modelTuple{type64: 0x24300000245, matchRI: 0x234b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x234c, match64: 0x00000000, model64: 0x2036400020373},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x203730002038b, model64: 0x2038b00020391},
		modelTuple{type64: 0x24300000245, matchRI: 0x234d, match64: 0x00000000, model64: 0x20391000203a8},
		modelTuple{type64: 0x24300000245, matchRI: 0x234e, match64: 0x00000000, model64: 0x203a8000203ba},
		modelTuple{type64: 0x24300000245, matchRI: 0x234f, match64: 0x00000000, model64: 0x203ba000203cb},
		modelTuple{type64: 0x24300000245, matchRI: 0x2350, match64: 0x00000000, model64: 0x203cb000203dc},
		modelTuple{type64: 0x24300000245, matchRI: 0x2351, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x203ed000203f5, model64: 0x203f5000203fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x203fb00020403, model64: 0xc1380000c13b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204030002040b, model64: 0x10f4600010f49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204140002041b, model64: 0x2041b00020423},
		modelTuple{type64: 0x2700000027, matchRI: 0x2355, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2356, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2359, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x235a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2044500020454},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x235f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2363, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2365, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2366, match64: 0x00000000, model64: 0x204780002047c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1b8100001b82},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2049b000204a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2369, match64: 0x00000000, model64: 0x204a7000204ab},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x204b1000204bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x236d, match64: 0x00000000, model64: 0x204c2000204cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x236e, match64: 0x00000000, model64: 0x204cd000204d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x236f, match64: 0x00000000, model64: 0x204cd000204d7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2371, match64: 0x00000000, model64: 0x204da000204e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2372, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x204e4000204e9, model64: 0x204e9000204ee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x204fd00020509},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2379, match64: 0x00000000, model64: 0x2051f00020524},
		modelTuple{type64: 0x2700000027, matchRI: 0x237a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x237b, match64: 0x00000000, model64: 0x205240002052c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2052c00020533, model64: 0x2052c00020533},
		modelTuple{type64: 0x2700000027, matchRI: 0x237c, match64: 0x00000000, model64: 0x205330002053b},
		modelTuple{type64: 0x2700000027, matchRI: 0x237e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2054b00020553},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2055a0002055f, model64: 0x2055a0002055f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2055f0002056a, model64: 0x2056a0002056e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2056e0002057a, model64: 0x2057a0002057e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2057e00020588, model64: 0x205880002058b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2381, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2382, match64: 0x00000000, model64: 0x2058b0002058e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2058e00020593, model64: 0x2059300020598},
		modelTuple{type64: 0x2700000027, matchRI: 0x2383, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2384, match64: 0x00000000, model64: 0x205980002059f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2385, match64: 0x00000000, model64: 0x205980002059f},
		modelTuple{type64: 0x24700000251, matchRI: 0x2386, match64: 0x00000000, model64: 0x2059f000205a4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x205a4000205aa, model64: 0x205aa000205b1},
		modelTuple{type64: 0x24700000251, matchRI: 0x2387, match64: 0x00000000, model64: 0x205b1000205bb},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x205bb000205d0, model64: 0x205d0000205dc},
		modelTuple{type64: 0x24700000251, matchRI: 0x2388, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x238a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x205ee000205fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x238d, match64: 0x00000000, model64: 0x206030002060e},
		modelTuple{type64: 0x2700000027, matchRI: 0x238e, match64: 0x00000000, model64: 0x2060e0002061d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x206260002062f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2391, match64: 0x00000000, model64: 0x2063e00020646},
		modelTuple{type64: 0x2700000027, matchRI: 0x2392, match64: 0x00000000, model64: 0x2064600020649},
		modelTuple{type64: 0x2700000027, matchRI: 0x2393, match64: 0x00000000, model64: 0x206490002064c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2394, match64: 0x00000000, model64: 0x1adf20001adf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2395, match64: 0x00000000, model64: 0x2064c0002064e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2396, match64: 0x00000000, model64: 0x2064e00020652},
		modelTuple{type64: 0x2700000027, matchRI: 0x2397, match64: 0x00000000, model64: 0x2065200020657},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206570002065c, model64: 0x206570002065c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2065c00020660, model64: 0x2065c00020660},
		modelTuple{type64: 0x2700000027, matchRI: 0x2398, match64: 0x00000000, model64: 0x206600002066a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2066a00020674, model64: 0x2067400020683},
		modelTuple{type64: 0x2700000027, matchRI: 0x2399, match64: 0x00000000, model64: 0x291b0000291e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2068300020687, model64: 0x2068300020687},
		modelTuple{type64: 0x2700000027, matchRI: 0x239a, match64: 0x00000000, model64: 0x206870002068a},
		modelTuple{type64: 0x2700000027, matchRI: 0x239b, match64: 0x00000000, model64: 0x1174c00011753},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xa79b0000a7a2, model64: 0xa79b0000a7a2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2068a00020690, model64: 0x2069000020696},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206960002069d, model64: 0x206960002069d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2069d000206a3, model64: 0x206a3000206a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206a9000206af, model64: 0x206af000206b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206b2000206b8, model64: 0x206b8000206bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x239c, match64: 0x00000000, model64: 0x10f4600010f49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206bf000206c4, model64: 0x206c4000206ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x239d, match64: 0x00000000, model64: 0x206ca000206d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x239e, match64: 0x00000000, model64: 0x206d2000206d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x239f, match64: 0x00000000, model64: 0x206ca000206d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a0, match64: 0x00000000, model64: 0x206d6000206dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206dd000206e4, model64: 0x206dd000206e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206e4000206ea, model64: 0x206ea000206ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a1, match64: 0x00000000, model64: 0x206ed000206f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a2, match64: 0x00000000, model64: 0x206f5000206fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a3, match64: 0x00000000, model64: 0x206fa000206ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x206ff00020707, model64: 0x207070002070e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a4, match64: 0x00000000, model64: 0x2070e00020712},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2071200020716, model64: 0x2071200020716},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x207160002071c, model64: 0x2071c00020723},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a6, match64: 0x00000000, model64: 0x2072300020733},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a7, match64: 0x00000000, model64: 0x207330002073c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a8, match64: 0x00000000, model64: 0x2073c00020747},
		modelTuple{type64: 0x2700000027, matchRI: 0x23a9, match64: 0x00000000, model64: 0x2074700020751},
		modelTuple{type64: 0x2700000027, matchRI: 0x23aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2075d0002076a, model64: 0x2076a00020778},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2077800020781, model64: 0x207810002078b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ac, match64: 0x00000000, model64: 0x2078b00020795},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ad, match64: 0x00000000, model64: 0x207950002079f},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ae, match64: 0x00000000, model64: 0x2079f000207ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x23af, match64: 0x00000000, model64: 0x207ad000207b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b0, match64: 0x00000000, model64: 0x207b6000207c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b1, match64: 0x00000000, model64: 0x207c4000207d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b2, match64: 0x00000000, model64: 0x207d4000207e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b3, match64: 0x00000000, model64: 0x207e2000207f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b4, match64: 0x00000000, model64: 0x207f1000207fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b5, match64: 0x00000000, model64: 0x207fa00020803},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208030002080f, model64: 0x2080f00020816},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x208160002081e, model64: 0x2081e00020820},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b6, match64: 0x00000000, model64: 0x2082000020826},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b7, match64: 0x00000000, model64: 0x208260002082d},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b8, match64: 0x00000000, model64: 0x2082d00020838},
		modelTuple{type64: 0x2700000027, matchRI: 0x23b9, match64: 0x00000000, model64: 0x2083800020845},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ba, match64: 0x00000000, model64: 0x2084500020851},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bb, match64: 0x00000000, model64: 0x208510002085a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bc, match64: 0x00000000, model64: 0x2085a00020862},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bd, match64: 0x00000000, model64: 0x2086200020870},
		modelTuple{type64: 0x2700000027, matchRI: 0x23be, match64: 0x00000000, model64: 0x208700002087a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23bf, match64: 0x00000000, model64: 0x2087a00020886},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c0, match64: 0x00000000, model64: 0x2088600020892},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c1, match64: 0x00000000, model64: 0x208920002089d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c2, match64: 0x00000000, model64: 0x2089d000208a8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c3, match64: 0x00000000, model64: 0x208a8000208b7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c4, match64: 0x00000000, model64: 0x208b7000208c2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c5, match64: 0x00000000, model64: 0x208c2000208cd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c6, match64: 0x00000000, model64: 0x208cd000208dd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c7, match64: 0x00000000, model64: 0x208dd000208ec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x23c8, match64: 0x00000000, model64: 0x208ec000208f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23c9, match64: 0x00000000, model64: 0x208f7000208fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ca, match64: 0x00000000, model64: 0x208fa00020902},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cb, match64: 0x00000000, model64: 0x209020002090a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cc, match64: 0x00000000, model64: 0x2090a00020912},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cd, match64: 0x00000000, model64: 0x209120002091e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ce, match64: 0x00000000, model64: 0x2091e00020926},
		modelTuple{type64: 0x2700000027, matchRI: 0x23cf, match64: 0x00000000, model64: 0x2092600020932},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d0, match64: 0x00000000, model64: 0x209320002093e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d1, match64: 0x00000000, model64: 0x2093e00020946},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d2, match64: 0x00000000, model64: 0x2094600020952},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d3, match64: 0x00000000, model64: 0x2095200020962},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d4, match64: 0x00000000, model64: 0x209620002096e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d5, match64: 0x00000000, model64: 0x2096e00020976},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d6, match64: 0x00000000, model64: 0x2097600020986},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d7, match64: 0x00000000, model64: 0x2098600020992},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d8, match64: 0x00000000, model64: 0x209920002099c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23d9, match64: 0x00000000, model64: 0x2099c000209a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23da, match64: 0x00000000, model64: 0x209a7000209af},
		modelTuple{type64: 0x2700000027, matchRI: 0x23db, match64: 0x00000000, model64: 0x209af000209bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dc, match64: 0x00000000, model64: 0x209bb000209c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23dd, match64: 0x00000000, model64: 0x209c4000209d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x23de, match64: 0x00000000, model64: 0x209d4000209dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x23df, match64: 0x00000000, model64: 0x209dc000209e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e0, match64: 0x00000000, model64: 0x209e5000209ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e1, match64: 0x00000000, model64: 0x209ed000209f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e2, match64: 0x00000000, model64: 0x209f900020a08},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e3, match64: 0x00000000, model64: 0x20a0800020a14},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e4, match64: 0x00000000, model64: 0x20a1400020a1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e5, match64: 0x00000000, model64: 0x20a1c00020a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e6, match64: 0x00000000, model64: 0x20a2b00020a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e7, match64: 0x00000000, model64: 0x20a3e00020a46},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e8, match64: 0x00000000, model64: 0x20a4600020a59},
		modelTuple{type64: 0x2700000027, matchRI: 0x23e9, match64: 0x00000000, model64: 0x20a5900020a64},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ea, match64: 0x00000000, model64: 0x20a6400020a73},
		modelTuple{type64: 0x2700000027, matchRI: 0x23eb, match64: 0x00000000, model64: 0x20a7300020a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ec, match64: 0x00000000, model64: 0x20a8000020a89},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ed, match64: 0x00000000, model64: 0x20a8900020a91},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ee, match64: 0x00000000, model64: 0x20a9100020a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ef, match64: 0x00000000, model64: 0x20a9800020aa3},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f0, match64: 0x00000000, model64: 0x20aa300020aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f1, match64: 0x00000000, model64: 0x20aab00020ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f2, match64: 0x00000000, model64: 0x20ab700020abc},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f3, match64: 0x00000000, model64: 0x20abc00020ac1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f4, match64: 0x00000000, model64: 0x20ac100020acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f5, match64: 0x00000000, model64: 0x20acb00020ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f6, match64: 0x00000000, model64: 0x20ad100020ad7},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f7, match64: 0x00000000, model64: 0x20ad700020ae1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f8, match64: 0x00000000, model64: 0x20ae100020aeb},
		modelTuple{type64: 0x2700000027, matchRI: 0x23f9, match64: 0x00000000, model64: 0x20aeb00020af6},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fa, match64: 0x00000000, model64: 0x20af600020b01},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fb, match64: 0x00000000, model64: 0x20b0100020b0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fc, match64: 0x00000000, model64: 0x20b0b00020b11},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fd, match64: 0x00000000, model64: 0x20acb00020ad1},
		modelTuple{type64: 0x2700000027, matchRI: 0x23fe, match64: 0x00000000, model64: 0x20b1100020b1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x23ff, match64: 0x00000000, model64: 0x20b1a00020b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2400, match64: 0x00000000, model64: 0x20b1f00020b29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2401, match64: 0x00000000, model64: 0x20b2900020b2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2402, match64: 0x00000000, model64: 0x20b2e00020b37},
		modelTuple{type64: 0x2700000027, matchRI: 0x2403, match64: 0x00000000, model64: 0x20b3700020b40},
		modelTuple{type64: 0x2700000027, matchRI: 0x2404, match64: 0x00000000, model64: 0x20b4000020b49},
		modelTuple{type64: 0x2700000027, matchRI: 0x2405, match64: 0x00000000, model64: 0x20b4900020b4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2406, match64: 0x00000000, model64: 0x20b4e00020b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x2407, match64: 0x00000000, model64: 0x20b5400020b5c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2408, match64: 0x00000000, model64: 0x20b5c00020b62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2409, match64: 0x00000000, model64: 0x20b6200020b6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x240a, match64: 0x00000000, model64: 0x20b6b00020b74},
		modelTuple{type64: 0x2700000027, matchRI: 0x240b, match64: 0x00000000, model64: 0x20b7400020b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x240c, match64: 0x00000000, model64: 0x20b7a00020b7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x240d, match64: 0x00000000, model64: 0x20b7f00020b87},
		modelTuple{type64: 0x2700000027, matchRI: 0x240e, match64: 0x00000000, model64: 0x20b8700020b90},
		modelTuple{type64: 0x2700000027, matchRI: 0x240f, match64: 0x00000000, model64: 0x20b9000020b95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2410, match64: 0x00000000, model64: 0x20b9500020b9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2411, match64: 0x00000000, model64: 0x20b9e00020ba3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2412, match64: 0x00000000, model64: 0x20ba300020ba8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2413, match64: 0x00000000, model64: 0x20ba800020bb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2414, match64: 0x00000000, model64: 0x20bb000020bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2415, match64: 0x00000000, model64: 0x20bbf00020bce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2416, match64: 0x00000000, model64: 0x20bce00020bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2417, match64: 0x00000000, model64: 0x20bdd00020be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2418, match64: 0x00000000, model64: 0x20be500020bee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2419, match64: 0x00000000, model64: 0x20bee00020bfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x241a, match64: 0x00000000, model64: 0x20bfa00020c09},
		modelTuple{type64: 0x2700000027, matchRI: 0x241b, match64: 0x00000000, model64: 0x20c0900020c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x241c, match64: 0x00000000, model64: 0xb6fb0000b702},
		modelTuple{type64: 0x2700000027, matchRI: 0x241d, match64: 0x00000000, model64: 0x20c1600020c23},
		modelTuple{type64: 0x2700000027, matchRI: 0x241e, match64: 0x00000000, model64: 0x20c2300020c2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x241f, match64: 0x00000000, model64: 0x20c2a00020c35},
		modelTuple{type64: 0x2700000027, matchRI: 0x2420, match64: 0x00000000, model64: 0x20c3500020c3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2421, match64: 0x00000000, model64: 0x20c3c00020c47},
		modelTuple{type64: 0x2700000027, matchRI: 0x2422, match64: 0x00000000, model64: 0x20c4700020c53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2423, match64: 0x00000000, model64: 0x20c5300020c5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2424, match64: 0x00000000, model64: 0x20c5e00020c65},
		modelTuple{type64: 0x2700000027, matchRI: 0x2425, match64: 0x00000000, model64: 0x20c6500020c70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2426, match64: 0x00000000, model64: 0x20c7000020c77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2427, match64: 0x00000000, model64: 0x20c7700020c82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2428, match64: 0x00000000, model64: 0x20c8200020c8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2429, match64: 0x00000000, model64: 0x20c8c00020c93},
		modelTuple{type64: 0x2700000027, matchRI: 0x242a, match64: 0x00000000, model64: 0x20c9300020c9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x242b, match64: 0x00000000, model64: 0x20c9e00020ca6},
		modelTuple{type64: 0x2700000027, matchRI: 0x242c, match64: 0x00000000, model64: 0x20ca600020cae},
		modelTuple{type64: 0x2700000027, matchRI: 0x242d, match64: 0x00000000, model64: 0x20cae00020cb5},
		modelTuple{type64: 0x2700000027, matchRI: 0x242e, match64: 0x00000000, model64: 0x20cb500020cbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x242f, match64: 0x00000000, model64: 0x20cbd00020cc5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2430, match64: 0x00000000, model64: 0x20cc500020ccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2431, match64: 0x00000000, model64: 0x20ccd00020cd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2432, match64: 0x00000000, model64: 0x20cd800020ce3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2433, match64: 0x00000000, model64: 0x20ce300020cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2434, match64: 0x00000000, model64: 0x20cea00020cf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2435, match64: 0x00000000, model64: 0x20cf200020cfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2436, match64: 0x00000000, model64: 0x20cfb00020d03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2437, match64: 0x00000000, model64: 0x20d0300020d0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2438, match64: 0x00000000, model64: 0x20d0e00020d1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2439, match64: 0x00000000, model64: 0x20d1a00020d22},
		modelTuple{type64: 0x2700000027, matchRI: 0x243a, match64: 0x00000000, model64: 0x20d2200020d31},
		modelTuple{type64: 0x2700000027, matchRI: 0x243b, match64: 0x00000000, model64: 0x20bb000020bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x243c, match64: 0x00000000, model64: 0x20d3100020d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x243d, match64: 0x00000000, model64: 0x20d3a00020d42},
		modelTuple{type64: 0x2700000027, matchRI: 0x243e, match64: 0x00000000, model64: 0x20d4200020d4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x243f, match64: 0x00000000, model64: 0x20d4e00020d57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2440, match64: 0x00000000, model64: 0x20d5700020d61},
		modelTuple{type64: 0x2700000027, matchRI: 0x2441, match64: 0x00000000, model64: 0x20d6100020d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2442, match64: 0x00000000, model64: 0x20d6c00020d74},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2443, match64: 0x00000000, model64: 0x208ec000208f7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2444, match64: 0x00000000, model64: 0x20d7400020d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2445, match64: 0x00000000, model64: 0x20d7f00020d8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2446, match64: 0x00000000, model64: 0x20d8c00020d95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2447, match64: 0x00000000, model64: 0x20d9500020d9e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2448, match64: 0x00000000, model64: 0x20d9e00020da7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2449, match64: 0x00000000, model64: 0x20da700020db4},
		modelTuple{type64: 0x2700000027, matchRI: 0x244a, match64: 0x00000000, model64: 0x20db400020dc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x244b, match64: 0x00000000, model64: 0x20dc200020dcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x244c, match64: 0x00000000, model64: 0x20dcb00020dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x244d, match64: 0x00000000, model64: 0x20dd800020ddf},
		modelTuple{type64: 0x2700000027, matchRI: 0x244e, match64: 0x00000000, model64: 0x20ddf00020de4},
		modelTuple{type64: 0x2700000027, matchRI: 0x244f, match64: 0x00000000, model64: 0x20de400020dea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2450, match64: 0x00000000, model64: 0x20dea00020df1},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x20df100020df9, model64: 0x3d7200003d74},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2451, match64: 0x00000000, model64: 0x20df900020dfd},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2452, match64: 0x00000000, model64: 0x20dfd00020e05},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2453, match64: 0x00000000, model64: 0x20e0500020e0f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2454, match64: 0x00000000, model64: 0x20e0f00020e19},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2455, match64: 0x00000000, model64: 0x20e1900020e24},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2456, match64: 0x00000000, model64: 0x20e2400020e2a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2457, match64: 0x00000000, model64: 0x20e2a00020e30},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2458, match64: 0x00000000, model64: 0x20e3000020e37},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2459, match64: 0x00000000, model64: 0x20e3700020e3d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245a, match64: 0x00000000, model64: 0x20e3d00020e47},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245b, match64: 0x00000000, model64: 0x20e4700020e4d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245c, match64: 0x00000000, model64: 0x20e4d00020e5a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245d, match64: 0x00000000, model64: 0x20e5a00020e67},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245e, match64: 0x00000000, model64: 0x20e6700020e6d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x245f, match64: 0x00000000, model64: 0x20e6d00020e77},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2460, match64: 0x00000000, model64: 0x20e7700020e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2461, match64: 0x00000000, model64: 0x15aca00015ad0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2462, match64: 0x00000000, model64: 0x20e8400020e8b},
		modelTuple{type64: 0x38400000391, matchRI: 0x2463, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2464, match64: 0x00000000, model64: 0x20e8b00020e95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2465, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2466, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20e9c00020eab, model64: 0x20eab00020eb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2468, match64: 0x00000000, model64: 0x20eb200020eba},
		modelTuple{type64: 0x2700000027, matchRI: 0x246a, match64: 0x00000000, model64: 0x550200005504},
		modelTuple{type64: 0x2700000027, matchRI: 0x246b, match64: 0x00000000, model64: 0x20ebf00020ec5},
		modelTuple{type64: 0x2700000027, matchRI: 0x246c, match64: 0x00000000, model64: 0x20ec500020ecd},
		modelTuple{type64: 0x2700000027, matchRI: 0x246d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x246e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20ed700020ee3, model64: 0x20ee300020ef0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2470, match64: 0x00000000, model64: 0x20ef000020ef6},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x20ef600020efe, model64: 0x20efe00020f07},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x20f0700020f0f, model64: 0x20f0f00020f17},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x20f1700020f22, model64: 0x20f2200020f2d},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x20f2d00020f35, model64: 0x20f3500020f3d},
		modelTuple{type64: 0x24700000251, matchRI: 0x2471, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2472, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2473, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2474, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f4300020f4e, model64: 0x20f4e00020f52},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f5200020f5d, model64: 0x20f5d00020f62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f6200020f6c, model64: 0x20f6c00020f77},
		modelTuple{type64: 0x2700000027, matchRI: 0x2476, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2478, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2479, match64: 0x00000000, model64: 0x12df500012e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f8300020f89, model64: 0x20f8900020f96},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20f9600020f9f, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x247a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x247b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20faf00020fb5, model64: 0x20fb500020fbb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20fc000020fcf, model64: 0x20fcf00020fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x247e, match64: 0x00000000, model64: 0x20fd800020fe2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20fe200020fe7, model64: 0x20fe700020fed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x20fed00020ff6, model64: 0x129020001290b},
		modelTuple{type64: 0x2700000027, matchRI: 0x247f, match64: 0x00000000, model64: 0x20ff600020ffa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2480, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2481, match64: 0x00000000, model64: 0x20ffa00021004},
		modelTuple{type64: 0x2700000027, matchRI: 0x2482, match64: 0x00000000, model64: 0x210040002100e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2100e00021020, model64: 0x210200002102a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2484, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x210350002103c, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2486, match64: 0x00000000, model64: 0x2104100021046},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2105000021055},
		modelTuple{type64: 0x2700000027, matchRI: 0x2488, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x248a, match64: 0x00000000, model64: 0x2106200021069},
		modelTuple{type64: 0x2700000027, matchRI: 0x248b, match64: 0x00000000, model64: 0x2106900021072},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2107a00021084},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210870002108f, model64: 0x210870002108f},
		modelTuple{type64: 0x2700000027, matchRI: 0x248e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x248f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2490, match64: 0x00000000, model64: 0x2108f00021098},
		modelTuple{type64: 0x24300000245, matchRI: 0x2491, match64: 0x00000000, model64: 0x210980002109d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2492, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2493, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2495, match64: 0x00000000, model64: 0x12c1d00012c25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210a4000210ab, model64: 0x210a4000210ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210ab000210b3, model64: 0x210ab000210b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210b3000210bb, model64: 0x210b3000210bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2496, match64: 0x00000000, model64: 0x210bb000210c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2497, match64: 0x00000000, model64: 0x210c8000210cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210cf000210da, model64: 0x210da000210e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x210e3000210f5, model64: 0x210f5000210fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2498, match64: 0x00000000, model64: 0x210fb00021100},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2110000021108, model64: 0x2110800021111},
		modelTuple{type64: 0x24700000251, matchRI: 0x2499, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x249a, match64: 0x00000000, model64: 0x2111100021118},
		modelTuple{type64: 0x24700000251, matchRI: 0x249b, match64: 0x00000000, model64: 0x2111800021126},
		modelTuple{type64: 0x24700000251, matchRI: 0x249c, match64: 0x00000000, model64: 0x2112600021130},
		modelTuple{type64: 0x24700000251, matchRI: 0x249d, match64: 0x00000000, model64: 0x2113000021137},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2113700021144, model64: 0x2113700021144},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x2114400021152, model64: 0x2115200021160},
		modelTuple{type64: 0x24700000251, matchRI: 0x249e, match64: 0x00000000, model64: 0x2116000021169},
		modelTuple{type64: 0x24300000245, matchRI: 0x249f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x24a0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2117b00021184, model64: 0x211840002118d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2118d00021196, model64: 0x2118d00021196},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a5, match64: 0x00000000, model64: 0x2119600021198},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a7, match64: 0x00000000, model64: 0x2119e000211aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x24a9, match64: 0x00000000, model64: 0x211b0000211ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x24aa, match64: 0x00000000, model64: 0x211ba000211c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ab, match64: 0x00000000, model64: 0x211c3000211cb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x211d0000211d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ae, match64: 0x00000000, model64: 0x924c00009251},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211de000211ed, model64: 0x211ed000211f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x211f6000211fe, model64: 0x211fe00021207},
		modelTuple{type64: 0x2700000027, matchRI: 0x24af, match64: 0x00000000, model64: 0x2120700021214},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2121400021222, model64: 0x2121400021222},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212220002122c, model64: 0x212220002122c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2122c00021235, model64: 0x2122c00021235},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b0, match64: 0x00000000, model64: 0x2123500021243},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212430002124d, model64: 0x2124d00021257},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2125700021263, model64: 0x212630002126f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2126f00021273, model64: 0x2126f00021273},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212730002127a, model64: 0x2127a00021281},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24b1, match64: 0x00000000, model64: 0x212810002128c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24b2, match64: 0x00000000, model64: 0x2128c0002129d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x212b2000212bf},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24b9, match64: 0x00000000, model64: 0x212cd000212d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212dd000212e6, model64: 0x212dd000212e6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x212e6000212ef, model64: 0x212ef000212f8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x212f8000212fd, model64: 0x212f8000212fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x212fd00021308, model64: 0x213080002130e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24bc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2131700021321, model64: 0x11e2c00011e2e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x213210002132b, model64: 0x18a9c00018a9f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2132b00021337, model64: 0x10b2f00010b31},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2133700021343, model64: 0x10b2d00010b2f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x213430002134f, model64: 0x6bc600006bc8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x213580002136a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x213770002137b},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c2, match64: 0x00000000, model64: 0x5de800005dee},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c3, match64: 0x00000000, model64: 0x1e99c0001e9a5},
		modelTuple{type64: 0x24700000251, matchRI: 0x24c4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24c6, match64: 0x00000000, model64: 0x2138000021389},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2138900021396, model64: 0x21396000213a3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213a3000213b0, model64: 0x213b0000213bd},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c7, match64: 0x00000000, model64: 0x2138000021389},
		modelTuple{type64: 0x2700000027, matchRI: 0x24c8, match64: 0x00000000, model64: 0x213bd000213c3},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x213c3000213ce, model64: 0x213c3000213ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213ce000213d9, model64: 0x213ce000213d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213e0000213e5, model64: 0x213e5000213f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x213f0000213f5, model64: 0x213f500021400},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2140000021405, model64: 0x2140500021410},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2141000021414, model64: 0x214140002141e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2141e00021423, model64: 0x214230002142e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2142e00021433, model64: 0xdf3f0000df45},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2143300021438, model64: 0x2143800021443},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x214430002144a, model64: 0x2144a00021457},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x214570002145d, model64: 0x2145d00021469},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24ca, match64: 0x00000000, model64: 0x2146900021473},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24cb, match64: 0x00000000, model64: 0x2147300021482},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2148200021488, model64: 0x2148800021495},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x21495000214a4, model64: 0x214a4000214b2},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x24cc, match64: 0x00000000, model64: 0x214b2000214be},
		modelTuple{type64: 0x24300000245, matchRI: 0x24cd, match64: 0x00000000, model64: 0x214be000214c8},
		modelTuple{type64: 0x24300000245, matchRI: 0x24ce, match64: 0x00000000, model64: 0x214c8000214d2},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x214d2000214db, model64: 0x214db000214e5},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x214e5000214ed, model64: 0x214ed000214fa},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x214fa00021504, model64: 0x215040002150e},
		modelTuple{type64: 0x24300000245, matchRI: 0x24cf, match64: 0x00000000, model64: 0x2150e0002151f},
		modelTuple{type64: 0x24300000245, matchRI: 0x24d0, match64: 0x00000000, model64: 0xf20c0000f21d},
		modelTuple{type64: 0x24300000245, matchRI: 0x24d1, match64: 0x00000000, model64: 0x9eb300009ec4},
		modelTuple{type64: 0x24300000245, matchRI: 0x24d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x24d3, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2151f00021528, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24d6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x24d9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2153b00021546, model64: 0x2154600021551},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x215510002155e, model64: 0x2155e00021572},
		modelTuple{type64: 0x2700000027, matchRI: 0x24da, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24db, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24dd, match64: 0x00000000, model64: 0x2157b00021589},
		modelTuple{type64: 0x2700000027, matchRI: 0x24de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e0, match64: 0x00000000, model64: 0x215910002159d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2159d000215a6, model64: 0x215a6000215bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215bb000215ce, model64: 0x215ce000215e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215e1000215ed, model64: 0x215e1000215ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e2, match64: 0x00000000, model64: 0x215ed000215f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e3, match64: 0x00000000, model64: 0x215ed000215f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x215f700021603, model64: 0x216030002160e},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e5, match64: 0x00000000, model64: 0x2160e00021625},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e7, match64: 0x00000000, model64: 0x2162a00021636},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e8, match64: 0x00000000, model64: 0x2163600021641},
		modelTuple{type64: 0x2700000027, matchRI: 0x24e9, match64: 0x00000000, model64: 0x2164100021649},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ea, match64: 0x00000000, model64: 0x2164900021656},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2165600021661, model64: 0x216610002166d},
		modelTuple{type64: 0x24700000251, matchRI: 0x24eb, match64: 0x00000000, model64: 0x2166d00021678},
		modelTuple{type64: 0x24700000251, matchRI: 0x24ec, match64: 0x00000000, model64: 0x2167800021683},
		modelTuple{type64: 0x24700000251, matchRI: 0x24ed, match64: 0x00000000, model64: 0x216830002168f},
		modelTuple{type64: 0x24700000251, matchRI: 0x24ee, match64: 0x00000000, model64: 0x2168f0002169a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x24ef, match64: 0x00000000, model64: 0x2169a000216a7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x24f0, match64: 0x00000000, model64: 0x216a7000216bc},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x24f1, match64: 0x00000000, model64: 0x216bc000216c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216dd000216e7, model64: 0x216e7000216f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x216f1000216fd, model64: 0x216fd00021709},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2170900021714, model64: 0x217140002171f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24f6, match64: 0x00000000, model64: 0x2173200021741},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x217450002174a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fa, match64: 0x00000000, model64: 0x217570002175f},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fb, match64: 0x00000000, model64: 0x2175f00021771},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fc, match64: 0x00000000, model64: 0x2177100021780},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fd, match64: 0x00000000, model64: 0x2178000021792},
		modelTuple{type64: 0x2700000027, matchRI: 0x24fe, match64: 0x00000000, model64: 0x21792000217aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217aa000217c0, model64: 0x217c0000217d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x217d6000217e8, model64: 0x217e8000217fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x24ff, match64: 0x00000000, model64: 0x217fa0002180a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2500, match64: 0x00000000, model64: 0x2180a0002181b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2501, match64: 0x00000000, model64: 0x2181b0002182c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2502, match64: 0x00000000, model64: 0x2182c0002183d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2503, match64: 0x00000000, model64: 0x2183d00021848},
		modelTuple{type64: 0x2700000027, matchRI: 0x2504, match64: 0x00000000, model64: 0x2184800021858},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2185800021863, model64: 0x218630002186e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2186e0002187d, model64: 0x2187d0002188c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2188c000218a2, model64: 0x218a2000218b8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x218b8000218ca, model64: 0x218ca000218dc},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x218dc000218ee, model64: 0x218ee000218fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2505, match64: 0x00000000, model64: 0x218fb00021911},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2191100021916, model64: 0x2191600021921},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2193e0002194d},
		modelTuple{type64: 0x2700000027, matchRI: 0x250a, match64: 0x00000000, model64: 0x2194d00021955},
		modelTuple{type64: 0x2700000027, matchRI: 0x250b, match64: 0x00000000, model64: 0x219550002195c},
		modelTuple{type64: 0x2700000027, matchRI: 0x250c, match64: 0x00000000, model64: 0x2195c00021961},
		modelTuple{type64: 0x2700000027, matchRI: 0x250d, match64: 0x00000000, model64: 0x2196100021969},
		modelTuple{type64: 0x2700000027, matchRI: 0x250e, match64: 0x00000000, model64: 0x219690002196f},
		modelTuple{type64: 0x2700000027, matchRI: 0x250f, match64: 0x00000000, model64: 0x2196f00021973},
		modelTuple{type64: 0x2700000027, matchRI: 0x2510, match64: 0x00000000, model64: 0xa7c40000a7c6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2511, match64: 0x00000000, model64: 0x2197300021980},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x128a0000128a5, model64: 0x128a0000128a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2198700021990, model64: 0x2199000021992},
		modelTuple{type64: 0x2700000027, matchRI: 0x2513, match64: 0x00000000, model64: 0xe6770000e679},
		modelTuple{type64: 0x2700000027, matchRI: 0x2514, match64: 0x00000000, model64: 0x2199200021994},
		modelTuple{type64: 0x2700000027, matchRI: 0x2515, match64: 0x00000000, model64: 0x219940002199b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2199b000219aa, model64: 0x219aa000219b1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219b1000219be, model64: 0x219be000219c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2516, match64: 0x00000000, model64: 0x219c3000219c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x219c8000219d2, model64: 0x219d2000219d6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2517, match64: 0x00000000, model64: 0x219d6000219d9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x219d9000219e9, model64: 0x219e9000219f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2518, match64: 0x00000000, model64: 0x219f1000219f8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2519, match64: 0x00000000, model64: 0x219f800021a01},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21a0100021a08, model64: 0x21a0100021a08},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251a, match64: 0x00000000, model64: 0x21a0800021a14},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251b, match64: 0x00000000, model64: 0x21a1400021a1d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251c, match64: 0x00000000, model64: 0x21a1d00021a28},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251d, match64: 0x00000000, model64: 0x21a2800021a36},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251e, match64: 0x00000000, model64: 0x21a3600021a45},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x251f, match64: 0x00000000, model64: 0x21a4500021a53},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2520, match64: 0x00000000, model64: 0x21a5300021a63},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21a6300021a6f, model64: 0x21a6f00021a7c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21a7c00021a88, model64: 0x21a8800021a92},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21a9200021aa4, model64: 0x21aa400021aab},
		modelTuple{type64: 0x24300000245, matchRI: 0x2521, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2522, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2523, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ab400021ac1, model64: 0x21ac100021ace},
		modelTuple{type64: 0x2700000027, matchRI: 0x2525, match64: 0x00000000, model64: 0x21ace00021ad4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2526, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2529, match64: 0x00000000, model64: 0x21ae400021aed},
		modelTuple{type64: 0x2700000027, matchRI: 0x252a, match64: 0x00000000, model64: 0x21aed00021af1},
		modelTuple{type64: 0x2700000027, matchRI: 0x252b, match64: 0x00000000, model64: 0x21af100021b00},
		modelTuple{type64: 0x2700000027, matchRI: 0x252c, match64: 0x00000000, model64: 0x21b0000021b0e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x252d, match64: 0x00000000, model64: 0x2006100020069},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2530, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2531, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2533, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2534, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2536, match64: 0x00000000, model64: 0x21b3c00021b41},
		modelTuple{type64: 0x2700000027, matchRI: 0x2538, match64: 0x00000000, model64: 0xc0cb0000c0db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2539, match64: 0x00000000, model64: 0xd0d60000d0e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x253a, match64: 0x00000000, model64: 0x21b4800021b54},
		modelTuple{type64: 0x2700000027, matchRI: 0x253b, match64: 0x00000000, model64: 0x21b5400021b61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21b7300021b7d, model64: 0x21b7d00021b8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x253c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x253e, match64: 0x00000000, model64: 0x21b9000021b99},
		modelTuple{type64: 0x2700000027, matchRI: 0x253f, match64: 0x00000000, model64: 0x21b9900021ba3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2540, match64: 0x00000000, model64: 0x21ba300021bac},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21bb600021bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2542, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21bc700021bcb, model64: 0x21bcb00021bd2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21bd200021bd6, model64: 0x21bd600021bdd},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2544, match64: 0x00000000, model64: 0x21bdd00021be3},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21be300021be7, model64: 0x21be700021bed},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21bed00021bf1, model64: 0x21bf100021bf7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2545, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21bf700021c02, model64: 0x21bf700021c02},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c0200021c06, model64: 0x85fe00008604},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c0600021c0a, model64: 0x21c0a00021c11},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1100021c15, model64: 0x58400000586},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1500021c19, model64: 0x6bef00006bf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1900021c1d, model64: 0x16cc500016cc7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c1d00021c21, model64: 0x21c2100021c2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c2a00021c2e, model64: 0x21c2e00021c33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c3300021c37, model64: 0x21c3700021c3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2546, match64: 0x00000000, model64: 0x21c3d00021c41},
		modelTuple{type64: 0x2700000027, matchRI: 0x2547, match64: 0x00000000, model64: 0x21c4100021c45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2548, match64: 0x00000000, model64: 0x158390001583c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2549, match64: 0x00000000, model64: 0x21c4500021c49},
		modelTuple{type64: 0x2700000027, matchRI: 0x254a, match64: 0x00000000, model64: 0x21c4900021c51},
		modelTuple{type64: 0x2700000027, matchRI: 0x254b, match64: 0x00000000, model64: 0xcaf00000cb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x254c, match64: 0x00000000, model64: 0x21c5100021c56},
		modelTuple{type64: 0x2700000027, matchRI: 0x254d, match64: 0x00000000, model64: 0x21c5600021c59},
		modelTuple{type64: 0x2700000027, matchRI: 0x254e, match64: 0x00000000, model64: 0x103d0000103d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x254f, match64: 0x00000000, model64: 0x21c5900021c5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2550, match64: 0x00000000, model64: 0x21c5f00021c66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c6600021c71, model64: 0x21c7100021c78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c7800021c81, model64: 0xba6e0000ba73},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c8100021c87, model64: 0x21c8100021c87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c8700021c8e, model64: 0x21c8700021c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2551, match64: 0x00000000, model64: 0x1fa380001fa3e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c8e00021c96, model64: 0x21c9600021c9e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21c9e00021ca7, model64: 0x21ca700021cb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2552, match64: 0x00000000, model64: 0x21cb000021cba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cba00021cc2, model64: 0x21cba00021cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2553, match64: 0x00000000, model64: 0x21cc200021ccb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2554, match64: 0x00000000, model64: 0x21ccb00021cd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2555, match64: 0x00000000, model64: 0x21cd700021ce0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2556, match64: 0x00000000, model64: 0x21ce000021ce7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21ce700021cf0, model64: 0x21cf000021cf9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21cf900021cfe, model64: 0x21cfe00021d03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d0300021d0b, model64: 0x21d0b00021d13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d1300021d1c, model64: 0x21d1c00021d25},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d2500021d2d, model64: 0x21d2d00021d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x2557, match64: 0x00000000, model64: 0x21d3500021d3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2558, match64: 0x00000000, model64: 0xe8080000e80c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d3a00021d3f, model64: 0x21d3a00021d3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d3f00021d46, model64: 0x21d4600021d4d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d4d00021d53, model64: 0x1fdbc0001fdc2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d5300021d5a, model64: 0x21d5300021d5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2559, match64: 0x00000000, model64: 0x21d5a00021d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x255a, match64: 0x00000000, model64: 0x60e6000060e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x255b, match64: 0x00000000, model64: 0x21d6200021d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x255c, match64: 0x00000000, model64: 0x21d6c00021d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x255d, match64: 0x00000000, model64: 0x21d7a00021d85},
		modelTuple{type64: 0x2700000027, matchRI: 0x255e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x255f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2560, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2562, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2563, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2565, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2566, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2568, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21d9800021da0, model64: 0x21d9800021da0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2569, match64: 0x00000000, model64: 0x21da000021da8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21da800021db0, model64: 0x21da800021db0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x21dc700021dd1},
		modelTuple{type64: 0x2700000027, matchRI: 0x256e, match64: 0x00000000, model64: 0x21dd600021dde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dde00021de7, model64: 0x21de700021df0},
		modelTuple{type64: 0x2700000027, matchRI: 0x256f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2570, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2573, match64: 0x00000000, model64: 0x21dfb00021dff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21dff00021e04, model64: 0x21dff00021e04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e0400021e09, model64: 0x21e0400021e09},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e0900021e0d, model64: 0x21e0900021e0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2574, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2575, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2577, match64: 0x00000000, model64: 0x802e00008035},
		modelTuple{type64: 0x2700000027, matchRI: 0x2578, match64: 0x00000000, model64: 0x21e1400021e1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2579, match64: 0x00000000, model64: 0x21e1e00021e2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x257a, match64: 0x00000000, model64: 0x21e2a00021e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x257b, match64: 0x00000000, model64: 0x21e3100021e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257c, match64: 0x00000000, model64: 0x21e3c00021e42},
		modelTuple{type64: 0x2700000027, matchRI: 0x257d, match64: 0x00000000, model64: 0x21e4200021e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x257e, match64: 0x00000000, model64: 0x21e4600021e4c},
		modelTuple{type64: 0x2700000027, matchRI: 0x257f, match64: 0x00000000, model64: 0x21e4c00021e53},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e5300021e5d, model64: 0x85c3000085cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e5d00021e67, model64: 0x21e6700021e71},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e7100021e78, model64: 0x21e7800021e7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e7f00021e84, model64: 0x21e7f00021e84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21e8400021e8e, model64: 0x21e8e00021e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x2580, match64: 0x00000000, model64: 0x21e9800021eaa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21eaa00021ebd, model64: 0x21eaa00021ebd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2581, match64: 0x00000000, model64: 0x21ebd00021ecb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2582, match64: 0x00000000, model64: 0x21ecb00021ed3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2583, match64: 0x00000000, model64: 0x21ed300021edd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2584, match64: 0x00000000, model64: 0x21edd00021ee6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2585, match64: 0x00000000, model64: 0x21ee600021ef3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2586, match64: 0x00000000, model64: 0x21ef300021efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2587, match64: 0x00000000, model64: 0x21efc00021f05},
		modelTuple{type64: 0x2700000027, matchRI: 0x2588, match64: 0x00000000, model64: 0x21f0500021f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2589, match64: 0x00000000, model64: 0x21f0c00021f14},
		modelTuple{type64: 0x2700000027, matchRI: 0x258a, match64: 0x00000000, model64: 0x21f1400021f1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x258b, match64: 0x00000000, model64: 0x21f1d00021f28},
		modelTuple{type64: 0x2700000027, matchRI: 0x258c, match64: 0x00000000, model64: 0x21f2800021f34},
		modelTuple{type64: 0x2700000027, matchRI: 0x258d, match64: 0x00000000, model64: 0x21f3400021f3c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x258e, match64: 0x00000000, model64: 0x21f3c00021f47},
		modelTuple{type64: 0x2700000027, matchRI: 0x258f, match64: 0x00000000, model64: 0x21f4700021f4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2590, match64: 0x00000000, model64: 0x21f4e00021f58},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21f5800021f5e, model64: 0x21f5800021f5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2591, match64: 0x00000000, model64: 0x117a7000117af},
		modelTuple{type64: 0x2700000027, matchRI: 0x2592, match64: 0x00000000, model64: 0x5d3200005d39},
		modelTuple{type64: 0x2700000027, matchRI: 0x2593, match64: 0x00000000, model64: 0x930a00009315},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2594, match64: 0x00000000, model64: 0x21f5e00021f66},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x21f6600021f71, model64: 0x21f6600021f71},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2595, match64: 0x00000000, model64: 0x494d00004953},
		modelTuple{type64: 0x2700000027, matchRI: 0x2596, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2597, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2598, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x259a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x259b, match64: 0x00000000, model64: 0x21f7500021f82},
		modelTuple{type64: 0x2700000027, matchRI: 0x259c, match64: 0x00000000, model64: 0x21f8200021f94},
		modelTuple{type64: 0x2700000027, matchRI: 0x259d, match64: 0x00000000, model64: 0x21f9400021fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x259e, match64: 0x00000000, model64: 0x21fa600021fb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x21fb800021fc0, model64: 0x21fc000021fd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x259f, match64: 0x00000000, model64: 0x21fd300021fe5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a0, match64: 0x00000000, model64: 0x21fe500021ff7},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a1, match64: 0x00000000, model64: 0x21ff70002200a},
		modelTuple{type64: 0x24700000251, matchRI: 0x25a2, match64: 0x00000000, model64: 0x2200a00022021},
		modelTuple{type64: 0x24700000251, matchRI: 0x25a3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2202600022032, model64: 0x220320002203e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2204a00022053, model64: 0x220530002205e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2205e00022066, model64: 0x220660002206e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a8, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25a9, match64: 0x00000000, model64: 0x2207c00022083},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220830002208b, model64: 0x220830002208b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2208b00022095, model64: 0x2208b00022095},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220950002209e, model64: 0x220950002209e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2209e000220aa, model64: 0x220aa000220b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220b6000220c0, model64: 0x220b6000220c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220c0000220ca, model64: 0x220ca000220d4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220d4000220de, model64: 0x220de000220e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220e8000220f0, model64: 0x220e8000220f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220f0000220f7, model64: 0x220f7000220fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x25aa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x220fe00022108, model64: 0x2210800022112},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221120002211d, model64: 0x2211d00022128},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ab, match64: 0x00000000, model64: 0x2212800022134},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x3d4800003d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ae, match64: 0x00000000, model64: 0x2214200022144},
		modelTuple{type64: 0x2700000027, matchRI: 0x25af, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b4, match64: 0x00000000, model64: 0x2215c00022166},
		modelTuple{type64: 0x2700000027, matchRI: 0x25b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221720002217b, model64: 0x2217b00022194},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x221940002219b, model64: 0x2219b000221af},
		modelTuple{type64: 0x24300000245, matchRI: 0x25b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x25b9, match64: 0x00000000, model64: 0x221b6000221bc},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x25ba, match64: 0x00000000, model64: 0x221bc000221c5},
		modelTuple{type64: 0x24300000245, matchRI: 0x25bb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x25bc, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x24300000245, matchRI: 0x25bd, match64: 0x00000000, model64: 0x221c5000221cc},
		modelTuple{type64: 0x24300000245, matchRI: 0x25be, match64: 0x00000000, model64: 0x221cc000221d4},
		modelTuple{type64: 0x24300000245, matchRI: 0x25bf, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c0, match64: 0x00000000, model64: 0x221d4000221df},
		modelTuple{type64: 0x8e00000099, matchRI: 0x25c1, match64: 0x00000000, model64: 0x221df000221e6},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x221e6000221fc, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2220300022207, model64: 0x222070002220f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2220f00022214, model64: 0x87f4000087f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2221400022218, model64: 0x2221800022221},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2222100022225, model64: 0x222250002222e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2222e00022232, model64: 0x222320002223b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2223b0002223f, model64: 0x2223b0002223f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2223f00022243, model64: 0x222430002224f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2224f00022253, model64: 0x222530002225c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2225c00022261, model64: 0x2226100022265},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2226500022269, model64: 0x168470001684a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222690002226d, model64: 0x2226d00022274},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c4, match64: 0x00000000, model64: 0x222870002228a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222920002229d, model64: 0x2229d000222aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x1eaea0001eaf2, model64: 0x1eaf20001eafb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x108600001086b, model64: 0x108600001086b},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25c9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25cb, match64: 0x00000000, model64: 0x222b5000222bd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222bd000222c1, model64: 0x222bd000222c1},
		modelTuple{type64: 0x7130000071d, matchRI: 0x25cd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x222db000222e1, model64: 0x222e1000222e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d4, match64: 0x00000000, model64: 0x222ec000222f4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x223020002230b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2231d00022329},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223350002233f, model64: 0x2233f00022349},
		modelTuple{type64: 0x2700000027, matchRI: 0x25d9, match64: 0x00000000, model64: 0x223490002234e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x25dd, match64: 0x00000000, model64: 0x994f0000995a},
		modelTuple{type64: 0x24300000245, matchRI: 0x25de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e1, match64: 0x00000000, model64: 0x223620002236d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e2, match64: 0x00000000, model64: 0x1792b00017933},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e3, match64: 0x00000000, model64: 0x2236d00022373},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2237300022379, model64: 0x2237300022379},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2237900022380, model64: 0x2238000022387},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x223870002238e, model64: 0x2238e00022395},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e5, match64: 0x00000000, model64: 0x82d9000082dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x25e6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2239f000223a9, model64: 0x223a9000223ab},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223b9000223bf, model64: 0x223bf000223c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223c5000223ca, model64: 0x223ca000223d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ea, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25eb, match64: 0x00000000, model64: 0x223d5000223dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ec, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25ed, match64: 0x00000000, model64: 0xe6910000e699},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x223f3000223fd, model64: 0x223fd00022407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2240700022411, model64: 0x224110002241b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2241b00022424, model64: 0x224240002242d},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f1, match64: 0x00000000, model64: 0x2242d0002243a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2243a00022442, model64: 0x224420002244a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2245300022457},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f4, match64: 0x00000000, model64: 0x8b1900008b1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f5, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f6, match64: 0x00000000, model64: 0x2245e00022463},
		modelTuple{type64: 0x2700000027, matchRI: 0x25f7, match64: 0x00000000, model64: 0x2245300022457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x224720002247a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224830002248d, model64: 0x2248d0002248e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x25fd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x224b1000224b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2600, match64: 0x00000000, model64: 0x224b9000224c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2601, match64: 0x00000000, model64: 0x224c6000224d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2602, match64: 0x00000000, model64: 0x224d2000224d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x224d9000224e0, model64: 0x224e0000224ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2604, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2606, match64: 0x00000000, model64: 0x224fa00022507},
		modelTuple{type64: 0x2700000027, matchRI: 0x2607, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2609, match64: 0x00000000, model64: 0x1940000019b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x260c, match64: 0x00000000, model64: 0x2251d00022527},
		modelTuple{type64: 0x2700000027, matchRI: 0x260d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2610, match64: 0x00000000, model64: 0x225360002254a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2611, match64: 0x00000000, model64: 0x2254a00022558},
		modelTuple{type64: 0x2700000027, matchRI: 0x2612, match64: 0x00000000, model64: 0x225580002255d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2614, match64: 0x00000000, model64: 0x225630002256d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2615, match64: 0x00000000, model64: 0x2256d0002257a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2617, match64: 0x00000000, model64: 0x225810002258c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2258c00022593, model64: 0x22593000225a0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225a0000225a7, model64: 0x225a7000225bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225bb000225c4, model64: 0x225c4000225d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x225d5000225db, model64: 0x225db000225e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2618, match64: 0x00000000, model64: 0x225e5000225ef},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x225ef000225f6, model64: 0x225f600022606},
		modelTuple{type64: 0x2700000027, matchRI: 0x261a, match64: 0x00000000, model64: 0x2260c00022617},
		modelTuple{type64: 0x2700000027, matchRI: 0x261b, match64: 0x00000000, model64: 0x226170002261f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2261f00022625, model64: 0x2261f00022625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226250002262d, model64: 0x226250002262d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2262d00022633, model64: 0x2262d00022633},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226330002263c, model64: 0x226330002263c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2263c00022645, model64: 0x1d7c00001d7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x226450002264b, model64: 0x6ab800006aba},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2264b00022652, model64: 0x108cb000108cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x261c, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x261d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x261e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2265900022664},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2622, match64: 0x00000000, model64: 0x226700002267d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2623, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2624, match64: 0x00000000, model64: 0x2267d00022688},
		modelTuple{type64: 0x2700000027, matchRI: 0x2625, match64: 0x00000000, model64: 0x2268800022697},
		modelTuple{type64: 0x2700000027, matchRI: 0x2626, match64: 0x00000000, model64: 0x22697000226a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2627, match64: 0x00000000, model64: 0x226a1000226b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2628, match64: 0x00000000, model64: 0x226b4000226c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2629, match64: 0x00000000, model64: 0x226c3000226c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x262a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x262b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x262c, match64: 0x00000000, model64: 0x226c9000226d0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x262d, match64: 0x00000000, model64: 0x226d0000226de},
		modelTuple{type64: 0x24700000251, matchRI: 0x262f, match64: 0x00000000, model64: 0x226e3000226ea},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x226ea000226f4, model64: 0x226f4000226fd},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x226fd00022707, model64: 0x2270700022713},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x227130002271d, model64: 0x2271d0002272b},
		modelTuple{type64: 0x24700000251, matchRI: 0x2630, match64: 0x00000000, model64: 0x2272b0002273a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2631, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2632, match64: 0x00000000, model64: 0x1899300018996},
		modelTuple{type64: 0x2700000027, matchRI: 0x2633, match64: 0x00000000, model64: 0x2274a0002274f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2634, match64: 0x00000000, model64: 0x2274f00022757},
		modelTuple{type64: 0x2700000027, matchRI: 0x2635, match64: 0x00000000, model64: 0x2275700022761},
		modelTuple{type64: 0x2700000027, matchRI: 0x2636, match64: 0x00000000, model64: 0x2276100022769},
		modelTuple{type64: 0x2700000027, matchRI: 0x2637, match64: 0x00000000, model64: 0x2276900022772},
		modelTuple{type64: 0x2700000027, matchRI: 0x2638, match64: 0x00000000, model64: 0x1a1300001a17},
		modelTuple{type64: 0x2700000027, matchRI: 0x2639, match64: 0x00000000, model64: 0x227720002277a},
		modelTuple{type64: 0x2700000027, matchRI: 0x263a, match64: 0x00000000, model64: 0x2277a00022786},
		modelTuple{type64: 0x2700000027, matchRI: 0x263b, match64: 0x00000000, model64: 0x227860002278d},
		modelTuple{type64: 0x2700000027, matchRI: 0x263c, match64: 0x00000000, model64: 0x2278d00022794},
		modelTuple{type64: 0x2700000027, matchRI: 0x263d, match64: 0x00000000, model64: 0x227940002279c},
		modelTuple{type64: 0x2700000027, matchRI: 0x263e, match64: 0x00000000, model64: 0x2279c000227a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x263f, match64: 0x00000000, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2640, match64: 0x00000000, model64: 0x227a5000227b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2641, match64: 0x00000000, model64: 0x227b0000227bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2642, match64: 0x00000000, model64: 0x227bc000227cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2643, match64: 0x00000000, model64: 0x227cb000227d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2644, match64: 0x00000000, model64: 0x227d6000227e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2645, match64: 0x00000000, model64: 0x227e2000227e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2646, match64: 0x00000000, model64: 0x227e7000227ef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2647, match64: 0x00000000, model64: 0x227ef000227fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2648, match64: 0x00000000, model64: 0x2261f00022625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x227fd0002280a, model64: 0x227fd0002280a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2649, match64: 0x00000000, model64: 0x2280a00022814},
		modelTuple{type64: 0x2700000027, matchRI: 0x264a, match64: 0x00000000, model64: 0x228140002281e},
		modelTuple{type64: 0x2700000027, matchRI: 0x264b, match64: 0x00000000, model64: 0x2281e00022824},
		modelTuple{type64: 0x2700000027, matchRI: 0x264c, match64: 0x00000000, model64: 0x228240002282a},
		modelTuple{type64: 0x2700000027, matchRI: 0x264d, match64: 0x00000000, model64: 0x2282a0002282f},
		modelTuple{type64: 0x2700000027, matchRI: 0x264e, match64: 0x00000000, model64: 0x2282f00022835},
		modelTuple{type64: 0x2700000027, matchRI: 0x264f, match64: 0x00000000, model64: 0x1271100012715},
		modelTuple{type64: 0x2700000027, matchRI: 0x2650, match64: 0x00000000, model64: 0x13f5d00013f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2651, match64: 0x00000000, model64: 0x228350002283e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2652, match64: 0x00000000, model64: 0x2283e00022846},
		modelTuple{type64: 0x2700000027, matchRI: 0x2653, match64: 0x00000000, model64: 0x228460002284b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2654, match64: 0x00000000, model64: 0x2284b00022859},
		modelTuple{type64: 0x2700000027, matchRI: 0x2655, match64: 0x00000000, model64: 0x87fc00008804},
		modelTuple{type64: 0x2700000027, matchRI: 0x2656, match64: 0x00000000, model64: 0x881e00008824},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2657, match64: 0x00000000, model64: 0x2285900022865},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2658, match64: 0x00000000, model64: 0x2286500022870},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2659, match64: 0x00000000, model64: 0x228700002287b},
		modelTuple{type64: 0x2700000027, matchRI: 0x265a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x265b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x228800002288b, model64: 0x2288b0002289a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2289a000228a8, model64: 0x228a8000228af},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x228b5000228bc, model64: 0x228bc000228c8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x228c8000228cc, model64: 0x228cc000228d8},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x228d8000228de, model64: 0x228de000228e5},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x228e5000228f4, model64: 0x228f400022900},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2290000022910, model64: 0x229100002291d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x265e, match64: 0x00000000, model64: 0x2291d00022924},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x265f, match64: 0x00000000, model64: 0x2291d00022924},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2292400022930, model64: 0x2293000022942},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2294200022949, model64: 0x2294900022952},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2295200022959, model64: 0x2295900022963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229630002296a, model64: 0x2296a00022974},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229740002297b, model64: 0x2297b00022985},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229850002298c, model64: 0x2298c00022996},
		modelTuple{type64: 0x2700000027, matchRI: 0x2660, match64: 0x00000000, model64: 0x22996000229a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2661, match64: 0x00000000, model64: 0x229a1000229aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2662, match64: 0x00000000, model64: 0x1422000014228},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229aa000229bc, model64: 0x229aa000229bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2663, match64: 0x00000000, model64: 0x229bc000229c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2664, match64: 0x00000000, model64: 0x229c9000229d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229d2000229e2, model64: 0x229e2000229eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x229eb000229fa, model64: 0x229fa00022a02},
		modelTuple{type64: 0x2700000027, matchRI: 0x2665, match64: 0x00000000, model64: 0x22a0200022a0b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2666, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: 0x2667, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x24300000245, matchRI: 0x2668, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22a1000022a20, model64: 0x22a2000022a2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x266a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x22a3c00022a47},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x22a4f00022a5d, model64: 0x22a5d00022a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x266e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x266f, match64: 0x00000000, model64: 0x22a6200022a67},
		modelTuple{type64: 0x2700000027, matchRI: 0x2670, match64: 0x00000000, model64: 0x22a6700022a6f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2671, match64: 0x00000000, model64: 0x22a6f00022a75},
		modelTuple{type64: 0x2700000027, matchRI: 0x2672, match64: 0x00000000, model64: 0x22a7500022a83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2673, match64: 0x00000000, model64: 0x22a8300022a8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2674, match64: 0x00000000, model64: 0x22a8c00022a95},
		modelTuple{type64: 0x2700000027, matchRI: 0x2675, match64: 0x00000000, model64: 0x22a9500022aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2676, match64: 0x00000000, model64: 0x22aa000022aab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2677, match64: 0x00000000, model64: 0x22aab00022ab4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2678, match64: 0x00000000, model64: 0x22ab400022abc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2679, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x267a, match64: 0x00000000, model64: 0x22abc00022acb},
		modelTuple{type64: 0x2700000027, matchRI: 0x267b, match64: 0x00000000, model64: 0x22acb00022add},
		modelTuple{type64: 0x2700000027, matchRI: 0x267c, match64: 0x00000000, model64: 0x22add00022aee},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x267f, match64: 0x00000000, model64: 0x22afd00022b01},
		modelTuple{type64: 0x24700000251, matchRI: 0x2680, match64: 0x00000000, model64: 0x22b0100022b08},
		modelTuple{type64: 0x24700000251, matchRI: 0x2681, match64: 0x00000000, model64: 0x22b0800022b14},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22b1400022b1b, model64: 0x22b1b00022b26},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2682, match64: 0x00000000, model64: 0x22b2600022b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2683, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2684, match64: 0x00000000, model64: 0x22b3000022b4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2685, match64: 0x00000000, model64: 0x22b5100022b59},
		modelTuple{type64: 0x2700000027, matchRI: 0x2686, match64: 0x00000000, model64: 0xaced0000acf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2687, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b5e00022b68, model64: 0x22b6800022b6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b6b00022b76, model64: 0x22b7600022b79},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b7900022b84, model64: 0x22b8400022b87},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b8700022b92, model64: 0x22b9200022b95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22b9500022ba0, model64: 0x22ba000022ba3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ba300022bad, model64: 0x22bad00022bb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22bb000022bbb, model64: 0x22bbb00022bbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2689, match64: 0x00000000, model64: 0x22bbe00022bc1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x268b, match64: 0x00000000, model64: 0x22bcb00022bd2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x268e, match64: 0x00000000, model64: 0x1733c0001733f},
		modelTuple{type64: 0x2700000027, matchRI: 0x268f, match64: 0x00000000, model64: 0x22bd700022bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2690, match64: 0x00000000, model64: 0x22bdd00022be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2691, match64: 0x00000000, model64: 0x49470000494d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2693, match64: 0x00000000, model64: 0x22be800022bec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2694, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2696, match64: 0x00000000, model64: 0x22bfd00022c07},
		modelTuple{type64: 0x2700000027, matchRI: 0x2697, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c1300022c22, model64: 0x22c2200022c26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c2600022c2d, model64: 0x22c2600022c2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x269a, match64: 0x00000000, model64: 0x22c3800022c4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22c4b00022c57, model64: 0x22c5700022c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x269b, match64: 0x00000000, model64: 0x22c6e00022c7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x269d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x269e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x269f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a2, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a3, match64: 0x00000000, model64: 0x22c9300022c9b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a4, match64: 0x00000000, model64: 0x22c9b00022ca2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ca200022ca7, model64: 0x22ca200022ca7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a5, match64: 0x00000000, model64: 0x22ca700022caa},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a6, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a8, match64: 0x00000000, model64: 0x22caf00022cb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x26a9, match64: 0x00000000, model64: 0x22cb900022cbe},
		modelTuple{type64: 0x2700000027, matchRI: 0x26aa, match64: 0x00000000, model64: 0x22cbe00022ccc},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ab, match64: 0x00000000, model64: 0x22ccc00022cd5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ac, match64: 0x00000000, model64: 0x22cd500022cdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ad, match64: 0x00000000, model64: 0x22cdd00022ce4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ae, match64: 0x00000000, model64: 0x22ce400022cea},
		modelTuple{type64: 0x2700000027, matchRI: 0x26af, match64: 0x00000000, model64: 0x22cea00022cf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b1, match64: 0x00000000, model64: 0x22cf100022d02},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b2, match64: 0x00000000, model64: 0x49470000494d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b3, match64: 0x00000000, model64: 0x22d0200022d0c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x26b4, match64: 0x00000000, model64: 0x22d0200022d0c},
		modelTuple{type64: 0x24300000245, matchRI: 0x26b5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d1000022d16, model64: 0x1a7270001a72a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d1600022d1c, model64: 0x1728c00017291},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d1c00022d22, model64: 0x22d2200022d2b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d2b00022d31, model64: 0x1726e00017275},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d3100022d38, model64: 0x22d3800022d40},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d4000022d47, model64: 0x22d4700022d53},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d5300022d5a, model64: 0x22d5a00022d67},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x22d6700022d6e, model64: 0x22d6e00022d77},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x26b7, match64: 0x00000000, model64: 0x22d7700022d7d},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22d7d00022d83, model64: 0x22d8300022d89},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22d8900022d8f, model64: 0x22d8f00022d95},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22d9500022d9b, model64: 0x22d9b00022da3},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22da300022da9, model64: 0x22da900022db1},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22db100022db7, model64: 0x22db700022dc3},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x22dc300022dc9, model64: 0x22dc900022dd0},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dd000022dd6, model64: 0x103c7000103c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x26b9, match64: 0x00000000, model64: 0x22dd600022dde},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ba, match64: 0x00000000, model64: 0x22dde00022de8},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bb, match64: 0x00000000, model64: 0x22de800022dec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dec00022df2, model64: 0x22df200022dfa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22dfa00022e00, model64: 0x22e0000022e0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e0d00022e13, model64: 0x22e1300022e17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e1700022e1e, model64: 0x22e1e00022e27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e2700022e2d, model64: 0x22e2d00022e32},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bc, match64: 0x00000000, model64: 0x22e3200022e39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e3900022e40, model64: 0x22e4000022e47},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e4700022e4d, model64: 0x22e4d00022e52},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bd, match64: 0x00000000, model64: 0x22e5200022e5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e5a00022e61, model64: 0x22e6100022e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x26be, match64: 0x00000000, model64: 0x22e6900022e6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26bf, match64: 0x00000000, model64: 0x22e6d00022e73},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c0, match64: 0x00000000, model64: 0x22e7300022e79},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c1, match64: 0x00000000, model64: 0x22e7900022e82},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c2, match64: 0x00000000, model64: 0x22e8200022e8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c3, match64: 0x00000000, model64: 0x22e8c00022e93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22e9300022e99, model64: 0x22e9900022ea4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ea400022eaa, model64: 0x22eaa00022eb1},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c4, match64: 0x00000000, model64: 0x22eb100022eb8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22eb800022ebe, model64: 0x22ebe00022ec6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ec600022ecc, model64: 0x22ecc00022ed7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c5, match64: 0x00000000, model64: 0x22ed700022ede},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22ede00022ee4, model64: 0x22ee400022eef},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c6, match64: 0x00000000, model64: 0x22eef00022ef6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c7, match64: 0x00000000, model64: 0x22ef600022eff},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c8, match64: 0x00000000, model64: 0x22eff00022f06},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f0600022f0d, model64: 0x22f0d00022f15},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f1500022f22, model64: 0x22f1500022f22},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f2200022f2e, model64: 0x22f2200022f2e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26c9, match64: 0x00000000, model64: 0x22f2e00022f34},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f3400022f3a, model64: 0x22f3a00022f45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f4500022f4b, model64: 0x22f4b00022f5a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f5a00022f60, model64: 0x22f6000022f6a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ca, match64: 0x00000000, model64: 0x22f6a00022f74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f7400022f7a, model64: 0x22f7a00022f93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22f9300022f98, model64: 0x22f9800022fa6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fa600022fac, model64: 0x22fac00022fb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fb900022fbf, model64: 0x22fbf00022fcd},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cb, match64: 0x00000000, model64: 0x22fcd00022fdb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22fdb00022fe1, model64: 0x22fe100022feb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x22feb00022ff2, model64: 0x22ff200023001},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2300100023007, model64: 0x2300700023017},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230170002301d, model64: 0x2301d0002302a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cc, match64: 0x00000000, model64: 0x2302a00023035},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cd, match64: 0x00000000, model64: 0x230350002303e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ce, match64: 0x00000000, model64: 0x2303e00023046},
		modelTuple{type64: 0x2700000027, matchRI: 0x26cf, match64: 0x00000000, model64: 0x2304600023051},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d0, match64: 0x00000000, model64: 0x2305100023059},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d1, match64: 0x00000000, model64: 0x2305900023063},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d2, match64: 0x00000000, model64: 0x230630002306f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2306f00023075, model64: 0x230750002307f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d3, match64: 0x00000000, model64: 0x2307f0002308e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d4, match64: 0x00000000, model64: 0x2308e00023098},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d5, match64: 0x00000000, model64: 0x23098000230a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d6, match64: 0x00000000, model64: 0x230a5000230ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d7, match64: 0x00000000, model64: 0x230ac000230b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d8, match64: 0x00000000, model64: 0x230b4000230bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x26d9, match64: 0x00000000, model64: 0x230bf000230c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230c6000230cd, model64: 0x230c6000230cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x26da, match64: 0x00000000, model64: 0x230cd000230d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230d5000230db, model64: 0x230db000230e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26db, match64: 0x00000000, model64: 0x230e6000230f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dc, match64: 0x00000000, model64: 0x230f0000230f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x26dd, match64: 0x00000000, model64: 0x230f7000230fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x230fe00023105, model64: 0x231050002310d},
		modelTuple{type64: 0x2700000027, matchRI: 0x26de, match64: 0x00000000, model64: 0x2310d00023118},
		modelTuple{type64: 0x2700000027, matchRI: 0x26df, match64: 0x00000000, model64: 0x2311800023124},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231240002312a, model64: 0x2312a00023131},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2313100023138, model64: 0x2313800023140},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e0, match64: 0x00000000, model64: 0x231400002314a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e1, match64: 0x00000000, model64: 0x2314a00023158},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231580002315e, model64: 0x2315e00023166},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e2, match64: 0x00000000, model64: 0x2316600023171},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e3, match64: 0x00000000, model64: 0x231710002317c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2317c00023182, model64: 0x2318200023189},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231890002318f, model64: 0x2318f00023197},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231970002319d, model64: 0x2319d000231a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e4, match64: 0x00000000, model64: 0x231a4000231ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231ae000231b4, model64: 0x231b4000231c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231c1000231c7, model64: 0x231c7000231d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e5, match64: 0x00000000, model64: 0x231d5000231e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231e0000231e5, model64: 0x231e5000231f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x231f0000231f5, model64: 0x231f500023204},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2320400023209, model64: 0x2320900023218},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e6, match64: 0x00000000, model64: 0x232180002321f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e7, match64: 0x00000000, model64: 0x2321f00023227},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e8, match64: 0x00000000, model64: 0x232270002322e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26e9, match64: 0x00000000, model64: 0x2322e00023236},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ea, match64: 0x00000000, model64: 0x2323600023241},
		modelTuple{type64: 0x2700000027, matchRI: 0x26eb, match64: 0x00000000, model64: 0x232410002324b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ec, match64: 0x00000000, model64: 0x2324b00023251},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ed, match64: 0x00000000, model64: 0x232510002325b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ee, match64: 0x00000000, model64: 0x2325b00023261},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ef, match64: 0x00000000, model64: 0x2326100023265},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f0, match64: 0x00000000, model64: 0x232650002326e},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f1, match64: 0x00000000, model64: 0x1073300010736},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f2, match64: 0x00000000, model64: 0x2326e00023271},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f3, match64: 0x00000000, model64: 0x2327100023277},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f4, match64: 0x00000000, model64: 0x232770002327b},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f5, match64: 0x00000000, model64: 0x2327b00023282},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f6, match64: 0x00000000, model64: 0x232820002328c},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f7, match64: 0x00000000, model64: 0x2328c0002328f},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f8, match64: 0x00000000, model64: 0x2328f00023292},
		modelTuple{type64: 0x2700000027, matchRI: 0x26f9, match64: 0x00000000, model64: 0x2329200023295},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fa, match64: 0x00000000, model64: 0x232950002329a},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fb, match64: 0x00000000, model64: 0x2329a000232a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fc, match64: 0x00000000, model64: 0x232a2000232a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fd, match64: 0x00000000, model64: 0x232a8000232ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x26fe, match64: 0x00000000, model64: 0x232ad000232b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x26ff, match64: 0x00000000, model64: 0x232b6000232bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2700, match64: 0x00000000, model64: 0x2329200023295},
		modelTuple{type64: 0x2700000027, matchRI: 0x2701, match64: 0x00000000, model64: 0x232bb000232cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2702, match64: 0x00000000, model64: 0xafac0000afaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232cb000232d2, model64: 0x232d2000232da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2703, match64: 0x00000000, model64: 0x232da000232df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232df000232e4, model64: 0x232e4000232ed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232ed000232f2, model64: 0x232f2000232f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232f7000232fc, model64: 0x232fc000232ff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x232ff00023305, model64: 0x2330500023308},
		modelTuple{type64: 0x2700000027, matchRI: 0x2704, match64: 0x00000000, model64: 0x233080002330e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2705, match64: 0x00000000, model64: 0x1ecd80001ecda},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2330e00023313, model64: 0x2331300023318},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233180002331d, model64: 0x2331d00023326},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233260002332b, model64: 0x2331300023318},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2332b00023330, model64: 0x2333000023338},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233380002333d, model64: 0x2333d00023346},
		modelTuple{type64: 0x2700000027, matchRI: 0x2706, match64: 0x00000000, model64: 0x233460002334b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2707, match64: 0x00000000, model64: 0x2334b00023355},
		modelTuple{type64: 0x2700000027, matchRI: 0x2708, match64: 0x00000000, model64: 0x233550002335b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2335b00023362, model64: 0x2336200023367},
		modelTuple{type64: 0x2700000027, matchRI: 0x2709, match64: 0x00000000, model64: 0x233670002336a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2336a00023370, model64: 0x2337000023377},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233770002337d, model64: 0x2337d00023384},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233840002338a, model64: 0x2338a0002338e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2338e00023394, model64: 0x2339400023397},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233970002339d, model64: 0x2339d000233a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x270a, match64: 0x00000000, model64: 0x1d0b00001d0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x270b, match64: 0x00000000, model64: 0x4a8000004a86},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233a0000233a6, model64: 0x10f3d00010f40},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233a6000233ac, model64: 0x1733c0001733f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233ac000233b2, model64: 0x233b2000233b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233b9000233bf, model64: 0x233bf000233c6},
		modelTuple{type64: 0x2700000027, matchRI: 0x270c, match64: 0x00000000, model64: 0x233c6000233ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233ca000233cf, model64: 0x233cf000233d6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233d6000233db, model64: 0x233db000233e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233e1000233e7, model64: 0x233e7000233eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233eb000233f0, model64: 0x233f0000233fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x233fa000233ff, model64: 0x233ff00023405},
		modelTuple{type64: 0x2700000027, matchRI: 0x270d, match64: 0x00000000, model64: 0x2340500023409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234090002340f, model64: 0x2340f00023413},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2341300023418, model64: 0x234180002341f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2341f00023424, model64: 0x2342400023428},
		modelTuple{type64: 0x2700000027, matchRI: 0x270e, match64: 0x00000000, model64: 0x234280002342b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2342b00023430, model64: 0x2343000023433},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2343300023438, model64: 0x234380002343f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2343f00023444, model64: 0x2344400023448},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234480002344e, model64: 0x2344e00023458},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234580002345d, model64: 0x2345d00023464},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2346400023469, model64: 0x234690002346f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2346f00023474, model64: 0x234740002347b},
		modelTuple{type64: 0x2700000027, matchRI: 0x270f, match64: 0x00000000, model64: 0x2347b0002347e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2710, match64: 0x00000000, model64: 0x2347e00023489},
		modelTuple{type64: 0x2700000027, matchRI: 0x2711, match64: 0x00000000, model64: 0x10abb00010abe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234890002348e, model64: 0x2348e00023496},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234960002349c, model64: 0x2349c000234a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2712, match64: 0x00000000, model64: 0x234a0000234a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2713, match64: 0x00000000, model64: 0x234a6000234b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2714, match64: 0x00000000, model64: 0x234b1000234b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234b9000234be, model64: 0x234be000234c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234c1000234c6, model64: 0x234c6000234cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2715, match64: 0x00000000, model64: 0x234cd000234d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234d1000234d6, model64: 0x7fd100007fd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2716, match64: 0x00000000, model64: 0xa6b00000a6b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234d6000234dc, model64: 0x234dc000234e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2717, match64: 0x00000000, model64: 0x234e3000234e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2718, match64: 0x00000000, model64: 0x234e8000234ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234ee000234f4, model64: 0x234f4000234f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x234f8000234fe, model64: 0x234fe00023501},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2350100023507, model64: 0x235070002350e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2350e00023514, model64: 0x2351400023518},
		modelTuple{type64: 0x2700000027, matchRI: 0x2719, match64: 0x00000000, model64: 0x1f8660001f868},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235180002351e, model64: 0xbaf20000baf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2351e00023524, model64: 0x2352400023528},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235280002352e, model64: 0x2352e00023532},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2353200023538, model64: 0x235380002353f},
		modelTuple{type64: 0x2700000027, matchRI: 0x271a, match64: 0x00000000, model64: 0x2353f00023542},
		modelTuple{type64: 0x2700000027, matchRI: 0x271b, match64: 0x00000000, model64: 0x2354200023545},
		modelTuple{type64: 0x2700000027, matchRI: 0x271c, match64: 0x00000000, model64: 0x235450002354b},
		modelTuple{type64: 0x2700000027, matchRI: 0x271d, match64: 0x00000000, model64: 0x2354b00023554},
		modelTuple{type64: 0x2700000027, matchRI: 0x271e, match64: 0x00000000, model64: 0x2355400023557},
		modelTuple{type64: 0x2700000027, matchRI: 0x271f, match64: 0x00000000, model64: 0x1b2e00001b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2720, match64: 0x00000000, model64: 0x235570002355a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2721, match64: 0x00000000, model64: 0x2355a00023561},
		modelTuple{type64: 0x2700000027, matchRI: 0x2722, match64: 0x00000000, model64: 0x2356100023565},
		modelTuple{type64: 0x2700000027, matchRI: 0x2723, match64: 0x00000000, model64: 0x2356500023568},
		modelTuple{type64: 0x2700000027, matchRI: 0x2724, match64: 0x00000000, model64: 0x235680002356f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2725, match64: 0x00000000, model64: 0x2356f00023576},
		modelTuple{type64: 0x2700000027, matchRI: 0x2726, match64: 0x00000000, model64: 0x235760002357d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2727, match64: 0x00000000, model64: 0x2357d00023580},
		modelTuple{type64: 0x2700000027, matchRI: 0x2728, match64: 0x00000000, model64: 0x2358000023583},
		modelTuple{type64: 0x2700000027, matchRI: 0x2729, match64: 0x00000000, model64: 0x223ca000223d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x272a, match64: 0x00000000, model64: 0x802000008027},
		modelTuple{type64: 0x2700000027, matchRI: 0x272b, match64: 0x00000000, model64: 0x2358300023585},
		modelTuple{type64: 0x2700000027, matchRI: 0x272c, match64: 0x00000000, model64: 0x235850002358c},
		modelTuple{type64: 0x2700000027, matchRI: 0x272d, match64: 0x00000000, model64: 0x2358c00023593},
		modelTuple{type64: 0x2700000027, matchRI: 0x272e, match64: 0x00000000, model64: 0x2359300023596},
		modelTuple{type64: 0x2700000027, matchRI: 0x272f, match64: 0x00000000, model64: 0x1142300011425},
		modelTuple{type64: 0x2700000027, matchRI: 0x2730, match64: 0x00000000, model64: 0x235960002359a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2731, match64: 0x00000000, model64: 0x2359a000235a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2732, match64: 0x00000000, model64: 0x235a1000235a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2733, match64: 0x00000000, model64: 0x235a3000235ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2734, match64: 0x00000000, model64: 0x235ab000235b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2735, match64: 0x00000000, model64: 0x235b1000235b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2736, match64: 0x00000000, model64: 0x235b7000235bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2737, match64: 0x00000000, model64: 0x235bf000235c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2738, match64: 0x00000000, model64: 0x235c2000235c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2739, match64: 0x00000000, model64: 0x235c5000235cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x235cc000235d3, model64: 0x235d3000235d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x273a, match64: 0x00000000, model64: 0x235d7000235dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x273b, match64: 0x00000000, model64: 0x235dd000235e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x273c, match64: 0x00000000, model64: 0xab7a0000ab7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x273d, match64: 0x00000000, model64: 0x235e8000235f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x273e, match64: 0x00000000, model64: 0x235f0000235f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x273f, match64: 0x00000000, model64: 0x235f4000235fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2740, match64: 0x00000000, model64: 0x235fa000235fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2741, match64: 0x00000000, model64: 0x235fd00023601},
		modelTuple{type64: 0x2700000027, matchRI: 0x2742, match64: 0x00000000, model64: 0x2360100023604},
		modelTuple{type64: 0x2700000027, matchRI: 0x2743, match64: 0x00000000, model64: 0x2360100023604},
		modelTuple{type64: 0x2700000027, matchRI: 0x2744, match64: 0x00000000, model64: 0x2360400023607},
		modelTuple{type64: 0x2700000027, matchRI: 0x2745, match64: 0x00000000, model64: 0x236070002360e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2746, match64: 0x00000000, model64: 0x2360e00023611},
		modelTuple{type64: 0x2700000027, matchRI: 0x2747, match64: 0x00000000, model64: 0x2361100023618},
		modelTuple{type64: 0x2700000027, matchRI: 0x2748, match64: 0x00000000, model64: 0x236180002361b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2749, match64: 0x00000000, model64: 0x2361b0002361f},
		modelTuple{type64: 0x2700000027, matchRI: 0x274a, match64: 0x00000000, model64: 0x1a6320001a638},
		modelTuple{type64: 0x2700000027, matchRI: 0x274b, match64: 0x00000000, model64: 0x2361f00023627},
		modelTuple{type64: 0x2700000027, matchRI: 0x274c, match64: 0x00000000, model64: 0x1a63f0001a646},
		modelTuple{type64: 0x2700000027, matchRI: 0x274d, match64: 0x00000000, model64: 0x2362700023633},
		modelTuple{type64: 0x2700000027, matchRI: 0x274e, match64: 0x00000000, model64: 0x2363300023636},
		modelTuple{type64: 0x2700000027, matchRI: 0x274f, match64: 0x00000000, model64: 0x236360002363a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2750, match64: 0x00000000, model64: 0x2363a00023641},
		modelTuple{type64: 0x2700000027, matchRI: 0x2751, match64: 0x00000000, model64: 0x236410002364d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2752, match64: 0x00000000, model64: 0x2364d00023654},
		modelTuple{type64: 0x2700000027, matchRI: 0x2753, match64: 0x00000000, model64: 0x236540002365c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2754, match64: 0x00000000, model64: 0x2365c0002365f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2755, match64: 0x00000000, model64: 0x2365f00023665},
		modelTuple{type64: 0x2700000027, matchRI: 0x2756, match64: 0x00000000, model64: 0x2366500023668},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236680002366e, model64: 0x235c5000235cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2366e00023674, model64: 0x236740002367c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2757, match64: 0x00000000, model64: 0x2367c00023683},
		modelTuple{type64: 0x2700000027, matchRI: 0x2758, match64: 0x00000000, model64: 0x236830002368e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2759, match64: 0x00000000, model64: 0xaced0000acf5},
		modelTuple{type64: 0x2700000027, matchRI: 0x275a, match64: 0x00000000, model64: 0x2368e00023696},
		modelTuple{type64: 0x2700000027, matchRI: 0x275b, match64: 0x00000000, model64: 0x2369600023699},
		modelTuple{type64: 0x2700000027, matchRI: 0x275c, match64: 0x00000000, model64: 0x236990002369c},
		modelTuple{type64: 0x2700000027, matchRI: 0x275d, match64: 0x00000000, model64: 0x2369c000236a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x275e, match64: 0x00000000, model64: 0x236a0000236a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x275f, match64: 0x00000000, model64: 0x236a3000236a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236a7000236ac, model64: 0x236ac000236b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2760, match64: 0x00000000, model64: 0x236b0000236b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2761, match64: 0x00000000, model64: 0x4a7100004a74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236b3000236b9, model64: 0x236b9000236bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236bc000236c2, model64: 0x236c2000236c8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236c8000236ce, model64: 0x236ce000236d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2762, match64: 0x00000000, model64: 0x236d5000236d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236d9000236de, model64: 0x1ecd10001ecd3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x236de000236e3, model64: 0x236e3000236e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2763, match64: 0x00000000, model64: 0x236e6000236ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2764, match64: 0x00000000, model64: 0x236ea000236ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2765, match64: 0x00000000, model64: 0x236ee000236f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2766, match64: 0x00000000, model64: 0x236f2000236f5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2767, match64: 0x00000000, model64: 0x236f5000236f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2768, match64: 0x00000000, model64: 0x236f9000236fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2769, match64: 0x00000000, model64: 0x236fc00023700},
		modelTuple{type64: 0x2700000027, matchRI: 0x276a, match64: 0x00000000, model64: 0x2370000023703},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2370300023709, model64: 0x2370900023710},
		modelTuple{type64: 0x2700000027, matchRI: 0x276b, match64: 0x00000000, model64: 0x2371000023714},
		modelTuple{type64: 0x2700000027, matchRI: 0x276c, match64: 0x00000000, model64: 0x2371400023718},
		modelTuple{type64: 0x2700000027, matchRI: 0x276d, match64: 0x00000000, model64: 0x237180002371b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2371b00023720, model64: 0x2372000023724},
		modelTuple{type64: 0x2700000027, matchRI: 0x276e, match64: 0x00000000, model64: 0x2372400023728},
		modelTuple{type64: 0x2700000027, matchRI: 0x276f, match64: 0x00000000, model64: 0x237280002372c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2770, match64: 0x00000000, model64: 0x2372c0002372f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2771, match64: 0x00000000, model64: 0x2372f00023733},
		modelTuple{type64: 0x2700000027, matchRI: 0x2772, match64: 0x00000000, model64: 0x2373300023736},
		modelTuple{type64: 0x2700000027, matchRI: 0x2773, match64: 0x00000000, model64: 0x2373600023739},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237390002373e, model64: 0x2373e00023741},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2374100023746, model64: 0x237460002374a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2374a0002374f, model64: 0x2374f00023755},
		modelTuple{type64: 0x2700000027, matchRI: 0x2774, match64: 0x00000000, model64: 0x2375500023759},
		modelTuple{type64: 0x2700000027, matchRI: 0x2775, match64: 0x00000000, model64: 0x10cb700010cba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2776, match64: 0x00000000, model64: 0x2375900023763},
		modelTuple{type64: 0x2700000027, matchRI: 0x2777, match64: 0x00000000, model64: 0x2376300023767},
		modelTuple{type64: 0x2700000027, matchRI: 0x2778, match64: 0x00000000, model64: 0x237670002376b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2779, match64: 0x00000000, model64: 0x2376b0002376f},
		modelTuple{type64: 0x2700000027, matchRI: 0x277a, match64: 0x00000000, model64: 0x2376f0002377a},
		modelTuple{type64: 0x2700000027, matchRI: 0x277b, match64: 0x00000000, model64: 0x2377a0002377e},
		modelTuple{type64: 0x2700000027, matchRI: 0x277c, match64: 0x00000000, model64: 0x2377e00023782},
		modelTuple{type64: 0x2700000027, matchRI: 0x277d, match64: 0x00000000, model64: 0x2375900023763},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2378200023788, model64: 0x237880002378c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2378c00023792, model64: 0x2379200023796},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237960002379c, model64: 0x2379c000237a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x277e, match64: 0x00000000, model64: 0x237a0000237a6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237a6000237ac, model64: 0x237ac000237b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237b3000237b8, model64: 0x237b8000237bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237bb000237c1, model64: 0x237c1000237c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237c4000237c9, model64: 0x237c9000237cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x277f, match64: 0x00000000, model64: 0x237cf000237d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2780, match64: 0x00000000, model64: 0x237d3000237d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2781, match64: 0x00000000, model64: 0x237d7000237db},
		modelTuple{type64: 0x2700000027, matchRI: 0x2782, match64: 0x00000000, model64: 0x237db000237de},
		modelTuple{type64: 0x2700000027, matchRI: 0x2783, match64: 0x00000000, model64: 0x237de000237e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2784, match64: 0x00000000, model64: 0x237e2000237e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2785, match64: 0x00000000, model64: 0x237e6000237ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2786, match64: 0x00000000, model64: 0x223ca000223d0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2787, match64: 0x00000000, model64: 0x237ea000237ec},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237ec000237f1, model64: 0x237f1000237f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x237f4000237fa, model64: 0x237fa00023805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238050002380b, model64: 0x2380b00023816},
		modelTuple{type64: 0x2700000027, matchRI: 0x2788, match64: 0x00000000, model64: 0x2381600023819},
		modelTuple{type64: 0x2700000027, matchRI: 0x2789, match64: 0x00000000, model64: 0x238190002381f},
		modelTuple{type64: 0x2700000027, matchRI: 0x278a, match64: 0x00000000, model64: 0x2381f00023829},
		modelTuple{type64: 0x2700000027, matchRI: 0x278b, match64: 0x00000000, model64: 0x238290002382d},
		modelTuple{type64: 0x2700000027, matchRI: 0x278c, match64: 0x00000000, model64: 0x2382d00023830},
		modelTuple{type64: 0x2700000027, matchRI: 0x278d, match64: 0x00000000, model64: 0x2383000023834},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238340002383a, model64: 0x4a8c00004a8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x278e, match64: 0x00000000, model64: 0x1a6db0001a6de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2383a0002383f, model64: 0x2383f00023846},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238460002384c, model64: 0x2384c00023850},
		modelTuple{type64: 0x2700000027, matchRI: 0x278f, match64: 0x00000000, model64: 0x2385000023853},
		modelTuple{type64: 0x2700000027, matchRI: 0x2790, match64: 0x00000000, model64: 0x2385300023857},
		modelTuple{type64: 0x2700000027, matchRI: 0x2791, match64: 0x00000000, model64: 0x238570002385b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2792, match64: 0x00000000, model64: 0x2385b00023866},
		modelTuple{type64: 0x2700000027, matchRI: 0x2793, match64: 0x00000000, model64: 0x2386600023869},
		modelTuple{type64: 0x2700000027, matchRI: 0x2794, match64: 0x00000000, model64: 0x238690002386c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2795, match64: 0x00000000, model64: 0x2386c00023872},
		modelTuple{type64: 0x2700000027, matchRI: 0x2796, match64: 0x00000000, model64: 0x2387200023879},
		modelTuple{type64: 0x2700000027, matchRI: 0x2797, match64: 0x00000000, model64: 0x238790002387c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2798, match64: 0x00000000, model64: 0x15c1e00015c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x2799, match64: 0x00000000, model64: 0x2387c00023880},
		modelTuple{type64: 0x2700000027, matchRI: 0x279a, match64: 0x00000000, model64: 0x2388000023883},
		modelTuple{type64: 0x2700000027, matchRI: 0x279b, match64: 0x00000000, model64: 0x2388300023889},
		modelTuple{type64: 0x2700000027, matchRI: 0x279c, match64: 0x00000000, model64: 0x2388900023893},
		modelTuple{type64: 0x2700000027, matchRI: 0x279d, match64: 0x00000000, model64: 0x2389300023897},
		modelTuple{type64: 0x2700000027, matchRI: 0x279e, match64: 0x00000000, model64: 0x238970002389b},
		modelTuple{type64: 0x2700000027, matchRI: 0x279f, match64: 0x00000000, model64: 0x2383000023834},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a0, match64: 0x00000000, model64: 0x2389b0002389f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a1, match64: 0x00000000, model64: 0x2389f000238a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a2, match64: 0x00000000, model64: 0x238a2000238a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a3, match64: 0x00000000, model64: 0x238a6000238a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a4, match64: 0x00000000, model64: 0x238a9000238ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238ad000238b3, model64: 0x238b3000238ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a5, match64: 0x00000000, model64: 0x238ba000238be},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a6, match64: 0x00000000, model64: 0x238be000238c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a7, match64: 0x00000000, model64: 0x238c2000238cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238cd000238d4, model64: 0x238d4000238db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238db000238e0, model64: 0x238e0000238e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238e6000238eb, model64: 0x238eb000238ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238ee000238f4, model64: 0x238f4000238f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a8, match64: 0x00000000, model64: 0x238f8000238fe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x238fe00023903, model64: 0x2390300023909},
		modelTuple{type64: 0x2700000027, matchRI: 0x27a9, match64: 0x00000000, model64: 0x239090002390c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27aa, match64: 0x00000000, model64: 0x2390c0002390f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ab, match64: 0x00000000, model64: 0x2390f00023913},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ac, match64: 0x00000000, model64: 0x2391300023917},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ad, match64: 0x00000000, model64: 0x239170002391a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ae, match64: 0x00000000, model64: 0x2391a0002391e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27af, match64: 0x00000000, model64: 0x2391e00023922},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b0, match64: 0x00000000, model64: 0x2392200023925},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b1, match64: 0x00000000, model64: 0x239250002392f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b2, match64: 0x00000000, model64: 0x2392f00023933},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b3, match64: 0x00000000, model64: 0x2393300023939},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b4, match64: 0x00000000, model64: 0x239390002393d},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b5, match64: 0x00000000, model64: 0x2393d00023940},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b6, match64: 0x00000000, model64: 0x2394000023943},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b7, match64: 0x00000000, model64: 0x2394300023947},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b8, match64: 0x00000000, model64: 0x239470002394b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27b9, match64: 0x00000000, model64: 0x2394b0002394e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ba, match64: 0x00000000, model64: 0x2394e00023955},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bb, match64: 0x00000000, model64: 0x2395500023958},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bc, match64: 0x00000000, model64: 0x239580002395b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bd, match64: 0x00000000, model64: 0x2395b0002395e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27be, match64: 0x00000000, model64: 0x2395e00023962},
		modelTuple{type64: 0x2700000027, matchRI: 0x27bf, match64: 0x00000000, model64: 0x2396200023965},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c0, match64: 0x00000000, model64: 0x2396500023969},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c1, match64: 0x00000000, model64: 0x2396900023974},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c2, match64: 0x00000000, model64: 0x2395e00023962},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c3, match64: 0x00000000, model64: 0x2397400023977},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c4, match64: 0x00000000, model64: 0x239770002397b},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c5, match64: 0x00000000, model64: 0x2397b0002397e},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c6, match64: 0x00000000, model64: 0x2397e00023981},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c7, match64: 0x00000000, model64: 0x2398100023983},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c8, match64: 0x00000000, model64: 0x2398300023989},
		modelTuple{type64: 0x2700000027, matchRI: 0x27c9, match64: 0x00000000, model64: 0x239890002398c},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ca, match64: 0x00000000, model64: 0x2398c0002398f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cb, match64: 0x00000000, model64: 0x113f2000113f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cc, match64: 0x00000000, model64: 0x2398f00023992},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cd, match64: 0x00000000, model64: 0x11f6000011f62},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ce, match64: 0x00000000, model64: 0x2399200023995},
		modelTuple{type64: 0x2700000027, matchRI: 0x27cf, match64: 0x00000000, model64: 0x239950002399f},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d0, match64: 0x00000000, model64: 0x1140700011409},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d1, match64: 0x00000000, model64: 0x2399f000239a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d2, match64: 0x00000000, model64: 0x239a5000239a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d3, match64: 0x00000000, model64: 0x239a9000239af},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d4, match64: 0x00000000, model64: 0x239af000239b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d5, match64: 0x00000000, model64: 0x239b7000239ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d6, match64: 0x00000000, model64: 0x296f00002972},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d7, match64: 0x00000000, model64: 0x235d7000235dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d8, match64: 0x00000000, model64: 0x239ba000239be},
		modelTuple{type64: 0x2700000027, matchRI: 0x27d9, match64: 0x00000000, model64: 0x486400004867},
		modelTuple{type64: 0x2700000027, matchRI: 0x27da, match64: 0x00000000, model64: 0x239be000239c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27db, match64: 0x00000000, model64: 0x239c8000239d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27dd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27de, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239d6000239dc, model64: 0x239d6000239dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239dc000239e3, model64: 0x239dc000239e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x239e3000239ea, model64: 0x239e3000239ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27e3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e5, match64: 0x00000000, model64: 0x239ef000239f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e6, match64: 0x00000000, model64: 0x239f800023a04},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x23a0b00023a1a, model64: 0x23a0b00023a1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x27e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a2200023a29, model64: 0x23a2900023a33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a3300023a42, model64: 0x23a4200023a48},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a4800023a4e, model64: 0x23a4e00023a56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a5600023a5b, model64: 0x23a5b00023a66},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a6600023a6b, model64: 0x23a6b00023a78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a7800023a7f, model64: 0x23a7f00023a8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a8c00023a93, model64: 0x23a9300023a9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23a9f00023aa6, model64: 0x23aa600023ab7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ea, match64: 0x00000000, model64: 0x23ab700023ac4},
		modelTuple{type64: 0x2700000027, matchRI: 0x27eb, match64: 0x00000000, model64: 0x23ac400023acc},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ec, match64: 0x00000000, model64: 0x23acc00023ad4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ad400023adb, model64: 0x23adb00023ae3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ae300023aea, model64: 0x23aea00023af7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23af700023afd, model64: 0x23afd00023b05},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b0500023b0c, model64: 0x23adb00023ae3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b0c00023b13, model64: 0x23b1300023b1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b1b00023b22, model64: 0x23b2200023b2b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b2b00023b32, model64: 0x23b3200023b3f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b3f00023b4c, model64: 0x23b4c00023b59},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b5900023b60, model64: 0x23b6000023b6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b6d00023b74, model64: 0x23b7400023b7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b7c00023b83, model64: 0x23a4e00023a56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b8300023b8a, model64: 0x23b8a00023b93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23b9300023b9b, model64: 0x23b9b00023ba4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ba400023bab, model64: 0x23bab00023bbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ed, match64: 0x00000000, model64: 0x23a2900023a33},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ee, match64: 0x00000000, model64: 0xea690000ea70},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ef, match64: 0x00000000, model64: 0x23bbb00023bc7},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f0, match64: 0x00000000, model64: 0x23bc700023bcf},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f1, match64: 0x00000000, model64: 0x23bcf00023bdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x27f2, match64: 0x00000000, model64: 0x23bdc00023be9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23be900023bfa, model64: 0x23bfa00023c04},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c0400023c0a, model64: 0x23c0a00023c17},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c1700023c1d, model64: 0x23c1d00023c2a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23c2a00023c31, model64: 0x23c3100023c3e},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23c3e00023c45, model64: 0x23c4500023c50},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23c5000023c57, model64: 0x23c5700023c62},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23c6200023c6a, model64: 0x23c6a00023c74},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23c7400023c7c, model64: 0x23c7c00023c88},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23c8800023c90, model64: 0x23c9000023c9b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f3, match64: 0x00000000, model64: 0x23c9b00023ca7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f4, match64: 0x00000000, model64: 0x23ca700023cb3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f5, match64: 0x00000000, model64: 0x23cb300023cbe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f6, match64: 0x00000000, model64: 0x202420002024d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f7, match64: 0x00000000, model64: 0x23cbe00023cca},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f8, match64: 0x00000000, model64: 0x23cca00023cd8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27f9, match64: 0x00000000, model64: 0x23cd800023ce7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27fa, match64: 0x00000000, model64: 0x23ce700023cf6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x27fb, match64: 0x00000000, model64: 0x23cf600023d06},
		modelTuple{type64: 0x24300000245, matchRI: 0x27fc, match64: 0x00000000, model64: 0xfa8d0000fa8f},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x23d0600023d0c, model64: 0x23d0c00023d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fd, match64: 0x00000000, model64: 0x23d1300023d19},
		modelTuple{type64: 0x2700000027, matchRI: 0x27fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x27ff, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2800, match64: 0x00000000, model64: 0x82350000823d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2803, match64: 0x00000000, model64: 0x23d2f00023d35},
		modelTuple{type64: 0x2700000027, matchRI: 0x2804, match64: 0x00000000, model64: 0x23d3500023d3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2805, match64: 0x00000000, model64: 0x23d3c00023d45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2806, match64: 0x00000000, model64: 0x23d4500023d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2807, match64: 0x00000000, model64: 0x23d4b00023d51},
		modelTuple{type64: 0x2700000027, matchRI: 0x2808, match64: 0x00000000, model64: 0x23d5100023d58},
		modelTuple{type64: 0x2700000027, matchRI: 0x2809, match64: 0x00000000, model64: 0x23d5800023d5f},
		modelTuple{type64: 0x2700000027, matchRI: 0x280a, match64: 0x00000000, model64: 0x23d5f00023d66},
		modelTuple{type64: 0x2700000027, matchRI: 0x280b, match64: 0x00000000, model64: 0x23d6600023d6c},
		modelTuple{type64: 0x2700000027, matchRI: 0x280c, match64: 0x00000000, model64: 0x23d6c00023d74},
		modelTuple{type64: 0x2700000027, matchRI: 0x280d, match64: 0x00000000, model64: 0x23d7400023d7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x280e, match64: 0x00000000, model64: 0x23d7a00023d82},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23d8200023d8b, model64: 0x23d8b00023d94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x280f, match64: 0x00000000, model64: 0x141480001414f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2810, match64: 0x00000000, model64: 0x23d9400023da4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2811, match64: 0x00000000, model64: 0x23da400023dad},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2812, match64: 0x00000000, model64: 0x23dad00023db6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2813, match64: 0x00000000, model64: 0x23db600023dbe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2814, match64: 0x00000000, model64: 0x23dbe00023dcf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2815, match64: 0x00000000, model64: 0x23dcf00023ddc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2816, match64: 0x00000000, model64: 0x23ddc00023de5},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2817, match64: 0x00000000, model64: 0x23de500023dec},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2818, match64: 0x00000000, model64: 0x8aef00008af6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23dec00023df3, model64: 0x23df300023dfa},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23dfa00023e03, model64: 0x23e0300023e0c},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23e0c00023e15, model64: 0x23e0c00023e15},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2819, match64: 0x00000000, model64: 0x23e1500023e1c},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x281a, match64: 0x00000000, model64: 0x23e1c00023e27},
		modelTuple{type64: 0x2700000027, matchRI: 0x281c, match64: 0x00000000, model64: 0x23e2d00023e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x281d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x281e, match64: 0x00000000, model64: 0x23e3100023e38},
		modelTuple{type64: 0x2700000027, matchRI: 0x281f, match64: 0x00000000, model64: 0x23e3800023e3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2820, match64: 0x00000000, model64: 0x23e3e00023e4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2821, match64: 0x00000000, model64: 0x23e4b00023e53},
		modelTuple{type64: 0x2700000027, matchRI: 0x2822, match64: 0x00000000, model64: 0x23e5300023e5b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2823, match64: 0x00000000, model64: 0x23e5b00023e62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23e6800023e70, model64: 0x23e6800023e70},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2825, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23e7600023e83, model64: 0x23e8300023e91},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23e9100023e96, model64: 0x23e9600023e9c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23e9c00023ea6, model64: 0x23ea600023eb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23eb000023eba, model64: 0x23eba00023ec5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ec500023ece, model64: 0x23ece00023ed8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ed800023ee0, model64: 0x23ee000023ee9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x235d7000235dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ef400023efc, model64: 0x23ef400023efc},
		modelTuple{type64: 0x2700000027, matchRI: 0x282a, match64: 0x00000000, model64: 0x23efc00023f07},
		modelTuple{type64: 0x2700000027, matchRI: 0x282b, match64: 0x00000000, model64: 0x23f0700023f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x282c, match64: 0x00000000, model64: 0x23f1100023f1c},
		modelTuple{type64: 0x2700000027, matchRI: 0x282d, match64: 0x00000000, model64: 0x23f1c00023f25},
		modelTuple{type64: 0x2700000027, matchRI: 0x282e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x282f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23f2500023f2d, model64: 0x23f2d00023f35},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23f3500023f3b, model64: 0x23f3b00023f43},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x23f4300023f49, model64: 0x23f4900023f51},
		modelTuple{type64: 0x24300000245, matchRI: 0x2830, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2832, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2833, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2834, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2837, match64: 0x00000000, model64: 0x23f5f00023f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x2838, match64: 0x00000000, model64: 0x1296f00012974},
		modelTuple{type64: 0x2700000027, matchRI: 0x2839, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x283b, match64: 0x00000000, model64: 0x23f6b00023f76},
		modelTuple{type64: 0x2700000027, matchRI: 0x283c, match64: 0x00000000, model64: 0x23f7600023f7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x283d, match64: 0x00000000, model64: 0x23f7c00023f89},
		modelTuple{type64: 0x2700000027, matchRI: 0x283e, match64: 0x00000000, model64: 0x23f8900023f8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23f8e00023f96, model64: 0x23f8e00023f96},
		modelTuple{type64: 0x2700000027, matchRI: 0x283f, match64: 0x00000000, model64: 0x181f3000181f6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2840, match64: 0x00000000, model64: 0x23f9600023f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2841, match64: 0x00000000, model64: 0x23f9d00023fa6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2842, match64: 0x00000000, model64: 0x23fa600023fac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23fac00023fb4, model64: 0x23fac00023fb4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23fb400023fb8, model64: 0x23fb400023fb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2844, match64: 0x00000000, model64: 0x23fbc00023fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2845, match64: 0x00000000, model64: 0x23fc400023fce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23fce00023fdb, model64: 0x23fdb00023fe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23fe800023ff1, model64: 0x23ff100023ffa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x23ffa00024004, model64: 0x240040002400e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2400e00024018, model64: 0x2400e00024018},
		modelTuple{type64: 0x2700000027, matchRI: 0x2846, match64: 0x00000000, model64: 0x2401800024025},
		modelTuple{type64: 0x2700000027, matchRI: 0x2847, match64: 0x00000000, model64: 0xe7ca0000e7ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2848, match64: 0x00000000, model64: 0xba6e0000ba73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2849, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x284c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x284d, match64: 0x00000000, model64: 0x2402e00024037},
		modelTuple{type64: 0x2700000027, matchRI: 0x284e, match64: 0x00000000, model64: 0x2403700024040},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2850, match64: 0x00000000, model64: 0x2404700024050},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x240530002405d, model64: 0x240530002405d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2405d00024067, model64: 0x2405d00024067},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2852, match64: 0x00000000, model64: 0x240670002406b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2406b00024073, model64: 0x240730002407c},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2855, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2856, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2408a00024099},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0xbc340000bc37},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x285e, match64: 0x00000000, model64: 0x240b5000240c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x240c4000240d5, model64: 0x240d5000240e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x240e6000240f3, model64: 0x240f300024100},
		modelTuple{type64: 0x2700000027, matchRI: 0x285f, match64: 0x00000000, model64: 0x241000002410c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2860, match64: 0x00000000, model64: 0x2410c00024119},
		modelTuple{type64: 0x2700000027, matchRI: 0x2861, match64: 0x00000000, model64: 0x2411900024127},
		modelTuple{type64: 0x2700000027, matchRI: 0x2862, match64: 0x00000000, model64: 0x241270002412f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2863, match64: 0x00000000, model64: 0x2412f00024138},
		modelTuple{type64: 0x2700000027, matchRI: 0x2864, match64: 0x00000000, model64: 0x2413800024141},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x241410002414a, model64: 0x2414a00024153},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x241530002415c, model64: 0x2415c00024165},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2416500024172, model64: 0x241720002417f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2865, match64: 0x00000000, model64: 0x2417f00024187},
		modelTuple{type64: 0x2700000027, matchRI: 0x2866, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x2418700024199, model64: 0x82810000828c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2867, match64: 0x00000000, model64: 0x24199000241a6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2868, match64: 0x00000000, model64: 0x12c1d00012c25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2869, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x241ad000241b6},
		modelTuple{type64: 0xbd500000bdc, matchRI: 0x286c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x10a9000010a93},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x241cd000241d5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2871, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x241ea000241f4, model64: 0x241f4000241fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2420100024209, model64: 0x2420900024211},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x242110002421d, model64: 0x2421d00024223},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2423900024245, model64: 0x2424500024254},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2878, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x287a, match64: 0x00000000, model64: 0x2426900024270},
		modelTuple{type64: 0x24700000251, matchRI: 0x287b, match64: 0x00000000, model64: 0x2427000024277},
		modelTuple{type64: 0x24700000251, matchRI: 0x287c, match64: 0x00000000, model64: 0x242770002427c},
		modelTuple{type64: 0x24700000251, matchRI: 0x287d, match64: 0x00000000, model64: 0x2427c00024286},
		modelTuple{type64: 0x2700000027, matchRI: 0x287e, match64: 0x00000000, model64: 0x242860002428d},
		modelTuple{type64: 0x2700000027, matchRI: 0x287f, match64: 0x00000000, model64: 0x2428d00024298},
		modelTuple{type64: 0x2700000027, matchRI: 0x2880, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2881, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2882, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x242a4000242ab, model64: 0x242ab000242b7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2887, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2888, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x242cb000242d3, model64: 0x206490002064c},
		modelTuple{type64: 0x2700000027, matchRI: 0x288a, match64: 0x00000000, model64: 0x242d3000242d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x288b, match64: 0x00000000, model64: 0x3cb600003cb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x288c, match64: 0x00000000, model64: 0x242d5000242d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x288d, match64: 0x00000000, model64: 0x242d9000242e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x288e, match64: 0x00000000, model64: 0x242e2000242eb},
		modelTuple{type64: 0x2700000027, matchRI: 0x288f, match64: 0x00000000, model64: 0x242eb000242f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2890, match64: 0x00000000, model64: 0x242f4000242ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2891, match64: 0x00000000, model64: 0x242ff00024305},
		modelTuple{type64: 0x2700000027, matchRI: 0x2892, match64: 0x00000000, model64: 0x243050002430c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2893, match64: 0x00000000, model64: 0x2430c00024318},
		modelTuple{type64: 0x2700000027, matchRI: 0x2894, match64: 0x00000000, model64: 0x2431800024324},
		modelTuple{type64: 0x2700000027, matchRI: 0x2895, match64: 0x00000000, model64: 0x243240002432d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2896, match64: 0x00000000, model64: 0x2432d00024337},
		modelTuple{type64: 0x2700000027, matchRI: 0x2897, match64: 0x00000000, model64: 0x243370002433b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2898, match64: 0x00000000, model64: 0x2433b00024340},
		modelTuple{type64: 0x2700000027, matchRI: 0x2899, match64: 0x00000000, model64: 0x2434000024348},
		modelTuple{type64: 0x2700000027, matchRI: 0x289a, match64: 0x00000000, model64: 0x2434800024354},
		modelTuple{type64: 0x2700000027, matchRI: 0x289b, match64: 0x00000000, model64: 0x243540002435c},
		modelTuple{type64: 0x2700000027, matchRI: 0x289c, match64: 0x00000000, model64: 0x2435c00024361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x243610002436d, model64: 0x2436d00024379},
		modelTuple{type64: 0x2700000027, matchRI: 0x289d, match64: 0x00000000, model64: 0x2437900024383},
		modelTuple{type64: 0x2700000027, matchRI: 0x289e, match64: 0x00000000, model64: 0x5ba400005bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x289f, match64: 0x00000000, model64: 0x243830002438b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a0, match64: 0x00000000, model64: 0x2438b00024393},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a1, match64: 0x00000000, model64: 0x243930002439b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a2, match64: 0x00000000, model64: 0x2439b000243a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a3, match64: 0x00000000, model64: 0x243a4000243aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a4, match64: 0x00000000, model64: 0x243aa000243ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a5, match64: 0x00000000, model64: 0x243ae000243b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a6, match64: 0x00000000, model64: 0x243b3000243b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a7, match64: 0x00000000, model64: 0x243b8000243bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a8, match64: 0x00000000, model64: 0x243bf000243c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x28a9, match64: 0x00000000, model64: 0x243c4000243c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x243c9000243d2, model64: 0x243d2000243db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x243db000243e1, model64: 0x243e1000243e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x243e8000243f2, model64: 0x243f2000243f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x28aa, match64: 0x00000000, model64: 0x243f900024400},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ab, match64: 0x00000000, model64: 0x2440000024405},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ac, match64: 0x00000000, model64: 0x244050002440c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ad, match64: 0x00000000, model64: 0x2440c00024411},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ae, match64: 0x00000000, model64: 0x2441100024414},
		modelTuple{type64: 0x2700000027, matchRI: 0x28af, match64: 0x00000000, model64: 0x244140002441a},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b0, match64: 0x00000000, model64: 0x2441a0002441e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2441e00024424, model64: 0x244240002442b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b1, match64: 0x00000000, model64: 0x22c2200022c26},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b2, match64: 0x00000000, model64: 0x1fc430001fc49},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b3, match64: 0x00000000, model64: 0x2442b00024431},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b4, match64: 0x00000000, model64: 0x2440c00024411},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b5, match64: 0x00000000, model64: 0x244310002443c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b6, match64: 0x00000000, model64: 0x2443c00024448},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b7, match64: 0x00000000, model64: 0x2444800024450},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b8, match64: 0x00000000, model64: 0x2445000024455},
		modelTuple{type64: 0x2700000027, matchRI: 0x28b9, match64: 0x00000000, model64: 0x244550002445c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ba, match64: 0x00000000, model64: 0x2445c00024461},
		modelTuple{type64: 0x2700000027, matchRI: 0x28bb, match64: 0x00000000, model64: 0x2446100024469},
		modelTuple{type64: 0x2700000027, matchRI: 0x28bc, match64: 0x00000000, model64: 0x244690002446f},
		modelTuple{type64: 0x2700000027, matchRI: 0x28bd, match64: 0x00000000, model64: 0x2446f0002447b},
		modelTuple{type64: 0x2700000027, matchRI: 0x28be, match64: 0x00000000, model64: 0x2447b00024482},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2448200024488, model64: 0x2448800024494},
		modelTuple{type64: 0x2700000027, matchRI: 0x28bf, match64: 0x00000000, model64: 0x24494000244a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c0, match64: 0x00000000, model64: 0x244a0000244a7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244a7000244b0, model64: 0x244b0000244bc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244bc000244c6, model64: 0x244c6000244cd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x244cd000244d7, model64: 0x244d7000244de},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c1, match64: 0x00000000, model64: 0x244de000244ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c2, match64: 0x00000000, model64: 0x1fd6e0001fd73},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c3, match64: 0x00000000, model64: 0x244ea000244f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c4, match64: 0x00000000, model64: 0x244f1000244fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c5, match64: 0x00000000, model64: 0x244fd00024504},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c6, match64: 0x00000000, model64: 0x2450400024509},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c7, match64: 0x00000000, model64: 0x245090002450c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c8, match64: 0x00000000, model64: 0x2450c00024511},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2451100024517, model64: 0x245170002451e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28c9, match64: 0x00000000, model64: 0x2451e00024526},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ca, match64: 0x00000000, model64: 0x2452600024529},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cb, match64: 0x00000000, model64: 0x2452900024534},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cc, match64: 0x00000000, model64: 0x245340002453c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cd, match64: 0x00000000, model64: 0x2453c00024543},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ce, match64: 0x00000000, model64: 0x2454300024547},
		modelTuple{type64: 0x2700000027, matchRI: 0x28cf, match64: 0x00000000, model64: 0x245470002454e},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d0, match64: 0x00000000, model64: 0x2454e0002455a},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d1, match64: 0x00000000, model64: 0x2455a00024561},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d2, match64: 0x00000000, model64: 0x245610002456c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d3, match64: 0x00000000, model64: 0x2456c00024578},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d4, match64: 0x00000000, model64: 0x245780002457e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2457e00024585, model64: 0x245850002458f},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d5, match64: 0x00000000, model64: 0x2458f00024598},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d6, match64: 0x00000000, model64: 0x24598000245a3},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d7, match64: 0x00000000, model64: 0x245a3000245aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d8, match64: 0x00000000, model64: 0x245aa000245b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245b4000245b9, model64: 0x245b9000245c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245c2000245cb, model64: 0x245cb000245cf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245cf000245d5, model64: 0x52eb000052f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245d5000245db, model64: 0x245db000245e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245e5000245eb, model64: 0x94f2000094fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x28d9, match64: 0x00000000, model64: 0x245eb000245f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28da, match64: 0x00000000, model64: 0x245f2000245fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x245fd00024603, model64: 0x530200005308},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246030002460d, model64: 0x2460d00024618},
		modelTuple{type64: 0x2700000027, matchRI: 0x28db, match64: 0x00000000, model64: 0x15c1e00015c21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2461800024622, model64: 0x15c1e00015c21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2462200024628, model64: 0x2388000023883},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246280002462e, model64: 0x2389f000238a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28dc, match64: 0x00000000, model64: 0x2462e00024631},
		modelTuple{type64: 0x2700000027, matchRI: 0x28dd, match64: 0x00000000, model64: 0x2463100024634},
		modelTuple{type64: 0x2700000027, matchRI: 0x28de, match64: 0x00000000, model64: 0x246340002463c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2463c00024642, model64: 0x2464200024645},
		modelTuple{type64: 0x2700000027, matchRI: 0x28df, match64: 0x00000000, model64: 0x2464500024648},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246480002464e, model64: 0x2394000023943},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2464e00024654, model64: 0x2465400024657},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e0, match64: 0x00000000, model64: 0x530e00005314},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e1, match64: 0x00000000, model64: 0x2465700024661},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e2, match64: 0x00000000, model64: 0x52f7000052fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e3, match64: 0x00000000, model64: 0x246610002466c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2466c00024676, model64: 0x242d9000242e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e4, match64: 0x00000000, model64: 0x246760002467a},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e5, match64: 0x00000000, model64: 0x2467a00024680},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e6, match64: 0x00000000, model64: 0x2468000024686},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e7, match64: 0x00000000, model64: 0x246860002468c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28e8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x28eb, match64: 0x00000000, model64: 0x2469b000246a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ec, match64: 0x00000000, model64: 0x4170000041a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246a2000246b2, model64: 0x246b2000246b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ed, match64: 0x00000000, model64: 0x246b9000246c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ee, match64: 0x00000000, model64: 0x246c3000246ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246ca000246d3, model64: 0x56100000566},
		modelTuple{type64: 0x2700000027, matchRI: 0x28ef, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x246d8000246e4, model64: 0x246e4000246f0},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x246f400024700, model64: 0x247000002470c},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28f4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2471200024719, model64: 0x2471900024721},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247210002472a, model64: 0x2472a00024733},
		modelTuple{type64: 0x2700000027, matchRI: 0x28f6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x28f7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x38400000391, matchRI: 0x28f8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fa, match64: 0x00000000, model64: 0x2473a00024741},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fb, match64: 0x00000000, model64: 0x2474100024744},
		modelTuple{type64: 0x2700000027, matchRI: 0x28fc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x28fd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x28fe, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2900, match64: 0x00000000, model64: 0xa6b00000a6b2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2475300024757},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2904, match64: 0x00000000, model64: 0x2476c00024779},
		modelTuple{type64: 0x2700000027, matchRI: 0x2905, match64: 0x00000000, model64: 0x2477900024781},
		modelTuple{type64: 0x2700000027, matchRI: 0x2906, match64: 0x00000000, model64: 0x2477900024781},
		modelTuple{type64: 0x2700000027, matchRI: 0x2907, match64: 0x00000000, model64: 0x247810002478b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2908, match64: 0x00000000, model64: 0x2478b0002479c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2909, match64: 0x00000000, model64: 0x2479c000247a4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x247ac000247b3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247b8000247bd, model64: 0x247bd000247c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247c6000247cb, model64: 0x247cb000247d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247d2000247d7, model64: 0x247d7000247dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247dc000247e5, model64: 0x247e5000247ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247ef000247f4, model64: 0x247f4000247f9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x247f9000247fe, model64: 0x247fe00024804},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2480b0002481a, model64: 0x2481a00024821},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2482100024830, model64: 0x248300002483b},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2484300024851},
		modelTuple{type64: 0x2700000027, matchRI: 0x2910, match64: 0x00000000, model64: 0x2485700024860},
		modelTuple{type64: 0x2700000027, matchRI: 0x2911, match64: 0x00000000, model64: 0x2486000024865},
		modelTuple{type64: 0x2700000027, matchRI: 0x2912, match64: 0x00000000, model64: 0x66a8000066ad},
		modelTuple{type64: 0x24700000251, matchRI: 0x2913, match64: 0x00000000, model64: 0x248650002486d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2914, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2487200024879},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2918, match64: 0x00000000, model64: 0xb5580000b55a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x248850002488b, model64: 0x2488b00024892},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2489200024898, model64: 0x24898000248a2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x248a8000248b8, model64: 0x248b8000248c2},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x248c2000248ce, model64: 0x248ce000248d4},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291a, match64: 0x00000000, model64: 0x248d4000248dc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291b, match64: 0x00000000, model64: 0x248dc000248e7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291c, match64: 0x00000000, model64: 0x248e7000248f1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291d, match64: 0x00000000, model64: 0x248f1000248fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291e, match64: 0x00000000, model64: 0x248fb00024906},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x291f, match64: 0x00000000, model64: 0x2490600024912},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2491200024921, model64: 0x249210002492a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2492a00024933, model64: 0x249330002493d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2920, match64: 0x00000000, model64: 0x2493d00024944},
		modelTuple{type64: 0x2700000027, matchRI: 0x2921, match64: 0x00000000, model64: 0x2358000023583},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x249440002494d, model64: 0x2494d00024954},
		modelTuple{type64: 0x2700000027, matchRI: 0x2922, match64: 0x00000000, model64: 0x249540002495b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2923, match64: 0x00000000, model64: 0x2495b00024964},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2496400024972, model64: 0x2497200024980},
		modelTuple{type64: 0x2700000027, matchRI: 0x2924, match64: 0x00000000, model64: 0x2498000024988},
		modelTuple{type64: 0x2700000027, matchRI: 0x2925, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2927, match64: 0x00000000, model64: 0x2498e00024995},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x249950002499f, model64: 0x2499f000249a9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x249a9000249b8, model64: 0x249b8000249c7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x249c7000249d2, model64: 0x249d2000249dd},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x249dd000249ee, model64: 0x249ee000249ff},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x249ff00024a0b, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x24a0b00024a1d, model64: 0x24a1d00024a32},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2928, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x24a3d00024a43},
		modelTuple{type64: 0x2700000027, matchRI: 0x292a, match64: 0x00000000, model64: 0x24a4600024a4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a4c00024a5d, model64: 0x24a5d00024a6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x292b, match64: 0x00000000, model64: 0x24a6b00024a76},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a7600024a81, model64: 0x24a8100024a89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a8900024a91, model64: 0x24a9100024a94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24a9400024aa0, model64: 0x24aa000024aa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24aa900024ab3, model64: 0x24ab300024aba},
		modelTuple{type64: 0x2700000027, matchRI: 0x292e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x292f, match64: 0x00000000, model64: 0x24ac200024ac8},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2932, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24ada00024adf, model64: 0x24adf00024aea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24aea00024af2, model64: 0x24aea00024af2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x24af700024b08},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24b0d00024b12, model64: 0x24b1200024b1a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x293a, match64: 0x00000000, model64: 0x236990002369c},
		modelTuple{type64: 0x2700000027, matchRI: 0x293b, match64: 0x00000000, model64: 0x2372c0002372f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x24b3300024b3a, model64: 0x24b3a00024b3d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x24b3d00024b43, model64: 0x24b4300024b4a},
		modelTuple{type64: 0x24300000245, matchRI: 0x293c, match64: 0x00000000, model64: 0x24a4300024a46},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x293f, match64: 0x00000000, model64: 0x24b5a00024b6b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2940, match64: 0x00000000, model64: 0x5b1000005b16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2941, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2942, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2943, match64: 0x00000000, model64: 0x24b6b00024b7a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2944, match64: 0x00000000, model64: 0x24b7a00024b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2945, match64: 0x00000000, model64: 0x24b8200024b93},
		modelTuple{type64: 0x2700000027, matchRI: 0x2946, match64: 0x00000000, model64: 0x24b9300024ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2947, match64: 0x00000000, model64: 0x24ba000024bab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2949, match64: 0x00000000, model64: 0x24bb100024bbc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24bbc00024bc2, model64: 0x24bc200024bd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x294a, match64: 0x00000000, model64: 0x24bd200024bdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x294b, match64: 0x00000000, model64: 0x24bdf00024bf0},
		modelTuple{type64: 0x2700000027, matchRI: 0x294c, match64: 0x00000000, model64: 0x24bf000024bfd},
		modelTuple{type64: 0x2700000027, matchRI: 0x294d, match64: 0x00000000, model64: 0x24bfd00024c0e},
		modelTuple{type64: 0x2700000027, matchRI: 0x294e, match64: 0x00000000, model64: 0x24c0e00024c1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x294f, match64: 0x00000000, model64: 0x24c1e00024c32},
		modelTuple{type64: 0x2700000027, matchRI: 0x2950, match64: 0x00000000, model64: 0x24c3200024c43},
		modelTuple{type64: 0x2700000027, matchRI: 0x2951, match64: 0x00000000, model64: 0x24c4300024c50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2952, match64: 0x00000000, model64: 0x24c5000024c5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2953, match64: 0x00000000, model64: 0x24c5d00024c6e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2954, match64: 0x00000000, model64: 0x24c6e00024c7c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2955, match64: 0x00000000, model64: 0x24c7c00024c85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2956, match64: 0x00000000, model64: 0x24c8500024c8e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2957, match64: 0x00000000, model64: 0x24c8e00024c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x2958, match64: 0x00000000, model64: 0x24c9400024c9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2959, match64: 0x00000000, model64: 0x24c9f00024ca7},
		modelTuple{type64: 0x2700000027, matchRI: 0x295a, match64: 0x00000000, model64: 0x24ca700024cb2},
		modelTuple{type64: 0x2700000027, matchRI: 0x295b, match64: 0x00000000, model64: 0x24cb200024cbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x295c, match64: 0x00000000, model64: 0x24cbb00024cc2},
		modelTuple{type64: 0x2700000027, matchRI: 0x295d, match64: 0x00000000, model64: 0x24cc200024cc9},
		modelTuple{type64: 0x2700000027, matchRI: 0x295e, match64: 0x00000000, model64: 0x24cc900024cd2},
		modelTuple{type64: 0x2700000027, matchRI: 0x295f, match64: 0x00000000, model64: 0x24cd200024cd6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2960, match64: 0x00000000, model64: 0x24cd600024cde},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24cde00024cf8, model64: 0x24cf800024d13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2961, match64: 0x00000000, model64: 0x24d1300024d1e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2962, match64: 0x00000000, model64: 0x24d1e00024d25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2963, match64: 0x00000000, model64: 0x24d2500024d2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2964, match64: 0x00000000, model64: 0x24d2a00024d33},
		modelTuple{type64: 0x2700000027, matchRI: 0x2965, match64: 0x00000000, model64: 0x24d3300024d38},
		modelTuple{type64: 0x2700000027, matchRI: 0x2966, match64: 0x00000000, model64: 0x24d3800024d4a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2967, match64: 0x00000000, model64: 0x24d4a00024d50},
		modelTuple{type64: 0x2700000027, matchRI: 0x2968, match64: 0x00000000, model64: 0x24d5000024d5a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2969, match64: 0x00000000, model64: 0x24d5a00024d67},
		modelTuple{type64: 0x2700000027, matchRI: 0x296a, match64: 0x00000000, model64: 0x24d6700024d75},
		modelTuple{type64: 0x2700000027, matchRI: 0x296b, match64: 0x00000000, model64: 0x24d7500024d7e},
		modelTuple{type64: 0x2700000027, matchRI: 0x296c, match64: 0x00000000, model64: 0x24d7e00024d8c},
		modelTuple{type64: 0x2700000027, matchRI: 0x296d, match64: 0x00000000, model64: 0x24d8c00024d92},
		modelTuple{type64: 0x2700000027, matchRI: 0x296e, match64: 0x00000000, model64: 0x24d9200024d9f},
		modelTuple{type64: 0x2700000027, matchRI: 0x296f, match64: 0x00000000, model64: 0x24d9f00024da5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2970, match64: 0x00000000, model64: 0x24da500024dab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2971, match64: 0x00000000, model64: 0x24dab00024db5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2972, match64: 0x00000000, model64: 0x24db500024dbb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2973, match64: 0x00000000, model64: 0x24dbb00024dcb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2974, match64: 0x00000000, model64: 0x24dcb00024dd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2975, match64: 0x00000000, model64: 0x24dd800024de2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2976, match64: 0x00000000, model64: 0x24de200024ded},
		modelTuple{type64: 0x2700000027, matchRI: 0x2977, match64: 0x00000000, model64: 0x24ded00024df6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2978, match64: 0x00000000, model64: 0x1a2c30001a2c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2979, match64: 0x00000000, model64: 0x17b0500017b07},
		modelTuple{type64: 0x2700000027, matchRI: 0x297a, match64: 0x00000000, model64: 0xeb7a0000eb85},
		modelTuple{type64: 0x2700000027, matchRI: 0x297b, match64: 0x00000000, model64: 0x24df600024df9},
		modelTuple{type64: 0x2700000027, matchRI: 0x297c, match64: 0x00000000, model64: 0x24df900024e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x297d, match64: 0x00000000, model64: 0x24e0900024e10},
		modelTuple{type64: 0x2700000027, matchRI: 0x297e, match64: 0x00000000, model64: 0x24e1000024e17},
		modelTuple{type64: 0x2700000027, matchRI: 0x297f, match64: 0x00000000, model64: 0x24e1700024e1a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2980, match64: 0x00000000, model64: 0x24e1a00024e23},
		modelTuple{type64: 0x2700000027, matchRI: 0x2981, match64: 0x00000000, model64: 0x24e2300024e2a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2982, match64: 0x00000000, model64: 0x24e2a00024e2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2983, match64: 0x00000000, model64: 0x1a31f0001a325},
		modelTuple{type64: 0x2700000027, matchRI: 0x2984, match64: 0x00000000, model64: 0x24e2d00024e34},
		modelTuple{type64: 0x2700000027, matchRI: 0x2985, match64: 0x00000000, model64: 0x17afd00017aff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2986, match64: 0x00000000, model64: 0x24e3400024e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2987, match64: 0x00000000, model64: 0x24e3c00024e43},
		modelTuple{type64: 0x2700000027, matchRI: 0x2988, match64: 0x00000000, model64: 0x24e4300024e46},
		modelTuple{type64: 0x2700000027, matchRI: 0x2989, match64: 0x00000000, model64: 0x24e4600024e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x298a, match64: 0x00000000, model64: 0x24e4800024e50},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24e5000024e60, model64: 0x24e6000024e69},
		modelTuple{type64: 0x2700000027, matchRI: 0x298b, match64: 0x00000000, model64: 0x24e6900024e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x298c, match64: 0x00000000, model64: 0x24e7000024e76},
		modelTuple{type64: 0x2700000027, matchRI: 0x298d, match64: 0x00000000, model64: 0x24e7600024e7d},
		modelTuple{type64: 0x2700000027, matchRI: 0x298e, match64: 0x00000000, model64: 0x24e7d00024e83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24e8300024e8d, model64: 0x24e8d00024e8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x298f, match64: 0x00000000, model64: 0x24e8f00024e98},
		modelTuple{type64: 0x2700000027, matchRI: 0x2990, match64: 0x00000000, model64: 0x24e9800024ead},
		modelTuple{type64: 0x2700000027, matchRI: 0x2991, match64: 0x00000000, model64: 0x24ead00024eb4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2992, match64: 0x00000000, model64: 0x24eb400024eb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2993, match64: 0x00000000, model64: 0x24eb800024ec1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2994, match64: 0x00000000, model64: 0x24ec100024ecc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2995, match64: 0x00000000, model64: 0x24ecc00024ee4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2996, match64: 0x00000000, model64: 0x24ee400024eee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2997, match64: 0x00000000, model64: 0x24eee00024ef8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2998, match64: 0x00000000, model64: 0x24ef800024efd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2999, match64: 0x00000000, model64: 0x24efd00024f01},
		modelTuple{type64: 0x2700000027, matchRI: 0x299a, match64: 0x00000000, model64: 0x24f0100024f07},
		modelTuple{type64: 0x2700000027, matchRI: 0x299b, match64: 0x00000000, model64: 0x24f0700024f0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x299c, match64: 0x00000000, model64: 0x24f0c00024f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x299d, match64: 0x00000000, model64: 0x24f1100024f19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24f1900024f23, model64: 0x24f2300024f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x299e, match64: 0x00000000, model64: 0x24f2f00024f38},
		modelTuple{type64: 0x2700000027, matchRI: 0x299f, match64: 0x00000000, model64: 0x24f3800024f3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a0, match64: 0x00000000, model64: 0x24f3e00024f46},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a1, match64: 0x00000000, model64: 0x24f4600024f50},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a2, match64: 0x00000000, model64: 0x24f5000024f55},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a3, match64: 0x00000000, model64: 0x24f5500024f5d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a4, match64: 0x00000000, model64: 0x24f5d00024f65},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a5, match64: 0x00000000, model64: 0x24f6500024f70},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a6, match64: 0x00000000, model64: 0x24f7000024f79},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a7, match64: 0x00000000, model64: 0x24f7900024f86},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a8, match64: 0x00000000, model64: 0x24f8600024f8f},
		modelTuple{type64: 0x2700000027, matchRI: 0x29a9, match64: 0x00000000, model64: 0x24f8f00024f95},
		modelTuple{type64: 0x2700000027, matchRI: 0x29aa, match64: 0x00000000, model64: 0x24f9500024f9d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ab, match64: 0x00000000, model64: 0x24f9d00024fa7},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ac, match64: 0x00000000, model64: 0x24fa700024fb0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ad, match64: 0x00000000, model64: 0x24fb000024fbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ae, match64: 0x00000000, model64: 0x24fbc00024fc4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29af, match64: 0x00000000, model64: 0x24fc400024fd1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24fd100024fdb, model64: 0x24fdb00024fe8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x24fe800024ff4, model64: 0x24fe800024ff4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b0, match64: 0x00000000, model64: 0x24ff400024ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b1, match64: 0x00000000, model64: 0x24ffb00025002},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b2, match64: 0x00000000, model64: 0x250020002500d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b3, match64: 0x00000000, model64: 0x2500d00025015},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b4, match64: 0x00000000, model64: 0x250150002501d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b5, match64: 0x00000000, model64: 0x2501d00025024},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b6, match64: 0x00000000, model64: 0x250240002502c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b7, match64: 0x00000000, model64: 0x2502c00025033},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b8, match64: 0x00000000, model64: 0x250330002503e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29b9, match64: 0x00000000, model64: 0x2503e00025047},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ba, match64: 0x00000000, model64: 0x2504700025050},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bb, match64: 0x00000000, model64: 0x2505000025059},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bc, match64: 0x00000000, model64: 0x2505900025061},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x250610002506b, model64: 0x2506b00025076},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bd, match64: 0x00000000, model64: 0x2507600025082},
		modelTuple{type64: 0x2700000027, matchRI: 0x29be, match64: 0x00000000, model64: 0x250820002508b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2508b00025095, model64: 0x25095000250a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29bf, match64: 0x00000000, model64: 0x250a1000250a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c0, match64: 0x00000000, model64: 0x250a8000250b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c1, match64: 0x00000000, model64: 0x250b5000250c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c2, match64: 0x00000000, model64: 0x250c2000250ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c3, match64: 0x00000000, model64: 0x250ca000250d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c4, match64: 0x00000000, model64: 0x250d2000250e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c5, match64: 0x00000000, model64: 0x250e0000250e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c6, match64: 0x00000000, model64: 0x250e8000250f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c7, match64: 0x00000000, model64: 0x250f1000250f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c8, match64: 0x00000000, model64: 0x250f900025105},
		modelTuple{type64: 0x2700000027, matchRI: 0x29c9, match64: 0x00000000, model64: 0x2510500025111},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ca, match64: 0x00000000, model64: 0x251110002511c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cb, match64: 0x00000000, model64: 0x2511c00025124},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cc, match64: 0x00000000, model64: 0x2512400025132},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cd, match64: 0x00000000, model64: 0x251320002513b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ce, match64: 0x00000000, model64: 0x2513b0002514a},
		modelTuple{type64: 0x2700000027, matchRI: 0x29cf, match64: 0x00000000, model64: 0x2514a0002515c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d0, match64: 0x00000000, model64: 0x2515c00025171},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d1, match64: 0x00000000, model64: 0x251710002517f},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d2, match64: 0x00000000, model64: 0x2517f0002518c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d3, match64: 0x00000000, model64: 0x2518c00025195},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d4, match64: 0x00000000, model64: 0x251950002519d},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d5, match64: 0x00000000, model64: 0x2519d000251a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d6, match64: 0x00000000, model64: 0x251a8000251b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d7, match64: 0x00000000, model64: 0x251b6000251d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d8, match64: 0x00000000, model64: 0x251d3000251e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x251e0000251e9, model64: 0x251e9000251f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29d9, match64: 0x00000000, model64: 0x251f20002520c},
		modelTuple{type64: 0x2700000027, matchRI: 0x29da, match64: 0x00000000, model64: 0x2520c0002521e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29db, match64: 0x00000000, model64: 0x2521e0002522e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29dc, match64: 0x00000000, model64: 0x2522e0002523b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29dd, match64: 0x00000000, model64: 0x2523b00025247},
		modelTuple{type64: 0x2700000027, matchRI: 0x29de, match64: 0x00000000, model64: 0x2524700025253},
		modelTuple{type64: 0x2700000027, matchRI: 0x29df, match64: 0x00000000, model64: 0x2525300025260},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e0, match64: 0x00000000, model64: 0x2526000025269},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e1, match64: 0x00000000, model64: 0x2526900025273},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e2, match64: 0x00000000, model64: 0x2527300025283},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e3, match64: 0x00000000, model64: 0x2528300025291},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e4, match64: 0x00000000, model64: 0x252910002529e},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e5, match64: 0x00000000, model64: 0x2529e000252ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252ad000252b7, model64: 0x252b7000252c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252c0000252de, model64: 0x252c0000252de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252de000252e7, model64: 0x252e7000252f1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x252f1000252fa, model64: 0x252fa00025304},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e6, match64: 0x00000000, model64: 0x2530400025311},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2531100025320, model64: 0x2531100025320},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253200002532a, model64: 0x2532a00025333},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253330002533d, model64: 0x2533d00025347},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e7, match64: 0x00000000, model64: 0x2534700025354},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e8, match64: 0x00000000, model64: 0x2535400025363},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253630002536d, model64: 0x2536d0002537a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2537a00025384, model64: 0x253840002538e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2538e00025398, model64: 0x25398000253a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253a1000253ab, model64: 0x253ab000253ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x29e9, match64: 0x00000000, model64: 0x253ba000253c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ea, match64: 0x00000000, model64: 0x253c7000253d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x29eb, match64: 0x00000000, model64: 0x253d4000253dc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253dc000253ef, model64: 0x253dc000253ef},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x253ef000253ff, model64: 0x253ff0002540a},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ec, match64: 0x00000000, model64: 0x2540a00025411},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ed, match64: 0x00000000, model64: 0x2541100025419},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ee, match64: 0x00000000, model64: 0x2541900025425},
		modelTuple{type64: 0x2700000027, matchRI: 0x29ef, match64: 0x00000000, model64: 0x2542500025432},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f0, match64: 0x00000000, model64: 0x254320002543b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f1, match64: 0x00000000, model64: 0x2543b00025443},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f2, match64: 0x00000000, model64: 0x254430002544b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f3, match64: 0x00000000, model64: 0x2544b00025454},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f4, match64: 0x00000000, model64: 0x254540002545b},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f5, match64: 0x00000000, model64: 0x2545b00025464},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x254640002546e, model64: 0x2546e00025476},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2547600025480, model64: 0x254800002548c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2548c00025495, model64: 0x25495000254a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f6, match64: 0x00000000, model64: 0x254a0000254a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f7, match64: 0x00000000, model64: 0x254a9000254ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f8, match64: 0x00000000, model64: 0x254ae000254b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29f9, match64: 0x00000000, model64: 0x254b2000254b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fa, match64: 0x00000000, model64: 0x254b6000254bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fb, match64: 0x00000000, model64: 0x254bc000254c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fc, match64: 0x00000000, model64: 0x254c2000254c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x29fd, match64: 0x00000000, model64: 0x254c8000254cf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x29fe, match64: 0x00000000, model64: 0x254cf000254db},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x29ff, match64: 0x00000000, model64: 0x254db000254e3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a00, match64: 0x00000000, model64: 0x254e3000254f2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a01, match64: 0x00000000, model64: 0x254f2000254fb},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a02, match64: 0x00000000, model64: 0x254fb00025500},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a03, match64: 0x00000000, model64: 0x255000002550c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a04, match64: 0x00000000, model64: 0x2550c0002551c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a05, match64: 0x00000000, model64: 0x2551c00025529},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a06, match64: 0x00000000, model64: 0x2552900025536},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a07, match64: 0x00000000, model64: 0x255360002553e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a08, match64: 0x00000000, model64: 0x2553e00025546},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a09, match64: 0x00000000, model64: 0x255460002554e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0a, match64: 0x00000000, model64: 0x2554e00025554},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0b, match64: 0x00000000, model64: 0x255540002555d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0c, match64: 0x00000000, model64: 0x2555d0002556a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0d, match64: 0x00000000, model64: 0x2556a0002557b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0e, match64: 0x00000000, model64: 0x2557b00025587},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2a0f, match64: 0x00000000, model64: 0x2558700025597},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x255970002559f, model64: 0x2559f000255b6},
		modelTuple{type64: 0x7130000071d, matchRI: -0x0001, match64: 0x255b6000255bf, model64: 0x255bf000255d9},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a10, match64: 0x00000000, model64: 0x255d9000255ec},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a11, match64: 0x00000000, model64: 0x255ec000255f8},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a12, match64: 0x00000000, model64: 0x255f800025601},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a13, match64: 0x00000000, model64: 0x256010002560a},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a14, match64: 0x00000000, model64: 0x2560a00025611},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a15, match64: 0x00000000, model64: 0x2561100025618},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a16, match64: 0x00000000, model64: 0x2561800025622},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a17, match64: 0x00000000, model64: 0x256220002562f},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a18, match64: 0x00000000, model64: 0x2562f00025636},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a19, match64: 0x00000000, model64: 0x256360002563d},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1a, match64: 0x00000000, model64: 0x2561100025618},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1b, match64: 0x00000000, model64: 0x2563d00025647},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1c, match64: 0x00000000, model64: 0x256470002564e},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1d, match64: 0x00000000, model64: 0x2564e00025659},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1e, match64: 0x00000000, model64: 0x2565900025660},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a1f, match64: 0x00000000, model64: 0x2566000025672},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a20, match64: 0x00000000, model64: 0x2567200025688},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a21, match64: 0x00000000, model64: 0x2565900025660},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a22, match64: 0x00000000, model64: 0x2568800025693},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a23, match64: 0x00000000, model64: 0x256930002569d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a24, match64: 0x00000000, model64: 0x2569d000256a7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a25, match64: 0x00000000, model64: 0x256a7000256b1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a26, match64: 0x00000000, model64: 0x256b1000256c0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a27, match64: 0x00000000, model64: 0x256c0000256cd},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a28, match64: 0x00000000, model64: 0x256cd000256d9},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x256d9000256de, model64: 0x256de000256ea},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x256ea000256fd, model64: 0x256ea000256fd},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x256fd0002570f, model64: 0x256fd0002570f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a29, match64: 0x00000000, model64: 0x2570f0002571b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2a, match64: 0x00000000, model64: 0x2571b00025728},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2b, match64: 0x00000000, model64: 0x2572800025736},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2c, match64: 0x00000000, model64: 0x2573600025744},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2d, match64: 0x00000000, model64: 0x2574400025754},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2e, match64: 0x00000000, model64: 0x2575400025763},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a2f, match64: 0x00000000, model64: 0x2576300025776},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a30, match64: 0x00000000, model64: 0x2577600025786},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a31, match64: 0x00000000, model64: 0x2578600025798},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a32, match64: 0x00000000, model64: 0x25798000257ac},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a33, match64: 0x00000000, model64: 0x257ac000257b9},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a34, match64: 0x00000000, model64: 0x257b9000257c7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a35, match64: 0x00000000, model64: 0x2573600025744},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a36, match64: 0x00000000, model64: 0x257c7000257d7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a37, match64: 0x00000000, model64: 0x257d7000257e8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a38, match64: 0x00000000, model64: 0x257e8000257f8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a39, match64: 0x00000000, model64: 0x257f800025809},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3a, match64: 0x00000000, model64: 0x2580900025820},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3b, match64: 0x00000000, model64: 0x2582000025831},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3c, match64: 0x00000000, model64: 0x2583100025848},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3d, match64: 0x00000000, model64: 0x2584800025856},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3e, match64: 0x00000000, model64: 0x2585600025863},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a3f, match64: 0x00000000, model64: 0x2586300025875},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a40, match64: 0x00000000, model64: 0x2587500025883},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a41, match64: 0x00000000, model64: 0x2588300025891},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a42, match64: 0x00000000, model64: 0x25891000258a3},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a43, match64: 0x00000000, model64: 0x258a3000258b7},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a44, match64: 0x00000000, model64: 0x258b7000258cc},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a45, match64: 0x00000000, model64: 0x258cc000258de},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a46, match64: 0x00000000, model64: 0x2585600025863},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a47, match64: 0x00000000, model64: 0x258de000258ef},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a48, match64: 0x00000000, model64: 0x258ef00025900},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x259000002590a, model64: 0x2590a00025918},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a49, match64: 0x00000000, model64: 0x259180002592a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4a, match64: 0x00000000, model64: 0x2592a0002593e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4b, match64: 0x00000000, model64: 0x2593e0002594b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4c, match64: 0x00000000, model64: 0x2594b0002595d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4d, match64: 0x00000000, model64: 0x2595d0002596f},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4e, match64: 0x00000000, model64: 0x2596f00025980},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x259800002598a, model64: 0x2598a0002599e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a4f, match64: 0x00000000, model64: 0x2599e000259ae},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a50, match64: 0x00000000, model64: 0x259ae000259bb},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a51, match64: 0x00000000, model64: 0x259bb000259d0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a52, match64: 0x00000000, model64: 0x259d0000259e0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a53, match64: 0x00000000, model64: 0x259e0000259f2},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a54, match64: 0x00000000, model64: 0x259f200025a00},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a55, match64: 0x00000000, model64: 0x25a0000025a12},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a56, match64: 0x00000000, model64: 0x25a1200025a25},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a57, match64: 0x00000000, model64: 0x25a2500025a39},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a58, match64: 0x00000000, model64: 0x25a3900025a4e},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a59, match64: 0x00000000, model64: 0x25a4e00025a60},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5a, match64: 0x00000000, model64: 0x25a6000025a70},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5b, match64: 0x00000000, model64: 0x25a7000025a81},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5c, match64: 0x00000000, model64: 0x25a8100025a91},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5d, match64: 0x00000000, model64: 0x25a9100025aa1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5e, match64: 0x00000000, model64: 0x25aa100025aaf},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a5f, match64: 0x00000000, model64: 0x25aaf00025ac0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a60, match64: 0x00000000, model64: 0x25ac000025ad1},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a61, match64: 0x00000000, model64: 0x25ad100025add},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a62, match64: 0x00000000, model64: 0x25add00025af0},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a63, match64: 0x00000000, model64: 0x25af000025b00},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a64, match64: 0x00000000, model64: 0x25b0000025b0d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a65, match64: 0x00000000, model64: 0x25b0d00025b1a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a66, match64: 0x00000000, model64: 0x25b1a00025b2a},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a67, match64: 0x00000000, model64: 0x25b2a00025b36},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a68, match64: 0x00000000, model64: 0x25b3600025b4b},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a69, match64: 0x00000000, model64: 0x25b4b00025b5c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a6a, match64: 0x00000000, model64: 0x25b5c00025b69},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a6b, match64: 0x00000000, model64: 0x25b6900025b71},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x25b7100025b7c, model64: 0x25b7c00025b87},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a6c, match64: 0x00000000, model64: 0x25b8700025b95},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x25b9500025ba4, model64: 0x25b9500025ba4},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a6d, match64: 0x00000000, model64: 0x25ba400025bae},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a6e, match64: 0x00000000, model64: 0x25bae00025bb8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a6f, match64: 0x00000000, model64: 0x25bb800025bbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a70, match64: 0x00000000, model64: 0x25bbf00025bca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a71, match64: 0x00000000, model64: 0x25bca00025bd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a72, match64: 0x00000000, model64: 0x25bd300025bd8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a73, match64: 0x00000000, model64: 0x25bd300025bd8},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2a74, match64: 0x00000000, model64: 0xa44c0000a450},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a75, match64: 0x00000000, model64: 0x25bd800025bdd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a76, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a78, match64: 0x00000000, model64: 0x25be100025be5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7a, match64: 0x00000000, model64: 0x25be900025bf1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7b, match64: 0x00000000, model64: 0x25bf100025bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7c, match64: 0x00000000, model64: 0x25bfb00025c02},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7d, match64: 0x00000000, model64: 0x25c0200025c0c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7e, match64: 0x00000000, model64: 0x25c0c00025c12},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a7f, match64: 0x00000000, model64: 0x25c1200025c18},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a80, match64: 0x00000000, model64: 0x25c1800025c20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a81, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a82, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a83, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a85, match64: 0x00000000, model64: 0x25c2400025c34},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a86, match64: 0x00000000, model64: 0x25c3400025c3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a87, match64: 0x00000000, model64: 0x25c3e00025c4d},
		modelTuple{type64: 0xb6060000b61b, matchRI: 0x2a88, match64: 0x00000000, model64: 0x25c4d00025c53},
		modelTuple{type64: 0x24300000245, matchRI: 0x2a89, match64: 0x00000000, model64: 0x25c5300025c5a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25c6700025c6d, model64: 0x25c6d00025c73},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a8c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a8e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a8f, match64: 0x00000000, model64: 0x25c7900025c7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a90, match64: 0x00000000, model64: 0x25c7b00025c82},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25c8200025c8b, model64: 0x25c8b00025c94},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a92, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25c9c00025ca1, model64: 0x25ca100025cb0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25cb000025cb7, model64: 0x25cb000025cb7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x25cb700025cbe, model64: 0x25cbe00025ccd},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x25cd200025cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a94, match64: 0x00000000, model64: 0x25ce400025cf2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a95, match64: 0x00000000, model64: 0x82810000828c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a96, match64: 0x00000000, model64: 0x994f0000995a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d0000025d09, model64: 0x25d0900025d14},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9e, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d2400025d32, model64: 0x25d3200025d3b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d3b00025d46, model64: 0x25d4600025d4c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d4c00025d59, model64: 0x25d5900025d62},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d6200025d6e, model64: 0x25d6e00025d75},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25d7500025d81, model64: 0x25d8100025d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x2a9f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x25d9a00025dad, model64: 0x25dad00025db3},
		modelTuple{type64: 0x24300000245, matchRI: 0x2aa3, match64: 0x00000000, model64: 0x25db300025dba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa4, match64: 0x00000000, model64: 0x25dba00025dc4},
		modelTuple{type64: 0x281300002820, matchRI: 0x2aa5, match64: 0x00000000, model64: 0x25dc400025dd6},
		modelTuple{type64: 0x281300002820, matchRI: -0x0001, match64: 0x25dd600025de5, model64: 0x25de500025dee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25df400025e03, model64: 0x25e0300025e09},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa7, match64: 0x00000000, model64: 0x25e0900025e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e1000025e1b, model64: 0x25e0900025e10},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e1b00025e26, model64: 0x25e2600025e2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e2d00025e3b, model64: 0x25e3b00025e43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e4300025e4c, model64: 0x25e4c00025e55},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e5500025e5e, model64: 0x25e5e00025e68},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e6800025e71, model64: 0x25e7100025e7b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa8, match64: 0x00000000, model64: 0x25e7b00025e83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e8300025e8c, model64: 0x25e8c00025e95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25e9500025e9e, model64: 0x25e9e00025ea7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25ea700025eb3, model64: 0x25eb300025ebb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25ebb00025ec3, model64: 0x25ec300025ece},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25ece00025ed7, model64: 0x25ed700025ee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aa9, match64: 0x00000000, model64: 0x25ee300025eed},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25eed00025ef6, model64: 0x25ef600025eff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f0200025f07, model64: 0x25f0700025f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f0f00025f17, model64: 0x25f1700025f21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f2100025f27, model64: 0x25f2700025f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aad, match64: 0x00000000, model64: 0xd1730000d176},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2aae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab0, match64: 0x00000000, model64: 0x25f3b00025f42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f4200025f4c, model64: 0x25f4c00025f54},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f5400025f5c, model64: 0x25f5c00025f65},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f6500025f69, model64: 0x25f6900025f6e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f6e00025f75, model64: 0x25f7500025f7e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f7e00025f84, model64: 0x25f8400025f8a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f8a00025f90, model64: 0x25f9000025f96},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab1, match64: 0x00000000, model64: 0x25f9600025f9b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f9b00025f9f, model64: 0x25f9b00025f9f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25f9f00025fa9, model64: 0x25f9f00025fa9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab2, match64: 0x00000000, model64: 0x25fa900025fb0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25fb000025fb9, model64: 0x25fb000025fb9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab3, match64: 0x00000000, model64: 0x25fb900025fc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25fc100025fcb, model64: 0x25fcb00025fd5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x25fd500025fde, model64: 0x25fde00025fe8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab4, match64: 0x00000000, model64: 0x25fe800025ff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab5, match64: 0x00000000, model64: 0x25ff200025fff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ab6, match64: 0x00000000, model64: 0x25fe800025ff2},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x260060002600d},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x1547900015481},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aba, match64: 0x00000000, model64: 0x163c3000163ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abb, match64: 0x00000000, model64: 0x2601500026021},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abd, match64: 0x00000000, model64: 0x260260002602d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2abf, match64: 0x00000000, model64: 0x260330002603a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac4, match64: 0x00000000, model64: 0x2604100026049},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac5, match64: 0x00000000, model64: 0x2604900026052},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac6, match64: 0x00000000, model64: 0x2605200026059},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac7, match64: 0x00000000, model64: 0x260590002605f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac8, match64: 0x00000000, model64: 0x2605f00026067},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ac9, match64: 0x00000000, model64: 0x2606700026072},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aca, match64: 0x00000000, model64: 0x2607200026079},
		modelTuple{type64: 0x2700000027, matchRI: 0x2acb, match64: 0x00000000, model64: 0x84c0000084f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2607900026080, model64: 0x260800002608b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2acc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ace, match64: 0x00000000, model64: 0x82dc000082df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad0, match64: 0x00000000, model64: 0x26099000260a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad2, match64: 0x00000000, model64: 0x260a5000260ab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x260b0000260b5, model64: 0x260b0000260b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ad9, match64: 0x00000000, model64: 0x260c3000260d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ada, match64: 0x00000000, model64: 0x260d3000260dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2adb, match64: 0x00000000, model64: 0x260dd000260e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2adc, match64: 0x00000000, model64: 0x260e9000260f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2add, match64: 0x00000000, model64: 0x260f400026101},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ade, match64: 0x00000000, model64: 0x261010002610d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2adf, match64: 0x00000000, model64: 0x2610d0002611a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae0, match64: 0x00000000, model64: 0x2611a00026127},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae1, match64: 0x00000000, model64: 0x2612700026132},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae2, match64: 0x00000000, model64: 0x2613200026141},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae3, match64: 0x00000000, model64: 0x261410002614e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae4, match64: 0x00000000, model64: 0x2614e0002615b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae5, match64: 0x00000000, model64: 0x2615b00026167},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae6, match64: 0x00000000, model64: 0x2616700026175},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae7, match64: 0x00000000, model64: 0x2617500026181},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae8, match64: 0x00000000, model64: 0x261810002618e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ae9, match64: 0x00000000, model64: 0x2618e000261a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aea, match64: 0x00000000, model64: 0x261a0000261ad},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aeb, match64: 0x00000000, model64: 0x261ad000261b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aec, match64: 0x00000000, model64: 0x261b9000261c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aed, match64: 0x00000000, model64: 0x261c5000261d0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x261d0000261dc, model64: 0x261dc000261e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x261e8000261f4, model64: 0x261f400026200},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x262000002620c, model64: 0x2620c00026218},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af0, match64: 0x00000000, model64: 0x3150000031a},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af3, match64: 0x00000000, model64: 0x2622a00026239},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af4, match64: 0x00000000, model64: 0x2623900026247},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af5, match64: 0x00000000, model64: 0x2624700026259},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af6, match64: 0x00000000, model64: 0x2625900026262},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af7, match64: 0x00000000, model64: 0x262620002626f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af8, match64: 0x00000000, model64: 0x2626f0002627d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2af9, match64: 0x00000000, model64: 0x2627d00026287},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afa, match64: 0x00000000, model64: 0x2628700026291},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afb, match64: 0x00000000, model64: 0x2629100026299},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afc, match64: 0x00000000, model64: 0x26299000262a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afd, match64: 0x00000000, model64: 0x262a1000262aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2afe, match64: 0x00000000, model64: 0x262aa000262b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2aff, match64: 0x00000000, model64: 0x262b6000262c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b00, match64: 0x00000000, model64: 0x262c3000262cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b01, match64: 0x00000000, model64: 0x262cf000262d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b02, match64: 0x00000000, model64: 0x262d9000262e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b03, match64: 0x00000000, model64: 0x39100000393},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b04, match64: 0x00000000, model64: 0x262e6000262ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b05, match64: 0x00000000, model64: 0x262ee000262f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b06, match64: 0x00000000, model64: 0x262f7000262ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b07, match64: 0x00000000, model64: 0x262ff0002630e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b08, match64: 0x00000000, model64: 0x2630e0002631b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b09, match64: 0x00000000, model64: 0x2631b00026329},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0a, match64: 0x00000000, model64: 0x2632900026339},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0b, match64: 0x00000000, model64: 0x2633900026348},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0c, match64: 0x00000000, model64: 0x2634800026358},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0d, match64: 0x00000000, model64: 0x2635800026361},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2636100026369, model64: 0x2636900026372},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2637200026377, model64: 0x2637700026380},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2638000026386, model64: 0x2638600026390},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0e, match64: 0x00000000, model64: 0x2639000026399},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x263990002639e, model64: 0x2639e000263aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b0f, match64: 0x00000000, model64: 0x263aa000263b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b10, match64: 0x00000000, model64: 0x263b7000263bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b11, match64: 0x00000000, model64: 0x263bf000263cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b12, match64: 0x00000000, model64: 0x263cc000263da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b13, match64: 0x00000000, model64: 0x263da000263e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b14, match64: 0x00000000, model64: 0x263e8000263ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b15, match64: 0x00000000, model64: 0x263ee000263f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b16, match64: 0x00000000, model64: 0x263f800026406},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b17, match64: 0x00000000, model64: 0x2640600026415},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b18, match64: 0x00000000, model64: 0x264150002641f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b19, match64: 0x00000000, model64: 0x2641f00026426},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1a, match64: 0x00000000, model64: 0x2642600026433},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2643300026439, model64: 0x2643900026443},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1b, match64: 0x00000000, model64: 0x264430002644a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2644a00026450, model64: 0x264500002645e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2645e00026465, model64: 0x2646500026472},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2647200026478, model64: 0x2647800026486},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264860002648b, model64: 0x2648b00026496},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264960002649c, model64: 0x2649c000264ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264ad000264b3, model64: 0x264b3000264c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1c, match64: 0x00000000, model64: 0x264c0000264cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1d, match64: 0x00000000, model64: 0x264cb000264d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264d5000264da, model64: 0x264da000264e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264e4000264e9, model64: 0x264e9000264f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x264f0000264f5, model64: 0x264f500026501},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2650100026507, model64: 0x2650700026517},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1e, match64: 0x00000000, model64: 0x265170002651f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b1f, match64: 0x00000000, model64: 0x2651f00026526},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b20, match64: 0x00000000, model64: 0x2652600026530},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b21, match64: 0x00000000, model64: 0x2653000026537},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b22, match64: 0x00000000, model64: 0x265370002653f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b23, match64: 0x00000000, model64: 0x2653f00026542},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b24, match64: 0x00000000, model64: 0x2654200026545},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b25, match64: 0x00000000, model64: 0x265450002654b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b26, match64: 0x00000000, model64: 0x2654b00026553},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b27, match64: 0x00000000, model64: 0x265530002655f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b28, match64: 0x00000000, model64: 0x2655f00026563},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b29, match64: 0x00000000, model64: 0x265630002656b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2a, match64: 0x00000000, model64: 0x2656b00026573},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2b, match64: 0x00000000, model64: 0x23150000231a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2c, match64: 0x00000000, model64: 0x1eb050001eb0d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2d, match64: 0x00000000, model64: 0x265730002657d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2e, match64: 0x00000000, model64: 0x2657d00026584},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b2f, match64: 0x00000000, model64: 0x2358300023585},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b30, match64: 0x00000000, model64: 0x265840002658b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b31, match64: 0x00000000, model64: 0x2658b00026595},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b32, match64: 0x00000000, model64: 0x26595000265a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b33, match64: 0x00000000, model64: 0x265a0000265a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b34, match64: 0x00000000, model64: 0x265a8000265b0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b35, match64: 0x00000000, model64: 0x265b0000265bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b36, match64: 0x00000000, model64: 0x265bb000265c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b37, match64: 0x00000000, model64: 0x265c4000265cd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b38, match64: 0x00000000, model64: 0x265cd000265d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b39, match64: 0x00000000, model64: 0x265d3000265dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3a, match64: 0x00000000, model64: 0x265dc000265e6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3b, match64: 0x00000000, model64: 0x265e6000265ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3c, match64: 0x00000000, model64: 0x265ec000265f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3d, match64: 0x00000000, model64: 0x265f1000265fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3e, match64: 0x00000000, model64: 0x265fc0002660a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2660a0002660f, model64: 0x2660f0002661a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2661a0002661e, model64: 0x2661e00026625},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2662500026629, model64: 0x2662900026631},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b3f, match64: 0x00000000, model64: 0x266310002663e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b40, match64: 0x00000000, model64: 0x2663e00026647},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2664700026653, model64: 0x2664700026653},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2665300026660, model64: 0x2666000026669},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b41, match64: 0x00000000, model64: 0x2666900026674},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2667400026678, model64: 0x266780002667c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2667c00026681, model64: 0x2668100026689},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b42, match64: 0x00000000, model64: 0x2668900026690},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b43, match64: 0x00000000, model64: 0x2669000026698},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b44, match64: 0x00000000, model64: 0x266980002669c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2669c000266a1, model64: 0xceca0000ced0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b45, match64: 0x00000000, model64: 0x266a1000266a9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266a9000266ad, model64: 0x266ad000266b9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b46, match64: 0x00000000, model64: 0x266b9000266c2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266c2000266cf, model64: 0x266cf000266d7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x266d7000266dc, model64: 0x266dc000266e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b47, match64: 0x00000000, model64: 0x266e4000266e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b48, match64: 0x00000000, model64: 0x266e8000266ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b49, match64: 0x00000000, model64: 0x266ed000266fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4a, match64: 0x00000000, model64: 0x266fa0002670a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4b, match64: 0x00000000, model64: 0x2670a00026719},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4c, match64: 0x00000000, model64: 0x2671900026725},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4d, match64: 0x00000000, model64: 0x2672500026732},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4e, match64: 0x00000000, model64: 0x267320002673c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b4f, match64: 0x00000000, model64: 0x2673c0002674a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b50, match64: 0x00000000, model64: 0x2674a00026757},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b51, match64: 0x00000000, model64: 0x267570002675f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b52, match64: 0x00000000, model64: 0x2675f0002676c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b53, match64: 0x00000000, model64: 0x2676c00026779},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b54, match64: 0x00000000, model64: 0x2677900026781},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b55, match64: 0x00000000, model64: 0x2678100026789},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b56, match64: 0x00000000, model64: 0x2678900026795},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b57, match64: 0x00000000, model64: 0x26795000267a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b58, match64: 0x00000000, model64: 0x267a2000267aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b59, match64: 0x00000000, model64: 0x267aa000267b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5a, match64: 0x00000000, model64: 0x267b3000267bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5b, match64: 0x00000000, model64: 0x267bc000267ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5c, match64: 0x00000000, model64: 0x267ca000267d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5d, match64: 0x00000000, model64: 0x267d2000267e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5e, match64: 0x00000000, model64: 0x267e2000267ea},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b5f, match64: 0x00000000, model64: 0x2673c0002674a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b60, match64: 0x00000000, model64: 0x267ea000267f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b61, match64: 0x00000000, model64: 0x266310002663e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b62, match64: 0x00000000, model64: 0x267f7000267ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b63, match64: 0x00000000, model64: 0x267ff0002680b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b64, match64: 0x00000000, model64: 0x2680b00026818},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b65, match64: 0x00000000, model64: 0x2681800026825},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b66, match64: 0x00000000, model64: 0x268250002682d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b67, match64: 0x00000000, model64: 0x2682d00026839},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b68, match64: 0x00000000, model64: 0x2683900026841},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b69, match64: 0x00000000, model64: 0x268410002684c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6a, match64: 0x00000000, model64: 0x267b3000267bc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6b, match64: 0x00000000, model64: 0x2684c00026854},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6c, match64: 0x00000000, model64: 0x2685400026861},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6d, match64: 0x00000000, model64: 0x268610002686d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6e, match64: 0x00000000, model64: 0x2686d0002687a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b6f, match64: 0x00000000, model64: 0x2687a00026887},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b70, match64: 0x00000000, model64: 0x268870002688f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b71, match64: 0x00000000, model64: 0x2688f00026898},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b72, match64: 0x00000000, model64: 0x26898000268a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b73, match64: 0x00000000, model64: 0x268a1000268b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b74, match64: 0x00000000, model64: 0x268b1000268c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b75, match64: 0x00000000, model64: 0x268c4000268d2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b76, match64: 0x00000000, model64: 0x268d2000268da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b77, match64: 0x00000000, model64: 0x268da000268e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b78, match64: 0x00000000, model64: 0x268e3000268ee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b79, match64: 0x00000000, model64: 0x268ee000268f7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7a, match64: 0x00000000, model64: 0x268f7000268ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7b, match64: 0x00000000, model64: 0x268ff00026907},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7c, match64: 0x00000000, model64: 0x2690700026910},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7d, match64: 0x00000000, model64: 0x269100002691b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7e, match64: 0x00000000, model64: 0x2691b00026928},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b7f, match64: 0x00000000, model64: 0x2692800026935},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269350002693d, model64: 0x2693d0002694b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2694b00026953, model64: 0x2695300026961},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269610002696a, model64: 0x2696a00026973},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269730002697b, model64: 0x2697b00026984},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269840002698d, model64: 0x2698d0002699c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2699c000269a5, model64: 0x269a5000269b4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269b4000269bc, model64: 0x269bc000269ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269ca000269d3, model64: 0x269d3000269e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269e1000269e9, model64: 0x269e9000269f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x269f6000269fe, model64: 0x269fe00026a0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a0e00026a16, model64: 0x26a1600026a1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b80, match64: 0x00000000, model64: 0x26a1f00026a2d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b81, match64: 0x00000000, model64: 0x2688f00026898},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b82, match64: 0x00000000, model64: 0x26a2d00026a3a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b83, match64: 0x00000000, model64: 0xb4830000b48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b84, match64: 0x00000000, model64: 0x26a3a00026a42},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a4200026a46, model64: 0x26a4600026a4e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a4e00026a53, model64: 0x26a5300026a5e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a5e00026a64, model64: 0x26a6400026a70},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a7000026a76, model64: 0x26a7600026a84},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a8400026a88, model64: 0x26a8800026a93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26a9300026a97, model64: 0x26a9700026aa3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26aa300026aa7, model64: 0x26aa700026ab4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ab400026aba, model64: 0x26aba00026ac9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ac900026ace, model64: 0x26ace00026ad7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ad700026adb, model64: 0x26adb00026ae2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ae200026ae8, model64: 0x26ae800026af4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26af400026af8, model64: 0x26af800026b07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b0700026b0b, model64: 0x26b0b00026b16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b1600026b1a, model64: 0x26b1a00026b25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b85, match64: 0x00000000, model64: 0x26b2500026b30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b86, match64: 0x00000000, model64: 0x26b3000026b3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b3c00026b41, model64: 0x26b4100026b4b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b4b00026b51, model64: 0x26b5100026b5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b5d00026b63, model64: 0x26b6300026b6f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b6f00026b75, model64: 0x26b7500026b7f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b7f00026b89, model64: 0x26b8900026b93},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26b9300026b98, model64: 0x26b9300026b98},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b87, match64: 0x00000000, model64: 0x26b9800026ba7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ba700026bad, model64: 0x26bad00026bc1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26bc100026bc7, model64: 0x26bc700026bd7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b88, match64: 0x00000000, model64: 0x26bd700026bde},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b89, match64: 0x00000000, model64: 0x26bde00026be3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8a, match64: 0x00000000, model64: 0x26be300026beb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8b, match64: 0x00000000, model64: 0x26beb00026bf2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26bf200026bf6, model64: 0x26bf600026bff},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26bff00026c03, model64: 0x26c0300026c0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c0a00026c0e, model64: 0x26c0e00026c16},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c1600026c1a, model64: 0x26c1a00026c21},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8c, match64: 0x00000000, model64: 0x26c2100026c2d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c2d00026c32, model64: 0x26c3200026c3c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c3c00026c40, model64: 0x26c4000026c49},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c4900026c4d, model64: 0x26c4d00026c56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c5600026c5a, model64: 0x26c5a00026c60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c6000026c64, model64: 0x26c6400026c6d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8d, match64: 0x00000000, model64: 0x26c6d00026c78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c7800026c7e, model64: 0x26c7e00026c89},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26c8900026c8f, model64: 0x26c8f00026c9a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8e, match64: 0x00000000, model64: 0x26c9a00026ca5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ca500026cab, model64: 0x26cab00026cb9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cb900026cbf, model64: 0x26cbf00026ccd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b8f, match64: 0x00000000, model64: 0x26ccd00026cd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b90, match64: 0x00000000, model64: 0x26cd300026cd9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b91, match64: 0x00000000, model64: 0x26cd900026ce0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26ce000026ce6, model64: 0x26ce600026cf1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cf100026cf5, model64: 0x26cf500026cfe},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26cfe00026d04, model64: 0x26d0400026d10},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b92, match64: 0x00000000, model64: 0x26d1000026d17},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b93, match64: 0x00000000, model64: 0x26d1700026d1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b94, match64: 0x00000000, model64: 0x26d1d00026d26},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d2600026d2b, model64: 0x26d2b00026d36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b95, match64: 0x00000000, model64: 0x263e8000263ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d3600026d3b, model64: 0x26d3b00026d45},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d4500026d4a, model64: 0x26d4a00026d51},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d5100026d57, model64: 0x26d5700026d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b96, match64: 0x00000000, model64: 0x26d6200026d6d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d6d00026d72, model64: 0x26d7200026d78},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d7800026d7f, model64: 0x26d7800026d7f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b97, match64: 0x00000000, model64: 0x26d7f00026d83},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d8300026d89, model64: 0x26b2500026b30},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x105590001055d, model64: 0x26d8900026d8e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d8e00026d92, model64: 0x26d9200026d98},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b98, match64: 0x00000000, model64: 0x1d4000001d43},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26d9800026d9d, model64: 0x26d9d00026da4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b99, match64: 0x00000000, model64: 0x26da400026da9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9a, match64: 0x00000000, model64: 0x26da900026dad},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9b, match64: 0x00000000, model64: 0x26dad00026db2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9c, match64: 0x00000000, model64: 0x26db200026dbf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9d, match64: 0x00000000, model64: 0x26dbf00026dce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9e, match64: 0x00000000, model64: 0x26dce00026dd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2b9f, match64: 0x00000000, model64: 0x26dd400026de0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba0, match64: 0x00000000, model64: 0x26de000026df1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba1, match64: 0x00000000, model64: 0x26df100026df7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26df700026e00, model64: 0x26e0000026e0e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e0e00026e16, model64: 0x26e1600026e21},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e2100026e29, model64: 0x26e2900026e39},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26e3900026e41, model64: 0x26e4100026e49},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba2, match64: 0x00000000, model64: 0x26e4900026e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba3, match64: 0x00000000, model64: 0x26e4900026e56},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ba4, match64: 0x00000000, model64: 0x26e5600026e5d},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2ba5, match64: 0x00000000, model64: 0x26e5d00026e67},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x26e6700026e6f, model64: 0x26e6f00026e80},
		modelTuple{type64: 0x24300000245, matchRI: 0x2ba6, match64: 0x00000000, model64: 0x26e8000026e8c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ba7, match64: 0x00000000, model64: 0x26e8c00026e9a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ba8, match64: 0x00000000, model64: 0x26e9a00026ea8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ba9, match64: 0x00000000, model64: 0x26ea800026eb8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2baa, match64: 0x00000000, model64: 0x26eb800026ebe},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bab, match64: 0x00000000, model64: 0x26ebe00026ec7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bac, match64: 0x00000000, model64: 0x26ec700026ed0},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bad, match64: 0x00000000, model64: 0x26ed000026ee1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bae, match64: 0x00000000, model64: 0x26ee100026eed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2baf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bb0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb1, match64: 0x00000000, model64: 0xb4830000b48b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26eed00026efa, model64: 0x26efa00026f03},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f0300026f08, model64: 0x26f0800026f11},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb2, match64: 0x00000000, model64: 0x26f1100026f1b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f1b00026f29, model64: 0x26f2900026f33},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f3300026f38, model64: 0x26f3800026f41},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb3, match64: 0x00000000, model64: 0x268870002688f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb4, match64: 0x00000000, model64: 0x268d2000268da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb5, match64: 0x00000000, model64: 0x268da000268e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb6, match64: 0x00000000, model64: 0xb4830000b48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb7, match64: 0x00000000, model64: 0xb4830000b48b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb8, match64: 0x00000000, model64: 0x26f4100026f4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bb9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bba, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f4e00026f52, model64: 0xab550000ab57},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f5200026f57, model64: 0x26f5700026f5f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f5f00026f64, model64: 0x26f6400026f6b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f6b00026f70, model64: 0x26f7000026f77},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f7700026f7c, model64: 0x26f7700026f7c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f7c00026f81, model64: 0x26f7c00026f81},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f8100026f86, model64: 0x26f8600026f8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f8c00026f91, model64: 0x26f9100026f98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26f9800026f9d, model64: 0x26f9d00026fa4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fa400026fa9, model64: 0x26fa400026fa9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fa900026fb0, model64: 0x26fb000026fb7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fb700026fbb, model64: 0x26fbb00026fc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fc300026fc7, model64: 0x26fc700026fcc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x26fcc00026fcf, model64: 0x26fcf00026fd4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbd, match64: 0x00000000, model64: 0x26fd400026fdb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbe, match64: 0x00000000, model64: 0x26fdb00026fdf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bbf, match64: 0x00000000, model64: 0x26fdf00026fe9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc0, match64: 0x00000000, model64: 0x26fe900026ff2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc1, match64: 0x00000000, model64: 0x26ff200026ffb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc2, match64: 0x00000000, model64: 0x26ffb00027002},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc3, match64: 0x00000000, model64: 0x2700200027006},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc4, match64: 0x00000000, model64: 0x2700600027011},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc5, match64: 0x00000000, model64: 0x2701100027016},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc6, match64: 0x00000000, model64: 0x2701600027025},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc7, match64: 0x00000000, model64: 0x2702500027030},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc8, match64: 0x00000000, model64: 0x2703000027034},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bc9, match64: 0x00000000, model64: 0x270340002703e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bca, match64: 0x00000000, model64: 0x2703e00027047},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bcb, match64: 0x00000000, model64: 0x2704700027050},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bcc, match64: 0x00000000, model64: 0x2705000027058},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bcd, match64: 0x00000000, model64: 0x270580002705d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2705d00027066, model64: 0x270660002706f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2706f00027076, model64: 0x2707600027079},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd2, match64: 0x00000000, model64: 0x12ff500012ffc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd3, match64: 0x00000000, model64: 0x2708d00027091},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270910002709c, model64: 0x2709c000270a8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270a8000270b3, model64: 0x270b3000270c0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270c0000270cb, model64: 0x270cb000270d6},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x270d6000270dc, model64: 0x270dc000270e0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x5dcd00005dd3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd6, match64: 0x00000000, model64: 0x270ed000270f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x270f4000270fc, model64: 0x270fc00027104},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bd8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2bd9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x7130000071d, matchRI: 0x2bda, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x8e00000099, matchRI: 0x2bdb, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bdc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bde, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bdf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2711d00027127, model64: 0x2712700027132},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be1, match64: 0x00000000, model64: 0x271320002713f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be2, match64: 0x00000000, model64: 0x2713f0002714e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be3, match64: 0x00000000, model64: 0x2714e0002715e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be4, match64: 0x00000000, model64: 0x2715e0002716e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be5, match64: 0x00000000, model64: 0x2716e0002717b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be6, match64: 0x00000000, model64: 0x2717b00027186},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be7, match64: 0x00000000, model64: 0x2718600027190},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be8, match64: 0x00000000, model64: 0x271900002719c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2be9, match64: 0x00000000, model64: 0x2719c000271ab},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bea, match64: 0x00000000, model64: 0x271ab000271b7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2beb, match64: 0x00000000, model64: 0x271b7000271c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bec, match64: 0x00000000, model64: 0x271c4000271d1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bed, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x271d6000271db, model64: 0x271db000271e3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x271e3000271e8, model64: 0x271e8000271f0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x271f0000271f5, model64: 0x271f5000271f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x271f8000271fd, model64: 0x271fd00027206},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x272060002720b, model64: 0x2710400027109},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf1, match64: 0x00000000, model64: 0x272140002721e},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2722400027228},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2723100027237, model64: 0x272370002723e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2724300027253, model64: 0x2725300027266},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2726600027271, model64: 0x272710002727c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf7, match64: 0x00000000, model64: 0x16ce000016ce6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf8, match64: 0x00000000, model64: 0x272800002728b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bf9, match64: 0x00000000, model64: 0x2728b00027293},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bfa, match64: 0x00000000, model64: 0x272930002729f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2729f000272ac, model64: 0x2729f000272ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bfb, match64: 0x00000000, model64: 0x272ac000272b4},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x272b9000272be, model64: 0x272be000272c3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bfd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2bff, match64: 0x00000000, model64: 0xf5840000f587},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c03, match64: 0x00000000, model64: 0x272d5000272da},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c04, match64: 0x00000000, model64: 0x272da000272e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c05, match64: 0x00000000, model64: 0x272e2000272e8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c06, match64: 0x00000000, model64: 0x2481a00024821},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c07, match64: 0x00000000, model64: 0x272e8000272f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c08, match64: 0x00000000, model64: 0x272f4000272fa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c09, match64: 0x00000000, model64: 0x272fa00027301},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0a, match64: 0x00000000, model64: 0x2730100027308},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0b, match64: 0x00000000, model64: 0x2730800027312},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0c, match64: 0x00000000, model64: 0x8e2b00008e31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0d, match64: 0x00000000, model64: 0x273120002731b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0e, match64: 0x00000000, model64: 0x2731b00027321},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c0f, match64: 0x00000000, model64: 0x2732100027328},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c10, match64: 0x00000000, model64: 0x273280002732f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c11, match64: 0x00000000, model64: 0x2732f00027337},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c12, match64: 0x00000000, model64: 0x2733700027342},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c13, match64: 0x00000000, model64: 0x273420002734d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c14, match64: 0x00000000, model64: 0x2734d00027354},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c15, match64: 0x00000000, model64: 0x273540002735d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c16, match64: 0x00000000, model64: 0x2735d00027362},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c17, match64: 0x00000000, model64: 0x2736200027369},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c18, match64: 0x00000000, model64: 0x273690002736e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c19, match64: 0x00000000, model64: 0x2736e00027376},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1a, match64: 0x00000000, model64: 0x2737600027383},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1b, match64: 0x00000000, model64: 0x2738300027389},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2738d00027395, model64: 0x273950002739d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1e, match64: 0x00000000, model64: 0x2739d000273a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c1f, match64: 0x00000000, model64: 0x273a4000273aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273aa000273b8, model64: 0x273b8000273c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273c6000273cf, model64: 0x273cf000273d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273d8000273e2, model64: 0x273e2000273ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c20, match64: 0x00000000, model64: 0x273ec000273f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x273f3000273fd, model64: 0x273fd00027407},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274070002740e, model64: 0x2740e00027415},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c21, match64: 0x00000000, model64: 0x274150002741c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2741c00027422, model64: 0x2742200027428},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274280002742c, model64: 0x17cf000017cf4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2742c00027433, model64: 0x274330002743a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2743a0002743f, model64: 0x2743f00027444},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274440002744f, model64: 0x2744f0002745a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2745a00027466, model64: 0x2746600027472},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c22, match64: 0x00000000, model64: 0x274720002747c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2747c00027488, model64: 0x2748800027494},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274940002749f, model64: 0x2749f000274aa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274aa000274b1, model64: 0x274b1000274b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c23, match64: 0x00000000, model64: 0x1b06f0001b079},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274b8000274c4, model64: 0x274b8000274c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274c4000274d1, model64: 0x274d1000274df},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274df000274eb, model64: 0x274eb000274f8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x274f800027500, model64: 0x2750000027508},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275080002750e, model64: 0x2750e00027514},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2751400027518, model64: 0x275180002751c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2751c00027523, model64: 0x275230002752a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c24, match64: 0x00000000, model64: 0x2752a00027533},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c25, match64: 0x00000000, model64: 0x2753300027537},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c26, match64: 0x00000000, model64: 0x275370002753c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2753c00027541, model64: 0x2754100027546},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c27, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2c, match64: 0x00000000, model64: 0x2754a00027552},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2d, match64: 0x00000000, model64: 0x2754a00027552},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x275570002755c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c2f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2757700027580},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2758e00027594, model64: 0x2758e00027594},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c33, match64: 0x00000000, model64: 0x2759400027599},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x275990002759f, model64: 0x275990002759f},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x275ac000275b5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275b9000275c1, model64: 0x275c1000275ce},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275ce000275d8, model64: 0x275d8000275e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275e5000275ef, model64: 0x275ef000275fc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x275fc00027609, model64: 0x2760900027616},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c39, match64: 0x00000000, model64: 0x2761800027622},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3a, match64: 0x00000000, model64: 0x2762200027632},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3b, match64: 0x00000000, model64: 0x2763200027643},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3c, match64: 0x00000000, model64: 0xf3b00000f3b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3d, match64: 0x00000000, model64: 0x5cff00005d04},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3e, match64: 0x00000000, model64: 0x276430002764a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c3f, match64: 0x00000000, model64: 0x2764a00027651},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c40, match64: 0x00000000, model64: 0x2765100027658},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c41, match64: 0x00000000, model64: 0x276580002765e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c42, match64: 0x00000000, model64: 0x8e0500008e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c43, match64: 0x00000000, model64: 0x2765e00027661},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c44, match64: 0x00000000, model64: 0x276610002766a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c45, match64: 0x00000000, model64: 0x83090000830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c46, match64: 0x00000000, model64: 0x2766a00027671},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c47, match64: 0x00000000, model64: 0x1e9ae0001e9b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c48, match64: 0x00000000, model64: 0x2767100027680},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2768000027688, model64: 0x2768800027693},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276930002769b, model64: 0x276930002769b},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2769b000276a3, model64: 0x181e4000181e7},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276a3000276ab, model64: 0x276ab000276b1},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276b1000276b9, model64: 0x276b9000276bf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c49, match64: 0x00000000, model64: 0x276bf000276c4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276c4000276cc, model64: 0x276cc000276d0},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276d0000276d8, model64: 0x276d8000276de},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2c4a, match64: 0x00000000, model64: 0x276de000276e4},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276e4000276ee, model64: 0x276ee000276f9},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x276f900027701, model64: 0x159070001590a},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2770100027709, model64: 0x40c0000040f},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2770900027711, model64: 0x2771100027716},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x277160002771d, model64: 0x2771d00027724},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4b, match64: 0x00000000, model64: 0x83090000830f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4c, match64: 0x00000000, model64: 0x3de700003deb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x277240002772c, model64: 0x2772c00027739},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2773900027741, model64: 0x277410002774b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2774b00027753, model64: 0x1ad320001ad36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4d, match64: 0x00000000, model64: 0x277530002775b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4e, match64: 0x00000000, model64: 0x2775b00027762},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c4f, match64: 0x00000000, model64: 0x2776200027767},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c50, match64: 0x00000000, model64: 0x2776700027771},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c51, match64: 0x00000000, model64: 0x2777100027777},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c52, match64: 0x00000000, model64: 0x1625200016259},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c53, match64: 0x00000000, model64: 0x277770002777c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2777c00027783, model64: 0x690400006908},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c54, match64: 0x00000000, model64: 0x2778300027787},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c55, match64: 0x00000000, model64: 0x2778700027790},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c56, match64: 0x00000000, model64: 0x2779000027798},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c57, match64: 0x00000000, model64: 0x27798000277a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c58, match64: 0x00000000, model64: 0x277a0000277a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c59, match64: 0x00000000, model64: 0x277a4000277a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5a, match64: 0x00000000, model64: 0x497100004975},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5b, match64: 0x00000000, model64: 0x277a8000277b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5c, match64: 0x00000000, model64: 0x277b6000277bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5d, match64: 0x00000000, model64: 0x277bb000277c4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5e, match64: 0x00000000, model64: 0x277c4000277d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c5f, match64: 0x00000000, model64: 0x2762200027632},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c60, match64: 0x00000000, model64: 0x277d7000277df},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c61, match64: 0x00000000, model64: 0x277df000277e7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c62, match64: 0x00000000, model64: 0x277e7000277f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c63, match64: 0x00000000, model64: 0x277f8000277fe},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c64, match64: 0x00000000, model64: 0x277fe00027802},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c65, match64: 0x00000000, model64: 0x278020002780b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c66, match64: 0x00000000, model64: 0xb3c50000b3cb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c67, match64: 0x00000000, model64: 0x2780b00027813},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c68, match64: 0x00000000, model64: 0x278130002781c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c69, match64: 0x00000000, model64: 0xce000000ce7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6a, match64: 0x00000000, model64: 0x2781c00027824},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6b, match64: 0x00000000, model64: 0x278240002782f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6c, match64: 0x00000000, model64: 0x2782f0002783a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6d, match64: 0x00000000, model64: 0x2783a00027840},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6e, match64: 0x00000000, model64: 0x2784000027847},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c6f, match64: 0x00000000, model64: 0x2784700027854},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c70, match64: 0x00000000, model64: 0x1e9ae0001e9b4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c71, match64: 0x00000000, model64: 0x278540002785e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c72, match64: 0x00000000, model64: 0x56c0000056c5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c73, match64: 0x00000000, model64: 0x2785e00027865},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c74, match64: 0x00000000, model64: 0x278650002786b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c75, match64: 0x00000000, model64: 0x2786b0002786f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c76, match64: 0x00000000, model64: 0x2786f00027875},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c77, match64: 0x00000000, model64: 0x278750002787b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c78, match64: 0x00000000, model64: 0x2787b00027885},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c79, match64: 0x00000000, model64: 0x2788500027891},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7a, match64: 0x00000000, model64: 0x27891000278a2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7b, match64: 0x00000000, model64: 0x278a2000278aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7c, match64: 0x00000000, model64: 0x8e0500008e0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7d, match64: 0x00000000, model64: 0x278aa000278b1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7e, match64: 0x00000000, model64: 0x278b1000278bb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c7f, match64: 0x00000000, model64: 0x56950000569c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c80, match64: 0x00000000, model64: 0x128180001281d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x278bb000278c3, model64: 0x278c3000278c8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c81, match64: 0x00000000, model64: 0x1286c00012870},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c82, match64: 0x00000000, model64: 0x497100004975},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c83, match64: 0x00000000, model64: 0x278c8000278d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c84, match64: 0x00000000, model64: 0x278d7000278dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c85, match64: 0x00000000, model64: 0x278dd000278e2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c86, match64: 0x00000000, model64: 0x278e2000278ec},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c87, match64: 0x00000000, model64: 0x85850000858c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c88, match64: 0x00000000, model64: 0x278ec000278f4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c89, match64: 0x00000000, model64: 0x278f4000278f8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8a, match64: 0x00000000, model64: 0x278f8000278fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8b, match64: 0x00000000, model64: 0x278750002787b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8c, match64: 0x00000000, model64: 0x278fd00027901},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8d, match64: 0x00000000, model64: 0x2790100027909},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8e, match64: 0x00000000, model64: 0x2790900027914},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c8f, match64: 0x00000000, model64: 0x2791400027918},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c90, match64: 0x00000000, model64: 0x2791800027923},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c91, match64: 0x00000000, model64: 0x2792300027929},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c92, match64: 0x00000000, model64: 0x56ad000056b2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2792900027931, model64: 0x279310002793d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2793d00027945, model64: 0xb71c0000b720},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c93, match64: 0x00000000, model64: 0x279450002794b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c94, match64: 0x00000000, model64: 0x1fcca0001fccf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c95, match64: 0x00000000, model64: 0xb4200000b424},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c96, match64: 0x00000000, model64: 0x2794b00027956},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c97, match64: 0x00000000, model64: 0x279560002795d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c98, match64: 0x00000000, model64: 0x21e7f00021e84},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c99, match64: 0x00000000, model64: 0x2795d00027966},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9a, match64: 0x00000000, model64: 0x2765e00027661},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9b, match64: 0x00000000, model64: 0x279660002796d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9c, match64: 0x00000000, model64: 0x2796d00027977},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9d, match64: 0x00000000, model64: 0x279770002797e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9e, match64: 0x00000000, model64: 0x2797e00027983},
		modelTuple{type64: 0x2700000027, matchRI: 0x2c9f, match64: 0x00000000, model64: 0x2798300027988},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca0, match64: 0x00000000, model64: 0x279880002798d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca1, match64: 0x00000000, model64: 0x2798d00027995},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca2, match64: 0x00000000, model64: 0x279950002799b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca3, match64: 0x00000000, model64: 0x2799b000279a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca4, match64: 0x00000000, model64: 0x279a1000279a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca5, match64: 0x00000000, model64: 0x279a9000279b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca6, match64: 0x00000000, model64: 0x1893c00018941},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca7, match64: 0x00000000, model64: 0x279b2000279b6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca8, match64: 0x00000000, model64: 0x97f8000097fd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ca9, match64: 0x00000000, model64: 0x279b6000279be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2caa, match64: 0x00000000, model64: 0x173a5000173a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cab, match64: 0x00000000, model64: 0x21f5800021f5e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cac, match64: 0x00000000, model64: 0x279be000279c7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cad, match64: 0x00000000, model64: 0x1fc4f0001fc55},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cae, match64: 0x00000000, model64: 0x279c7000279cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2caf, match64: 0x00000000, model64: 0x279cf000279d7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb0, match64: 0x00000000, model64: 0x279d7000279dc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb1, match64: 0x00000000, model64: 0x279dc000279e4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x279e4000279f4, model64: 0x279f4000279fb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb2, match64: 0x00000000, model64: 0x279fb00027a03},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb3, match64: 0x00000000, model64: 0x27a0300027a0a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb4, match64: 0x00000000, model64: 0x27a0a00027a14},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb5, match64: 0x00000000, model64: 0x27a1400027a1f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb6, match64: 0x00000000, model64: 0x27a1f00027a22},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb7, match64: 0x00000000, model64: 0x1ef400001ef45},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb8, match64: 0x00000000, model64: 0x27a2200027a29},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cb9, match64: 0x00000000, model64: 0x27a2900027a31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cba, match64: 0x00000000, model64: 0x27a3100027a39},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbb, match64: 0x00000000, model64: 0x27a3900027a3e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbc, match64: 0x00000000, model64: 0x27a3e00027a48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbd, match64: 0x00000000, model64: 0x27a4800027a4e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbe, match64: 0x00000000, model64: 0x27a4e00027a52},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cbf, match64: 0x00000000, model64: 0x27a5200027a58},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc0, match64: 0x00000000, model64: 0x27a5800027a62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cc1, match64: 0x00000000, model64: 0x27a6200027a68},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc2, match64: 0x00000000, model64: 0x27a6800027a76},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27a7600027a7e, model64: 0x27a7e00027a8a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc3, match64: 0x00000000, model64: 0x27a8a00027a94},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc4, match64: 0x00000000, model64: 0x27a9400027aa2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc5, match64: 0x00000000, model64: 0x27aa200027aab},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc6, match64: 0x00000000, model64: 0x27aab00027ab8},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc7, match64: 0x00000000, model64: 0x27ab800027abf},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc8, match64: 0x00000000, model64: 0x27abf00027ac6},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cc9, match64: 0x00000000, model64: 0x27ac600027acc},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cca, match64: 0x00000000, model64: 0x27acc00027ad1},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ccb, match64: 0x00000000, model64: 0x27ad100027adb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ccc, match64: 0x00000000, model64: 0x27adb00027ae8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ccd, match64: 0x00000000, model64: 0x2777100027777},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cce, match64: 0x00000000, model64: 0x219940002199b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ccf, match64: 0x00000000, model64: 0x17f7100017f75},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd0, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd1, match64: 0x00000000, model64: 0x27ae800027aec},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27aec00027af4, model64: 0x27af400027b02},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27b0200027b0a, model64: 0x27b0a00027b14},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd2, match64: 0x00000000, model64: 0x27b1400027b18},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd3, match64: 0x00000000, model64: 0x27b1800027b20},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd4, match64: 0x00000000, model64: 0x27b2000027b25},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd5, match64: 0x00000000, model64: 0x27b2500027b2c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd6, match64: 0x00000000, model64: 0xadff0000ae05},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd7, match64: 0x00000000, model64: 0x27b2c00027b31},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd8, match64: 0x00000000, model64: 0x27b3100027b36},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cd9, match64: 0x00000000, model64: 0x27b3600027b40},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cda, match64: 0x00000000, model64: 0x224110002241b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cdb, match64: 0x00000000, model64: 0x17f7b00017f7f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cdc, match64: 0x00000000, model64: 0x27b4000027b4b},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cdd, match64: 0x00000000, model64: 0x27b4b00027b51},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cde, match64: 0x00000000, model64: 0x13f5d00013f62},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cdf, match64: 0x00000000, model64: 0x27b5100027b57},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce0, match64: 0x00000000, model64: 0x27b5700027b5c},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce1, match64: 0x00000000, model64: 0x27b5c00027b66},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce2, match64: 0x00000000, model64: 0x27b6600027b6a},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce3, match64: 0x00000000, model64: 0x27b6a00027b6f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce4, match64: 0x00000000, model64: 0x27b6f00027b7d},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce5, match64: 0x00000000, model64: 0x27b7d00027b86},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce6, match64: 0x00000000, model64: 0x27b8600027b8f},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce7, match64: 0x00000000, model64: 0x27b8f00027b98},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce8, match64: 0x00000000, model64: 0x27b3100027b36},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2ce9, match64: 0x00000000, model64: 0x27b9800027ba0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cea, match64: 0x00000000, model64: 0x27ad100027adb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ceb, match64: 0x00000000, model64: 0x27ba000027ba7},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cec, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24300000245, matchRI: -0x0001, match64: 0x27ba700027bb2, model64: 0x2700000027},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27bb700027bc7, model64: 0x27bc700027bd2},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2cee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf0, match64: 0x00000000, model64: 0x27bd700027be9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf1, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf2, match64: 0x00000000, model64: 0x27be900027bfd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27bfd00027c08, model64: 0x27c0800027c0d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c0d00027c21, model64: 0x27c2100027c35},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c3500027c4e, model64: 0x27c4e00027c61},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c6100027c78, model64: 0x27c7800027c8c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27c8c00027ca7, model64: 0x27ca700027cbc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf3, match64: 0x00000000, model64: 0x27cbc00027cc3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27cc300027cca, model64: 0x27cca00027cd1},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27cd100027cdc, model64: 0x27cdc00027ce7},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cf8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27cfb00027d0e, model64: 0x27cfb00027d0e},
		modelTuple{type64: 0x38400000391, matchRI: -0x0001, match64: 0x27d0e00027d1e, model64: 0x27d1e00027d27},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cfc, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27d3300027d3f, model64: 0x27d3f00027d4b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cfe, match64: 0x00000000, model64: 0x27d5000027d59},
		modelTuple{type64: 0x2700000027, matchRI: 0x2cff, match64: 0x00000000, model64: 0x27d5900027d62},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d00, match64: 0x00000000, model64: 0x27d6200027d6c},
		modelTuple{type64: 0xd3700000d3e, matchRI: 0x2d01, match64: 0x00000000, model64: 0x27d6c00027d77},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d02, match64: 0x00000000, model64: 0x27d7700027d7e},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d03, match64: 0x00000000, model64: 0x27d7e00027d84},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d04, match64: 0x00000000, model64: 0x27d8400027d88},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d05, match64: 0x00000000, model64: 0x27d8800027d91},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d06, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d09, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d0a, match64: 0x00000000, model64: 0x27d9f00027da9},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d0b, match64: 0x00000000, model64: 0x27da900027db3},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d0c, match64: 0x00000000, model64: 0x27db300027dbb},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d0d, match64: 0x00000000, model64: 0x27dbb00027dc0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27dc000027dc8, model64: 0x27dc800027dd0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27dd000027ddb, model64: 0x27ddb00027de6},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d0e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d0f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d10, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27deb00027df7, model64: 0x27deb00027df7},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x27df700027e07, model64: 0x27df700027e07},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d13, match64: 0x00000000, model64: 0x2445c00024461},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d14, match64: 0x00000000, model64: 0x27e0700027e13},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e1300027e1c, model64: 0x27e1c00027e2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d15, match64: 0x00000000, model64: 0x27e2b00027e3c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d16, match64: 0x00000000, model64: 0x27e3c00027e44},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e4400027e4d, model64: 0x27e4d00027e56},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27e5600027e63, model64: 0x27e6300027e70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d17, match64: 0x00000000, model64: 0x27e7000027e78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d18, match64: 0x00000000, model64: 0x27e7800027e83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d19, match64: 0x00000000, model64: 0x27e8300027e93},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1a, match64: 0x00000000, model64: 0x27e9300027ea2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d1d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27ead00027ebc, model64: 0x27ead00027ebc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d20, match64: 0x00000000, model64: 0xc9100000c94},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27ebc00027ec2, model64: 0x27ec200027ec9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d21, match64: 0x00000000, model64: 0x27ec900027ed0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d22, match64: 0x00000000, model64: 0x27ed000027ed9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d23, match64: 0x00000000, model64: 0x23150000231a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d24, match64: 0x00000000, model64: 0x27ed900027ee3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d25, match64: 0x00000000, model64: 0x27ee300027eea},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27eea00027ef0, model64: 0x27ef000027ef7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d26, match64: 0x00000000, model64: 0x27ef700027efb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27f0500027f0f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f1500027f1e, model64: 0x27f1e00027f27},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f2700027f2f, model64: 0x27f2700027f2f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2a, match64: 0x00000000, model64: 0x27f2f00027f36},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18a3600018a3d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2d, match64: 0x00000000, model64: 0x27f3e00027f48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d2e, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x27f5200027f59},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d31, match64: 0x00000000, model64: 0x27f5e00027f72},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x27f7200027f82, model64: 0x27f8200027f92},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27f9200027f9e, model64: 0x27f9e00027faa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27faa00027fb8, model64: 0x27fb800027fc8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d32, match64: 0x00000000, model64: 0x27fc800027fd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27fd700027fe8, model64: 0x27fe800027ffb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x27ffb00028005, model64: 0x280050002800d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d33, match64: 0x00000000, model64: 0x2800d00028017},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d34, match64: 0x00000000, model64: 0x2801700028027},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280270002803a, model64: 0x2803a0002804d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2804d00028061, model64: 0x2806100028077},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280770002808b, model64: 0x2808b000280a1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280a1000280b0, model64: 0x280b0000280bf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d35, match64: 0x00000000, model64: 0x280bf000280ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280ca000280d4, model64: 0x280d4000280de},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280de000280e9, model64: 0x280e9000280f4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x280f4000280fc, model64: 0x280f4000280fc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d36, match64: 0x00000000, model64: 0x280fc00028103},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281030002810a, model64: 0x2810a00028111},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281110002811b, model64: 0x2786b0002786f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2811b00028125, model64: 0x2811b00028125},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2812500028137, model64: 0x281370002814b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2814b0002815d, model64: 0x2814b0002815d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2815d00028173, model64: 0x281730002818b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2818b00028199, model64: 0x28199000281ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281ac000281bc, model64: 0x281bc000281cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281cc000281d8, model64: 0x281cc000281d8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281d8000281e8, model64: 0x281e8000281fa},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x281fa0002820b, model64: 0x2820b0002821e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2821e0002822a, model64: 0x2822a00028236},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d37, match64: 0x00000000, model64: 0x282360002823e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2823e00028245, model64: 0x282450002824c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2824c00028259, model64: 0x2825900028268},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d38, match64: 0x00000000, model64: 0x282680002827d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2827d0002828e, model64: 0x2828e000282a1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d39, match64: 0x00000000, model64: 0x282a1000282aa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d3a, match64: 0x00000000, model64: 0x80350000803d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x282aa000282c0, model64: 0x282c0000282d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d3b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x282e7000282f2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d40, match64: 0x00000000, model64: 0x4cc300004cca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d41, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x282ff00028309, model64: 0x2830900028313},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d44, match64: 0x00000000, model64: 0x283130002831a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d45, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2831a00028324, model64: 0x2831a00028324},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d46, match64: 0x00000000, model64: 0x283240002832d},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d47, match64: 0x00000000, model64: 0x2832d00028336},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283390002833f, model64: 0x2833f00028346},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283460002834f, model64: 0x2834f00028359},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d49, match64: 0x00000000, model64: 0x283590002835f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4a, match64: 0x00000000, model64: 0x2835f00028367},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283700002837d, model64: 0x2837d00028384},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283840002838a, model64: 0x2838a00028390},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283900002839c, model64: 0x2839c000283a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d4f, match64: 0x00000000, model64: 0x283ac000283b4},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283be000283c7, model64: 0x283c7000283ce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d53, match64: 0x00000000, model64: 0x283d2000283d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d54, match64: 0x00000000, model64: 0x283d5000283d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d55, match64: 0x00000000, model64: 0x283d9000283e0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d56, match64: 0x00000000, model64: 0x283e0000283e3},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d57, match64: 0x00000000, model64: 0x283e3000283ed},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x283f700028402, model64: 0x2840200028409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284090002840f, model64: 0x15ee700015ee8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2840f00028415, model64: 0x3d7200003d74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2841b00028420, model64: 0x2841b00028420},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284200002842b, model64: 0x2842b00028436},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284360002843d, model64: 0x2843d00028444},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5b, match64: 0x00000000, model64: 0x284440002844d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d5e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d60, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2846700028471, model64: 0x2847100028476},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284760002847f, model64: 0x2847f00028489},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d62, match64: 0x00000000, model64: 0x2848900028493},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d63, match64: 0x00000000, model64: 0x284930002849b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2849b000284a3, model64: 0x284a3000284ac},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284ac000284b3, model64: 0x284b3000284bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284bb000284c2, model64: 0x284bb000284c2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d64, match64: 0x00000000, model64: 0x284c2000284ca},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284ca000284d5, model64: 0x284d5000284e1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284e1000284e7, model64: 0x284e7000284ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284ee000284f5, model64: 0x284f5000284fd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x284fd00028508, model64: 0x2850800028514},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x285140002851b, model64: 0x2851b00028523},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2852300028529, model64: 0x2852900028530},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2853000028537, model64: 0x285370002853f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2853f0002854a, model64: 0x2854a00028556},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x285560002855c, model64: 0x2855c00028563},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x285630002856b, model64: 0x2856b00028574},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x285740002857a, model64: 0x285740002857a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d65, match64: 0x00000000, model64: 0x2857a00028585},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d66, match64: 0x00000000, model64: 0x285850002858d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2858d00028592, model64: 0x2859200028598},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x285a4000285ac},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6e, match64: 0x00000000, model64: 0x285b7000285c0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d6f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d70, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d72, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: 0x2d73, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d75, match64: 0x00000000, model64: 0x285ca000285cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d76, match64: 0x00000000, model64: 0x285cf000285d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d77, match64: 0x00000000, model64: 0x285d5000285d9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d78, match64: 0x00000000, model64: 0x285d9000285dd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d79, match64: 0x00000000, model64: 0x12f2b00012f31},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7a, match64: 0x00000000, model64: 0x285dd000285e4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7b, match64: 0x00000000, model64: 0x142c7000142ca},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7c, match64: 0x00000000, model64: 0x903100009036},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d7f, match64: 0x00000000, model64: 0x285f0000285f5},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x285fe00028603, model64: 0x234fe00023501},
		modelTuple{type64: 0xd3700000d3e, matchRI: -0x0001, match64: 0x2860300028608, model64: 0x235070002350e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286080002860d, model64: 0x16b1100016b14},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2860d00028613, model64: 0x286130002861a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2861a0002861f, model64: 0x2861f00028622},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2862200028627, model64: 0x286270002862b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2862b00028631, model64: 0x2863100028634},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d82, match64: 0x00000000, model64: 0x2863400028637},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286370002863d, model64: 0x2863d00028641},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2864100028647, model64: 0x286470002864b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2864b00028650, model64: 0x16b5d00016b60},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2865000028655, model64: 0x189300001896},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286550002865a, model64: 0x2865a0002865d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2865d00028662, model64: 0x2866200028665},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286650002866a, model64: 0x3c1000003c6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2866a0002866f, model64: 0x16b2c00016b2f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2866f00028674, model64: 0x2867400028677},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286770002867c, model64: 0x223d5000223dd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2867c00028682, model64: 0x2868200028686},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d83, match64: 0x00000000, model64: 0x233670002336a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d84, match64: 0x00000000, model64: 0x286860002868e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d85, match64: 0x00000000, model64: 0x2868e0002869b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2869b000286a0, model64: 0x2339400023397},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286a0000286a5, model64: 0xbaf20000baf5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286a5000286aa, model64: 0x235380002353f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d86, match64: 0x00000000, model64: 0x286aa000286ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286ad000286b2, model64: 0x286b2000286b9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286b9000286be, model64: 0x286be000286c1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286c1000286c6, model64: 0x286c6000286c9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286c9000286ce, model64: 0x286ce000286d2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286d2000286d7, model64: 0x286d7000286db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286db000286e0, model64: 0x286e0000286e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286e6000286eb, model64: 0x286eb000286ee},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286ee000286f3, model64: 0x286f3000286fb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x286fb00028700, model64: 0x2870000028707},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287070002870c, model64: 0x2870c0002870f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2870f00028715, model64: 0x16aba00016abd},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287150002871a, model64: 0x2871a00028722},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2872200028727, model64: 0x287270002872a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2872a0002872f, model64: 0x2872f00028732},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2873200028738, model64: 0x287380002873b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2873b00028740, model64: 0x2874000028743},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d87, match64: 0x00000000, model64: 0x287430002874b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2874b00028750, model64: 0x2875000028757},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287570002875c, model64: 0x2875c0002875f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2875f00028764, model64: 0x2876400028767},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287670002876c, model64: 0x2876c0002876f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2876f00028775, model64: 0x287750002877c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2877c00028781, model64: 0x16afe00016b01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2878100028786, model64: 0x287860002878a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2878a00028790, model64: 0x2879000028797},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287970002879d, model64: 0x234dc000234e3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d88, match64: 0x00000000, model64: 0x235070002350e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2879d000287a3, model64: 0x287a3000287a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d89, match64: 0x00000000, model64: 0x287a7000287ae},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287ae000287b4, model64: 0x287b4000287bb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287bb000287c0, model64: 0x287c0000287c3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287c3000287c9, model64: 0x2876c0002876f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287c9000287ce, model64: 0x287ce000287d1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287d1000287d6, model64: 0x287d6000287d9},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287d9000287df, model64: 0x287df000287e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287e6000287ec, model64: 0x287ec000287f3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287f3000287f8, model64: 0x16ba000016ba3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x287f8000287fd, model64: 0x287fd00028805},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288050002880b, model64: 0x2880b0002880f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2880f00028815, model64: 0x2881500028818},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288180002881d, model64: 0x2881d00028821},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2882100028826, model64: 0x288260002882e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2882e00028833, model64: 0x288330002883a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8a, match64: 0x00000000, model64: 0x2883a00028841},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2884100028846, model64: 0x288460002884e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2884e00028854, model64: 0x16b1700016b1a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2885400028859, model64: 0x16b5a00016b5d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288590002885e, model64: 0x16b8000016b83},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8b, match64: 0x00000000, model64: 0x158390001583c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8c, match64: 0x00000000, model64: 0x92e2000092e5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2885e00028863, model64: 0x2886300028867},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288670002886c, model64: 0x2886c00028874},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8d, match64: 0x00000000, model64: 0x2887400028881},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2888100028886, model64: 0x288860002888d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2888d00028892, model64: 0x288920002889b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2889b000288a0, model64: 0x288a0000288ad},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288ad000288b2, model64: 0x288b2000288be},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288be000288c3, model64: 0xe6910000e699},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x288c3000288cc, model64: 0x288c3000288cc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8e, match64: 0x00000000, model64: 0x288cc000288d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d8f, match64: 0x00000000, model64: 0x288cc000288d4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d90, match64: 0x00000000, model64: 0x288d4000288d8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d91, match64: 0x00000000, model64: 0x288d8000288e1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d92, match64: 0x00000000, model64: 0x288e1000288e9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x288e9000288f4, model64: 0x288f4000288ff},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x288ff0002890b, model64: 0x21bb600021bbb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2890b00028915, model64: 0x289150002891d},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2891d00028927, model64: 0x2892700028931},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x2893100028938, model64: 0x2893800028944},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2d94, match64: 0x00000000, model64: 0x2894400028952},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d95, match64: 0x00000000, model64: 0x21c1000021c9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d96, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d97, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x289580002895f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9a, match64: 0x00000000, model64: 0x289620002896a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9b, match64: 0x00000000, model64: 0x1117600011178},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2896f0002897a, model64: 0x2897a00028985},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2898b00028993, model64: 0x289930002899b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2899b000289a1, model64: 0x289a1000289a5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x289a5000289ac, model64: 0x289ac000289b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2d9f, match64: 0x00000000, model64: 0x289b3000289b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da0, match64: 0x00000000, model64: 0x289b5000289ba},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da1, match64: 0x00000000, model64: 0x289ba000289bf},
		modelTuple{type64: 0x7130000071d, matchRI: 0x2da3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da7, match64: 0x00000000, model64: 0x289d8000289e5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2da8, match64: 0x00000000, model64: 0x289e5000289f1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dab, match64: 0x00000000, model64: 0x289fc00028a0a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28a0e00028a1f, model64: 0x28a1f00028a2b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dad, match64: 0x00000000, model64: 0x70a0000070f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dae, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28a4300028a50, model64: 0x809b0000809d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db1, match64: 0x00000000, model64: 0x28a5000028a57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2db3, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28a6f00028a7a, model64: 0x28a7a00028a85},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db7, match64: 0x00000000, model64: 0x28a8500028a8d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db8, match64: 0x00000000, model64: 0x28a8d00028a98},
		modelTuple{type64: 0x2700000027, matchRI: 0x2db9, match64: 0x00000000, model64: 0x28a9800028aa2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dba, match64: 0x00000000, model64: 0x28aa200028aa8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28aa800028ab6, model64: 0x28ab600028ac4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28ac400028ad2, model64: 0x28ad200028adf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dbb, match64: 0x00000000, model64: 0x28adf00028aef},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dbc, match64: 0x00000000, model64: 0x12df500012e00},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28aef00028af6, model64: 0x28af600028afd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dbd, match64: 0x00000000, model64: 0xc1610000c169},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dbe, match64: 0x00000000, model64: 0x5b7c00005b82},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dbf, match64: 0x00000000, model64: 0x28afd00028b07},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28b0700028b12, model64: 0x28b1200028b1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc0, match64: 0x00000000, model64: 0x28b1d00028b29},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28b2900028b35, model64: 0x28b3500028b41},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc1, match64: 0x00000000, model64: 0x28b4100028b4d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc2, match64: 0x00000000, model64: 0x28b4d00028b57},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc3, match64: 0x00000000, model64: 0x28b5700028b63},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28b6300028b73, model64: 0x28b7300028b83},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x28b8300028b8c, model64: 0x28b8c00028b97},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x28b9700028ba2, model64: 0x28ba200028bae},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x28bae00028bbc, model64: 0x28bbc00028bcb},
		modelTuple{type64: 0x2a9000002af, matchRI: -0x0001, match64: 0x28bcb00028bda, model64: 0x28bda00028bea},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2dc4, match64: 0x00000000, model64: 0x28bea00028bfb},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2a9000002af, matchRI: 0x2dc6, match64: 0x00000000, model64: 0x28bfb00028c03},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dc9, match64: 0x00000000, model64: 0x28c0e00028c13},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dca, match64: 0x00000000, model64: 0x28c1300028c16},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dcb, match64: 0x00000000, model64: 0x28c1600028c1b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dcc, match64: 0x00000000, model64: 0x28c1b00028c1d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dce, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28c2900028c31, model64: 0x28c3100028c3a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28c3a00028c46, model64: 0x244f00002457},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28c5500028c63, model64: 0x28c6300028c72},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28c7d00028c84, model64: 0x28c8400028c95},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28c9500028c9c, model64: 0x28c9c00028cab},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28cab00028cb2, model64: 0x28cb200028cc3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28cc300028cca, model64: 0x28cca00028cd7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28cd700028cde, model64: 0x28cde00028cee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28cee00028cf7, model64: 0x28cf700028d01},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28d0100028d08, model64: 0x28d0800028d19},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd5, match64: 0x00000000, model64: 0x28d1900028d2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28d2c00028d3c, model64: 0x28d3c00028d4f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28d4f00028d5e, model64: 0x28d5e00028d70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd6, match64: 0x00000000, model64: 0x28d7000028d82},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28d8200028d92, model64: 0x28d9200028da5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28da500028db1, model64: 0x28db100028dbd},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd7, match64: 0x00000000, model64: 0x28dbd00028dcb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28dcb00028dd2, model64: 0x28dd200028de6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd8, match64: 0x00000000, model64: 0x28de600028dfa},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dd9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dda, match64: 0x00000000, model64: 0x28dfa00028e0c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28e0c00028e13, model64: 0x28e1300028e25},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ddb, match64: 0x00000000, model64: 0x28e2500028e37},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ddc, match64: 0x00000000, model64: 0x28e3700028e48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ddd, match64: 0x00000000, model64: 0x28e4800028e5b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28e5b00028e62, model64: 0x28e6200028e74},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28e7400028e7b, model64: 0x28e7b00028e8d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28e8d00028e94, model64: 0x28e9400028ea6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28ea600028ead, model64: 0x28ead00028ec0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dde, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28ec000028ec7, model64: 0x28ec700028ecd},
		modelTuple{type64: 0x24700000251, matchRI: 0x2ddf, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28ecd00028ed4, model64: 0x28ed400028eda},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28eda00028ee1, model64: 0x28ee100028ee8},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28ee800028eef, model64: 0x28eef00028ef6},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de0, match64: 0x00000000, model64: 0x28ef600028efd},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de1, match64: 0x00000000, model64: 0x28efd00028f09},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f0900028f10, model64: 0x28f1000028f1b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f1b00028f22, model64: 0x28f2200028f2e},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f2e00028f35, model64: 0x83260000832a},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f3500028f3c, model64: 0x1e7d70001e7de},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de2, match64: 0x00000000, model64: 0x28f3c00028f44},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f4400028f4b, model64: 0x28f4b00028f52},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f5200028f59, model64: 0x28f5900028f60},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de3, match64: 0x00000000, model64: 0x28f6000028f67},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f6700028f6e, model64: 0x28f6e00028f76},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f7600028f7e, model64: 0x28f7e00028f8b},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f8b00028f92, model64: 0x28f9200028f98},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28f9800028f9f, model64: 0x28f9f00028fa6},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de4, match64: 0x00000000, model64: 0x28fa600028fad},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de5, match64: 0x00000000, model64: 0x28fad00028fb3},
		modelTuple{type64: 0x24700000251, matchRI: 0x2de6, match64: 0x00000000, model64: 0x28fb300028fc0},
		modelTuple{type64: 0x24700000251, matchRI: -0x0001, match64: 0x28fc000028fc7, model64: 0x28fc700028fce},
		modelTuple{type64: 0x2700000027, matchRI: 0x2de8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2de9, match64: 0x00000000, model64: 0x28fd600028fdc},
		modelTuple{type64: 0x2700000027, matchRI: 0x2deb, match64: 0x00000000, model64: 0x28fe000028fe6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dec, match64: 0x00000000, model64: 0x28fe600028fee},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ded, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28fee00028ff6, model64: 0x28fee00028ff6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0xafac0000afaf, model64: 0xafac0000afaf},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x28ff600029004, model64: 0x28ff600029004},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dee, match64: 0x00000000, model64: 0x2900400029010},
		modelTuple{type64: 0x2700000027, matchRI: 0x2def, match64: 0x00000000, model64: 0x495900004961},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df0, match64: 0x00000000, model64: 0x290100002901e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df2, match64: 0x00000000, model64: 0x2901e0002902c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df3, match64: 0x00000000, model64: 0x2902c00029039},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df4, match64: 0x00000000, model64: 0x290390002903f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df6, match64: 0x00000000, model64: 0x2904800029057},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df7, match64: 0x00000000, model64: 0x2905700029066},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df8, match64: 0x00000000, model64: 0x290660002906e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2df9, match64: 0x00000000, model64: 0x2906e00029077},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dfb, match64: 0x00000000, model64: 0x290770002907c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dfc, match64: 0x00000000, model64: 0x2907c00029080},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dfd, match64: 0x00000000, model64: 0x2908000029090},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dfe, match64: 0x00000000, model64: 0x29090000290a0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2dff, match64: 0x00000000, model64: 0x290a0000290ac},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e00, match64: 0x00000000, model64: 0x290ac000290b2},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e01, match64: 0x00000000, model64: 0x290b2000290b8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e02, match64: 0x00000000, model64: 0x290b8000290be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e03, match64: 0x00000000, model64: 0x290be000290c5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x290c5000290d3, model64: 0x290c5000290d3},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x290d3000290e0, model64: 0x290d3000290e0},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x290e0000290eb, model64: 0x290e0000290eb},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x290eb000290f6, model64: 0x290eb000290f6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x290f600029116, model64: 0x291160002912a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2912a00029143, model64: 0x291430002914e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2914e00029160, model64: 0x291600002916c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2916c0002918d, model64: 0x2918d000291a5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e06, match64: 0x00000000, model64: 0xaf2a0000af36},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e07, match64: 0x00000000, model64: 0xaf0e0000af18},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x291a5000291c0, model64: 0x291c0000291cc},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x291cc000291e0, model64: 0x291e0000291e8},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x291e800029203, model64: 0x292030002920f},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x2920f0002922d, model64: 0x2922d00029253},
		modelTuple{type64: 0xbd500000bdc, matchRI: -0x0001, match64: 0x292530002925a, model64: 0x2925a0002928b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e09, match64: 0x00000000, model64: 0x2928b0002929e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e0a, match64: 0x00000000, model64: 0x2929e000292a4},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e0b, match64: 0x00000000, model64: 0x292a4000292b5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e0c, match64: 0x00000000, model64: 0x292b5000292c0},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x292c0000292d9},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x292d9000292f1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e0f, match64: 0x00000000, model64: 0x214b2000214be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e10, match64: 0x00000000, model64: 0x214b2000214be},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e12, match64: 0x00000000, model64: 0x293000002930d},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e13, match64: 0x00000000, model64: 0x2930d0002931a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e14, match64: 0x00000000, model64: 0x2931a00029326},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e15, match64: 0x00000000, model64: 0x2932600029332},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e16, match64: 0x00000000, model64: 0x293320002933e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e17, match64: 0x00000000, model64: 0x2933e0002934a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e18, match64: 0x00000000, model64: 0x2934a00029356},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e19, match64: 0x00000000, model64: 0x2935600029360},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2936f0002937b, model64: 0x2936f0002937b},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e1c, match64: 0x00000000, model64: 0xe6b80000e6bb},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e1e, match64: 0x00000000, model64: 0x4cdf00004ce5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x293960002939d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x293a3000293ab, model64: 0x293ab000293b3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e21, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e24, match64: 0x00000000, model64: 0x293b3000293c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x293c4000293ca, model64: 0x293ca000293db},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x293db000293e1, model64: 0x293e1000293f2},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x293f2000293f8, model64: 0x293f800029409},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x294090002940f, model64: 0x2940f00029420},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2942000029426, model64: 0x2942600029436},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x294360002943e, model64: 0x2943e00029453},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e25, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e2b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e2d, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e2e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e2f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e30, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2957700029581, model64: 0x2957700029581},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e33, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e35, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e36, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e37, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e38, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e3c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e3e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x295dc000295e3, model64: 0x295dc000295e3},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x295f900029602},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x296020002960f, model64: 0x296020002960f},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e42, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e44, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e46, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e48, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e4a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e4c, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x296360002963c},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e4e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e50, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e51, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e53, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e55, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x2966c00029674},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e57, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e59, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2968200029690, model64: 0x296900002969e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e5b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e5d, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e5f, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e61, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e63, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e65, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e67, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e69, match64: 0x00000000, model64: 0x296d1000296d6},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e6b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e6d, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e70, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e72, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e74, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e77, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e79, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e7b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x296fd000296ff, model64: 0x296fd000296ff},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e7d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e7f, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e81, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e83, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2971900029723, model64: 0x2971900029723},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e86, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e88, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2972c00029735, model64: 0x2972c00029735},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297350002973e, model64: 0x297350002973e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2973e00029748, model64: 0x2973e00029748},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2974800029751, model64: 0x2974800029751},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297510002975a, model64: 0x297510002975a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2975a00029764, model64: 0x2975a00029764},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297640002976d, model64: 0x297640002976d},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2976d00029776, model64: 0x2976d00029776},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2977600029780, model64: 0x2977600029780},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2978000029789, model64: 0x2978000029789},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2978900029792, model64: 0x2978900029792},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297920002979a, model64: 0x297920002979a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2979a000297a7, model64: 0x2979a000297a7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e8a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e8b, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e8c, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297a7000297ae, model64: 0x297a7000297ae},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e8e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e90, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e93, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297b3000297bb, model64: 0x297bb000297c4},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297c4000297cc, model64: 0x297cc000297d5},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297d5000297dd, model64: 0x297dd000297e6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297e6000297ee, model64: 0x297ee000297f7},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297f7000297ff, model64: 0x297ff00029808},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e94, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e96, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e97, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e98, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e99, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2981800029820, model64: 0x2982000029829},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e9b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2982d00029834, model64: 0x2982d00029834},
		modelTuple{type64: 0x2700000027, matchRI: 0x2e9f, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea1, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2983e00029848, model64: 0x2983e00029848},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2984800029853, model64: 0x2984800029853},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x298530002985e, model64: 0x298530002985e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2985e0002986b, model64: 0x2985e0002986b},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2986b00029876, model64: 0x2986b00029876},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea3, match64: 0x00000000, model64: 0x2987600029881},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea5, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea6, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea8, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ea9, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eaa, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eab, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eac, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ead, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2988100029886, model64: 0x2988100029886},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x298860002988a, model64: 0x298860002988a},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eaf, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eb1, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eb3, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eb5, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297350002973e, model64: 0x297350002973e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2975a00029764, model64: 0x2975a00029764},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eb7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eb9, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ebb, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ebd, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ebf, match64: 0x00000000, model64: 0x298a1000298a8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec1, match64: 0x00000000, model64: 0x298a8000298b6},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x242d3000242d5, model64: 0x242d3000242d5},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec2, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec3, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x298c4000298cf, model64: 0x298c4000298cf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec6, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ec8, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eca, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ecc, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ece, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ed0, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ed2, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ed4, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ed7, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ed9, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2edb, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2edd, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2edf, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x00000000, matchRI: -0x0001, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee2, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee3, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee5, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x298f900029904, model64: 0x298f900029904},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee6, match64: 0x00000000, model64: 0x299040002990e},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee7, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee8, match64: 0x00000000, model64: 0x2990e00029915},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ee9, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eea, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eeb, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eec, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eee, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2eef, match64: 0x00000000, model64: 0x1882b00018837},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ef2, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ef4, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ef6, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2ef8, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2efa, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2efc, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2efe, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f00, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f02, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f04, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f06, match64: 0x00000000, model64: 0x2119600021198},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f07, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2993b00029945, model64: 0x2994500029954},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f08, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f09, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f0b, match64: 0x00000000, model64: 0x2700000027},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f0c, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f0d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f0e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f0f, match64: 0x00000000, model64: 0x2995e00029963},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2996300029969, model64: 0x2996300029969},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x299690002997d, model64: 0x836d0000837a},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2997d0002998f, model64: 0xb3550000b35f},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2998f000299a0, model64: 0x299a0000299a9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f11, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f12, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x299ca000299d3, model64: 0x299ca000299d3},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f14, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f15, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f17, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f18, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1b, match64: 0x00000000, model64: 0x299e8000299f0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1c, match64: 0x00000000, model64: 0x299f0000299f9},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1e, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f1f, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f22, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f23, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f24, match64: 0x00000000, model64: 0x244f00002457},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f26, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f28, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f29, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f2a, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29a1200029a19, model64: 0x29a1200029a19},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29a1900029a20, model64: 0x29a1900029a20},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f2c, match64: 0x00000000, model64: 0x2036400020373},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f2e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29a2500029a30, model64: 0x29a2500029a30},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f31, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f32, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f33, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29a4100029a4b, model64: 0x29a4b00029a55},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f35, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f36, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f38, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f39, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f3b, match64: 0x00000000, model64: 0x29a6800029a70},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f3c, match64: 0x00000000, model64: 0x29a7000029a78},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f3d, match64: 0x00000000, model64: 0x29a7800029a80},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f3e, match64: 0x00000000, model64: 0x29a8000029a88},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f3f, match64: 0x00000000, model64: 0x29a8800029a90},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f40, match64: 0x00000000, model64: 0x29a9000029a98},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29a9800029aa0, model64: 0x29a9800029aa0},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f42, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29aa800029aaf, model64: 0x29aa800029aaf},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f44, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f45, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f46, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29ac000029ac8, model64: 0x29ac000029ac8},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f49, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f4b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f4d, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f4e, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f50, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f52, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f54, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f56, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f58, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f59, match64: 0x00000000, model64: 0x29aec00029af7},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f5b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f5d, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f5f, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f61, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f63, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x297350002973e, model64: 0x297350002973e},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29b2300029b2c, model64: 0x29b2300029b2c},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x2975a00029764, model64: 0x2975a00029764},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f67, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: -0x0001, match64: 0x29b3400029b3c, model64: 0x29b3c00029b48},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f69, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f6b, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f6d, match64: 0x00000000, model64: 0x18000000182},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f6f, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f71, match64: 0x00000000, model64: 0xfe400000ff1},
		modelTuple{type64: 0x2700000027, matchRI: 0x2f72, match64: 0x00000000, model64: 0x18000000182},
	}
	__dr_re = []*regexp.Regexp{
		regexp.MustCompile(`(?i)EK-G[CN][0-9]{3}`),
		regexp.MustCompile(`(?i)EK-GC([0-9]{3})`),
		regexp.MustCompile(`(?i)AFTLBT962E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLBT962E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLFT962X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTLFT962X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tesla/(?:(?:develop|feature|terminal-das-fsd-eap)-)?[0-9.]+|QtCarBrowser)`),
		regexp.MustCompile(`(?i)Tesla/[0-9.]+`),
		regexp.MustCompile(`(?i)Archos.*GAMEPAD([2]?)`),
		regexp.MustCompile(`(?i)Nintendo (([3]?DS[i]?)|Wii[U]?|Switch|GameBoy)`),
		regexp.MustCompile(`(?i)Retroid Pocket ([32]) ?(?:Plus|\+)`),
		regexp.MustCompile(`(?i)Dreamcast|Aplix_SEGASATURN`),
		regexp.MustCompile(`(?i)(?:PlayStation ?(4 Pro|[2-5]|Portable|Vita)|sony_tv;ps5;|\(PS3\))`),
		regexp.MustCompile(`(?i)sony_tv;ps5;`),
		regexp.MustCompile(`(?i)\(PS3\)`),
		regexp.MustCompile(`(?i)PlayStation ?(4 Pro|[2-5]|Portable|Vita)`),
		regexp.MustCompile(`(?i)10moons[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:E500A_2019|2E E450 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E500A_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2E E450 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:180[1379]-A01|1713-A01|1707-A01|1509-A00|1603-A03|1607-A01|1503-A01|1505-A0[12]|1605-A01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1807-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1803-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1809-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1713-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1707-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1801-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1509-A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1503-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1605-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1603-A03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1607-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1505-A0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]`),
		regexp.MustCompile(`(?i)3GNET[ _](U8|T800|U6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)3GNET[ _]T ?900`),
		regexp.MustCompile(`(?i)(?:Aplay ?[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aplay ?([34])`),
		regexp.MustCompile(`(?i)AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729[BD]|MT0811B|OC1020A|RC07(?:09B|10B|18C|19H|2[16]B|22C|27H|34H|43H)|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC780[24]F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C|TS9708B|AC0732C|MT0739D|MT0812E|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)MT0724B|LC0901D|LC0816C|LC0810C|LC0809B|LC0808B|LC0804B|LC0725B|LC0723B`),
		regexp.MustCompile(`(?i)VM1017A|TS1013B|TS0807B|RC9731C|RC9730C|RC9727F|RC9726C|RC9724C|RC9717B|RC9716B|RC9712C|RC9711B|RC1301C|RC1025F|RC1019G|RC1018C|RC0817C|RC0813C|RC0743H|RC0734H|RC0726B|RC0722C|RC0721B|RC0719H|RC0718C|RC0710B|RC0709B|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT0811B|MT0739D|MT0729[BD]|LC1016C|LC0720C|BC9710AM|AC1024C|AC0731B`),
		regexp.MustCompile(`(?i)MT7801C|QS9718C|QS9719D|VM0711A|OC1020A`),
		regexp.MustCompile(`(?i)AC7803C|AC0732C|RC0727H`),
		regexp.MustCompile(`(?i)MT0812E|RC7802F`),
		regexp.MustCompile(`(?i)EL72B|(?:3Q_)?ER71B`),
		regexp.MustCompile(`(?i)(RC7804F)`),
		regexp.MustCompile(`(?i)4Good[ _]|S450m [43]G|S555m 4G|S501m 3G|T700i_3G|People (?:G503|G410|GT300)|Light (?:A10[34]|B100|AT300)|Light_AT200`),
		regexp.MustCompile(`(?i)(T700i|T100m|T70[34]m)[_ ]?3G`),
		regexp.MustCompile(`(?i)Light[_ ](AT[23]00)`),
		regexp.MustCompile(`(?i)People (GT300|AT100)`),
		regexp.MustCompile(`(?i)S555m[_ ]4G`),
		regexp.MustCompile(`(?i)(S(?:450m|501m)[_ ][43]G|Light (?:A10[34]|B100)|People (?:G503|G410))`),
		regexp.MustCompile(`(?i)4Good[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)4ife (4K Smart TV Box)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tarzan F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SWEGUE|DRENA|Kamba(?:_2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8848 (M[3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G4040)`),
		regexp.MustCompile(`(?i)(?:A1 (?:Alpha|Alpha 20\+)|Alpha 20|Alpha Eco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1 Alpha 20\+`),
		regexp.MustCompile(`(?i)A95X MAX \+`),
		regexp.MustCompile(`(?i)A95X ?Z2PLUS`),
		regexp.MustCompile(`(?i)A95X[ _-]?(F[1-4]|R[1235]|[AWZ]2|A1)`),
		regexp.MustCompile(`(?i)Android 13(?:[\d.]*);(?: [\w-]+;)? (?:M50)( Build|[;)])`),
		regexp.MustCompile(`(?i)(TK701|TK806)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)elite Aquarius(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hashtag|Shine|Chacer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])|AG[_ ]Go[_-]Tab|(?:Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AG[_ ]Go[_-]Tab[_ ]Access(_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Flair|Ultra 2|Freedom Access)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM_H5_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[_ ]PAD[_ ]P([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGM[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AIDATA ELDE 10 TABLET|ADT_?1061(?:_1)?|ADT1012L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADT_?1061(?:_1)?`),
		regexp.MustCompile(`(?i)AIRBOOK PRO 8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris708|Kingcomm C500`),
		regexp.MustCompile(`(?i)ALDINORD, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)ALLINmobile_ARENA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMA[ _](A703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LE-3[29]ZTHS25|LE-5[05]ZTUS30|LE-50ZTUS32|LE-43ZTFS25)(?:-[ABF])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(350|355|40[257]|41[025]|450|50[689]|52[037]|51[58]|53[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM(355|407)`),
		regexp.MustCompile(`(?i)AM([0-9]{3})`),
		regexp.MustCompile(`(?i)(RG405V|RG505)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ancel(801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANS/|(?: UL40|ACK2326)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(AnPad_U2)`),
		regexp.MustCompile(`(?i)AOC[;,]|(?:Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q10107L-ME)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOYODKG[_ ](A38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WT(?:22|19)M-FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arris_liberty,([a-z0-9-]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)ARRIS[,;] ([^),;/]+)`),
		regexp.MustCompile(`(?i)ASSE[-._ ](Q[35]s?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATT_|(?:EA1002|EA21100[125]|EABF22206A|U(?:202|304|31[89]|328|626|668|6080|705)AA|QS5509A|V340U|V350U|WTATTRW2|SL112A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATT_)?EA211101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATT_)?U1030AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATT_)?U102AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U304AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U705AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QS5509A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U318AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U319AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U328AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U202AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V350U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U626AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EABF22206A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SL112A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U668AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTATTRW2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U6080AA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V340U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATMAN[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(IT)_(701A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATOL (?:150F)|Smart_(?:Prime|SLIM_Plus))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOL (150F)`),
		regexp.MustCompile(`(?i)AUPO[ _]Zeus`),
		regexp.MustCompile(`(?i)AUPO[ _]Zeus 10 Pro`),
		regexp.MustCompile(`(?i)(TB-703G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUX[ _]([^/;)]+)(?:_TD)`),
		regexp.MustCompile(`(?i)Excer[ _]`),
		regexp.MustCompile(`(?i)Excer[ _]G5\.([236])`),
		regexp.MustCompile(`(?i)Excer[ _]G5`),
		regexp.MustCompile(`(?i)Excer[ _]10[ _]PRO`),
		regexp.MustCompile(`(?i)Excer[ _]8`),
		regexp.MustCompile(`(?i)(?:AWOX|B213[29]00SW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWOX;SmartTV;([a-z0-9_ -]+);`),
		regexp.MustCompile(`(?i)(B213[29]00SW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (AX[a-z0-9-]+);`),
		regexp.MustCompile(`(?i)AXXA[ _]`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)[ _]PLUS`),
		regexp.MustCompile(`(?i)AXXA[ _](S\d+)`),
		regexp.MustCompile(`(?i)AYYA[ _]|(?:Ayat101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AYYA[ _](T1)`),
		regexp.MustCompile(`(?i)AZOM[_ ]`),
		regexp.MustCompile(`(?i)Accent_|(?:FAST7 ?3G|PEARL[_ ]A[24567]|TANK_P55|CAMELEON[_ ](?:C[456]|A1|H2)(?:[_ ]PLUS)?|Speed[- ](?:[AXYM]2|X2\+)|SURF1000|KIDZY70|SPEED_S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ]NEON(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACCENT[_ ](?:Nubia)?([56]0K)(?:28_512)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ]C([65])[_ ]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed[- _]([AXYM]2|S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Speed-X2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAMELEON[_ ](C[456]|A1|H2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL A4 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEARL[_ ]A([24567])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK_P55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FAST7 ?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURF1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDZY70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U43EY1500B|[FH]32EY1500B|F32EY1000B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BUZZ [1-5]|BUZZ 4(?:Pro|S|Lite)|CLEVER [13]|URBAN [123](?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Ultra`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Note`),
		regexp.MustCompile(`(?i)BUZZ ([45]) Prime`),
		regexp.MustCompile(`(?i)BUZZ ([45]) ?Pro`),
		regexp.MustCompile(`(?i)BUZZ ([1245]) ?Lite`),
		regexp.MustCompile(`(?i)BUZZ ([123]) Plus`),
		regexp.MustCompile(`(?i)BUZZ ([1-5])`),
		regexp.MustCompile(`(?i)CLEVER ([13])`),
		regexp.MustCompile(`(?i)URBAN ([123])`),
		regexp.MustCompile(`(?i)(24HHY1|32HHY1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A130[_-]202[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A130[_-](202[34])`),
		regexp.MustCompile(`(?i)acer|ACTAB|TravelMate|a(?:101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)|Android.*V3[67]0(?:[);/ ]|$)|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|Android.*T0[234678] Build|Android 5(?:[\d.]*);(?: [\w-]+;)? S59|android [45]([\d.]*);(?: [\w-]+;)? S55(?:[);/ ]|$)|(?:A1-(713(HD)?|7[23]4|830|841|840(?:FHD)?|81[01])|A3-A[1-5][01]|B1-(7[1235-9][01](HD)?|7[23]3|7A0|8[1235]0|A71|860A)|TPA60W|B3-(A[125]0|A3[02]|A40FHD)|E39)(?:[);/ ]|$)|S5[12]0 Build|(DA[0-9]+HQ?L|Aspire (?:V5-121|XC-704G|V5-573G|4349)|Chromebook 14 \(CB3-431\)|Predator G9-793|GT-810|B1-870|B3-A20B|M10-12(?:_EEA)?|B3-A4[02]|android 4([\d.]*);(?: [\w-]+;)? Z500|B3-A50FHD|ET-108-11A|AC?TAB(?:721E?|1422E|821|1021(?:E|_A)|1022)|A3-A20FHD|E380|Swift SF113-31|A410_4G|EUT[13]10A?-11A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA220HQL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DA241HL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DA[0-9]+HQ?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10-12(?:_EEA)?`),
		regexp.MustCompile(`(?i)A1-81[01]`),
		regexp.MustCompile(`(?i)ATAB(102[12]|721|1422)E`),
		regexp.MustCompile(`(?i)ACTAB1021(?:_A)?`),
		regexp.MustCompile(`(?i)ACTAB(821|1022)`),
		regexp.MustCompile(`(?i)A1-84(1|0(?:FHD)?)`),
		regexp.MustCompile(`(?i)A1-713(HD)?`),
		regexp.MustCompile(`(?i)A1-7[23]4`),
		regexp.MustCompile(`(?i)A3-A[12][01]`),
		regexp.MustCompile(`(?i)A3-A[345]0`),
		regexp.MustCompile(`(?i)B1-7(?:[5-9]0|30HD|A0)`),
		regexp.MustCompile(`(?i)B1-7[123][01]|B1-A71`),
		regexp.MustCompile(`(?i)B1-7[23]3`),
		regexp.MustCompile(`(?i)B1-8[123567]0`),
		regexp.MustCompile(`(?i)B3-A([125]0|3[02]|[45]0FHD|4[02])`),
		regexp.MustCompile(`(?i)A50[01]`),
		regexp.MustCompile(`(?i)(ACTAB721)`),
		regexp.MustCompile(`(?i)EUT([13])10A?-11A`),
		regexp.MustCompile(`(?i)E39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E320(?:-orange)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*V370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?P300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?S200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer_)?E100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z1([234])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*Z(5\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*S57(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android.*T08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook R1[13])`),
		regexp.MustCompile(`(?i)TravelMate Spin (B118-G2-R)`),
		regexp.MustCompile(`(?i)TravelMate (P653-M|5760G|8371|B118-M)`),
		regexp.MustCompile(`(?i)(?:Acer )?(Chromebook 1[45])`),
		regexp.MustCompile(`(?i)Aspire (V5-121|XC-704G|V5-573G|A515-51G|4349|E5-511)`),
		regexp.MustCompile(`(?i)(Predator G9-793|Swift SF113-31)`),
		regexp.MustCompile(`(?i)a(101|110|2[10]0|211|50[10]|51[10]|70[10])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Acer; ?([^;()/]+)`),
		regexp.MustCompile(`(?i)Acer[ _-]?([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)acer[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BLECK|AT723C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeoPad[_ ]10[XS]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeoPad[_ ](10[XS])`),
		regexp.MustCompile(`(?i)LeoPad[_ ]10`),
		regexp.MustCompile(`(?i)Adronix[ _]?(?:MT[0-9]+|X1001|Mini ?Tab ?7 ?3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Adronix ?Mini ?Tab ?7 ?3G`),
		regexp.MustCompile(`(?i)Adronix[ _]?(MT[0-9]+|X1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ADVAN (?:M4|S40|T5C|1011)|i7U|S45E|S50H|I7D|i55[KD]|i4U|S7D|S4Z|i5[KE]|S5E[ _]NXT|S5J\+|S4\+|E1C_3G|ADVANNASAPro)(?:[);/ ]|$)| (?:E1C Pro|5505|5202|50(?:[46]1|5[89]|62)|600[234]|6[25]01|Android [56](?:[\d.]*);(?: [\w-]+;)? (?:i5C|i7A)|i5G|E1C 3G)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)S5E[ _]NXT`),
		regexp.MustCompile(`(?i)i(55[KD]|5[KE])`),
		regexp.MustCompile(`(?i)5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVANNASAPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6201(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6501(?: Build|[;)])`),
		regexp.MustCompile(`(?i)i5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6004(?: Build|[;)])`),
		regexp.MustCompile(`(?i)6002(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(S45E|50[46]1|505[89]|5062|S50H|I7D|S7D|S4Z|S5J\+|S4\+|i5C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1C[_ ]3G`),
		regexp.MustCompile(`(?i)(T5C|i7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADVAN 1011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hollogram|(?:HL(?:4[79]36|6246|5576|5585|[56]575|5[67]67|6[05]77|6256|7257|9000)|IntroTr3544|Pr(?:61(?:4[56]|50)|60[27]0|5[69]50|5860)|Tr3845|TR7989|SP[345]701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IntroTr3544|Tr3845`),
		regexp.MustCompile(`(?i)SP([345]701)`),
		regexp.MustCompile(`(?i)Pr(61(?:4[56]|50)|60[27]0|5[69]50|5860)`),
		regexp.MustCompile(`(?i)HL(4[79]36|6246|[56]575|5576|5585|5[67]67|6[05]77|6256|7257|9000)`),
		regexp.MustCompile(`(?i)Hollogram ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(PIC7GS8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CYGNUSX?|Gravity Z2|ChampionPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUSX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CYGNUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gravity Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChampionPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy|novo[0-9]|Novo 10 Hero|AX10PRO|NUMY3GAX9|NOVO10 Spark|Aurora-II|Rainbow(?:II)? 3G`),
		regexp.MustCompile(`(?i)Numy[_ ]?3G[_ ]?Sword`),
		regexp.MustCompile(`(?i)NUMY3GAX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy3G_AX10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Novo 10 Hero QuadCore)`),
		regexp.MustCompile(`(?i)Novo7 ?Flame(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)novo ?7[_ ]ELF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOVO7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Numy[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Novo([0-9]+)[_ -]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AIRIS|PhonePAD 83G`),
		regexp.MustCompile(`(?i)TM50QZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AIRNESS-([\w]+)`),
		regexp.MustCompile(`(?i)(?:Halo3_Pro|Halo4 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo([34])[ _]Pro`),
		regexp.MustCompile(`(?i)Airtel[ _]`),
		regexp.MustCompile(`(?i)Imagine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AIWAAndroidTV|(?:AW790|M300|AWM(?:53[39]|50[19]|561|999)|AW500|Android 7(?:[\d.]*);(?: [\w-]+;)? Z9 PLUS|JA2-SMP0601|AWTX6|WS-508G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AW500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AWM(53[39]|50[19]|561|999)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JA2-SMP0601)`),
		regexp.MustCompile(`(?i)M300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AWTX6|WS-508G)`),
		regexp.MustCompile(`(?i)ajib X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ajib l1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Akai[ _\-,]|LGE; (?:ALT|AK)[a-z0-9]+;|Eco[ _]E2|Glory[ _](?:G[1235]|L[123]|O[125])|(?:TAB-[79]8[03]0Q?|X[56] METAL|AKTB-703MZ|FZ70[13]|X5_PRO|X3[_ ]PRO[_ ]SLIM|iLike U5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB-([79]8[03]0Q?)`),
		regexp.MustCompile(`(?i)(FZ70[13])`),
		regexp.MustCompile(`(?i)X([56]) METAL`),
		regexp.MustCompile(`(?i)X3[_ ]PRO[_ ]SLIM`),
		regexp.MustCompile(`(?i)Glory[ _](G[1235]|L[123]|O[125])`),
		regexp.MustCompile(`(?i)Eco[ _]E2`),
		regexp.MustCompile(`(?i)AKAI\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)Akai[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AKAI,(AK3219NF)`),
		regexp.MustCompile(`(?i)LGE; ((?:ALT|AK)[a-z0-9]+);`),
		regexp.MustCompile(`(?i)Alba ?(?:7Q|10Q|57|4|10 TABLET|(?:[78]|10)(?:Nou|Pie))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alba (4)`),
		regexp.MustCompile(`(?i)Alba((?:[78]|10)(?:Nou|Pie)|7Q|10Q)`),
		regexp.MustCompile(`(?i)Alcatel|Alc[a-z0-9]+|One[ _]?Touch|idol[3X]|TIMXL|(?:(?:3088X|4003[AJ]|4009[ADEFIKMSX]|4013[DEJKMX]|4014[ADEKMX]|4015[ADNTX]|4016[ADX]|4017[ADEFSX]|4018[ADEFMX]|4024[DEX]|4027[ADNX]|4028[AEJS]|4032[ADEX]|4034[ADEFGLTX]|4035[ADXY]|4044[COV]|4045[ADELX]|4047[ADFGNX]|4049[DEGMX]|4052[CORWZ]|4056[WZ]|4060[SW]|4063[FT]|4065F|4087U|4114E|5001[ADJTU]|5002[ABDEFHJLMRSUWX]|5003[ADGUX]|5006[ADG]|5007[AGUOS]|5008[ADTUY]|5009[AD]|5010[DEGSUX]|5011A|5012[DFG]|5015[ADEX]|5016[AJX]|5017[ABDEOX]|5019D|5022[DEX]|5023[EF]|5024[ADFIJ]|5025[DEG]|5026[ADJ]|5027B|5028[ADY]|5029[ADEFY]|5030[ADEFJMU]|5031[ADGJ]|5032[OW]|5033(?:[DFTXY]R|[EFM]P|[ADEFGJMOQSTXY])|5034D|5036D|5038[ADEX]|5039[DY]|5041[CD]|5042[ADEFGTWX]|5044[ADGIKOPSTY]|5045[ADFGIJTXY]|5046[ADGIJSTUY]|5047[DIUY]|5048[AIUY]|5049[EGSWZ]|5050[ASXY]|5051[ADEJMTWX]|5052[ADY]|5053[ADKY]|5054[ADNSTWX]|5056[ADEGIJMNTUWX]|5057M|5058[AIJY]|5059[ADIJSTXYZ]|5060[ADJ]|5061[AKU]|5065[ADNWX]|5070D|5080[ADFQUX]|5085[ABCDGHIJNOQY]|5086[ADY]|5090[AIY]|5095[IKY]|5098[OS]|5099[ADIUY]|5116J|5131E|5145A|6002[ADJ]|6016[ADEX]|6025[ADH]|6027A|6036[AXY]|6037[BKY]|6039[AHJKSY]|6042D|6043[AD]|6044D|6045[BFIKOXY]|6050[AFY]|6055[ABDHIKPUYZ]|6056[ADH]|6058[ADX]|6060[SXC]|6062W|6065A|6070K|7040[ADEFKRT]|7041[DX]|7042A|7043[AEKY]|7044[AX]|7045Y|7048[ASWX]|7053D|7055A|7070X|7071[ADX]|8030Y|8050[DEGX]|8063|8088[MQX]|8094[MTX]|9001[DIX]|9002X|9003[AX]|9005X|9006W|9007[ATX]|9008[ADIJNTUX]|9009[AFG]|9010X|9013[ATX]|9015B|9020A|9022X|9024[OW]|9025Q|9026X|9027[FQTWX]|9029[ZW]|9032[TWXZ]|9203A|9309X|A(?:40[56]DL|46[46]BG|57[04]BL|576CC|621BL|50[13]DL|57[17]VL)|I213|I216[AX]|80(?:[89]2|84|91|6[78]|5[124567]))(?:_(?:EEA|RU|TR))?|P3[36]0X|AM-H200|A463BG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4052[CR]`),
		regexp.MustCompile(`(?i)4052[OWZ]`),
		regexp.MustCompile(`(?i)4056[WZ]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044V`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044C`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044O`),
		regexp.MustCompile(`(?i)5022[EDX]|5070D`),
		regexp.MustCompile(`(?i)4015[ATX]|4016A`),
		regexp.MustCompile(`(?i)4015[DN]|4016[DX]`),
		regexp.MustCompile(`(?i)4032[AX]`),
		regexp.MustCompile(`(?i)4032[DE]`),
		regexp.MustCompile(`(?i)7040[AFK]|7041X|7042A`),
		regexp.MustCompile(`(?i)7040[DE]|7041D`),
		regexp.MustCompile(`(?i)4018[ADEFMX]`),
		regexp.MustCompile(`(?i)4035[ADXY]`),
		regexp.MustCompile(`(?i)5038[ADEX]`),
		regexp.MustCompile(`(?i)4045[AXL]`),
		regexp.MustCompile(`(?i)4045[DE]`),
		regexp.MustCompile(`(?i)5042[AFGWX]`),
		regexp.MustCompile(`(?i)5042[DE]`),
		regexp.MustCompile(`(?i)7043[AY]|7044[AX]`),
		regexp.MustCompile(`(?i)7043[EK]`),
		regexp.MustCompile(`(?i)50[16]5X`),
		regexp.MustCompile(`(?i)5015[AE]|5016[AJ]|5065[ADWX]|5116J`),
		regexp.MustCompile(`(?i)5025[DEG]|5054[ADSTX]`),
		regexp.MustCompile(`(?i)5051[AEJMTWX]`),
		regexp.MustCompile(`(?i)5095[IKY]`),
		regexp.MustCompile(`(?i)5056[ADEGJMTUX]`),
		regexp.MustCompile(`(?i)5050[ASXY]`),
		regexp.MustCompile(`(?i)6037[BKY]`),
		regexp.MustCompile(`(?i)7071[ADX]`),
		regexp.MustCompile(`(?i)5002[ABDEHJLMSUWX]`),
		regexp.MustCompile(`(?i)5031[ADGJ]|5131E`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5008R`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5002R`),
		regexp.MustCompile(`(?i)5034D|6056[ADH]`),
		regexp.MustCompile(`(?i)7040[RT]`),
		regexp.MustCompile(`(?i)5056[NW]`),
		regexp.MustCompile(`(?i)6016[AX]`),
		regexp.MustCompile(`(?i)6016[DE]`),
		regexp.MustCompile(`(?i)6036[AXY]`),
		regexp.MustCompile(`(?i)6050[AFY]`),
		regexp.MustCompile(`(?i)6039[AHJKYS]|idol3`),
		regexp.MustCompile(`(?i)6045[BFIKOYX]|AM-H200`),
		regexp.MustCompile(`(?i)6055[ABDHIKPUYZ]`),
		regexp.MustCompile(`(?i)6058[ADX]`),
		regexp.MustCompile(`(?i)6060[SX]`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?6060C`),
		regexp.MustCompile(`(?i)6043[AD]`),
		regexp.MustCompile(`(?i)4024[DEX]`),
		regexp.MustCompile(`(?i)4009[AFIKMSX]|A463BG`),
		regexp.MustCompile(`(?i)4009[DE]`),
		regexp.MustCompile(`(?i)4003[AJ]|4013[DEJKMX]|4014[AEKMX]|4114E`),
		regexp.MustCompile(`(?i)4027[ADNX]|4028[AEJS]|5019D`),
		regexp.MustCompile(`(?i)5017[ABDEOX]`),
		regexp.MustCompile(`(?i)9007[TX]`),
		regexp.MustCompile(`(?i)(?:9009G|9013[AT])`),
		regexp.MustCompile(`(?i)808[24](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8092(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8091(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8052(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8051(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)805[4567](?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:806[78]|9013X)(?:_(?:EEA|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4017[ADEFSX]`),
		regexp.MustCompile(`(?i)4034[ADEFGXL]`),
		regexp.MustCompile(`(?i)4060[SW]`),
		regexp.MustCompile(`(?i)5023[EF]`),
		regexp.MustCompile(`(?i)5010[DEGSUX]`),
		regexp.MustCompile(`(?i)5012[DFG]`),
		regexp.MustCompile(`(?i)5045[ADFGIJTXY]|5145A`),
		regexp.MustCompile(`(?i)(?:Alcatel_)?5004R`),
		regexp.MustCompile(`(?i)5046[ADIJTUY]`),
		regexp.MustCompile(`(?i)5011A|5049[EG]`),
		regexp.MustCompile(`(?i)9008[ADIJNTUX]`),
		regexp.MustCompile(`(?i)(?:9027[QFTWX]|9032[TX])`),
		regexp.MustCompile(`(?i)5085[BQ]`),
		regexp.MustCompile(`(?i)5085[ADHIJY]`),
		regexp.MustCompile(`(?i)5090[AIY]`),
		regexp.MustCompile(`(?i)5046[GS]`),
		regexp.MustCompile(`(?i)5085[GO]`),
		regexp.MustCompile(`(?i)5048[AYUI]`),
		regexp.MustCompile(`(?i)8050[GX]`),
		regexp.MustCompile(`(?i)8050[ED]`),
		regexp.MustCompile(`(?i)5098S|9001[DIX]`),
		regexp.MustCompile(`(?i)9003[AX]`),
		regexp.MustCompile(`(?i)9024[OW]`),
		regexp.MustCompile(`(?i)I216[AX]`),
		regexp.MustCompile(`(?i)7048[ASWX]`),
		regexp.MustCompile(`(?i)(?:Alcatel-)?OT-802`),
		regexp.MustCompile(`(?i)(?:TRIBE_)?3075A`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch[ _]((?:T[0-9]+|TAB[^/;]+|EVO[78](?:HD)?)) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)`),
		regexp.MustCompile(`(?i)5080[ADFQUX]`),
		regexp.MustCompile(`(?i)4049[DEGMX]`),
		regexp.MustCompile(`(?i)5044[ADIKOPTY]`),
		regexp.MustCompile(`(?i)4047[DFXN]`),
		regexp.MustCompile(`(?i)5047[DIUY]`),
		regexp.MustCompile(`(?i)4044[CV]`),
		regexp.MustCompile(`(?i)(?:Alcatel)?4044[MNT]`),
		regexp.MustCompile(`(?i)5044[GS]`),
		regexp.MustCompile(`(?i)5033[DFTXY]R(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033MP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5033(?:[ADJEFGMOTXYQS]|[EF]P)(?:_(?:EEA|RU|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5009[AD]`),
		regexp.MustCompile(`(?i)5003[ADGUX]`),
		regexp.MustCompile(`(?i)5008[ADUYT]`),
		regexp.MustCompile(`(?i)5007[AGUS]`),
		regexp.MustCompile(`(?i)6002[AD]`),
		regexp.MustCompile(`(?i)5006[ADG]`),
		regexp.MustCompile(`(?i)5024[ADFIJ]|5028Y|6025[ADH]`),
		regexp.MustCompile(`(?i)(?:5028[AD]|5007O)`),
		regexp.MustCompile(`(?i)5030[ADFJMU]`),
		regexp.MustCompile(`(?i)5001[ADJTU]`),
		regexp.MustCompile(`(?i)5059[ADJXYZIT]`),
		regexp.MustCompile(`(?i)5060[ADJ]`),
		regexp.MustCompile(`(?i)5052[ADY]|5053[ADKY]`),
		regexp.MustCompile(`(?i)5029[ADFY]`),
		regexp.MustCompile(`(?i)5032[OW]|5099[ADYUI]`),
		regexp.MustCompile(`(?i)5026[ADJ]`),
		regexp.MustCompile(`(?i)5039[DY]`),
		regexp.MustCompile(`(?i)5058[AIJY]`),
		regexp.MustCompile(`(?i)5061[AKU]`),
		regexp.MustCompile(`(?i)5086[ADY]`),
		regexp.MustCompile(`(?i)8088[XQM]`),
		regexp.MustCompile(`(?i)8094[MTX]`),
		regexp.MustCompile(`(?i)9029[ZW]`),
		regexp.MustCompile(`(?i)9032[WZ]`),
		regexp.MustCompile(`(?i)(?:ALCATEL_)?A383G`),
		regexp.MustCompile(`(?i)ALCATEL([^/;]+) Build`),
		regexp.MustCompile(`(?i)ALCATEL[ -]?([^/;\)]+)`),
		regexp.MustCompile(`(?i)ALCATEL_([^/;\)]+)`),
		regexp.MustCompile(`(?i)Alc([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Access_Q784C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Alfawise (?:A9)|(?:A95X_R1|Z28Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A95X_R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z28Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfawise (A9)`),
		regexp.MustCompile(`(?i)ALIGATOR[_ ]|(?:RX[67]00|S5710|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALIGATOR[ _])?(S4080|S[56]550|S50(?:6[56]|[678]0)|S55[24]0|S5710|RX510|S6[015]00|RX710|RX[678]00|RX460)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ASSTV[A-Z0-9]+)`),
		regexp.MustCompile(`(?i)AllCall_|Heat[34]|SHINE 12T?|(?:Rio_X|S5500)(?:[);/ ]|$)|Hot ?[125][^;/]+ Build`),
		regexp.MustCompile(`(?i)AllCall_(Alpha|Atom|Bro|Madrid)`),
		regexp.MustCompile(`(?i)Heat([34])`),
		regexp.MustCompile(`(?i)Rio_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot ?([125][^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:T1001XS?|T1006S?|T1001|T811|iPlay[_ ][2345]0|U1006H?|U1005E|U63PLUS|iPlay8|iPlay_?[89]T|iPlay[134]0|iPlay_40H|iPlay50_mini_Pro|iPlay50 (?:Pro|Mini)|iPlay_?[25]0[SP]|iPlay50(?:Pro|_Lite)?|iPlay60_mini_Pro|kPad|X_Game|T806MHE?|Power M3|Smile_X|iPlay_60_Lite|iPlay_60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smile_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001XS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kPad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U63PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1006H?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1005E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T806MHE?`),
		regexp.MustCompile(`(?i)iPlay_?([56]0)_Lite`),
		regexp.MustCompile(`(?i)iPlay[_ ]?([56]0)[_ ]mini[_ ]Pro`),
		regexp.MustCompile(`(?i)iPlay ?50 ?Pro`),
		regexp.MustCompile(`(?i)iPlay[_ ]?([1-6]0|[89]T?|40H|[25]0[sP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X_Game(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Allview|A4You|H1003_LTE_PRO|A5_(?:Easy(?:_TM)?|Ready(?:_TM)?|Quad|Quad_Plus_TM)|A[5-9]_Lite|A5Smiley|A6_Duo|A10_Lite_(?:2019|2GB)|A10_(?:Plus|Max)|AX2_Frenzy|AX4Nano|AX5NanoQ|AX50(?:[23]|1Q)|C6_Duo|E[23]_Living|E[23]_(?:Jump|Sign)|E4_Lite|M9_Connect|P(?:43_Easy|[5689]_Energy|6_Energy_Lite|[68]_Energy_Mini(?:_TM)?|(41|[4568])_eMagic(?:_TM)?|[589](?:_)?Life(?:_TM)?|[567]_Lite(?:_TM)?|6_plus|[45678]_Pro|7_Seon|10_Life|10_Max|10_Style|7_Xtreme|6_Qmax|4_Quad)|V(?:[1345]_Viper|1_Viper_I|2_Viper_(?:[EISX]|X_plus|Xe))|X4_Soul_Vision|X(?:[1-46]_Soul_Xtreme|[1-5]_Soul|3_Soul_Lite|[2-6]_Soul_Mini(?:_TM)?|4_Soul_Mini_S(?:_TM)?|[2-58]_Soul_Style(?:_TM)?|2_Soul_Style_Plus|2_Twin)|A30_Plus|Viva_(?:H801|100[13]G|(?:H100[124]|H701|H802)_LTE|C701|i701G|803G)|VivaH(?:10|[78])|X7_Soul_Style|X[12]0_Soul|X[78]_Soul_Pro|V10_Viper|Viva_(?:Home|i7G)|H1004_LTE`),
		regexp.MustCompile(`(?i)E([23])_Living`),
		regexp.MustCompile(`(?i)E([23])_Jump`),
		regexp.MustCompile(`(?i)P(41|[4568])_eMagic(?:_TM)?`),
		regexp.MustCompile(`(?i)P([567])_Lite(?:_TM)?`),
		regexp.MustCompile(`(?i)P([45678])_Pro`),
		regexp.MustCompile(`(?i)P([69])_Energy_Lite`),
		regexp.MustCompile(`(?i)P([689])_Energy_mini(?:_TM)?`),
		regexp.MustCompile(`(?i)P([5689])_Energy`),
		regexp.MustCompile(`(?i)P([589])(?:_)?Life(?:_TM)?`),
		regexp.MustCompile(`(?i)V([12])_Viper_I4G(?:_TM)?`),
		regexp.MustCompile(`(?i)V2_Viper_(E|I|S|X(?:e)?)`),
		regexp.MustCompile(`(?i)X([1246])_Soul_Xtreme`),
		regexp.MustCompile(`(?i)X4_Soul_Infinity_(L|N|S|Z)`),
		regexp.MustCompile(`(?i)X4[_ ]Soul[_ ]Infinity[_ ]Plus`),
		regexp.MustCompile(`(?i)X([34])_Soul_Lite`),
		regexp.MustCompile(`(?i)X4_Soul_Mini_S(?:_TM)?`),
		regexp.MustCompile(`(?i)X([23456])_Soul_Mini(?:_TM)?`),
		regexp.MustCompile(`(?i)X([357])_Soul_Pro`),
		regexp.MustCompile(`(?i)X([23458])_Soul_Style(?:_TM)?`),
		regexp.MustCompile(`(?i)X(\d+)_Soul`),
		regexp.MustCompile(`(?i)V(\d+)_Viper`),
		regexp.MustCompile(`(?i)A5_Easy(?:_TM)?`),
		regexp.MustCompile(`(?i)A([56789])_Lite`),
		regexp.MustCompile(`(?i)A5_Ready(?:_TM)?`),
		regexp.MustCompile(`(?i)A(10|30)_Plus`),
		regexp.MustCompile(`(?i)Viva_(i7G)`),
		regexp.MustCompile(`(?i)H1003_LTE_PRO([13])`),
		regexp.MustCompile(`(?i)Viva[_ ]?H([78]|10)[_ ]?LTE`),
		regexp.MustCompile(`(?i)Viva_?((?:H80[12]|H100[12]|H701)_LTE|C701|i701G|803G|H10|H7|H801|100[13]G)`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEEDI`),
		regexp.MustCompile(`(?i)ALLVIEW ?SPEED`),
		regexp.MustCompile(`(?i)AX4Nano[_ ]plus`),
		regexp.MustCompile(`(?i)AX(50[23]|501Q)`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Allview[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QUAD-CORE (?:T3 p1|A64 p3|A33 y3|T3 K2001M|T3 k2001o|T3 k2001-nwd)|ZY-07B|UltraOcta-T8|OCTA-CORE T8|OCTOPUS-CORE T8|QUAD-CORE T3 p3|QuadCore-R16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 K(2001M?)`),
		regexp.MustCompile(`(?i)QUAD-CORE T3 p([13])`),
		regexp.MustCompile(`(?i)(?:FF-5000|ZQ8003|825X_Pro|03_v89_jbl|benz_hy1920x720|8227L_demo|tb8163p3_bsp)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FF-5000)`),
		regexp.MustCompile(`(?i)(ZQ8003|825X_Pro|benz_hy|8227L_demo|tb8163p3_bsp)(?:1920x720)?`),
		regexp.MustCompile(`(?i)Altice[ _]|(SX41|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:S32|S42|S32_(?:Plus|NFC)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SX41|S32|S42|S32_Plus|S32_NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Altice[ _](S62|S31|S43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Altus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?(?:AFT[ABMNRST]|AFTSSS?|AFTANNA0|AFTGAZL|AFTMM|AFTK(?:A|M|RT)|AFTTI43|AFTTIFF43|AFTHA001|AFTKA(?:DE|UK)?00[12]|SD4930UR|AEO(?:AT|B[CP]|C[HNW]|H[PY]|KN|RH|TA)|KF(?:OT|ONWI|TT|JWI|JWA|[DFS]OWI|A[PRSU]WI|T[BH]WI|TRP?WI|SAW[IA]|GIWI|[KMR]AWI|MEWI|[MSTQ]UWI|SNWI|RAPWI))(?:[);/ _]|$)|Kindle|AlexaMediaPlayer|Amazon (?:Tate|Jem)|Silk/\d+\.\d+|Echo/1|.+FIRETVSTICK|Amazon;Echo`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTA(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTR(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTGAZL(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTN(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTTI43`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKAUK001(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKA(?:UK)?002(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTANNA0(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTALMO(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTHA001(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSHN01(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTB(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSSS(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSS(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTTIFF43(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKADE001(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFT[MST](?:[);/ _]|$)`),
		regexp.MustCompile(`(?i).+FIRETVSTICK2018|(?:smarttv_)?AFTMM(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKM(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKA(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTKRT(?:[);/ _]|$)`),
		regexp.MustCompile(`(?i)KFFOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFJWI(?:[);/ ]|$)|Amazon Jem`),
		regexp.MustCompile(`(?i)KFJWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSOWI(?:[);/ ]|$)|Amazon Tate`),
		regexp.MustCompile(`(?i)KFTHWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTHWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAPWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSNWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFARWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFASWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFQUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFAUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMEWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFRAP?WI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFGIWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFDOWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFKAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFONWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSAWA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTBWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFSUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFMAWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTUWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFTRPWI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KFOT|Kindle Fire|Silk-Accelerated`),
		regexp.MustCompile(`(?i)Amazon;Echo;`),
		regexp.MustCompile(`(?i)Echo/1|AEO(?:AT|BC|CN|KN|TA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazon;Echo_Dot`),
		regexp.MustCompile(`(?i)Amazon;Echo_Show_(\d+)`),
		regexp.MustCompile(`(?i)AEOBP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOHP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AEOC[HW]|AEORH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEOHY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silk/\d+\.\d+`),
		regexp.MustCompile(`(?i)(?:AFTBU001|AFTPR001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTBU001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTPR001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMIGOO (R300|R9 Max|M1 Max|X15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Amigo7x?(?:YUF|SCB)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amoi|(?:A862W|Clever[ -]?(?:Gem S52|Gleam S45|Pad P7|Wave S50|Touch S46|JOY S40|Lite S41))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clever[ -]?(Gleam S45|Gem S52|Wave S50|Touch S46|Lite S41)`),
		regexp.MustCompile(`(?i)Amoi[-_ /](CA6)`),
		regexp.MustCompile(`(?i)Amoi[-_ /]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Amoisonic-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:ANDOWL-)?(Q[45]|QG9|QK9MAX)(?:[);/ ]|$)|Andowl`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? P80(?: Build|[);])`),
		regexp.MustCompile(`(?i)angelcare[ _]`),
		regexp.MustCompile(`(?i)F20 ?pro`),
		regexp.MustCompile(`(?i)angelcare[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Anker|smarttv_AFTMM-Anker-AK-D3000111|(?:AFTMM|D21[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Anker|smarttv_AFTMM-Anker-AK-D3000111|AFTMM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)D2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)D2150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANRY-(RS10|[SX]20|E30|1006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AOCOS ([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:X900_US|X700_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([79]00)_(?:EEA|US)`),
		regexp.MustCompile(`(?i)Aoro[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:aoson ?(?:R10[1-3]|S[78]|M707TG|M96T)(?:[_ ]?Pro)?|R103)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:aoson ?)?R10([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?S8Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aoson ?(M707TG|M96T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV|Apple/|(?:Apple-|iTunes-)?(?:iPad|iPhone)|iPh(?:[0-9]|1[0-7]),[0-9]|CFNetwork|HomePod|AirPlay|AirPodcasts/|Watch ?OS|Watch1,[12]|MDCR_i?Mac|ICRU_iP(?:ad|hone)|Mac OS X[,;]|OSX/|macOS,|for Apple Watch`),
		regexp.MustCompile(`(?i)(?:HomePod|AirPodcasts/)`),
		regexp.MustCompile(`(?i)Watch3,[13]`),
		regexp.MustCompile(`(?i)Watch3,[24]`),
		regexp.MustCompile(`(?i)Watch5,(?:9|11)`),
		regexp.MustCompile(`(?i)Watch5,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[02]`),
		regexp.MustCompile(`(?i)Watch6,1[13]`),
		regexp.MustCompile(`(?i)Watch6,1[46]`),
		regexp.MustCompile(`(?i)Watch6,1[57]`),
		regexp.MustCompile(`(?i)Watch([456]),[13]`),
		regexp.MustCompile(`(?i)Watch([456]),[24]`),
		regexp.MustCompile(`(?i)Watch6,[68]`),
		regexp.MustCompile(`(?i)Watch6,[79]`),
		regexp.MustCompile(`(?i)Watch7,[13]`),
		regexp.MustCompile(`(?i)Watch7,[24]`),
		regexp.MustCompile(`(?i)(:?Apple Watch|watchOS)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac11(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac12(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac13(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)[13]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac14(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac18(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac19(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac20(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMac21(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iMacPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook[45](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBook9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir3(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir4(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookAir10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)15`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)12`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro1(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro2(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro[34](?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro5(?:%2C|,)5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro6(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro8(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro9(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro10(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro11(?:%2C|,)[45]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro13(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro14(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro15(?:%2C|,)4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[14]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro16(?:%2C|,)[23]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro17(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)(?:6|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)(?:[79]|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?MacBookPro18(?:%2C|,)[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)[59]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac15(?:%2C|,)(?:[368]|10)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini1(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini2(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini3(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini4(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini5(?:%2C|,)[123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini6(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini7(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini8(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Macmini9(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)(?:3|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac7(?:%2C|,)3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac8(?:%2C|,)2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac10(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerMac12(?:%2C|,)1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook5(?:%2C|,)6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?PowerBook6(?:%2C|,)7`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac13(?:%2C|,)[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?Mac14(?:%2C|,)1[34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?1[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?2[C,_]1| 3GS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?4[C,_]1|1C2%254enohPi| 4S\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][12]| 5\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?5[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?6[C,_][12]|(?:iPhone[ _]?5S| 5S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]1|1C2%257enohPi|(?:iPhone[ _]?6Plus| 6PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?7[C,_]2|(?:iPhone[ _]?6| 6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]1|(?:iPhone[ /]?6s| 6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]2| 6SPLUS\)$`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?8[C,_]4|(?:iPhoneSE| SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][24]|(?:iPhone[ _]?7Plus| 7PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?9[C,_][13]|(?:iPhone[ _]?7 ?| 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][25]|(?:iPhone[ _]?8Plus| 8PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][14]|(?:iPhone[ _]?8| 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_][46]|(?:iPhone[ _]?XS[ _]?Max| XSMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]2|(?:iPhone[ _]?XS| XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?11[C,_]8|(?:iPhone[ _]?XR| XR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?10[C,_][36]|(?:iPhone[ _]?X| X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]5|(?:iPhone[ _]?11[ _]?Pro[ _]?Max| 11PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]3|(?:iPhone[ _]?11[ _]?Pro| 11PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]1|(?:iPhone[ _]?11| 11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?12[C,_]8|(?:iPhone SE 2|iPhoneSE2ndGen| SE2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]1|(?:iPhone12mini| 12MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]4|(?:iPhone[ _]?12[ _]?Pro[ _]?Max| 12PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]3|(?:iPhone[ _]?12[ _]?Pro| 12PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?13[C,_]2|(?:iPhone[ _]?12| 12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]3|(?:iPhone[ _]?13[ _]?Pro[ _]?Max| 13PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]2|(?:iPhone[ _]?13[ _]?Pro| 13PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]4|(?:iPhone[ _]?13[ _]?mini| 13MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]5|(?:iPhone[ _]?13| 13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]6|(?:iPhoneSE3ndGen| SE3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]3|(?:iPhone[ _]?14[ _]?Pro[ _]?Max| 14PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]2|(?:iPhone[ _]?14[ _]?Pro| 14PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]8|(?:iPhone[ _]?14[ _]?Plus| 14PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?14[C,_]7|(?:iPhone[ _]?14| 14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]2|(?:iPhone[ _]?15[ _]?Pro[ _]?Max| 15PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?16[C,_]1|(?:iPhone[ _]?15[ _]?Pro| 15PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]5|(?:iPhone[ _]?15[ _]?Plus| 15PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?15[C,_]4|(?:iPhone[ _]?15| 15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?17[C,_]2|(?:iPhone[ _]?16[ _]?Pro[ _]?Max| 16PROMAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?17[C,_]1|(?:iPhone[ _]?16[ _]?Pro| 16PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?17[C,_]4|(?:iPhone[ _]?16[ _]?Plus| 16PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPh(?:one)?17[C,_]3|(?:iPhone[ _]?16| 16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad1[C,_]1`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][1-4]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad2[C,_][567]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad3[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][123]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][456]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad4[C,_][789]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad5[C,_][34]|(?:iPad Air 2 \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_][78]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad6[C,_](?:11|12)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][12](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][34](?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_][56]|(?:iPad 6 \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad7[C,_](?:11|12)(?:[\]);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_](?:9|10)|(?:iPad Pro \(11-inch\) \(4th generation\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]4|(?:iPad Pro 11 inch 5th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_][5-7]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_]1[12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][34]|(?:iPad Pro 11-inch 3rd-gen \(Cellular\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad8[C,_][5-8]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][12]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][34]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad11[C,_][67]`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]1|(?:iPad 9th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad12[C,_]2|(?:iPad 9th Gen \(Cellular\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_](?:9|10|11)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]16`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]17`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]1|(?:iPad Air 4th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad13[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]10`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]11`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]1|(?:iPad mini 6th Gen \(WiFi\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]2`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]6`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]8`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad14[C,_]9`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]3`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]4`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]5`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad16[C,_]6`),
		regexp.MustCompile(`(?i)Apple-?TV2[C,_]1`),
		regexp.MustCompile(`(?i)Apple-?TV3[C,_][12]`),
		regexp.MustCompile(`(?i)Apple-?TV5[C,_]3|Apple TV 4`),
		regexp.MustCompile(`(?i)Apple-?TV6[C,_]2`),
		regexp.MustCompile(`(?i)Apple-?TV11[C,_]1`),
		regexp.MustCompile(`(?i)(?:iTunes-)?Apple[ _]?TV`),
		regexp.MustCompile(`(?i)iTunes-iPad/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:MDCR_|ICRU_|Apple-)?iPad`),
		regexp.MustCompile(`(?i)iTunes-iPhone/[0-9]+(?:\.[0-9]+)* \(([^;]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?`),
		regexp.MustCompile(`(?i)Aquarius|(?:NS220R?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS220R?)`),
		regexp.MustCompile(`(?i)Aquarius[_ ]CMP[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Aquarius[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos|(?:A50TI|AC101BHE|AC50BHE|AC45NE|X67 5G|AC45BHE|AC101PL3GV2|9\.4 FFF|Tikeasy 10d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos (Oxygen (?:63|57|68XL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A50TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC45NE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X67 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos ?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC101BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC50BHE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 80 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos 101 Oxygen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Access 70 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S ARDOIZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Oxygen 101S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos T ?(101X?) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Core (101) 3G Ultra`),
		regexp.MustCompile(`(?i)Archos Core (70|101) 3G`),
		regexp.MustCompile(`(?i)Archos Hello 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9\.4 FFF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Archos Sense 101 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tikeasy 10d(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T101 HD 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T101 FHD WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/;]*(?:PAD)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Archos ((?:[789]|10)[0-9]?[a-z]* ?(?:G9|Access|Magnus|G10|Helium|Titanium|Copper|Cobalt|Platini?um|Xenon|Carbon|Neon|XS|IT)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:YL-)?Archos ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BioniQP116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))|Impulse[ _]P[12]|(?:EDGE A5HD|Elf_S8|ICON (R40\+|R45)|Wizard_[12]|UKOZI U[56]|L925)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ARK[_ -])?Benefit[_ -]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Impulse[ _]P1\+`),
		regexp.MustCompile(`(?i)Impulse[ _](P[12])`),
		regexp.MustCompile(`(?i)EDGE (A5HD)`),
		regexp.MustCompile(`(?i)ICON (R40\+|R45)`),
		regexp.MustCompile(`(?i)Wizard_([12])`),
		regexp.MustCompile(`(?i)Elf_S8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UKOZI U([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TSD Octa A0520P|TSD Quadra A050[59]P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arnova|ARCHM901|AN7CG2|AN7IG3|AN7G2(DTE|I)?|AN7[BCDFH]?G3|A80KSC|AN8G2|AN8[BC]?G3|AN9G2I?|AN9G3|A101[BC]|AN10G2|AN10BG2(DT|I)?|AN10BG3(DT)?|AN10[CD]G3`),
		regexp.MustCompile(`(?i)AN7G2I|AN7G2|AN7G2DTE`),
		regexp.MustCompile(`(?i)A101B2|A101C|AN10G2`),
		regexp.MustCompile(`(?i)AN10BG2|AN10BG2DT|AN10BG2I`),
		regexp.MustCompile(`(?i)AN10BG3|AN10BG3DT|AN10BG3-LZ`),
		regexp.MustCompile(`(?i)Arnova ([^/;]*) Build`),
		regexp.MustCompile(`(?i)ARTLINE[ _-](KMX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ]|\w+_ARTEL_\w+|(?: GAP|GAP YOQ| ALO|U1 MINI|Android 8(?:[\d.]*);(?: [\w-]+;)? U[124]|U3_4G| R3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAP|GAP YOQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U([124])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artel[_ ](Quadro(?: Pro)?|Tesla|Air|Tomchi|Premium|U3_4G|Z5|Sentinel (?:X 8G|X D5|X)|T10|T21)`),
		regexp.MustCompile(`(?i)Artel[_ ]Komi3`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21_PRO`),
		regexp.MustCompile(`(?i)Artel[_ ]Q21`),
		regexp.MustCompile(`(?i)Artel[_ ](Star|Nova|Connect|Choice|Style)`),
		regexp.MustCompile(`(?i)(?:\w+_)?ARTEL_([FVM]5|X[45])_\w+`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9|ATL-(?:16|21(?:PLUS|[XT])?|31|26)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATL-21PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ATL-(?:16|21[XT]?|31|26))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Artizlee[ _]S9`),
		regexp.MustCompile(`(?i)(?:32LH7010T|32LH8030S|43L[FU]8120T|43LU8030S|43LU8130S|32LH8[10]10T|32LH7030S|32LF7130S|28LH701[10]T|43LU8010T|24LH7011T|24L[HF]7020T|24LH8010T|28LH81[12]0T|40LF7030S|40LF7010T|5[05]LU8120T|42LF7110T|32LH7011T|32LF7120T|32LF8120T|50LU8110T|50LU8130S|40LF8120T|50LF7010T|43LF7202T|43LF7010T|32LH8011T|32LF7111T|40LF8130S|42LF8120T|42LF8130S|32LH5000T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})(L[FHU]\d+[ST])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _](?:A2|S[23]|[SZ]5|S3_PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASANZO[ _]S3[ _]PLUS`),
		regexp.MustCompile(`(?i)ASANZO[ _](A2|S[23]|[SZ]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASK[ _]`),
		regexp.MustCompile(`(?i)ASK[ _]791SP[ _]3G`),
		regexp.MustCompile(`(?i)ASK[_ ]([^/;]*) Build`),
		regexp.MustCompile(`(?i)ASPERA|(?:Wren|Jazz 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASPERA[ _](R5h|R9|RT3|A4[02]|A50|F30|R40)(?:_4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wren(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS[-_](?:50[123]|543[1-6]|44[12]1|541[12]|54[23]1|6431|[46]01L)|AP-(?:109|115G|721N|753G|7[25]7G|10[68]|107G|110N|941|719))[;/)_ ]`),
		regexp.MustCompile(`(?i)AS[-_]401L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS[-_](?:5434|501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_601L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433 Secret(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5433(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-44[12]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5435(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5436[ _]`),
		regexp.MustCompile(`(?i)AS-6431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS-5411[_ ]`),
		regexp.MustCompile(`(?i)AS-5412 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-721N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-941(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-108(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AP-106(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP-(?:109|115G|7[25]7G|753G|107G|110N|719))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS-(?:\d+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[- ](S451|S501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Asus|Transformer|ZenFone Max|MeMOPad 10|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|(?:P(?:00[128ACIL]|01[MTVWYZ]|01MA|01T_1|02[13478])(?: Build|\))|X015D|X018D|X003|X00[7ABT]D|Z00D|Z00[MTY]D|Z01[7FGHKMR]D)|K01[579N]|AST21|K50IJ)(?:[);/ ]|$)|G55[023]KL|ZB(631|602|633|55[135]|50[01])KL|ZC(55[134]|520|600)KL|ZA550KL|ZE(5[02]0|620|55[2345])KL|ZD55[23]KL|ZS6(?:61|7[02136])KS|ZS(6[0236]0|55[10])KL|ZS590KS|ZB(500KG|601KL)|MeMo Pad FHD 10 LTE|Z00[SV]D|P01Y_S|Zenfone 5Z?|AOSP on Duma|Tinker Board(?: S)?|TX201LA|I005DA|I003D|Z00UDH`),
		regexp.MustCompile(`(?i)XPad 10 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME171(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS Z906(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME302C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ME302KL|MeMOPad 10FHD LTE|MeMo Pad FHD 10 LTE|AOSP on Duma)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME301T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X Pad 10 LTE|ASUSXPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[3A7]|K007|K00R)(?:[);/ ]|$)|MeMO Pad 7`),
		regexp.MustCompile(`(?i)K01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00U|ME173X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[15]|K00L|AST21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TF300T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K01B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX201LA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01[YZ](?:_S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00J`),
		regexp.MustCompile(`(?i)P01[VW]|P002`),
		regexp.MustCompile(`(?i)(?:P024|P00A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P01MA?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASUS_(w706)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00I`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P008`),
		regexp.MustCompile(`(?i)(?:ASUS_)?P00C|P02[138]|P00L|P01T_1`),
		regexp.MustCompile(`(?i)ME371MG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:K01[2N9]|K00E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K00Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001D|ZB634KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00N`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00[CE]`),
		regexp.MustCompile(`(?i)(?:ASUS[-_])?T00T`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A002(A)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?AI2401_H`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I006D|ZS590KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I004D|ZS672KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2202)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2302)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A006`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A009`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z007`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00P[SD]|ZB555KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZB60[12]KL)|ZenFone Max Pro M1`),
		regexp.MustCompile(`(?i)(?:ASUS[_-])?(X01([AB]D)|ZB633KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[AD]|Z008D|Z008|Z00AD[AB]?|ZE551ML)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZenFone 2E)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:A007|Z00YD|ZA550KL|ZB553KL|ZB501KL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00RD|G552KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z00[ERLMTW]D|Z011D|ZE500KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[IQ1]|Z01KD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?T00P`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00K|X017DA|X017D|ZC600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01RD|ZS620KL)|Zenfone 5Z`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00[JF]|X00QD|X00QSA|ZE620KL)|Zenfone 5`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:T00G|Z002|ZS630KL|I01WD[X]?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS671KS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZS670KS|I002D|AI2205_[AC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z010D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X018D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00TD?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X01BDA|ZB631KL|Zenfone Max Pro M2)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X014D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(L001|X00[7AB]D|X009[DB][DA]|X009D|Z00[SV]D|ZB500K[LG]|ZB551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:G550KL|X013DB)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X013D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00[SV]D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00[23])`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X005`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X550`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X00GD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00D[DS]|X008D)|ZC553KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(X008)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(ZE553KL|Z01HDA?)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZS550KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00UD`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(Z016[DS]|Z01FD)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z(?:017DA|E520KL|E552KL|017D|012(?:DC?|S))`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z01B[DS]|ZC551KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?A001`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:ZD552KL|Z01MDA?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LDA|ZD553KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:X00LD|Z01KS|Z01KDA|ZE554KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X00(?:[HIK]D|IS)|ZC554KL|ZC520KL`),
		regexp.MustCompile(`(?i)(?:ASUS_)?X015D`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(:?Z01G[DS]|ZS551KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?Z00XS`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:Z01QD|ZS600KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I001D[ABCE]?|ZS660KL)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I003DD?|ZS661KS)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I005D[AC]?|ZS67[36]KS|ROG Phone 5)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2201)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2203)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2205)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:AI2401)`),
		regexp.MustCompile(`(?i)(?:ASUS_?)?(?:AI2501B)`),
		regexp.MustCompile(`(?i)(?:ASUS_?)?(?:AI2501)`),
		regexp.MustCompile(`(?i)(?:ASUS_)?(?:I007D)`),
		regexp.MustCompile(`(?i)(K50IJ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tinker Board( S)?`),
		regexp.MustCompile(`(?i)(?:ASUS_)?ZenWatch( 2)?`),
		regexp.MustCompile(`(?i)Asus(?:-|;)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(PadFone(?: [^;/]+)?) Build`),
		regexp.MustCompile(`(?i)(PadFone(?: [a-z0-9]+)?)`),
		regexp.MustCompile(`(?i)(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Chromebook Flip (C10[01]PA|C302)`),
		regexp.MustCompile(`(?i)(?:AP570[12]|AP5705S|AP6301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AP570[12]|AP5705S|AP6301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATOM-(108A[ML]|216AL|216RK|216AM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-Tab10?|M-T[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M-T[34])`),
		regexp.MustCompile(`(?i)S-Tab(10?)`),
		regexp.MustCompile(`(?i)(?:(?:CP20|YQ10S)_(?:MAX|Gold)|YQ10SK|AT81K|CP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT81K|CP10|YQ10SK)`),
		regexp.MustCompile(`(?i)(Magic_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100011886BK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Audiovox|CDM|UTS(?:TARCOM)?\-|audio[a-z0-9-]+`),
		regexp.MustCompile(`(?i)Audiovox[_\-]([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)CDM(?:-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTS(?:TARCOM)?-([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)audio([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)R2021W2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R2021W2)`),
		regexp.MustCompile(`(?i)Avaya Vantage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avenzo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOB4PRO 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9-]+)|(?:CHIVAS_55|Colombia_2018|Mint_M353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Avvio[ _]PAD`),
		regexp.MustCompile(`(?i)Avvio[ _]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(?:UTBook|CreaPad_100[359](?:_EEA)?)`),
		regexp.MustCompile(`(?i)(?:AWOW_)?(UTBook|CreaPad_100[359])`),
		regexp.MustCompile(`(?i)Axioo[_ ]|PICOp(?:hone|ad)[_-]`),
		regexp.MustCompile(`(?i)Axioo[_ ](AX[45])`),
		regexp.MustCompile(`(?i)PICOphone_(L1|M4N|M4P_M3|M4U_M2_M)`),
		regexp.MustCompile(`(?i)PICOpad[_-](7H_7|7H|GGT)(?:_3G)?`),
		regexp.MustCompile(`(?i)Axxion ATAB-[0-9]+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axxion ATAB-([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT1011E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]|(?:SPEED55|A50_Style_Plus|LT50\+|KIREI A5Q PLUS|NOBU[ _]A55[ _]PRO|IRO A55 QL?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azumi[_ -]AKANE`),
		regexp.MustCompile(`(?i)Azumi[_ -]A4\+`),
		regexp.MustCompile(`(?i)Azumi[_ -]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Azumi[_ -]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)LT50\+`),
		regexp.MustCompile(`(?i)NOBU[ _]A55[ _]PRO`),
		regexp.MustCompile(`(?i)BAFF\d{2}|(?:32YSTV-R|32Y-HD-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAFF(\d{2})YFHD`),
		regexp.MustCompile(`(?i)(?:BAFF)?(\d{2})Y-?(STV(?:-R)?|HD-R)`),
		regexp.MustCompile(`(?i)Pixavi[ _](Phone)`),
		regexp.MustCompile(`(?i)BASE[_ ](Varia)`),
		regexp.MustCompile(`(?i)(?:BAUHN|ATV85UHDW-0122)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bb-mobile|Techno[-_ ](8\.0|9\.7|TQ863Q|X595BT|X800BJ|S700BF|I700AJ|10\.1 LTE TQ060X|7\.0 LTE TQ763I|I785AP|I101BI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]S700BF(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]10\.1 LTE TQ060X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]TQ863Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]I700AJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I785AP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]X800BJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[-_ ]I101BI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ]7\.0 LTE TQ763I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FirstTab TP-17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](9\.7|[78]\.0) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Techno[_ ](?:X595BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)65LEX-8234-UTS2C|(?:32LEX-7272|24LEX-7269|([65]5|50|4[023]|3[29]|2[48])LEX[-_](81(?:27|39|45|58|6[12]|7[34])|71(?:[23]7|4[345]|5[45]|6[2368]|[57]8|7[15])|72(?:0[24]|1[23]|25|4[69]|5[579]|6[04]|8[789]|9[12])|82(?:43|02|89)|9201)[_/-]?([FU]?TS2C)(?:-T9)?|(?:3[29]|24)LEX-7289(?:-c)?|65LEX-8262)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})[_/-]?([FU]?TS2C)`),
		regexp.MustCompile(`(?i)(3[29]|24|65)LEX-(7289|8262)(?:-c)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2})LEX[-_](\d{3,4})`),
		regexp.MustCompile(`(?i)(?:BDF[- ](?:819|P10|M107|K107H|KT107|MT6753|X20|P30)|K960N_MT(?:6580|6753)(?:_32_N)?|m107_\d+a_64_q|ZL80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BDF[- ](819|P10|M107|K107H|KT107|MT6753|X20|P30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)m107_\d`),
		regexp.MustCompile(`(?i)K960N_MT(6580|6753)(_32_N)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART_B19|Destiny)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Y([17]00|2[01]0|1010)`),
		regexp.MustCompile(`(?i)BGH (\+Simple|Mini|M840)`),
		regexp.MustCompile(`(?i)BGH ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ZBH-)?BIHEE`),
		regexp.MustCompile(`(?i)(A1[1268]|A[78]\+|A[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLISS-T6|(BPM9727)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPM9727)`),
		regexp.MustCompile(`(?i)(?:I11_Plus(?:_EEA)?|(?:I11|I10(Plus)?|I9_Plus)_(?:EEA|ROW)|I9_Plus|Android 11(?:[\d.]*);(?: [\w-]+;)? I11|I10_Pro|I10Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I10_?(Plus|Pro)?(?:_(?:EEA|ROW))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I11(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I(11|9)_Plus(?:_EEA|_ROW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMXC[_ ]?(?:80[01])| M863(?:-EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M863)`),
		regexp.MustCompile(`(?i)BMXC[_ ]?(80[01])`),
		regexp.MustCompile(`(?i)(BT7X1|EX10SL4|BTXS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BROR[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:RUNE III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RUNE (III?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRNS10GIL0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LRNS10GIL0)`),
		regexp.MustCompile(`(?i)BYYBUO|(?:SmartPad_(?:K7|T10)_EU|SmartPad_T10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BYYBUO_)?SmartPad_(K7|T10)(?:_EU)?`),
		regexp.MustCompile(`(?i)(BK2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nook|BN[TR]V[0-9]+`),
		regexp.MustCompile(`(?i)Nook([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Nook[ _]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)(BN[TR]V[0-9]+)`),
		regexp.MustCompile(`(?i)(?:Class_C250|TW10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TW10)`),
		regexp.MustCompile(`(?i)(Class_C250)`),
		regexp.MustCompile(`(?i)Becker-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Beeline|(?:A239s|SWG2001A-A|RASSE-001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beeline[_ ]Pro[_ ]([2436])`),
		regexp.MustCompile(`(?i)Tab (Fast(?: 2)?|Pro)`),
		regexp.MustCompile(`(?i)Tab ([0-9])`),
		regexp.MustCompile(`(?i)E([67]00)`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Smart[ _]?([0-9])`),
		regexp.MustCompile(`(?i)(?:Beeline[_ ])?Fast[_ ]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fast(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A239s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RASSE-001)`),
		regexp.MustCompile(`(?i)(SWG2001A-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Beelink (?:G[ST]1|LAKE I|SEA I|A1)|GTKing(?:_AT|II)?|GT1mini-2|GT1-mini(?:[-_]AT)?|R68 II|Amlogic Alvatech GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beelink (G[ST]1|LAKE I|SEA I|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amlogic Alvatech GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1-mini(?:-AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT1mini-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKingII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTKing(?:_AT)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R68 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beetel ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(X104)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Beko(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FibeTV|Bell Streamer)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bp100 X-Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ -])?([a-z0-9]+)|(?:F52_09|F5_15|T47_09|QS02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F(?:52|5)|T47)_(?:15|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BENQ(?:[ -])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BENQ-SIEMENS - ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)BenWee[ _-]?(?:[^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)BenWee W5 ?pro`),
		regexp.MustCompile(`(?i)BenWee[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Benco[_ ]|(?:AE9(?:[03]10|1[25]0|2[2346]0|950)|AH9110|AEOP520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-A03-(?:BR2|BS))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Class S300 LTE|G-PADLITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Class S300 LTE)`),
		regexp.MustCompile(`(?i)(?:SURVE(10|[26-8]|[12] PRO)|Home9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURVE([12]) PRO`),
		regexp.MustCompile(`(?i)SURVE(10|[26-8])`),
		regexp.MustCompile(`(?i)BEZKAM (BK-RAM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B(2[1239])(?:_U)?_(?:EEA|US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAMETAB-ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BilimBook mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capture\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MD09TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BioWolf 8-F30|BIOWOLF8F30|Ruggbo 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BioWolf 8-F30|BIOWOLF8F30`),
		regexp.MustCompile(`(?i)BIRD[-. _]([^;/]+)|(E5018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E5018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)BIRD[\-. _]([^;/]+)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build|(?:B(?:840[5-9]|841[0456]|850[2346]|860[146]|9401|950[1-5])|S8402L?|S8501L?|BPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B(?:840[5789]|841[0456]|850[2346]|860[146]|9401|950[12345])|S8402L?|S8501L?)`),
		regexp.MustCompile(`(?i)BPRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bitel[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Mobitab10c-3G|Tab1011Q_II|Colortab[ _]?(10(?:M| II)?|816i))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mobitab)(10)c-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1011Q_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colortab[ _]?(10(?:M| II)?|816i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tough Mobile 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bphone[ _](B111[45]|B2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B6 Master|B6 Note X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tv Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM[ _-]?(?:44[123]D|431B|441[AWB]|44[12]S|431[SD]|53[23]D|54[12]S|541[ABW]|54[123]D|543S|531[ABD]|532 S|531S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BMM441[AS]`),
		regexp.MustCompile(`(?i)BMM442S|BMM441B`),
		regexp.MustCompile(`(?i)BMM543[DS]`),
		regexp.MustCompile(`(?i)BMM[ _-]?(53[23]D|431[DS]|54[12]S|531S|431B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EO104K)[-_]BL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLACKPHONE_Blackphone_K330_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bt[_ -](\d{2}FSU?\d{2}B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview|(BL8[08]00|BV([24-9]000|8[128]00|[468]900|(5[1589]|9[135689])00|6[12368]00|7[13]00)(?:[ _](?:PRO))?|P10000(?:[ _](?:PRO))?|omega[ _]pro|Alife[ _][PS]1|N6000|Heatwave|DM550|BV9700Pro|BL9000 Pro|A[68]0(?:Pro)?\))|(?:SOLID 4 G2|A[86]0Plus|A80S|BL(?:6000|8800)Pro|R6 Lite|P2Lite|A8 MAX|A30-RU|A20Pro|Android 10(?:[\d.]*);(?: [\w-]+;)? Tab[89]|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A95|A100|BL5000|Tab 12)|Android 1[12](?:[\d.]*);(?: [\w-]+;)? (?:A[79]0|A70 Pro|A55 Pro|Tab 1[01356]|Tab 6)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:A200 Pro|Tab [86]0|Tab 18|BL9000)|BV500|BV4800|BV[579]200|SOLID_4G1|BV5300(?: Pro)?|Tab [56]0 Kids|Active 8 Pro|Active 8|SHARK [89]|Tab 8E|Tab (?:7|[57]0|8|1[01]) WiFi|COLOR 8|Tab 1[236] Pro|MEGA 1|WAVE 6C|WAVE 8C?|HERO 10|A52 Pro| E7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([2678]0|5[25]) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A([6798]0|9[56]|55|100)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)A8 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A80S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A[86]0|BV[59]500)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P2|R6) ?Lite`),
		regexp.MustCompile(`(?i)(BL[69]000|BL8800|BV(?:[0-9]+)|A200) ?Pro`),
		regexp.MustCompile(`(?i)(BL[579]000|BV6000S|BL8[08]00|N6000)`),
		regexp.MustCompile(`(?i)(?:Blackview[ _])?E7s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blackview (A[78])`),
		regexp.MustCompile(`(?i)SHARK ([89])`),
		regexp.MustCompile(`(?i)(BV6[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)[ _]?PRO(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BV\d+[\w]?|P10000)(?:[-_](?:RU|F))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (1[0-6]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ?([56]0? Kids|8E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (7|[57]0|8|1[01]) WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab 11 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab ?([689]|1[0123568]|[68]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)omega[ _]pro`),
		regexp.MustCompile(`(?i)(Alife[ _][PS]1|DM550|Heatwave)`),
		regexp.MustCompile(`(?i)Blaupunkt|(?:Soundphone S2|Atlantis[_ ](?:1001A|1010A|A10[._]G40[23])|SLplus02|Discovery[_ ](?:A10_302|10[28]C|111C|1000C|1001A?)|Endeavour[_ ](?:785|101[GLM]|1000|1001|101[03]|1100)|Polaris[_ ]80[38](?:_BE)?|BP_(?:6010|6110)|B-STREAM|SL05|SM 02 2019|SF04 4G|A-STREAM|55UW5000T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Discovery[_ ](1000|111|10[28])C`),
		regexp.MustCompile(`(?i)Discovery[_ ]A10_302`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001A`),
		regexp.MustCompile(`(?i)Discovery[_ ]1001`),
		regexp.MustCompile(`(?i)Endeavour[_ ](101[GLM]|785|100[01]|101[03]|1100)`),
		regexp.MustCompile(`(?i)Polaris[_ ](808[_ ]BE|80[38])`),
		regexp.MustCompile(`(?i)Atlantis[_ ](1001A|1010A|A10\.G40[23])`),
		regexp.MustCompile(`(?i)BP_(6010|6110)`),
		regexp.MustCompile(`(?i)Blaupunkt[_ ](SL[_ ]0[124]|SM[_ ]0[12])`),
		regexp.MustCompile(`(?i)(SF02|SL05|SF04 4G)`),
		regexp.MustCompile(`(?i)(4K Android TV|A-STREAM)`),
		regexp.MustCompile(`(?i)(?:BE_(xl|se|o2|fr|et|dg)|BL-919845)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE_(xl|se|o2|fr|et|dg)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Zero18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LaserTAB10|PlatinumTAB(?:11|8)_4G|PlatinumTAB10V22|PlatinumTAB10_4G_V\d|BlackTab7_3G_V2|BlackTAB7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PlatinumTAB10_4G_(V\d)`),
		regexp.MustCompile(`(?i)BLU[ _]|(?:blu|Dash)[ _]([^/;)]+)(?: Build|[;)])|(?:Studio[ _](G3|J8M|X10L|X12|5\.0K|5\.5|View(?: XL)?|Mega(?: LTE)?|C 8\+8|[CGM][ _]HD|G2 HD|G4|[CGX]|SELFIE|Selfie LTE|Touch|M[45] Plus|J[1258]|X[89] HD|X10\+?|XL(?: 2)?)|Advance (4\.0 ?[LM]|5\.[02](?: HD)?|A[467]|L[45]|A5 Plus|A5 LTE)|M6 2021|ENERGY (DIAMOND|XL)|ENERGY[_ ]DIAMOND[_ ]MINI|Energy X 2|LIFE XL|B110DL|Dash (?:X[2L]|L3)|PURE (?:X[LR]|MINI|View)|Life One X[23]|G50 (?:Mega|Plus)|G51 Plus|G90(?: PRO)?|G91 Pro|GRAND (?:M3|Max|5\.5 HD|XL LTE|Mini|Energy)|R1 (?:HD|PLUS)|R2 (?:LTE|Plus)|Tank Xtreme [45]\.0|Tank Xtreme(?: Pro)?|Touchbook M7 Pro|DASH X PLUS|C[456] 2019|BOLD (?:M7|N[123]|K[15]0)|B1[34]0DL|Vivo (?:5 Mini|One Plus|5R|XL[234]| Plus|8L|XI[+]?|GO)|C[56]L(?: 2020)?|C6 2020|G9 PRO|D701|VIEW 1|B13[15]DL|R2 3G|Grand (?:M2X?|XL|M2 LTE)|D600|D5[01]0|B1550VL|DIAMOND M|M8L Plus|STUDIO ENERGY|M8L 2022|LIFE X8|M10L (?:Pro|PLUS)|G71 PLUS|G52L|G61S|G91S|Studio Mini 2023|B(?:160|300)V|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:G[57]0|G[679]1)|Android 11(?:[\d.]*);(?: [\w-]+;)? J9L|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:G53)|F92 E 5G|C5 (?:Max|Plus|LTE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Advance (4\.0 ?[LM]|4\.0|5\.[02](?: HD)?|A[46]|L[54])`),
		regexp.MustCompile(`(?i)M6 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _](G3|J8M|5\.0 C|5\.5|C 5\+5 LTE|View(?: XL)?|Mega(?: LTE)?|C 8\+8|G HD LTE|[CG][ _]HD|C|G|Touch|M HD|G2 HD|M[45] Plus|J[1258]|X[89] HD|X5|X10\+?|XL(?: 2)?|X|G4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Studio[ _]5\.0 ?K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO[_ ](X10L|X12|G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STUDIO SELFIE ([23]|LTE)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?NEO_ENERGY_MINI`),
		regexp.MustCompile(`(?i)ENERGY[_ ]DIAMOND[_ ]MINI`),
		regexp.MustCompile(`(?i)DASH[ _]X[ _]PLUS[ _]LTE`),
		regexp.MustCompile(`(?i)DASH 4\.5`),
		regexp.MustCompile(`(?i)PURE (X[LR]|View)`),
		regexp.MustCompile(`(?i)BOLD (M7|N[123]|K[15]0)`),
		regexp.MustCompile(`(?i)LIFE ONE (X[23]?)`),
		regexp.MustCompile(`(?i)NEO (XL|X|5\.5)`),
		regexp.MustCompile(`(?i)G(5[01]|71) Plus`),
		regexp.MustCompile(`(?i)G(9[01]?) PRO`),
		regexp.MustCompile(`(?i)(G[579]0|G[679]1|D701|R2 3G|G52L|G91S|G61S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(J9L|G53)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAND 5\.5 HD`),
		regexp.MustCompile(`(?i)Grand (M2X?|XL)`),
		regexp.MustCompile(`(?i)B13[01]DL`),
		regexp.MustCompile(`(?i)R([12]) PLUS`),
		regexp.MustCompile(`(?i)C([456]) 20(19|20)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?TankMega_3G`),
		regexp.MustCompile(`(?i)Tank Xtreme ([45])\.0`),
		regexp.MustCompile(`(?i)C5 (Max|Plus|LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C([56])L 20(20|21)`),
		regexp.MustCompile(`(?i)C([56])L`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO[ _]SELFIE`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo 5 Mini`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (One|XL3|XI)(?: Plus|[+])`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?Vivo (5R|XI|XL[234]|8L)`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?VIVO GO`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?ZOEY_SMART`),
		regexp.MustCompile(`(?i)(?:BLU[_ ])?(D600|D5[01]0)`),
		regexp.MustCompile(`(?i)M(8|10)L Plus`),
		regexp.MustCompile(`(?i)M(10)L Pro`),
		regexp.MustCompile(`(?i)M8L (2022)`),
		regexp.MustCompile(`(?i)STUDIO 7\.0 II`),
		regexp.MustCompile(`(?i)DASH (L[45] LTE|5\.0|L[45]X|L3|X2|[LMX])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASH[ _]([^)/;]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)blu[ _]([^/;]+)( Build|[);])`),
		regexp.MustCompile(`(?i)BLUSLATE([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bluboo|Maya Build|(?:Picasso(?: 4G)?|Xfire2?|D6 Lite|D1_Pro|D6 Pro|S8_plus_a| S8a|Android 8(?:[\d.]*);(?: [\w-]+;)? D6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Picasso(?: 4G)?`),
		regexp.MustCompile(`(?i)D([16])[_ ]Pro`),
		regexp.MustCompile(`(?i)(?:Bluboo[_ ])?S8[_ ]plus`),
		regexp.MustCompile(`(?i)D6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Bluboo[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)BSS(45|50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VF550|EF501R?)(:_RU)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLUEDOT[_ ]|(?:BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BLUEDOT[_ ])?(BNP-500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BNT-71|BNT-801W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:33GT HD|WV8R-M|WV8R[_-]N|WV8-[ML])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WV8R[_-]N`),
		regexp.MustCompile(`(?i)Bmobile[_ ]|B60Pro(?:_MV03)?|BL40_MV12|BL50P_TG0[567]|BL51_MV05|BL53_TG06|BL54_?Pro|(?:B50Pro|BL5[02]|BL60_TG(?:05|17)|BL60M_MV05|BL60 Pro|BL6[12]|BL63_TG07|FUN 4 2018|AX686A|AX-?(?:[1-9][0-9]{2,3}[eEO+]?|7OO))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AX-?([1-9][0-9]{2,3}[eAEO+]?)`),
		regexp.MustCompile(`(?i)B60Pro(?:_MV03)?`),
		regexp.MustCompile(`(?i)BL40_MV12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL60_TG(?:05|17)`),
		regexp.MustCompile(`(?i)BL60 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL63_TG07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL50P_TG0[567](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL(5[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL51_MV05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL53_TG06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL54_?Pro`),
		regexp.MustCompile(`(?i)BL6([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Bmobile[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K10[ ]?SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B_TAB1021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cybook)[ -]Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pulse Retro|Pulse Sky|Pulse Glide|Cabana|StrikaPlay)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pulse Retro|Pulse Sky|Pulse Glide)`),
		regexp.MustCompile(`(?i)(Cabana)`),
		regexp.MustCompile(`(?i)(?:58BSE9503|WZONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:sprd-)?(BOWAY)`),
		regexp.MustCompile(`(?i)BOWAY[ _-]([^/;]+)[ _]Build`),
		regexp.MustCompile(`(?i)([^/;]+) Build/BOWAY`),
		regexp.MustCompile(`(?i).*BOWAY[ _-]([^/;]+)/`),
		regexp.MustCompile(`(?i)(?:L1f-pluss|Brandcode B6S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brandt|(?:BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BPRIME|BSTAR\+?|BPRIMES|B-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bravis[ _]|A501 Bright|A552 JOY Max|A504 Trace|A505 JOY Plus|A503 Joy|NB(?:106M|10[1-8]|751|7[145]|8[57]1|76)|NP101|NB961|NP 104 3G|B501|N1-570 Space|Atlas A551|A511 Harmony|A512 Harmony Pro|A510_Jeans_4G|A509_Jeans|N1_550_Cruiser|N1_551 Gloss`),
		regexp.MustCompile(`(?i)Bravis[_ ]X500`),
		regexp.MustCompile(`(?i)Bravis[_ ]A506`),
		regexp.MustCompile(`(?i)Bravis[_ ]A553`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TAU`),
		regexp.MustCompile(`(?i)BRAVIS[ _]DELTA`),
		regexp.MustCompile(`(?i)BRAVIS[ _]TREND`),
		regexp.MustCompile(`(?i)BRAVIS[ ]A554`),
		regexp.MustCompile(`(?i)BRAVIS[ ]S500`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SPARK`),
		regexp.MustCompile(`(?i)BRAVIS[ _]SLIM[ _]3G`),
		regexp.MustCompile(`(?i)Bravis[_ ]([^;\)]+) Build`),
		regexp.MustCompile(`(?i)(NB(?:106M|10[1-8]|75[134]|7[145]|8[57]1|76)|NP101|NB961)`),
		regexp.MustCompile(`(?i)(HD1023|XD233|XD230|XD1030|XD1132|XT114[34]|4K1142|LS424|LS445)`),
		regexp.MustCompile(`(?i)Brondi[ _]|(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY|AMICO[_ ]SMARTPHONE[_ ](?:4G|X[SL]|S\+)|MIDNIGHT_SKY|501 SZ|850_4G)(?:[ _-]?[2-6])?(?:[);/ ]|$)|Surfing Tab`),
		regexp.MustCompile(`(?i)(?:Brondi[ _])?(620 SZ|730_4G_HD|501 SZ|850_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CENTURION(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLADIATOR(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXURY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIDNIGHT_SKY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENSUELLE(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VICTORY(?:[ _-]?([2-6]))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMICO SMARTPHONE (X[LS]|S\+)`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Surfing Tab ([^;/)]+)[;/)]`),
		regexp.MustCompile(`(?i)(BUB6R-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BTOUCH7_PLUS|SWEET 5\+ 2019|SWEET ?[56]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET 5\+ 2019`),
		regexp.MustCompile(`(?i)SWEET ?([65])\+`),
		regexp.MustCompile(`(?i)Bush[ ;,_-]|Bush10Nou`),
		regexp.MustCompile(`(?i)Spira B1 (8|10\.1)`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)Tablet(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+) Smartphone`),
		regexp.MustCompile(`(?i)BUSH ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)BUSH\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)BUSH, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(XR4500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM(?:[58]22|(?:85|78)00plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CM[58]22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM(85|78)00plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:noa X2 Plus|noa_G1|noaXPower|NOATAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CADENA[_ ]`),
		regexp.MustCompile(`(?i)CADENA[_ ]Pro[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)CAGI-([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)CCIT[_ ]|CCITA715G|(?:KT[236]00Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CCIT[ _]Xedition`),
		regexp.MustCompile(`(?i)CCIT[ _]405(?: Build|[);])`),
		regexp.MustCompile(`(?i)KT([236]00)Pro`),
		regexp.MustCompile(`(?i)CCIT[_ ]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)CT-(87(?:4[03]|24|32|50)|85(?:[67]5|5[08]|32|4[03])|88(?:4[03]|32|24)|8932)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CEPTER(TAB10[1L])`),
		regexp.MustCompile(`(?i)(?:CG_OMEGA6|Omega (?:[38])|CG_EON_Blaze_Pro|CG\|EON Blaze GOLD|Blaze [GN])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega ([38])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_OMEGA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG_EON_Blaze_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CG\|EON Blaze GOLD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blaze ([GN])`),
		regexp.MustCompile(`(?i)CGV_(Ultimate T8)`),
		regexp.MustCompile(`(?i)CHCNAV|(?:HCE[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HCE[67]00)`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)|(?:DUKE[78]|DUKE 3|DUKE\s+II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUKE ?([378])`),
		regexp.MustCompile(`(?i)DUKE\s+II`),
		regexp.MustCompile(`(?i)CKK (Inspire 1|Garnet)`),
		regexp.MustCompile(`(?i)(?:A015)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BlueS10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(N101[AB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]|(?:C55 Pro|C60 Ultra|Fenix8_3G|Note1|Tronik_(?:[123]|12S)|Star7 3G|Coco10_Ultra_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C55 Pro|C60 Ultra|Star7 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fenix8_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN R([124])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tronik_([123]|12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]C(4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CORN[_ ]X(4|55|5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COYOTE[ _]`),
		regexp.MustCompile(`(?i)APOLLO10 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT|QUEST(?: LITE)?|(?:NOTE 7|NOTE 20(?: PRO)?|RAINBOW 2|KING_KONG_3|ZORRO 001|KINGKONG[_ ](?:MINI2?|POWER|STAR|[5-9]|5 Pro|AX|X|ACE [23]|ES)|TAB KINGKONG|KING KONG CS| X30P|R15_PRO|S550 Pro| CHEETAH| [RX]19|X19 S|MAX [35]|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:J5|MAX 2|X20 PRO)|Android [89](?:[\d.]*);(?: [\w-]+;)? R15|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:P60|NOTE 30)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:NOTE [345]0|NOTE 2[134]|P80)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:Pocket|NOTE 9|P50|J10)|POCKET 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCKET (3)`),
		regexp.MustCompile(`(?i)CHEETAH( 2)?`),
		regexp.MustCompile(`(?i)KINGKONG POWER ([23])`),
		regexp.MustCompile(`(?i)KINGKONG[ _]POWER`),
		regexp.MustCompile(`(?i)KINGKONG[ _]AX`),
		regexp.MustCompile(`(?i)KINGKONG ACE ([23])`),
		regexp.MustCompile(`(?i)KINGKONG[ _]STAR[ _]2`),
		regexp.MustCompile(`(?i)KINGKONG[ _]STAR`),
		regexp.MustCompile(`(?i)KINGKONG MINI ?([23])`),
		regexp.MustCompile(`(?i)KING[_ ]?KONG[_ ]([35-9]|X|ES)`),
		regexp.MustCompile(`(?i)CUBOT[ _]Echo`),
		regexp.MustCompile(`(?i)CUBOT[ _]MANITO`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAGIC`),
		regexp.MustCompile(`(?i)MAX ([235])`),
		regexp.MustCompile(`(?i)CUBOT[ _]MAX`),
		regexp.MustCompile(`(?i)(R15|S550|J3)[_ ]PRO`),
		regexp.MustCompile(`(?i)NOTE ([2-5]0|2[134]|[79])`),
		regexp.MustCompile(`(?i)CUBOT[_ ]NOTE[_ ]S`),
		regexp.MustCompile(`(?i)CUBOT[_ ]Hafury V1`),
		regexp.MustCompile(`(?i)CUBOT[ _](A5|C6W|H3|J3|P7|P20|[RXJ]9|R11|X18|X[35]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X19 S|[RX]19|R15|J5|P[568]0|J10|X30P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBOT ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/]+) Build/CUBOT`),
		regexp.MustCompile(`(?i)CUD (GO) (2024)`),
		regexp.MustCompile(`(?i)CVTE[_ ](MSD338_(:?1G|512M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX9006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camfone (?:SE)|Hero[_ ](?:H5\+|SE2|H[579]|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10|Furious 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hero[_ ](?:H5\+|SE2|H[579]|(?:H7|XR)_Plus|SX|1[123]|SE3[ _]Max)|Honey (?:Y1|Y2s)|Mega 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Camfone (SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CNM6762(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CNM6762)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S70CDS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CANAL PLUS BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M75TG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Capitel-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Captiva[ _-]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)CT(?:10[0123]0|7[12]0|820|735_16GB|1056_32GB|1005)(?:W|FR)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT(10[0123]0(?:W|FR)?)`),
		regexp.MustCompile(`(?i)CT(7[12]0(?:W|FR)?|735|1005|1056)`),
		regexp.MustCompile(`(?i)(C811|C7[57]1)(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C751(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C771(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C811 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER[_ ]|VIA[- _](X30(?: Plus)?|[AXS]40|[XF]20|F30|T7D|A[34]|E[43]|E30|F[123]|G[345]|M4|M3[05]|L40|[LS]8|S7|P[23]|V8C|A[13]_Plus(?:_64)?|A1(?:_1)?|S[13]0|S48|S|T17_M|T1[07]|T7|[ST]7-3G|T8B|T8D-3G|S1[78]|S48_0|[LS]30_0|L30|F30 Plus|M30 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ](A1|[FMX]30)[_ ]Plus(?:_64)?`),
		regexp.MustCompile(`(?i)(?:CASPER[_ ])?VIA[_ ]([AX]40|[XF]20|F30|X30|G1_Plus|F30 Plus|A3_Plus|G[135]|E[14]|E30|[AE]2|M[123]|V[35689]|V10|G3|V6X|A[34]|E3|F[123]|G4|M4|M3[05]|P[23]|S|V8C|A1(?:_1)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASPER_L10_4\.5G`),
		regexp.MustCompile(`(?i)CASPER_(S[23]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _]([ST]7|T8D)-3G`),
		regexp.MustCompile(`(?i)VIA[- _](T7D|S[134]0|S48|[LS]8|S7|T17_M|T1[07]|T7|T8B|S1[78]|L40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIA[- _](S48|[LS]30)(?:_0)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BULLITTGROUPLIMITED|B30_Dorado|Cat ?(tablet|stargate|nova|S52|B35)|(?:B15Q|CAT-B100|S22 FLIP|S62 Pro|S48c|Android 9(?:[\d.]*);(?: [\w-]+;)? S52|Android 10(?:[\d.]*);(?: [\w-]+;)? S42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S61(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S48c|S[45]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cat ?(?:tablet)? ?((?:Galactica|Nova|StarGate|PHOENIX)[^/;]*) Build`),
		regexp.MustCompile(`(?i)Cat ?tablet`),
		regexp.MustCompile(`(?i)CAT-(B100)`),
		regexp.MustCompile(`(?i)(B30)_Dorado`),
		regexp.MustCompile(`(?i)(?:Cavion[_ ](?:Solid[_ ]4[\._]5|Base[ _](?:7|7_3G_Silver|5[._]0|10|7\.2 Quad)|10_3GRQ)|base10_3g_silver|Cavion7\.1quad|M1092Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cavion[_ ]Solid[_ ]4[._]5`),
		regexp.MustCompile(`(?i)Cavion[ _]BASE[ _]5[._]0`),
		regexp.MustCompile(`(?i)Cavion(?:7\.1quad)`),
		regexp.MustCompile(`(?i)Cavion Base 7\.2 Quad`),
		regexp.MustCompile(`(?i)(?:Cavion_)?Base_?(7|10)_3G_Silver`),
		regexp.MustCompile(`(?i)(M1092Q)`),
		regexp.MustCompile(`(?i)(?:ACRUX|BELLATRIX|BETELGEUSE|GACRUX|Kil-82WFDC|U800B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U800B)`),
		regexp.MustCompile(`(?i)CELCUS, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Celkon|Android 7.+ UNIQ(?: Build|[);])|(?:Millennia Hero|2GBStar|2GBXpress|CliQ2|Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](C[78]20)`),
		regexp.MustCompile(`(?i)Celkon[_ ]4G_TAB-8`),
		regexp.MustCompile(`(?i)CliQ2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4GPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 7.+ UniQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Campus Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celkon[ _*](CT[^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[ _*]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Celkon[\. _*]([^;/\)]+)[\)/]`),
		regexp.MustCompile(`(?i)Cell_?C_|(?:Android 5(?:[\d.]*);(?: [\w-]+;)? (?:Summit|Fantasy))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cell_C_(Summit_Plus|Fame|Evolve)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Summit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fantasy(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cool_Extreme_2|Earn2 CL|Earn|Fashion2Plus|Fashion[ _]C|Cool Duo|CHIC_X1|Miracle XS|Miracle 6.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cool_Extreme_2|Earn2 CL|Earn|Fashion[ _]C|Cool Duo|Miracle XS|Miracle 6\.0 S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom|(?:S51_lite|X501_Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cellacom_S62(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S51_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X501_Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmas|CT_Cosmas_V|PADUA`),
		regexp.MustCompile(`(?i)(?:CT_)?Cosmas_(TF|[VF])`),
		regexp.MustCompile(`(?i)(?:Centric[- ]CM(?:5001|33[23]1|3321Plus)|CM4331|CM2221)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM5001`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321Plus`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3321`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM3331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM4331`),
		regexp.MustCompile(`(?i)(?:Centric[- ])?CM2221`),
		regexp.MustCompile(`(?i)(?:C66)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C66)`),
		regexp.MustCompile(`(?i)Changhong|HON H01|GHONGV12`),
		regexp.MustCompile(`(?i)Changhong[ ]?(X1-K|X6|R8|Z9S?|Z1S|S18|R9|S07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ChangHong Andr[o0]id TV`),
		regexp.MustCompile(`(?i)changhong,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Opera TV.+)Changhong-([^);/]+)`),
		regexp.MustCompile(`(?i)Cherry|Superion[_ ](?:S2|Radar Deluxe|S1 DTV|S1 Plus DTV|Tab Pro)|Flare([ _])?(Selfie|2\.[01]|2X|4|A[123]|J[1235678]|P[13]|S[4-8]|X2|Y[3567]|S[ _]Play|HD|LITE|XL|X_V[23]|Y3s|Tab|INFINITY)(?:[ _](?:Pro|Plus|Max|LTE))?|Fusion Aura 3s|Radar Deluxe 2|Desire R[678]|Desire_R[67]_Lite|Fusion Bolt|Omega[_ ](?:Icon 2|Icon Lite 2|lite[_ ][243][Cs]?|HD[ _][345]|HD_Duo|X)|Spin Max 2|Selfie_Two|Flare X Lite|Flare_5|Android 1.*Aqua S9|Aqua S10|MAIA PAD PLUS|COSMOS THREE| Revel 3G|Touch XL 2|DSR_(?:R8|R7P?)|CUBIX CUBE 3`),
		regexp.MustCompile(`(?i)(Flare2X|Aqua S(?:9|10)(?: (?:Max|Lite|Pro))?)`),
		regexp.MustCompile(`(?i)Flare[_ ]HD[_ ]([345])`),
		regexp.MustCompile(`(?i)Flare[ _]S[ _]Play`),
		regexp.MustCompile(`(?i)Flare (2\.[01])`),
		regexp.MustCompile(`(?i)Flare[_ ]J([2356])S`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Prime`),
		regexp.MustCompile(`(?i)Flare_([A-Z]\d+)_Deluxe`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Power`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Pro`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Lite`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Plus`),
		regexp.MustCompile(`(?i)Flare ?J3 ?Plus`),
		regexp.MustCompile(`(?i)Cherry[_ ]X740`),
		regexp.MustCompile(`(?i)Flare[ _]X[_ ]V([23])`),
		regexp.MustCompile(`(?i)Flare[ _]XL[_ ]?2`),
		regexp.MustCompile(`(?i)Flare[ _]([A-Z]\d+)[ _]mini`),
		regexp.MustCompile(`(?i)Flare[_ ]([A-Z]\d+)[_ ]Max`),
		regexp.MustCompile(`(?i)Flare[_ ]J2[_ ]DTV`),
		regexp.MustCompile(`(?i)Flare[_ ]INFINITY`),
		regexp.MustCompile(`(?i)Flare[_ ]Lite[_ ]3S`),
		regexp.MustCompile(`(?i)Flare(?:[ _])?(Selfie|A1_Roam|A[123]|J8 LTE|J1s|J[1235678]|P[13]|S[4-8]|X2|Y3s|Y7_LTE|Y[3567]|[45])`),
		regexp.MustCompile(`(?i)OMEGA[ _]HD[ _]([345])`),
		regexp.MustCompile(`(?i)Omega[_ ]Lite[_ ](3[Cs]|[24])`),
		regexp.MustCompile(`(?i)Omega[_ ]X`),
		regexp.MustCompile(`(?i)Desire[ _]R(\d)[ _]Lite`),
		regexp.MustCompile(`(?i)DSR_R([78])P`),
		regexp.MustCompile(`(?i)DSR_R([78])`),
		regexp.MustCompile(`(?i)Flare Tab Pro V(\d)`),
		regexp.MustCompile(`(?i)(Fusion Bolt|Flare Tab Pro|Flare Tab|Superion[_ ](?:S2|Radar Deluxe|S1 DTV))`),
		regexp.MustCompile(`(?i)Cherry(?:[ _]?Mobile)?[ _]?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:ALTO (?:Bombo|classic|Estrella|JUEGO|SUBIR|[235])|FUEGO MAX|OJOS[ _](?:CIELO|CAMBIO|NUBE|[68i]|ORO|VIVIR|Plus|DOS mini|DOS|LUNA|X1)|AVANCE classic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALTO ([235])`),
		regexp.MustCompile(`(?i)OJOS[ _]([68i]|X1)`),
		regexp.MustCompile(`(?i)E-Board[ -]MX05[45]`),
		regexp.MustCompile(`(?i)E-Board[ -](MX05[45])`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M651CY|M653|CMCC[ -]M(?:670|860)|M762G)(?: Build|[);]|$)`),
		regexp.MustCompile(`(?i)(M812C|1501_M02|9930i|A1303|A309W|M670)`),
		regexp.MustCompile(`(?i)Build/Tianyi|(?:TYH61[12]M|TYH211U|TYH201H|TYH622M|TYH632M|TYH631M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-(Hi8-super|Hi12|V99i?|V17HD3G|VX8-3G|V88-QUAD|V9-DUAL|V88S|Vi[78]|[HV]i10 (?:pro|plus))|Hi10 (?:Pro|plus)|HiPad[ -](?:X|X?Pro|Air|Max)|HiPadX|HiBox-hero|HiBook(?: pro)?|Hi(?:[89]|10)[ _]?(?:Air|[_ ]?X?Pro(?:_PAD)?)|HiPad ?Plus|Hi8SE|Vi8 plus|Vi10(?: ?Pro)?|Surpad|HiPadPro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CW-Hi8-super)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Vi10|Hi10|Vi8) plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V88)-QUAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V9)-DUAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(V17HD|VX8)-?(3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CW-)?(Hi10) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBook(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?XPro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad-Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiPad ?Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi([89]) ?Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi8SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hi10 ?XPro`),
		regexp.MustCompile(`(?i)Hi([89]) ?pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Surpad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HiBox-hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CW-(Vi[78]|Hi12|V99i?|V88S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RK25WO|RK[29]5|RS35|RS51_HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Life X6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Claresta[ _]|(?:AirPhoneS[56]|AirPhone K6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirPhone ?(S[56]|K6)`),
		regexp.MustCompile(`(?i)Claresta (F3) PRO`),
		regexp.MustCompile(`(?i)Claresta[ _](F4)`),
		regexp.MustCompile(`(?i)Clarmin|(?:B8Lite|B8Plus|Android 7(?:[\d.]*);(?: [\w-]+;)? B5Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Clarmin[_ ](B[65]|C1)`),
		regexp.MustCompile(`(?i)ClearPHONE ([246]20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLEMPAD[_ ](?:6_XL|HR_Plus|HR|[68]|7_S|201[89])|ClemPhone_7|MFC_(?:2018|8))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLEMPAD_(201[89])`),
		regexp.MustCompile(`(?i)Clempad[_ ](6_XL|HR_Plus|HR|[68])`),
		regexp.MustCompile(`(?i)ClemPhone[ _](7)`),
		regexp.MustCompile(`(?i)(?:Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57](?:_Elite)?|Sunshine_T1|Typhoon_C6|Sunshine_T1_Elite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cirrus_C2|Cyclone_C4|Storm_C3|Stratus_C[57]|Typhoon_C6)`),
		regexp.MustCompile(`(?i)(Sunshine_T1(?:_Elite)?)`),
		regexp.MustCompile(`(?i)CloudFone[ _]|(?:Thrill[ _](?:Boost[ ]?(2|3)?|Power|Snap|Access|Plus 16GB|Lite|HD)|Excite Prime 2 Pro|Excite Prime|ExciteC|NBA Edition|Go SP|Next Infinity Plus|Next Infinity|Next Lite|Go Connect)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost 2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Boost (2|3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill[ _]Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Snap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Plus 16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Access(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Thrill HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NBA Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Go SP(?: 2)?|Next Infinity (?:Pro|Plus)|Next Infinity|Go Connect(?: Lite)?(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(?:107C|Q007C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)\+VT(107C)`),
		regexp.MustCompile(`(?i)\+VTQ(007C)`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1|X417[ _]Amaze|X418[ _]Zest|X421[ _]Nova|X422[ ]Exotic|X425[ _]Shavit|X428[ _]Astute`),
		regexp.MustCompile(`(?i)Hind[ _]5\.1`),
		regexp.MustCompile(`(?i)X417[ _]Amaze`),
		regexp.MustCompile(`(?i)X418[ _]Zest`),
		regexp.MustCompile(`(?i)X421[ _]Nova`),
		regexp.MustCompile(`(?i)X422[ _]Exotic`),
		regexp.MustCompile(`(?i)X425[ _]Shavit`),
		regexp.MustCompile(`(?i)X428[ _]Astute`),
		regexp.MustCompile(`(?i)Clovertek[ _](G12)`),
		regexp.MustCompile(`(?i)CnM[ -](?:Touchpad|TP)[ -]([0-9.]+)`),
		regexp.MustCompile(`(?i)Cobalt[ _-](?:SM|T)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]SM_(55?|6)`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]3G`),
		regexp.MustCompile(`(?i)Cobalt[ _-]T((?:7|10))[ _]wifi`),
		regexp.MustCompile(`(?i)(MID(?:1024|112[56]|1045|1048|106[05]|4331|701[26]|7015A?|70[32]2|703[56]|704[278]|7052|7065|7120|8024|80[47]2|8048|8065|8125|812[78]|9724|974[02])|CTB761)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Colors[ _](S(?:[19]|11)|P70|P[456]5|P32|E15|P50 Plus)|Pride_1A|P52_Pride5C|P90_Pride5X|P95_Pride_7s|P77_Pride_1E|P88_Pride_1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pride_1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P95_Pride_7s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P77_Pride_1E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P52_Pride5C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P90_Pride5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P88_Pride_1X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Colors[ _](S(?:[19]|11)|P70|E15|P[456]5|P32|P50 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tesla|Impulse 7\.85 3G|Impulse 10\.1 OCTA|Smartphone_6\.1|SP(?:6\.2|6\.2_Lite)|TTL(?:713G|8)|Explr 9`),
		regexp.MustCompile(`(?i)(Explr 9)`),
		regexp.MustCompile(`(?i)TeslaEvo5\.0`),
		regexp.MustCompile(`(?i)(Gravity 9\.7 SHD)`),
		regexp.MustCompile(`(?i)(Impulse 7\.85 3G)`),
		regexp.MustCompile(`(?i)Impulse 10\.1 OCTA`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;)]+)L(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Smartphone_6\.1`),
		regexp.MustCompile(`(?i)(?:Tesla_)?SP(\d+)[_.](\d+)_Lite(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP(\d+)[_.](\d+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Tesla_SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)SP([^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartphone ([36])`),
		regexp.MustCompile(`(?i)(L7\.1)`),
		regexp.MustCompile(`(?i)(L7 Quad) Build`),
		regexp.MustCompile(`(?i)(L7 Quad Lite)`),
		regexp.MustCompile(`(?i)(L8\.1)`),
		regexp.MustCompile(`(?i)TESLA,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Comio|(?:CT701G PLUS|CT701W|GT100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Comio[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VIP7802(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Compal-[a-z0-9]+`),
		regexp.MustCompile(`(?i)(?:CT101|CT1085_32GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT1085)_32GB`),
		regexp.MustCompile(`(?i)(CT101)`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build|Concorde_Raptor_Z55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concorde_(Raptor_Z55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ConCorde Tab ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ReadMan ?([^/;]+) Build`),
		regexp.MustCompile(`(?i)ConCorde ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(GoCAM_G301)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concord[ _-]|(?:Flyfix 6|C-721|Plus-7_C777|Plus_M19_C779|Plus-9_C778|Dream_Edition_C-754)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Concord[ _-](M[12]0)`),
		regexp.MustCompile(`(?i)Plus[-_]([79]|M19)_(C77[789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Condor|Allure (?:A8 Pro|A55 Slim|M[123]|X)|Griffe T[235-9]|TFX71[12]G|TFX71[34]L|TMK715L|TRA-901G|TGW[-]?(710G|709|102L|801[GL])|(?:PGN\-?[456][012][0-9]|PHS\-601|PHQ519|PAM412|PHQ52[056]|TB105L|TB717G|PKT\-301|Plume (?:H1|L[1-68]|P8|P6 PRO LTE)|Infinity E5|Infinity a4|Infinity_i[45]|PKT411|SP413|PAM524|GT60 PRO|GT60|NOVA60)(?:[);/ ]|$)|CTAB[^/;]+ Build`),
		regexp.MustCompile(`(?i)CTAB([^/;]+) Build`),
		regexp.MustCompile(`(?i)(TGW)-?(710G|709|801[GL]|102L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TFX71[12]G|TFX71[34]L|TB105L|TB717G|TMK715L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TRA)-(901G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Condor_)(FP216L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGN-?403`),
		regexp.MustCompile(`(?i)PGN-?404`),
		regexp.MustCompile(`(?i)PGN-?409`),
		regexp.MustCompile(`(?i)PKT-?301`),
		regexp.MustCompile(`(?i)PGN-?504`),
		regexp.MustCompile(`(?i)PGN-?505`),
		regexp.MustCompile(`(?i)PGN-?506`),
		regexp.MustCompile(`(?i)(Allure \w+) Plus`),
		regexp.MustCompile(`(?i)(Allure \w+) Pro`),
		regexp.MustCompile(`(?i)(Allure \w+) Lite`),
		regexp.MustCompile(`(?i)(Allure (?:M[123]|X)|GT60)`),
		regexp.MustCompile(`(?i)PGN\-?507`),
		regexp.MustCompile(`(?i)PGN-?508`),
		regexp.MustCompile(`(?i)PGN\-?509`),
		regexp.MustCompile(`(?i)PGN-?511`),
		regexp.MustCompile(`(?i)PAM-?412`),
		regexp.MustCompile(`(?i)PGN-?513`),
		regexp.MustCompile(`(?i)PGN-?514`),
		regexp.MustCompile(`(?i)PGN-?515`),
		regexp.MustCompile(`(?i)PGN-?516`),
		regexp.MustCompile(`(?i)PGN-?51[78]`),
		regexp.MustCompile(`(?i)Infinity_i([45])`),
		regexp.MustCompile(`(?i)PGN-?521`),
		regexp.MustCompile(`(?i)Griffe T3 ?pro`),
		regexp.MustCompile(`(?i)Griffe T([0-9]) Plus`),
		regexp.MustCompile(`(?i)Griffe T([0-9])`),
		regexp.MustCompile(`(?i)PGN-?522`),
		regexp.MustCompile(`(?i)PGN-?523`),
		regexp.MustCompile(`(?i)PGN-?527`),
		regexp.MustCompile(`(?i)PGN-?528|PLUME P6 PRO LTE`),
		regexp.MustCompile(`(?i)PGN-?605`),
		regexp.MustCompile(`(?i)PGN-?606`),
		regexp.MustCompile(`(?i)PGN-?607`),
		regexp.MustCompile(`(?i)PGN-?608|Allure A55 Slim`),
		regexp.MustCompile(`(?i)PGN-?609`),
		regexp.MustCompile(`(?i)PGN-?610`),
		regexp.MustCompile(`(?i)PGN-?611`),
		regexp.MustCompile(`(?i)PGN-?612`),
		regexp.MustCompile(`(?i)PGN-?613`),
		regexp.MustCompile(`(?i)Plume L([24568]) Pro`),
		regexp.MustCompile(`(?i)Plume L([13]) Plus`),
		regexp.MustCompile(`(?i)Plume L([1-5])`),
		regexp.MustCompile(`(?i)PGN-?([0-9]{3})`),
		regexp.MustCompile(`(?i)(?:CP6001A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CTAB1044hn|CTAB-1044|SEN_1055_ARM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CTAB1044hn|CTAB-1044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ](?:S\d+|F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Conquest[-_ ]S(\d+)`),
		regexp.MustCompile(`(?i)Contixo|(?:CX-1045 3G|KT995 3G|CX1045|B108_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1045(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CX-?1065(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONTIXO GX 1035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Contixo GT1160 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B108(?:[_ ]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT107(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT715 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT995(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KT ?1100GT(?: 4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad|(?:Cool_9S|1824-S0|8190Q|1831-A0|8676-[AM]01|1872-A0|REVVLPLUS C3701A|VCR-[AI]0|C105-(?:8|E0)|C106-[789]|C107-9| C106|MTS-T0|ORL-C0|DLS-E0|182[56]-I01|1825-E0| 1825|8298-(?:M02|A01)|5560S|CP3320AS2|CP3321AT|CP350[34]L|cp3636a|CP3648AT?|CP3667AT|CP3669AS|cp3705A[S]?|CP3706AS|CP23NV3|CP8298_I00|CP8676_I0[23]|C103|CP03|C1-U02|SAC-A0| 203[29]|CP05|CP12[psQ]?)(?:[);/ ]|$)|(8295|5860S) Build`),
		regexp.MustCompile(`(?i)VCR-[AI]0`),
		regexp.MustCompile(`(?i)1831-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1872-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8190Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DLS-E0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1824-S0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3321AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)cp3636a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3705A[S]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3648AT?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3320AS2?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3706AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP3669AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTS-T0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C106-[789]|R116|C10[36]|C1-U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2039(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C107-9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C105-(?:E0|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1826-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825-I01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1825(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORL-C0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool_9S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP12Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP12)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP12P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP12s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAC-A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5560S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5860S|8295) Build`),
		regexp.MustCompile(`(?i)Coolpad[_ ]2041`),
		regexp.MustCompile(`(?i)CP8676_I02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COR-I0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8676_I03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CP8298_I00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CP350[34]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8676-[AM]01|8298-(?:M02|A01))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:YL-)?Coolpad[ _-]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(CP20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cosmote?[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(CP-J55a|CP-J55aW|CP-J55aX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WING 5|WING9|Venus[ _][14]`),
		regexp.MustCompile(`(?i)Venus[ _]([14])`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)|CKT_|(?:U(?:102|304|325|380|6080|655|668|680|705|1030)AC|V350C|EC1002|EC21100[1-4]|SL100EA|SL101AE|WTCKT01|SL112C|SN304AE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CKT_)?U102AC`),
		regexp.MustCompile(`(?i)(?:CKT_)?U1030AC`),
		regexp.MustCompile(`(?i)Cricket-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Q7A\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRONY-7021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall|ODYSSEY_Plus|Action-X[35]|Core-(?:M[45]|T[45]|X[345]|Z5)|Stellar-X5|Trekker-[MSX][1-4]|Odyssey S1`),
		regexp.MustCompile(`(?i)Action-X3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Action-X([35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall_Core-S4_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M4) GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-(M[45]|X[345]|Z5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Crosscall ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4]) Core`),
		regexp.MustCompile(`(?i)Trekker-([MSX][1-4](?: Core)?)`),
		regexp.MustCompile(`(?i)Stellar-(X5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Core-T([45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ -]+), (?:wired|wireless)|BlossomB902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CROWN, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SNOOK-X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)|(?:T8-PLUSM?S?|T8PLUSML|I1-TF[BD]?|I1-TC|i15-T[CG]?|I1_3GD|i1002S|Iwork10 Flagship|iwork10 Pro|T10 PLUS|CUBE-T970|U55GT_C8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U27GT-C8X?`),
		regexp.MustCompile(`(?i)U25GT-C4YT|U25GT-W4`),
		regexp.MustCompile(`(?i)U30GT ?2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U51GT-SL|U51GT-C8`),
		regexp.MustCompile(`(?i)(?:T8-PLUSM?S?|T8PLUSML)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TF[BD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1_3GD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I1-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-TG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i15-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:i1002S|iwork10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Iwork10 Flagship|i15-TC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUBE-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U[0-9]+GT[^;/]*) Build`),
		regexp.MustCompile(`(?i)(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)`),
		regexp.MustCompile(`(?i)(K8GT)`),
		regexp.MustCompile(`(?i)(?:C70W|F35W_EEA|C82W_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C70W|F35W|C82W)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyrus[ _-]|CyrusApel|CM17XA|CS(?:22|45)XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM17XA(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CS(22|45)XA(?:_EEA)?`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyrus[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTB-7168G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:D5-L|DT07-TAB4G|LM-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LM-01)`),
		regexp.MustCompile(`(?i)(D5-L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DASS[-_ ](H-ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BOXD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP|(?:Ursus|Ixion)[ _]([^;/)]+)|H135[ _]Build|Larus_TV1|Ixion(?:ML4\.7|ES250)|M150Storm|(?:SENIOR|F4[38]D8000K|VA(?:[12]10|170)|ML450|MS[56]50|BL(?:[123]50|160|155)|BS(?:155|160|[1256]50)|S(?:3[78]0|2[89]0|670)|AL(?:[12]40|[23]50)|AS(?:155|[123]60)| (?:B260|B245|H[12]10|H270|L470|N280i|P310|P380i?|R1[18]0|Q110|E1[78]0|E[12]10|B(?:450|340|35[05])|M170|M445|M[12]10|T155|H32F8000CG?|U43F8000Q|A(?:1[456]0|340|[34]55)|GS15[035]|GL[23]55|G25[035]|G355|G550|G15[05]|ES750|XL150|Z[1-4]55|H[13]70|H[34]10|P[45]10|L2[17]0)|Z250|A440|A350|N[13]80i|L1[178]0|L3[17]0i|G450|G660|Q[123]10|Q[12]80|N[234]10|N[35]70|EX111|S[245]70|S[127]70i|S169|S110|S180i?|S770|A555|(?:U75H8000K|U50H8000E|U65H8000K|F43H8000QG|U50G8000QG|U55H8050E|U43G9000CG|U43F8100QG|U55G8000QG|U50G9000CG|H32H800(?:1C|0[KQ])|H32G8000(?:CG|KW|Q)|H32F8000QG?(?:-[abc])?|H32F8[01]00Q|H39F8000Q|F43H8000K|U43H8000E|F(?:32|43)H8050C|U43F8000EG|F43F8000[CQ]G?|F32[FG]8000C|F43G8000C|H24H8000C|H24F8000Q|F43F8000Q-G)(?:-[AbcfedH])?|Android 8(?:[\d.]*);(?: [\w-]+;)? A240|android 10(?:[\d.]*);(?: [\w-]+;)? (?:B[23]1|B38|B1[87]|K28|K[34]1)|android 9(?:[\d.]*);(?: [\w-]+;)? (?:K18|K21|B11)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:D[12]1|T21|K[345]1|K[342]8|K61|C3[78]|B28|B27|H28)|43UCY[123](?:-[GB])?|32FCY[12]|U43H8050EG|H32H8051C-G|H32H8050CG|65UCY1-[GB]|55UCY1-[BG]|50UCY[12]-G|75UCY1-G|40FCY1|43FCY[12]|24HEY1|55UCY1|U5[05]E9100Q|H24F8000C|H3218000K|U5[05]F8000QG?|U50H8050EG|H32I8000K|U65G8000Q|U43G8100QG|U50F8000EG?|F40H8000E|Android 11(?:[\d.]*);(?: [\w-]+;)? P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DEXP_)?(ML450|MS[56]50|ES750|XL150|ES1050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionES250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IxionML4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ixion[_ ]([^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)M150Storm(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL250(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AL350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ursus[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(K[23456]1|K[234]8|[KB]18|B[23]1|B[12]7|B[23]8|[BD]11|D21|T21|C3[78]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA[21]10|VA170|E210|R1[18]0|Q110|M[12]10|N280i|P380i?|P[345]10|S2[89]0|S3[78]0|S[456]70|H[12]10|H[123]70|H[34]10|L1[178]0|L2[17]0|N[13]80i|N[234]10|E1[178]0|Q[123]10|Q[12]80|EX111|N[35]70|L3[17]0i|L470|S[127]70i|S270|S110|S169|S770|S180i?|M170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(H28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G450)[ _](2021)`),
		regexp.MustCompile(`(?i)(B260|B245|A440|A[345]55|B450|B340|B35[05]|BL155|BL160|A160|A[23]40|A350|T155|Z[1-4]55|G25[035]|G355|Z250|G450|G550|G660)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SENIOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[_ ]Freya`),
		regexp.MustCompile(`(?i)([HFU]\d{2}[A-Z]\d{4}[A-Z]{1,2}|AL-2020|43UCY[12]-[GB]|43UCY[13]|43FCY[12]|40FCY1|24HEY1|32FCY[12]|F32H8050C|H32F8000Q|H32[1I]8000K|H32H8051C-G|F43F8000Q-G|50UCY[12]-G|75UCY1-G|55UCY1-[BG]|65UCY1-[GB]|55UCY1)(?:-[AbcfedH])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H135[ _]Build`),
		regexp.MustCompile(`(?i)(BL[123]50|BS155|BS160|BS[1256]50|AL[12]40|A1[45]0|GS15[035]|AS160|GL[23]55|G15[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEXP[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DEXP[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DEYI-?(10M18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAGUAR|SATURN|TIGER|PUMA)-0\dC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN-(02C?)`),
		regexp.MustCompile(`(?i)(?:DG101HSTB|DG101TBIPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DG101HSTB|DG101TBIPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X8ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICOM[_ ]`),
		regexp.MustCompile(`(?i)DIGICOM[_ ](A10_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digicom[_ ]DTOK`),
		regexp.MustCompile(`(?i)DIGIFORS (400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU_|LGE; [0-9]{2}DW[0-9]\d*;|(?:DCT 90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIJITSU[_ ]Smart[_ ]A11s`),
		regexp.MustCompile(`(?i)LGE; ([0-9]{2}DW\d*);`),
		regexp.MustCompile(`(?i)(8800i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DINGDING[ _-](SK\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WTCELERO5G|Celero(?:3[ _])?5G\+?|SN339D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Celero5G\+`),
		regexp.MustCompile(`(?i)Celero3 5G\+`),
		regexp.MustCompile(`(?i)WTCELERO5G|Celero5G`),
		regexp.MustCompile(`(?i)DIXON_|(?:ACK1010|KT5512|HK7-3502|DN6015|DFM48|TS-M105G-1|TS_M103A|TS-M704F-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ACK1010|KT5512|DFM48)`),
		regexp.MustCompile(`(?i)TS-(M105G|M704F)-1`),
		regexp.MustCompile(`(?i)DIXON_XK1_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartphone[ _]DL|DL_Horizon_Selfie|Tablet_DL_\d{4}|Smartphone[_ ](?:YZU[_ ]DS53)`),
		regexp.MustCompile(`(?i)Smartphone[_ ]YZU[_ ]DS53`),
		regexp.MustCompile(`(?i)DL[_ ]Horizon[ _]H8`),
		regexp.MustCompile(`(?i)Tablet_DL_(\d{4})`),
		regexp.MustCompile(`(?i)(?:D3_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(D3)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS|AirTab)[ _-]([^;/)]+)|(?:S4505M|S4004M|SD01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNS[-_]DNS[-_])?S3504`),
		regexp.MustCompile(`(?i)(?:DNS[_ ])?(S4505M|S4004M|SD01M|S4502|S4003|S4003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AirTab[ _-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DNS[ _-]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Aloha_5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DPA_ZETA|DPA H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DPA (H3)`),
		regexp.MustCompile(`(?i)DRAGON[_ ](OTT)`),
		regexp.MustCompile(`(?i)(DSCS9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RD86QE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUDU(\d)`),
		regexp.MustCompile(`(?i)DUNNS[ _]|DunnsExecutive`),
		regexp.MustCompile(`(?i)DUNNS[ _](Slinger)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUNNS[ _]?(?:MOBILE[ _])?(703GDC|AT1001|Executive)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo|(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DTA-07IDRF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo (Android TV 638)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Daewoo, ?([a-z0-9_ -]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Dslide|Konnect_?(?:402|50[246]|556|60[1278])|GEODROID_A5|Dbook[_ ]110`),
		regexp.MustCompile(`(?i)Konnect[_ ]?(402|50[246]|556|60[1278])`),
		regexp.MustCompile(`(?i)Dbook[_ ](110)`),
		regexp.MustCompile(`(?i)Dslide[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Signature-S8|Monster 4GXX|AMAZE AX-50 Advance)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Signature-S8)`),
		regexp.MustCompile(`(?i)(DM-B50104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MEMOR )([12]0|1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K908H4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:DATANG[ _-])+([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)DW-[A-Z0-9]{5}(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DW-PS3G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBTEL(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)DS-(?:BD[123]|CR1|CL[23] Pro|X1|CL[234] Lite|CL[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DS-CL([23]) Pro`),
		regexp.MustCompile(`(?i)DS-CL([234]) Lite`),
		regexp.MustCompile(`(?i)DS-CL([234])`),
		regexp.MustCompile(`(?i)DS-BD([23])`),
		regexp.MustCompile(`(?i)DS-(X1)`),
		regexp.MustCompile(`(?i)DeWalt (MD501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell[^a-z]|Venue|XCD35|Latitude E?\d{4}|Inspiron N?\d{4}|Inspiron 13|Vostro (?:3546|14-3468)`),
		regexp.MustCompile(`(?i)Venue ((?:10|[78]) [0-9]{4}|[78] HSPA\+)`),
		regexp.MustCompile(`(?i)(?:Dell )?Venue(?: Build|[);])`),
		regexp.MustCompile(`(?i)Dell; Venue Pro`),
		regexp.MustCompile(`(?i)(OptiPlex (?:3050|7010))`),
		regexp.MustCompile(`(?i)Vostro (3546|14-3468)`),
		regexp.MustCompile(`(?i)Chromebook (\d{2} \(\d{4}\))`),
		regexp.MustCompile(`(?i)Venue7 (3740)`),
		regexp.MustCompile(`(?i)(?:Dell )?(Streak|Venue) ?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:Dell Inc\./)?(XPS 13 9360|Latitude (?:7480|7390|E4310)|Inspiron N?\d{4}|Inspiron 13-\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dell; ((?:Streak|Venue)[^;/\)]*)`),
		regexp.MustCompile(`(?i)Dell; ([^;/\)]+)`),
		regexp.MustCompile(`(?i)Dell[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(DT0704K08|DT070[25]W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAQ_10[4G]|TA[CDQ]-[0-9]+)|P(?:.+)TAQ-(?:[0-9]+)|SDQ[_-](?:550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)TAQ_(10[4G])`),
		regexp.MustCompile(`(?i)P(?:.+)TAQ-(10213GMK2|10172MK3|10242MK2|70242MK2|[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA[CDQ]-[0-9]+)`),
		regexp.MustCompile(`(?i)SDQ[_-](550[24]4L|52001G|50002G|57004L)`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Desay[ _-]?([^;/)]+)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])|(?:M50E-1A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50E-1A)`),
		regexp.MustCompile(`(?i)Dialog ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)DICAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Digi[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGICEL|(?:DL3(?:PlusPro)?|DL501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DL(755|501)`),
		regexp.MustCompile(`(?i)DIGICEL[ _]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DS502|DS6018|DS6261)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIGIHOME, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:DL721-RB|DL(?:1016|1023|1025GH|1036|900[23]|[78]006|1008M|718M|703QR|702Q|5[05]03QL|1022QR|1010Q)|Compumax Blue)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DL5[05]03QL)`),
		regexp.MustCompile(`(?i)DL(1010Q|1016|1025GH|1022QR|1023|1036|900[23]|[78]006|721-RB|718M|70[23]QR?)`),
		regexp.MustCompile(`(?i)(Compumax Blue)`),
		regexp.MustCompile(`(?i)Digit_|Digit4G|Digit(?:4G|play1|next_Ultra)|DIGIT (?:INFINITY|Glory1)`),
		regexp.MustCompile(`(?i)Digitplay1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digitnext_Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Glory1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITY MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Energy Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit_Digit4G[_-](Bold|Defender|Elite|Music|Power|Shine|Star)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit_Digit4GLite_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit_Digit4GPowerMAX_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ _]E([234])[ _]pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Digit4G[ -](Energy|Pro)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/)]+)(?: Build|[;)])|iD[sr]Q\d+|DiMagic|HIT HT707[10]MG|CITI (?:7 E401 4G|8 E400 4G|ATL 4G|Kids|Octa [178]0|1902 3G|10 E402|Z530 3G|13 X703 4G)|(CITI[_ ](?:[A-Z0-9]+)[_ ][34]G)[ _][TC][ST](?:[0-9]{4}[PM][LG])|HIT 4G|HT7074ML|IDX5|(iDx10|iDx7)|MVM900H(?:WZ|C)|MVM908HCZ|(iDxD8 3G|iDxD10 3G|iDrQ10 3G|iDxD[45]|iDxQ5|iD[nx]D7(?:[_ ]3G)?)|PS604M|PT452E|Linx.+ [34]G L[TS][0-9]{4}[PM][GL]|Linx PS474S|PS1043MG|HT7071MG|HT5035PG|HT4039PG|NS6902QL|NS9797MG|TS7854M|TS1012E 3G|TT1004PG|TT702[045]MG|TT1002MG|TT7026MW|WS825[123]PL|VRL42|((?:Optima(?: Kids 7)?|Platina|Plane)[ _](?:[EM])?(?:[0-9\.ST]+|Prime)(?:[ _][43]G)?)|(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)|DM-LED(?:5[05]UBB3[13]|32SBB33|43UBB3[13]|32SR21|4[03]SBB33|(?:32|40)SBB3[125]|43SR2[23]|42SR24|24SR20|55UR31|43SBB31|24SBB31|65UBB33)|RS1248PL|RS1253PL|RS1249PL|RS1267PL|WS125[01]PL|WS1262RW|HS1002PL|TS1292PL|HS100[134]PL|TS8289PL|Kids_8280C_WS8252PL|HS101[012]PL|DA6B8P01|TA3E0P01|TA3D0P01|TA2D0P01|TA1C8M01|TA2D0P02|TA3E0M01|TA2D0M01`),
		regexp.MustCompile(`(?i)HIT(?: 3G)? HT707[10]MG`),
		regexp.MustCompile(`(?i)(TA3E0M01|TA2D0M01)`),
		regexp.MustCompile(`(?i)(TA3D0P01|TA3E0P01|TA2D0P01)`),
		regexp.MustCompile(`(?i)(TA1C8M01)`),
		regexp.MustCompile(`(?i)(TA2D0P02)`),
		regexp.MustCompile(`(?i)(VOX[ _](?:[0-9\.A-Z]+)[_ ][43]G)`),
		regexp.MustCompile(`(?i)Linx ([A-Z][0-9]{3}) 3G (?:LT4028PG|LS4019PG|LT4001PG|LT5001PG|LT4038PG|LT5037MG|LT4030PG)`),
		regexp.MustCompile(`(?i)(Linx PS474S)`),
		regexp.MustCompile(`(?i)(CITI Z530 3G)`),
		regexp.MustCompile(`(?i)(CITI [A-Z0-9]+ [34]G) C[ST](?:606[32]ML|4024PG|5009PL|5021ML|502[56]PL)`),
		regexp.MustCompile(`(?i)MS100[123]PL`),
		regexp.MustCompile(`(?i)HIT 18 HS101[012]PL`),
		regexp.MustCompile(`(?i)Pro STAR 14|AS8001PL`),
		regexp.MustCompile(`(?i)HS100[13]PL`),
		regexp.MustCompile(`(?i)MVM900H(?:WZ|C)`),
		regexp.MustCompile(`(?i)(iD(?:xD10|rQ10|xD7)[_ ]3G)`),
		regexp.MustCompile(`(?i)(iDx10|iDx7)`),
		regexp.MustCompile(`(?i)(iDxD[45]|iDxQ5)`),
		regexp.MustCompile(`(?i)PRO (1[46]00E 4G)`),
		regexp.MustCompile(`(?i)DIGMA[_ ]IDSD`),
		regexp.MustCompile(`(?i)CITI[_ ](1902 3G|Kids(?:[_ ](?:8[01]|10))?|8527_4G|8269C 3G|Octa [178]0|10 E402 4G|8 E400 4G|7 E401 4G|13 X703 4G|131[23]C 4G|8443E 4G|1314C 4G|1421D 4G)`),
		regexp.MustCompile(`(?i)(?:Kids_8280C_)?WS8252PL`),
		regexp.MustCompile(`(?i)(CITI[ _](?:[A-Z0-9]+)[ _][34]G)[ _][TC][ST](?:106[24]ML|111[46]ML|1115MG|1117PG|1207MG|1210MG|3001ML|500[67]PG|7052PG|706[567]MG|7097MG|720[48]MG|820[69]MG|11[459]4MG|1195MG|1196ML|3001ML|8152ML|1050PL|709[68]PL|7113PL|7193MG|7216MG|8205PG|7203MG|8143MG|7153MG|7141MG|7140ML|8268PL)`),
		regexp.MustCompile(`(?i)(iDnD7)`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ [AXZE][0-9]+[SC]?) ([43])G`),
		regexp.MustCompile(`(?i)Optima ([0-9]+ A500S) 3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)[_ ]3G`),
		regexp.MustCompile(`(?i)iD([sr])Q(\d+)`),
		regexp.MustCompile(`(?i)((?:Optima|Platina|Plane)[ _](?:[EM])?(?:[0-9\.BSTNMEVCD]+|Prime(?:[ _][345])?)(?:[ _][43]G)?)`),
		regexp.MustCompile(`(?i)Digma[_ ]([^;/]+) Build`),
		regexp.MustCompile(`(?i)DiMagic Cube ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VRL42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-LED(\d+(?:[SU]R|[SU]BB)\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dynalink TV BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX_TA_?(7001|SL83)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MARVEL|FROZEN|Toy_story)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MARVEL|FROZEN)`),
		regexp.MustCompile(`(?i)(M1092R(?:-[12]|V[45])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QC-(?:703GN|704GA|803GN|1013G|7BHD)|QC7704GM|T10K_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DiverMax SpeedBox 3 SB1800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Divisat|X-MEDIA|DVS X3|OPTIMA_T-II|J-LINK II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DVS )?(J-Link|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X-MEDIA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMA_T-II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DoCoMo|\;FOMA|KGT/1\.0`),
		regexp.MustCompile(`(?i)DoCoMo/.+MST.+(SH2101V)`),
		regexp.MustCompile(`(?i)DoCoMo/[12]\.0[/ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)(?:_W)?\;FOMA`),
		regexp.MustCompile(`(?i)KGT/1\.0 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24DHS54|32GHS5[67]|40KFS57|32KHS57|43KUS65|24[KG]HS57|24GHS55|50KUS65|40GHS57|43GUS65|55KUS65|65KUS65|42GFS56)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dolamee[_ -](D[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Movix Pro(?: Voice)?|Movix Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[/ _-]|Valencia2_Y100(?:_?(?:pro|plus))?|Y100_Plus|X5max(?:[_ ]PRO)?|Shoot_[12]|x5_doogee|(KISSME|BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)|(?:BL12000|BL5500[_ ]Lite| Y6C|X9 Mini|LEO_DG280|Y9Plus|Y8 Plus|Hitman_DG850|S(?:4[01]|[568]8|9[05678]|59|61|8[69])Pro|X9[567]Pro|S[478]0Lite|S88Plus|BL[579]000|N[24]0Pro| S118|S90C|Ibiza_F2|S55_Lite|T5_Lite|S60 ?Lite|Iron-bone DG750|X10S|X[569]0L|MIX2|Y6 Max|Y6_Piano(?:_black)?|S100Pro|X[679]pro|V20Pro|S96GT|android 10(?:[\d.]*);(?: [\w-]+;)? (?:S59|S35|X95i?|X93|N30)|android 12(?:[\d.]*);(?: [\w-]+;)? (?:S98|S61|S89|V Max|S100|V30T?|S51)|V Max Plus|Y7Plus|S35T|V31GT|Smini|T[23]0Ultra|T10E|[TV]20S|V30Pro|android 14(?:[\d.]*);(?: [\w-]+;)? (?:N55|Fire 6)|android 13(?:[\d.]*);(?: [\w-]+;)? (?:R[12]0)|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:N100|N20|Y8|S95)|S41T|N50S|D60 Pro|DK10|Turbo_mini_F1|Y100X|T30Pro|T10S|T10Plus|T20Mini|S41 Max|S41 Plus|N55 Pro|N55 Plus|S punk|S cyber|Blade GT|Blade10(?: Ultra|Pro)?|V Max Pro|S200|S200 X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T30Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([12]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([12]0)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T20Mini Kid(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([23]0)Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T20Mini ?Pro`),
		regexp.MustCompile(`(?i)(?:Valencia2_)?Y100_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Valencia2[_ ]Y100pro`),
		regexp.MustCompile(`(?i)Valencia2_Y100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO_(DG280)`),
		regexp.MustCompile(`(?i)Iron-bone (DG750)`),
		regexp.MustCompile(`(?i)(X95i?|BL[579]000|S90C|X10S|X[569]0L|X93|V30T?|V31GT|V20S|DK10|S200 X|S200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(9[567])Pro`),
		regexp.MustCompile(`(?i)V30Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N([24]0|55) ?Pro`),
		regexp.MustCompile(`(?i)N(50)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BL5500[_ ]Lite`),
		regexp.MustCompile(`(?i)S([568]8|9[05678]|59|61|4[01]|8[69]|100)Pro`),
		regexp.MustCompile(`(?i)S(88|41) ?Plus`),
		regexp.MustCompile(`(?i)S([4-8]0|55)[_ ]?Lite`),
		regexp.MustCompile(`(?i)Doogee X5MP|x5MaxPro`),
		regexp.MustCompile(`(?i)Shoot_([12])`),
		regexp.MustCompile(`(?i)(?:Doogee[_ ])?X([679])[_ ]?pro`),
		regexp.MustCompile(`(?i)Y([89]) ?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[19]|S35T?|S9[58]|S89|Y8|Y6C|S61|N[23]0|[NS]100|S118|S41T|N55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X5max(?:[_ ]PRO)?)`),
		regexp.MustCompile(`(?i)(?:DOOGEE[ _-])?(BIGBOY|COLLO[23]?|DAGGER|DISCOVERY2?|FIND|HOTWIND|LATTE|MAX|MINT|MOON|PIXELS|RAINBOX|TURBO|VALENCIA|Valencia2_Y100pro|VOYAGER2?|TITANS2?)[ -_](DG[0-9]+C?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+) Build`),
		regexp.MustCompile(`(?i)DOOGEE[ _-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doopro P3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]| (?:20200308|20190808)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20200308(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Doov-)?Doov[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dopod(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Doppio[ _]`),
		regexp.MustCompile(`(?i)Doppio DP355(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio_TEXTER_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doppio ([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(65DYW60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro|DSB-02[23]0`),
		regexp.MustCompile(`(?i)DSB-0230(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[_ ]8020x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DSB-0220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Doro[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Doro[ _-]([0-9a-z]+)`),
		regexp.MustCompile(`(?i)(?:Notepad[_ ](?:K10|102|Y80)|MAX 10|T12M_EEA|Y88X__PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Notepad[_ ](K10|102|Y80)`),
		regexp.MustCompile(`(?i)DREAMSTAR([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(DRN-[78]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sens 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(i96 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROXIO (C40|A47|B45|KENTIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dtac[_ ]?Phone[_ ]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)DuneHD|SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLO 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DuneHD/\d\.\d \([a-z]+__([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)DuneHD/\d\.\d \(([a-z0-9_-]+);`),
		regexp.MustCompile(`(?i)(Diamond R8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duubee[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Sternenschein (G-\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DYON[;, ]`),
		regexp.MustCompile(`(?i)E-Boda|Eclipse_(?:G400M|G500)|Revo R77 GPS`),
		regexp.MustCompile(`(?i)E-Boda ((?:Revo|Izzycomm(?: Z80)?|Essential|Intelligence|Supreme)[^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Eclipse_(G400M|G500)`),
		regexp.MustCompile(`(?i)E-Boda ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:CT9716(?:-B)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CT9716-B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A5SLIM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E-tel[-_ ](?:i2[45]0|i300|i7c|N[67]|Q4|O9)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]i(7c|\d+)`),
		regexp.MustCompile(`(?i)E-tel[-_ ]N([67])`),
		regexp.MustCompile(`(?i)E-tel[-_ ]O9`),
		regexp.MustCompile(`(?i)E-tel[-_ ]Q4`),
		regexp.MustCompile(`(?i)EBEN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EBEST[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX-32HS01[67]B|EX-32HS006B|EX-39HS004B|EX-50US003B|EX-60US001B)`),
		regexp.MustCompile(`(?i)ECOO[ _]E0[45]`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB\+|Ecoo E04_PLUS`),
		regexp.MustCompile(`(?i)ECOO[ _]E04[ _]3GB`),
		regexp.MustCompile(`(?i)ECOO[ _](E0[45])`),
		regexp.MustCompile(`(?i)(?:TA10CA3|TM105A?|TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TA10CA3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TR10[CR]S1|TF10EA2|TR10CS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TM105(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Harrier(?: Tab)?|Hawk|Rook)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier Tab)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)Rook[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)(Harrier|Hawk)[_ ]from[_ ]EE`),
		regexp.MustCompile(`(?i)EFT_(H[234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGO1003)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:E8_Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EKO|Star (?:\d\.\d) (?:G65|G5[05]|G40)|(?:K55USW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K55USW)`),
		regexp.MustCompile(`(?i)Star (\d\.\d) (G65|G5[05]|G40)`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)EKO[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EK-(?:5040|5336|5540|5937|6020|8680|MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(MII|T7020)`),
		regexp.MustCompile(`(?i)EK-(5040|5336|5540|5937|6020|8680)`),
		regexp.MustCompile(`(?i)ELARI|(?:KidPhone4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELE-GATE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M1045W|PIXBA2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:android 8(?:[\d.]*);(?: [\w-]+;)? E4Pro|VT8216)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT8216)`),
		regexp.MustCompile(`(?i)SDMC D1221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EUROLUX[;,)]`),
		regexp.MustCompile(`(?i)EUROLUX, ?([a-z0-9_ -]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:EVBOX-PLUS\+|EVPAD-[35]S|EVPAD-PRO-MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVBOX-PLUS\+`),
		regexp.MustCompile(`(?i)EVPAD-([35]S)`),
		regexp.MustCompile(`(?i)(?:OCTA T720Q|OCTA-T700M-T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EX7SL?4|EX7X4|EX10S4|EX7W1 Plus|EX8S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?EXO_|(?:Wave[_-]i101[GLRS]|Wave[_ ]i007[BT]?|Wave i101[Hb]|Wave i007Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wave i007Kids(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tablet)?(?:EXO_)?(Wave[_-]i101[GLRS]|Wave[_ ]i007[BT]?|Wave i101[Hb])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EYU[ _-](T53|T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle[ _](Classic Pro|Elite|Gold)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EE10A|Z-F1010)`),
		regexp.MustCompile(`(?i)EasyPad|EasyPhone`),
		regexp.MustCompile(`(?i)(EasyPhone[^/;]+) Build`),
		regexp.MustCompile(`(?i)EasyPad ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|HORIZON|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)|(?:HORIZON_M|Stellar [34]G|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HORIZON_M|FEELING|MOON|LOOK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STELLAR ([34])G`),
		regexp.MustCompile(`(?i)ECHO[ _](HOLI|MAX|MOSS|NOTE|POWER|SMART|DUNE|JAVA|FUSION|PUSH|PRISM|STUDIO)`),
		regexp.MustCompile(`(?i)EDENWOOD[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SmartTV;`),
		regexp.MustCompile(`(?i)Ehlel[_ ]`),
		regexp.MustCompile(`(?i)Einstein(T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S5[UL]S|X4UPlus|S45U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[UL]S|S45U)`),
		regexp.MustCompile(`(?i)Meeplus_1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)electroneum(M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(?:4[238]S[AM]{2}RT|5[05](?:CV_)?SMART_UHD|32SMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(4[238])S[AM]{2}RT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-55CV_SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(50)SMART_UHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELED-(32)SMART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTRS`),
		regexp.MustCompile(`(?i)(?:TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30])|STB0819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STB0819)`),
		regexp.MustCompile(`(?i)(TAB(?:101|728)[ _]3G|TAB7(?:[03]8|16|40|3[30]))`),
		regexp.MustCompile(`(?i)Elephone|Vowney(?: Lite)?|P6000( ?Pro| ?Plus|\+| ?02| 5.0 01)?|Soldier|C1_Max|(?:Trunk 1|P8_3D|P8_Max|P8_Mini|A6_mini|P9000(?:_Lite)?|Android 9(?:[\d.]*);(?: [\w-]+;)? PX|PX_Pro| U3H|U_Pro|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:E10_Pro|E10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[_ ])?Trunk(?: 1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vowney(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000(\+| ?Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 5\.0 01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6000 ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d+)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Soldier(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P8_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U|PX|E10)_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U3H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C1_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PX(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(P8_3D|P8_Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Elephone[ _])?(P[7689]000|S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elephone[ _-]([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LUNA (V57|V55A|G58|G62|G60X)|V55C|G55 LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V55C)`),
		regexp.MustCompile(`(?i)(G55)[_ ]LITE`),
		regexp.MustCompile(`(?i)LUNA (V57|V55A|G58|G62|G60X)`),
		regexp.MustCompile(`(?i)(B50UHD4EKC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (6CS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NV5(?:01|10)WAC|NV501|NV731|NV[57]10WB|NV72[01]WB|NV711WAC|NV73[01]WB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|510|711)WAC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(501|731)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NV(\d{3})WB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EGQ101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]|(?:Android 9(?:[\d.]*);(?: [\w-]+;)? S3mini|Android 13(?:[\d.]*);(?: [\w-]+;)? E5mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)emporia[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Energizer_|Energizer[ _](?:Energy|Ultimate|Power Max|Hard ?case)|PowerMax|HARDCASEH5[05]0S|ENERGY[_ ]?(?:[45]00|400S|S[56]00|E12|E5[02]0S?)(?:[_ ](?:LTE|EU))?`),
		regexp.MustCompile(`(?i)Power ?Max ?(P[0-9]+S?)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]([45]00|E520)[_ ]LTE`),
		regexp.MustCompile(`(?i)ENERGY[_ ]400S`),
		regexp.MustCompile(`(?i)ENERGY[_ ]S([56]00|550)`),
		regexp.MustCompile(`(?i)ENERGY[_ ]?(E500S|E500|E12)`),
		regexp.MustCompile(`(?i)HARD ?CASE ?(H5[057]0S|G5)`),
		regexp.MustCompile(`(?i)Energizer_(E24[12]S|E280S|E282SC|H280A|E241)(?:_(?:4G|512))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Phone ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Energy Tablet ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ENERGY[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(EN1007Q)plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Enot[ _-](E102|J101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENT11QF12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ClickTabDSh18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EP19_star|EP19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ePad 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K501 Plus|[ ]K5(?:0[0-4]|1[01]|03[TS]|3[456]|4[05]|73|03HD)|[ ]K60[01]|[ ]X507T|[ ]K40[56]|[ ]T700|Android 8([\d.]*);(?: [\w-]+;)? X400|RS550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Projector|STI6110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Axis(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ERGO|(V550[_ ]Vision|B502 Basic|B504[_ ]Unit|A502[_ ]Aurum|A503[ _]Optima|Prime B400|A551 Sky 4G|A553 Power|A555 Universe|Force F500|GoTab GBT9|GoTab Gti8|F501_Magic|V551[ _]Aura|V540_Level|V570_BIG_BEN|B506[_ ]INTRO|A503-Optima|B505_Unit_4G|LE32CT5515AK)`),
		regexp.MustCompile(`(?i)B506[_ ]INTRO`),
		regexp.MustCompile(`(?i)V550[_ ]Vision`),
		regexp.MustCompile(`(?i)B504[_ ]Unit`),
		regexp.MustCompile(`(?i)V551[ _]Aura`),
		regexp.MustCompile(`(?i)(ERGO_)?A500[ _]Best`),
		regexp.MustCompile(`(?i)(ERGO_)?A550[ _]Maxx`),
		regexp.MustCompile(`(?i)A502[_ ]Aurum`),
		regexp.MustCompile(`(?i)A503[ _]Optima`),
		regexp.MustCompile(`(?i)ERGO[_ ]A556`),
		regexp.MustCompile(`(?i)ERGO[_ ]F500`),
		regexp.MustCompile(`(?i)ERGO[_ ]F501`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Crystal[ _]Lite`),
		regexp.MustCompile(`(?i)ERGO[_ ]Tab[ _]Hero[ _]II`),
		regexp.MustCompile(`(?i)ERGO[_ ](B700)`),
		regexp.MustCompile(`(?i)(LE32CT5515AK)`),
		regexp.MustCompile(`(?i)(?:Ericsson(?:/ )?[a-z0-9]+)|(?:R380 2\.0 WAP1\.1)`),
		regexp.MustCompile(`(?i)Ericsson(?:/ )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)R380 2\.0 WAP1\.1`),
		regexp.MustCompile(`(?i)Ericy-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(24LM8002CT2|42FLEA73T2SM|40FLES900T2SM|42FLES901T2SM|43FLES90[0125]T2SM|42FLX9060T2|32LX9000CT|39LES80T2SM|32LX9051T2|43ULX9060T2|32LX9050T2|32LES905T2SM|55ULES92T2SM|32LEA73T2SM|32LES90[24]T2SM|40FLX9000CT2|40FLES901T2SM|42FLES904T2SM|32LES90[136]T2SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ESSENTIEL B[;,]|(?:Wooze[_ ]?(?:I55?|I45|X?L)|HEYOU(?:[135]|20PLUS|[1-7]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU20PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEYOU([135]|[1-7]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wooze[_ ]?((?:I55?|I45|X?L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ESSENTIEL B,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+) Build`),
		regexp.MustCompile(`(?i)Eton[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:3520|4521|5042|5084|6022)|ETL-T(?:752G|850|882G|9[78]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ETL-S(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(ETL-T(?:[^/); ]+))`),
		regexp.MustCompile(`(?i)(?:E65 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EUTB_758G?)`),
		regexp.MustCompile(`(?i)(ET7002C-H12|ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16|Onyx-[13]S|T40SG?LED-A1[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx-([13]S)`),
		regexp.MustCompile(`(?i)(ET8183GQ-HM15|ET7184GQ-B15|ET7183GQ-H16)`),
		regexp.MustCompile(`(?i)(T40SG?LED-A1[45])`),
		regexp.MustCompile(`(?i)EVERCOSS[ _]|(U6 PRIME|A75A\*|AT8B|U50A_PLUS|M50 (?:MAX|STAR)|A75 MAX|M55[ABC]|M50A|R40K|R70A|7.*; (?:R70|R5C)|S55[AB]|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A75A\*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A75|M50A) MAX*(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U50A_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 STAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M50 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M50A|R40K|R70|R5C|S55[AB]|M55[ABC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT8B|R70A|U70[CB])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVERCOSS[ _](A7[BRLZ]|A65|A74A|A5Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DC-(?:1032|121[56]|110[24]|1028|1545|70[59]|71[48]|85[56]|971[45])|(?:EVERPAD )?DC-709|DC-9712-8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DC-(1032|1028|121[56]|110[24]|1545|70[59]|71[48]|85[56]|971[45]|9712)`),
		regexp.MustCompile(`(?i)Fine 7B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32EVF5000S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E011[1346-9]|E0120)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])|(?:E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E1014HG|E7224HG|E7914HG|V5_Nano|M10\+Max|M10 Nano|V4 Nano| V4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E70[25]0HD|E805[01]HD|E9054HD|E8050HG|E7914HG|E7224HG|E1014HG)`),
		regexp.MustCompile(`(?i)(M10|V[45])[_ ]Nano`),
		regexp.MustCompile(`(?i)M10\+Max`),
		regexp.MustCompile(`(?i)V4\+`),
		regexp.MustCompile(`(?i)EverTrendy\+4G`),
		regexp.MustCompile(`(?i)Ever(Shine|Allure|Glory) ?II`),
		regexp.MustCompile(`(?i)(Ever(?:Allure|Glory|Shine|Miracle|Mellow|Classic|Trendy|Fancy|Vivid|Slim|Glow|Magic|Solo|Smart|Star)[^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Evolio|M4MAGIC`),
		regexp.MustCompile(`(?i)Evolio[ _](M6|S4 Cobalt|S5|X10|Yuppi)`),
		regexp.MustCompile(`(?i)EVOLVEO|StrongPhone`),
		regexp.MustCompile(`(?i)EVOLVEO Android Box (H[48])`),
		regexp.MustCompile(`(?i)Smart TV ([^;/]*) Build`),
		regexp.MustCompile(`(?i)EVOLVEO StrongPhone G(\d)`),
		regexp.MustCompile(`(?i)(?:EVOLVEO[ _])?StrongPhone[ _]?Q([679])(_LTE)?`),
		regexp.MustCompile(`(?i)EVOLVEO[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)(EVM4G3|EVM4G6|EVMFV2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVROMEDIA|Playpad[ _]|PLAY_PAD_PRO_XL|3G NOTE XL`),
		regexp.MustCompile(`(?i)(?:EX(?:29|45)i|CHAT_5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHAT_5+`),
		regexp.MustCompile(`(?i)EX(29|45)i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Exmart[ _](K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay|[\w]+-EXPLAY-FIN|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9.]|Surfer7773G|sQuad[ _][0-9.]|Onliner[1-4]|RioPlay|Leader|Pulsar|Infinityll|Joy_TV|Imperium[78]|Winner[78]|Indigo|Lagoon|Tornado(?:3G)?|Onyx(?:[);/ ]|$)|android 4([\d.]*);(?: [\w-]+;)? Discovery.+Safari/|Party|Scream 3G|A350 TV`),
		regexp.MustCompile(`(?i)ActiveD[ _]7\.4[ _]3G`),
		regexp.MustCompile(`(?i)Imperium([78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ActiveD[ _]8\.2[ _]3G`),
		regexp.MustCompile(`(?i)CinemaTV[ _]3G`),
		regexp.MustCompile(`(?i)Informer[ _]([0-9]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer[ _]([0-9.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Surfer([0-9.]+)[ _]?3G`),
		regexp.MustCompile(`(?i)sQuad[ _]([0-9.]+(?:[ _]3G)?)`),
		regexp.MustCompile(`(?i)Onliner([1-4])`),
		regexp.MustCompile(`(?i)Winner([78])`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atlant(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Indigo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pulsar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado(?:3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onyx(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy_TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[\w]+-EXPLAY-FIN`),
		regexp.MustCompile(`(?i)Lagoon(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A350 TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Party(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Explay[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RioPlay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ESP-300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rock[ _]X[89]+|ROCK_X11`),
		regexp.MustCompile(`(?i)Rock[ _]X([89])\+`),
		regexp.MustCompile(`(?i)EZIO-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZZE-|EZ[a-z0-9]+`),
		regexp.MustCompile(`(?i)EZZE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)EZ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:(?:SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}|H166|R570E|P670|LifeTabPlus|(?:SH6[05]|SA55) \dGB/\d{2}GB \d{4}mAh [HG]MS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH(6[05]) 2GB`),
		regexp.MustCompile(`(?i)(H166|P670|R570E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH6[05]|SA50|SP65)_(?:2[13]|66)\d{3}`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021|[HR]2022|Air1 Pro| Air1| B[12] Pro|(?:B2|Air2) Ultra|Raptor LTD|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:B1)|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:Raptor|B2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor(?: LTD)?`),
		regexp.MustCompile(`(?i)([HR]2022|Air1 (?:Ultra Pro|Ultra\+?|Pro)|Air1|B[12] Pro|Air2 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Bison2021|B2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B[12])(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Z8PLUS|Z8POCKET|LT5216|F80s_plus|C8Finger|F80 PIABELLA|i8_ROKR|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT5216|LT1[68])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K11[038]|D118)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FFFTAB10a4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FX4423)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fise_32433_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPTIMUM (500[1-4]|5501)`),
		regexp.MustCompile(`(?i)UNICUM (1002|8S|8003)`),
		regexp.MustCompile(`(?i)(Y121-EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:16M4HI105024|FMT-NM7058-02|FXT113R|176HS1050(?:232|531)|175WT1050231|175HS1050231|175FT1050241|Global3 B01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT113R)`),
		regexp.MustCompile(`(?i)ConeXis (A[12]|X[12])|SP5045V`),
		regexp.MustCompile(`(?i)(?:ifive[_ ]?(?:mini[_ ][43]G?S|X2|Mini3|3|Air|Pro 2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ifive[_ ]mini[_ ]([43]G?S)`),
		regexp.MustCompile(`(?i)ifive(X2|3)`),
		regexp.MustCompile(`(?i)ifive ?Air`),
		regexp.MustCompile(`(?i)(FT1000|FT800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FOODO[ _-](X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-]`),
		regexp.MustCompile(`(?i)FORME[ _-]F520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FORME[ _-](A[35]7|R7S?|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:android 1[23](?:[\d.]*);(?: [\w-]+;)? (?:F10[12])|android 1[34](?:[\d.]*);(?: [\w-]+;)? (?:F105)|F10[16] Pro|F101 P|DT[12]|F109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(10[16]) Pro`),
		regexp.MustCompile(`(?i)F(10[1259])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FPT[_ ](X1[05]|X[39]|X50|S68 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FTRW100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Q3_EEA|Q3pro|Q10-EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q3_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q10-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q3pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLEET_7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fairphone )?(FP(?:1U?|[2345]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FX[123]00)`),
		regexp.MustCompile(`(?i)Famous|Red Royal Edition`),
		regexp.MustCompile(`(?i)Red 5\+`),
		regexp.MustCompile(`(?i)Famous[_ ]TAB[_ ]10`),
		regexp.MustCompile(`(?i)FAN-M300H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?(601|550|50[59])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FAST81[08])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(vKB011B|vKB004L)`),
		regexp.MustCompile(`(?i)FENOTI|(?:42FN6000F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FENOTI_)?(42FN6000F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fero[_ ]|Royale[_ ](?:[YX]2|A1)`),
		regexp.MustCompile(`(?i)Royale[_ ]([YX]2|A1)`),
		regexp.MustCompile(`(?i)Fero[ _](A4001|A450[23]|A5001|L100|Iris|Power|Mega LTE|Vibe|J1)`),
		regexp.MustCompile(`(?i)ATRIUM II F55L2|TRIO F40LT|CENTRIC S50G|EPIC F50G|Gravity X55L|Orion M50L|ULTRA M50G|UltraJ8|M405B|VIRTUE3|F55L Build|Orbit_ll|F40G2`),
		regexp.MustCompile(`(?i)(F55L)`),
		regexp.MustCompile(`(?i)(Gravity X55L|Orion M50L)`),
		regexp.MustCompile(`(?i)FIGI[_ ]|(?:Note_(?:[37]|11)_Pro|Note_(?:1C|5)|Note_1_Lite|Nopal|[MGF]two|Hola)(?:[);/ ]|$)|Android 8(?:[\d.]*);(?: [\w-]+;)? Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40 Max`),
		regexp.MustCompile(`(?i)FIGI[_ ]P40`),
		regexp.MustCompile(`(?i)([MGF])two`),
		regexp.MustCompile(`(?i)(FSE1020)`),
		regexp.MustCompile(`(?i)Fj(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Note_([37]|11)_Pro`),
		regexp.MustCompile(`(?i)Note_(1)_Lite`),
		regexp.MustCompile(`(?i)Figgers[_ ](F3|DragonX)`),
		regexp.MustCompile(`(?i)Filimo Box FB-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9]|[CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([AB][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FinePower[_ ]?([CD][1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FINLUX, ?([0-9]+[a-z0-9_ -]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:AURII[ _](?:FAME|VIVID|INSPIRE|MAGNUM|Passion|Virtuoso|RAZOR|ULTRA|Secret Lite|AMUSE[_ ]3G|FORCE|FUSION|F8[_ ]Premium|XCITE|DELIGHT|DREAM[_ ](?:MINI|One)|AMUSE_4G)|SECRET_XR?|INTENSE[ _](?:POWER|METAL_2|XT)|RAZOR_PLUS_4G|SUPER SWEET|SWEET MINI|Dream_One_8|INSPIRE_4G|S90_Q|INTENSE_METAL_4G|INTENSE (?:5|XL)|VIVID_PRO|VIVID_PREMIUM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FORCE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]VIVID(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]INSPIRE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]RAZOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAZOR_PLUS_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DELIGHT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FAME(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Dream_One_8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]DREAM[_ ]One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]AMUSE[_ ]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]FUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]MAGNUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVID_PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]XCITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SECRET_(XR?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURII[ _]((?:Passion|Virtuoso|Secret Lite|F8[_ ]Premium))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE_METAL_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER SWEET(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INTENSE (5|XL)`),
		regexp.MustCompile(`(?i)(S90_Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S554020|F_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly|Power Plus 5000|Power Plus 3|Photo Pro|Slimline|Cirrus (?:6|13)|Life (?:Ace|Jet|Sky|Compact 4G|Geo|Zen|Play)|(?:lineage_)?FS50[1-9]|FS51[0-8]|FS52[0-9]|FS530|FS55[134]|FS40[1-9]|FS45[1-9]|4FS06|MERIDIAN-|(?:Phoenix 2|(?:IQ[0-9]{3,}[i]?)[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?|Tornado Slim|Android 8(?:[\d.]*);(?: [\w-]+;)? View Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ310(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ236(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?View Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slimline(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Plus 5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Photo Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Ace(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Jet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Sky(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Geo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Zen(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Buzz(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life Compact 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS508|Cirrus 6`),
		regexp.MustCompile(`(?i)(?:lineage_)?FS504`),
		regexp.MustCompile(`(?i)FS518|Cirrus 13`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ237(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ238(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ270(?: Firebird)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ275(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ285(?: Turbo)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ431(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ432(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ434(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4406(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ436i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4490i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ440(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ441(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ442(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ443(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ444(?: Quattro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ445(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ446(?: Magic)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ447(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ456(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4409 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ448(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ449(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ450[ _]Quattro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ452 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ454(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4410 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phoenix 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4412 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4413[ _]Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4414 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4415 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4418(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ4504 Quad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tornado Slim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fly_)?IQ([0-9]+[i]? ?(?:Quad|Firebird|Quattro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly[ _-]?([a-z0-9_]+)/`),
		regexp.MustCompile(`(?i)Flylife[ _-]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Fly[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MERIDIAN-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)4K SMART TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)|(T702|Q008B|Q010B|Q718B|Q902|T602B|T707G|T708B|T725B|T725B1|T907B)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(T702|T602B)`),
		regexp.MustCompile(`(?i)(Q008B|Q010B|Q718B|Q902|T707G|T708B|T725B|T725B1|T907B)`),
		regexp.MustCompile(`(?i)Fondi[- _]([^;/)]+)`),
		regexp.MustCompile(`(?i)Fonos-|(?:Android 10(?:[\d.]*);(?:[\d.]*)(?: [\w-]+;)? O3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fonos-(O\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)O3(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Xming Google TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _]|(?:S_TURBO_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Formuler[ _](Z(?:8|10)(?: Pro)?|Z Alpha)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S_TURBO_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)Amosta ?3G5`),
		regexp.MustCompile(`(?i)(Apollo 5 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENIE E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Four[ _]?(S600|S300I|S185|K500|S61)|S62_Eco_3|S186_Sky_3|S710 Ruby)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Four[ _]?(S600|S300I|K500)`),
		regexp.MustCompile(`(?i)Four[ _]?S185`),
		regexp.MustCompile(`(?i)Four[ _]?S61`),
		regexp.MustCompile(`(?i)(?:EASYSMARTM3|EasySmart M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?SMART ?M([32])`),
		regexp.MustCompile(`(?i)InFocus M[0-9]+[a-z]?`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)FOXXD|(?:L590A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FOXXD )?(C65|L590A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2305003M|2306004M|23080(?:05M|11M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FUN PLUS|Fun \+|FTJ17[AC]00|FTJ152[ABCD]|FTU18A00|FT141B|FT142D(?:_LTEXM)?|FT142A?|FTJ161[ABE](?:-VN)?|FTJ1[56]2E|FTJ162[BD]|FT162D|FTE161[GE]|SAKURA_FTE1|FTE171A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun \+`),
		regexp.MustCompile(`(?i)FTJ17A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTJ17C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTU18A00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FTE161E|FTJ161E`),
		regexp.MustCompile(`(?i)FT142D(?:_LTEXM)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FT142A?`),
		regexp.MustCompile(`(?i)FTJ?162D`),
		regexp.MustCompile(`(?i)(RubensTab_T11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUEGO, ([a-z0-9_ -]+), (?:wired|wireless)|FUEGO 2K SMART TV`),
		regexp.MustCompile(`(?i)(?:F-01[FHJKLM]|F-02[EFGHLK]|F-03[DEFGKHL]|F-04[EGFHKJ]|F-05[DEFJG]|F-06[EF]|F-07[DE]|F-0[18]D|F-09[DE]|F-[45]1A|F-41B|F-[45]2A|F-1[012]D|F-12C|F-5[12]B|M532|FARTM933KZ|901FJ|arrows(?:RX|M03|M0[45](?:-PREMIUM)?)|801FJ|FJL2[12]|RM02|FCG01|A101FC|BZ02|LIFEBOOK AH532)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-01[LM]|F-06F|F-03K|F-42A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FJL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-52A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-03H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-05G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-04K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-06E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:F-51B|FCG01|A101FC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801FJ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-07E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-09E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-(52B|12D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-10D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-11D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F-12C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-04[JF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZ02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsRX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM04-PREMIUM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)arrowsM(0[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F-0[32]F|F-03G|F-04H|F-05E|F-02K|F-01D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUNAI[;,)-]|AFTMON00[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTMON00[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Funai-Model18-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Fusion5|F104Bv2|F104EvII_PRO|F104EvII|F105D_128`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F104B)v2`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII_PRO`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?F104EvII(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Fusion5_)?(F704B|F105D|F104E)(?:_128|_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FXT810R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QX1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GNE-N001S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE|(?: EX10|EXTREME X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](A1|S[34]|E520|Vans [89]c?|V7s)`),
		regexp.MustCompile(`(?i)E(57|60|66|72|77)`),
		regexp.MustCompile(`(?i)G-TiDE[_ ](H1)`),
		regexp.MustCompile(`(?i)GTouch[_ ]|(?:Stella (?:XS?|Omega))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Stella (XS?|Omega)`),
		regexp.MustCompile(`(?i)GTouch[_ ]STELLA`),
		regexp.MustCompile(`(?i)GDL[_ ](Xtreme 4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOFOX[_ ]MID ?(743\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOZON[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)GFIVE[_ ]|(?:PRESIDENT_GOLD_(9|10)|President Gpower 1|Stark|Gpad70[12]|Speedo_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRESIDENT_GOLD_(9|10)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Xhero[_ ](\d)`),
		regexp.MustCompile(`(?i)President (A97)`),
		regexp.MustCompile(`(?i)President Classic (\d)`),
		regexp.MustCompile(`(?i)President ?\(?G(\d)\)?`),
		regexp.MustCompile(`(?i)President Tango (\d)`),
		regexp.MustCompile(`(?i)GFIVE[_ ]President[_ ]Smart[_ ](A98|\d)`),
		regexp.MustCompile(`(?i)GPad(70[12])`),
		regexp.MustCompile(`(?i)(?:Android 8(?:[\d.]*);(?: [\w-]+;)? TAB5)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Quartz(T10-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GLX (?:Aria|Dorna|Taban|Shine|Spark|ASA)|SHAHIN III|Maad\+?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maad\+`),
		regexp.MustCompile(`(?i)GLX (Aria|Taban|Shine|Spark)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLX (Dorna)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER|QUANTUM_(?:[235]_)?[0-9]{3}|QUANTUM [0-9]{1}|QUANTUM 700N|Quantum2 500|QUANTUM_(1010N|1010M|900|II_500_N)|ARIES|INSIGNIA|ORION_|ELIPSO|LIBRA[ _]97|TERRA_7o[WL]|(?:TQ700|ORION7oL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_(1010N|1010M|900)`),
		regexp.MustCompile(`(?i)INSIGNIA_(785_PRO|1010M|800M)`),
		regexp.MustCompile(`(?i)(ORION|ARIES|ELIPSO)[_ ](71|101|102)`),
		regexp.MustCompile(`(?i)TQ700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUANTUM_2_(1010|700|960)_Mobile`),
		regexp.MustCompile(`(?i)QUANTUM_([235])_(5[05]0)_RUGGED`),
		regexp.MustCompile(`(?i)QUANTUM_(\d+)_RUGGED_PRO`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([235])_([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[_ ]([45]00)[_ ]LITE`),
		regexp.MustCompile(`(?i)QUANTUM[ _]?([235])[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)TERRA_(7o[WL])`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB ([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/GOCLEVER`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?TAB[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)GOCLEVER[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)LIBRA[ _]97`),
		regexp.MustCompile(`(?i)(?:EVO-VX1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G(?:3|10)_EEA|CNOTE 50|G10_US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G(3|10)_(?:EEA|US)`),
		regexp.MustCompile(`(?i)(SEI600GO|GO700FR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GTCOMBO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTX_JACULUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (?:GVC-[a-z0-9]+|[0-9]{2}GW[0-9]{4}\d*);`),
		regexp.MustCompile(`(?i)LGE; ([0-9]{2}GW\d+);`),
		regexp.MustCompile(`(?i)LGE; GVC-([a-z0-9]+);`),
		regexp.MustCompile(`(?i)Galactic[_ ](Astro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TVS-SU5007)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GI (?:UNI2|iTV912|Fly T2)|Gi-98Quick)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDU-7MT4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Garmin-Asus|Garminfone`),
		regexp.MustCompile(`(?i)Garminfone[ \-_]([^;/]*)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)Build`),
		regexp.MustCompile(`(?i)Garmin-Asus[ \-_]([^;/]+)[\)/]`),
		regexp.MustCompile(`(?i)GWAT(?:8-1|10-1)`),
		regexp.MustCompile(`(?i)GWAT(8|10)-1`),
		regexp.MustCompile(`(?i)(GA50F-OS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JT08-X1|JT10-90|JT10-81B|JT10-X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEANT[_ ](T\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Feel_7013N)`),
		regexp.MustCompile(`(?i)(GEM[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)General_Mobile_|GM 5 Plus|GM8 go|GM[ _][568][ _]d|GM [86]|General Mobile 4G|GM6_Tur|GM 9 (?:Pro|Plus)|(?: GM 5|e-tab 20|Android 1[012](?:\.[\d.]+)?;(?: [\w-]+;)? (?:G[35]01|G[35]10|G702|G700)|Discovery (?:Air|Elite(?: Plus)?)|GM Discovery II|GM Discovery tab 8|Discovery II Mini| GM6|G300|G008|android 4([\d.]*);(?: [\w-]+;)? Discovery|e-?tab5|G51[24]|G31[246]|G901| G100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM[ _](\d+)[ _]d`),
		regexp.MustCompile(`(?i)GM6_Tur|GM ?6`),
		regexp.MustCompile(`(?i)GM ([58])`),
		regexp.MustCompile(`(?i)Discovery (Air|Elite(?: Plus)?)`),
		regexp.MustCompile(`(?i)Discovery(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)General[ _]Mobile[ _]4G[ _]Dual`),
		regexp.MustCompile(`(?i)e-?tab ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SK-Mtek GT730[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEO_?PHONE_`),
		regexp.MustCompile(`(?i)GEO_?PHONE_(T1[59])_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEO_?PHONE_T19I_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?`),
		regexp.MustCompile(`(?i)GEOTEL[ _]?Note`),
		regexp.MustCompile(`(?i)GEOTEL[ _]AMIGO`),
		regexp.MustCompile(`(?i)(GTX-R10i Pro|GTX-R10i|GTX-98Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Getnord[- ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)G-Fone ?(\d{1,3})`),
		regexp.MustCompile(`(?i)GHIA|QS702|SVEGLIO[ _][QH]1|VECTOR10\.1|GTKIDS7[BVR]?|(?:A7_WF|GTA7(?:WF|PLUS)|VENUS7|TREO_TAB8G?|VECTOR_SLIM|GTAB718|GTABPND|GTABKIDS|GTVR10S|AXIS7_SLIM|AXIS7_LED|4104116N|GK133M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVEGLIO[ _]([QH]1)`),
		regexp.MustCompile(`(?i)GHIA[ _](L1)`),
		regexp.MustCompile(`(?i)VECTOR10\.1`),
		regexp.MustCompile(`(?i)GTKIDS7[ABVR]?|GTABKIDS`),
		regexp.MustCompile(`(?i)GHIA[ _]?(47458|VECTOR_3G)`),
		regexp.MustCompile(`(?i)(GTAB718|GK133M3)`),
		regexp.MustCompile(`(?i)GHONG(V10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GHOST G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GSmart[ _][a-z0-9 ]+(?: Build|\))|Gigabyte-[a-z0-9]+|Simba SX1|Roma R2|Boston 4G|GSmart_Classic_Lite|Classic[_ ](?:Joy|Pro)`),
		regexp.MustCompile(`(?i)(GSmart[ _][a-z0-9 ]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gigabyte-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Classic[ _](?:Joy|Pro)|GSmart_Classic_Lite|Boston 4G)`),
		regexp.MustCompile(`(?i)Gigaset|(?: GX290|GS80|GS1[0189]0|GS1[89]5|GS2[89]0|GS5[357]-6|GS[23]70(?:_Plus)?|E940-(?:2766|279[567]|2878|2849)-\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset QV(1030|830)`),
		regexp.MustCompile(`(?i)G(S[23]70)[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GS([23]70|1[0189]0|1[89]5|2[89]0|80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GX290)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gigaset ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Gigaset ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]|(?:SW17W13|SW17W08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gini[ _]W(7)`),
		regexp.MustCompile(`(?i)Gini[ _]n(8)`),
		regexp.MustCompile(`(?i)Gini[ _]s5Pro|SW17W13`),
		regexp.MustCompile(`(?i)Gini[ _]Tab[ _](V[78])`),
		regexp.MustCompile(`(?i)GINZZU[_ ]|((?:RS(?:7[14]|81|9[67])D)|S5002|S5021|S5230|S50[45]0|S51[24]0|RS(6[12]|9[45])D|S40[23]0|RS850[12]|RS9602|GT-W170)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GINZZU[_ ]?(S40[17]0|S4710|ST60[14]0|ST6120)`),
		regexp.MustCompile(`(?i)(?:GINZZU[_ ]?)?(GT-(?:W170|1050|7105|70[1-4]0|7115|7210|[WX]831|X[78]70|7810|8[01]10|X853|X890))`),
		regexp.MustCompile(`(?i)(RS6[12]D) ULTIMATE`),
		regexp.MustCompile(`(?i)(?:GINZZU[ _])?((?:RS(?:7[14]|81|9[14-7]|7)D)|S50[45]0|S5002|S5021|S5230|S51[24]0|S40[23]0|RS850[12]|RS9602|RS94D|R8 Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)(?:[);/ ]|$)|F103(?: Pro)?(?: Build|\))|P5 mini Build|(M7 Power|F106L|F100[AL]|F103S|F103 Pro|M6 mirror|20190620G|20190619G|20190418Q|GNP21M02|GNS2161B|GAU0820|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:P8 Max|P7 Max)|Android 5(?:[\d.]*);(?: [\w-]+;)? M5 (?:mini|Plus)|Android 11(?:[\d.]*);(?: [\w-]+;)? P61|WBL7519|WBL7361|20190419Q|M5 lite CDMA|GLY1620|M2mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GN810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GIONEE[_ ]MAX Pro`),
		regexp.MustCompile(`(?i)GN([0-9]{3,4}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F106L|F100[AL]|V188S|V188|F103S|F8 Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([25]) ?mini`),
		regexp.MustCompile(`(?i)20190620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S11|F205|S10) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6 mirror(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F9 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190419Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F103( Pro)?( BUILD|\))`),
		regexp.MustCompile(`(?i)(P61)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:GIO-)?GIONEE[ _-])?Dream_D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+).*Android`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)[ _]Pro`),
		regexp.MustCompile(`(?i)Android.*(?:GIO-)?GIONEE[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GU1011C|GU8012C|GU7013C|GU730C|GU-6012B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU8012C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GU-6012B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU1011C|GU7013C|GU730C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Globmall[ _](X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S20iQ19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)glofiish[ _]|(?:Gpad_U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO Onyx|GO[0-9]{3,4}`),
		regexp.MustCompile(`(?i)GO([0-9]{3,4})`),
		regexp.MustCompile(`(?i)(?:F10_PRIME|F3Prime|F9_PLUS|TEAM_7_3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Netta 2 Pro|NETTA 3|Netta 3\.100m|BENGAL_6|DETROIT 3|i-910|i-9[02]5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-(910|9[02]5)`),
		regexp.MustCompile(`(?i)Netta 3(?:\.100m)?`),
		regexp.MustCompile(`(?i)(LT-55U900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goly[ _-]`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Goly[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ](?:201[678].+|C7_Note(?:_Plus)?|U9|S[17])|Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X38A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018X07A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X05A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017X82A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016G68A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2016M25A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M27A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2017M95A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](?:2018M29A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOME[_ ](C7_Note(?:_Plus)?|U9|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GOME[_ ])?(Fenmmy_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus|GoogleTV|Google Fiber|Google Pixel|Glass|CrKey[^a-z0-9]|(?:Pixel|sailfish|taimen|blueline|Chromecast(?: HD)?)(?:;? Build|[)])|Pixel (?:XL|9 Pro(?: XL)?|C|[2-9]|[2-4] XL|Fold|Tablet)|Google 2XL|PIXEL4X|G011A|AOSP on (?:bramble|HammerHead|Manta|sunfish)|Pipit|ADT-2|GE2AE|G0DZQ|GZPFO|G1MNW|G82U8|G9BQD|G6QU3|GO3Z5|G025[IJEN]|G020[ABCGHEMPI]|G9FPL|GWKK3|GWVK6|GR83Y|GKV4X|GUR25|GP4BC|G4S1M|GKWS6|GHL1X|G1F8F|G01[13]C|G013A|GC3VE|GD1YQ|GTT9Q|GA02099|GA01180-US|G5NZ6|GQML3|G8VOU|GGH2X|GEC77|GC15S|G8HHN|GFE4J|G576D|G2YBB|G1B60|GA04851-US|GPJ41`),
		regexp.MustCompile(`(?i)(Nexus (?:2|S|4|5X?|One))`),
		regexp.MustCompile(`(?i)(Nexus (?:6P?))`),
		regexp.MustCompile(`(?i)(Nexus (?:7|9|10))`),
		regexp.MustCompile(`(?i)(GFHD[12]00)`),
		regexp.MustCompile(`(?i)CrKey/[0-9.]+ DeviceType/SmartSpeaker`),
		regexp.MustCompile(`(?i)CrKey[^a-z0-9]`),
		regexp.MustCompile(`(?i)(?:Pixel|sailfish)(?: Build|[)])`),
		regexp.MustCompile(`(?i)blueline|G013A`),
		regexp.MustCompile(`(?i)G020[AEHF]`),
		regexp.MustCompile(`(?i)Pixel 9 Pro XL|GGX8B|GQ57S|GZC4K`),
		regexp.MustCompile(`(?i)Pixel 3 XL|G013C`),
		regexp.MustCompile(`(?i)Pixel 2 XL|taimen`),
		regexp.MustCompile(`(?i)Pixel 3a XL|G020[BCG]`),
		regexp.MustCompile(`(?i)Pixel 4 XL|GA01180-US|G020P`),
		regexp.MustCompile(`(?i)G020[MI]`),
		regexp.MustCompile(`(?i)AOSP on sunfish|G025[JN]|GA02099`),
		regexp.MustCompile(`(?i)Pixel 4a \(?5G\)?|AOSP on bramble|G025[IE]|G6QU3`),
		regexp.MustCompile(`(?i)pixel ([3-8])a`),
		regexp.MustCompile(`(?i)G1F8F|G4S1M`),
		regexp.MustCompile(`(?i)GE2AE|GP4BC|GFE4J`),
		regexp.MustCompile(`(?i)GO3Z5|GQML3`),
		regexp.MustCompile(`(?i)GTT9Q|GD1YQ|G5NZ6`),
		regexp.MustCompile(`(?i)G1MNW|GC3VE|GE9DP`),
		regexp.MustCompile(`(?i)G9BQD|GPJ41|GKWS6|GZPFO|GA04851-US`),
		regexp.MustCompile(`(?i)GKV4X|G8HHN|G576D|G6GPR|G576D`),
		regexp.MustCompile(`(?i)G0DZQ|G82U8|GWKK3|GHL1X`),
		regexp.MustCompile(`(?i)Google 2XL|G011C`),
		regexp.MustCompile(`(?i)GWVK6|GUR25|G2YBB|G1B60`),
		regexp.MustCompile(`(?i)GR83Y|GEC77`),
		regexp.MustCompile(`(?i)Pixel 9 Pro Fold|GGH2X|GC15S`),
		regexp.MustCompile(`(?i)Pixel ([6789]) Pro`),
		regexp.MustCompile(`(?i)pixel ([2-9])`),
		regexp.MustCompile(`(?i)G9FPL|Pixel Fold`),
		regexp.MustCompile(`(?i)Goophone[ _]|(?:M(G492|L7[JK]2)CH|MN(4A2|8J2)ZP|MGA92ZP|MKU82ZP|MNGW2CH|MNH02CH|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MG492CH|MGA92ZP)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML7[JK]2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MKU82ZP[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNGW2CH[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN4A2ZP|MNH02CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MN8J2ZP|MNRM2CH)[/]A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S4 MEGA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Goophone i([69])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel| M5 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gooweel; (S7);`),
		regexp.MustCompile(`(?i)GTV-|(?:Gplus[ _](?:[ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)|GMC-(?:7127M|668[NM]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gplus[ _]([ZXP]10\+?|N809|F53|S9701|FW6950|A2_Plus|S10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GTV-(50PU744N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRADIENTE-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)GRADIENTE ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)GRAETZ[;,]`),
		regexp.MustCompile(`(?i)(?:Grape[ _])?GTM[-_]5([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(E101GCM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:G0[256]15D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G0215D|G0245D|G0335D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G-10 (?:ULTRA|PRO)|G-20ULTRA|G-8 PRO`),
		regexp.MustCompile(`(?i)G-([12]0) ?ULTRA`),
		regexp.MustCompile(`(?i)G-(8|10) PRO`),
		regexp.MustCompile(`(?i)(?:GO 55303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X1_Light(?:_Lte)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_Light(?:_Lte)?`),
		regexp.MustCompile(`(?i)Gresso[ _]|(?:REGAL R2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gresso[ _]Regal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gretel|(?:GT6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GT6000)`),
		regexp.MustCompile(`(?i)Gretel; (A[67])`),
		regexp.MustCompile(`(?i)GroBerwert[ _]?(HD7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GR?-TB[0-9]+[a-z]*|GRUNDIG|portalmmm/2\.0 G|AFTEU(?:011|014|FF014)`),
		regexp.MustCompile(`(?i)(GR?-TB[0-9]+[a-z]*)`),
		regexp.MustCompile(`(?i)GRUNDIG (?:Android TV|Google TV UHD\+)`),
		regexp.MustCompile(`(?i)GRUNDIG ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 G([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(GR(?:32200|43200))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _]|A727_Infinity_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 8s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity 9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]X(\d) ?mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gtel[ _-]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(XP9800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Betacrux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[ _]?(?:Max|mini H8|plus|PRO\+)`),
		regexp.MustCompile(`(?i)(?:H96[_ ]?)?Max[ _]RK(\d{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max X2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96[_ ]Max[ _]V11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mini H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H96plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SpaceTab_H20)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T2000)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:H10_ONE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER[ -](?:MEDIA|[MS]-Pad)|(?:U(?:43|50|65)YQ2200GR|H32YQ2200GR|H24YQ2200GR(?:-2)?|MEDIA TV M5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIPER[ -]([SM])-Pad`),
		regexp.MustCompile(`(?i)MEDIA TV (i4 Pro|i4|[46]K|M5)`),
		regexp.MustCompile(`(?i)(U(?:43|50|65)YQ2200GR|H32YQ2200GR|H24YQ2200GR)`),
		regexp.MustCompile(`(?i)4K AI Smart TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HKPRO,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(SMB-H8009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HMD (?:Pulse (?:Pro|Plus)|Pulse|Fusion|Skyline)|N159V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HGTV-LED(\d{2}[FU]?HDSQ?\d{3}T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (EV10)( Build|[;)])`),
		regexp.MustCompile(`(?i)HOTREALS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hewlett-Packard|HP Engage|HP/HP|HP Chromebook|HP EliteBook|TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP (?:Pro )?Slate|Slate 21|Slate 10|HP [78]|HP 10 Plus|Compaq [7|8]|HP; [^;/)]+|cm_tenderloin`),
		regexp.MustCompile(`(?i)HP ([78][^)/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)Compaq ([78][^/;]*) Build`),
		regexp.MustCompile(`(?i)HP Slate ?(.+) Build`),
		regexp.MustCompile(`(?i)HP Slate ?([0-9]+)`),
		regexp.MustCompile(`(?i)TouchPad/(\d+\.\d+)|hp-tablet`),
		regexp.MustCompile(`(?i)HP; ([^;/)]+)`),
		regexp.MustCompile(`(?i)HP ?iPAQ ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)webOS.*(P160U)`),
		regexp.MustCompile(`(?i)HP ProBook (6560b)`),
		regexp.MustCompile(`(?i)Chromebook (11 G5|x360 11 G1 EE|13 G1|x2)`),
		regexp.MustCompile(`(?i)HP EliteBook (820 G2|8470p)`),
		regexp.MustCompile(`(?i)HTC|Sprint (?:APA|ATP)|ADR[a-z0-9]+|NexusHD2|Amaze[ _]4G(?:[);/ ]|$)|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|\))|(Amaze[ _]4G|One ?[XELSV\+]+)(?:[);/ ]|$)|SPV E6[05]0|(One M8|One Mini 2|X525a|PG86100|PC36100|XV6975|PJ83100|2PYB2|2PS64|2PZC5|0PJA10|0PJA2|HTV33|0PM92|0PCV1|601HT|0PAJ5|HTL2[23]|HTV3[12]|2PQ93|X2-HT|EXODUS 1|ISW13HT|710C|U Ultra|2Q8L10000|2Q55100|2QC9200|2PZC100|2PZF1|2PZM3|2Q6E1|U12 life|U Play)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ](?:U-2u|U Play|2PZM3)|2PZM3|U Play)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]U-1[wu]|2PZF1|U Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 plus|(?:HTC_)?2Q4D[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC )?(?:U12\+|2Q55[13]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(1[12]) life(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q6E1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:U11 Eyes|2Q4R100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XV6975(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PG86100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC36100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D628u`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:HTV33|601HT|2PZC100|2PZC5|U-3[uw])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:801e|802[wdt]|PN071)`),
		regexp.MustCompile(`(?i)PJ83100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]PO582(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_?)?(?:One[ _]?Mini[ _]?2|M8MINx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X2-HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2PXH3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISW13HT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC U23 pro|2QC9200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTL23|HTV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTCButterflys901s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?(?:M9pw|One M9 ?PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ]M9u|0PJA2|0PJA10|HTC One M9|HTC6535LVW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)One[ _](X9|[EM]8) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire[ _]([\d\w]+) dual sim(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC(?: One m7|6500LVW|PN071)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:One M8|HTC6525LVW|HTC[_ ]M8[xd]|HTC[_ ]0P6B|HTCOneM8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?One ?M8 ?Eye(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?(?:0PAJ5|M8Sx)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]E9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:One[_ ])?E9(?:pw|PLUS dual sim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_S9u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC6515LVW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X525a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2PQ9(?:3|10)|HTC[_ ]A9u)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2PS64|HTC6545LVW|HTC[_ ]M10h`),
		regexp.MustCompile(`(?i)(710C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)0PM92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC_)?0PCV[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC ?D160LVW(?:PP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]D310n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]v01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)608t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_(?:0P9O2|D610x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(0P4E[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D620h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[_ ]?(?:D626ph|D200LVWPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?(?:0P9C2|D816[xd]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_?D526h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2Q8L10000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire620G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EXODUS 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC 2Q7A100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire 10 compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC_D10i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC[ _](?:10[ _]evo|M10f)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTC Desire (\d+) pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Desire 10 lifestyle(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HTC[_ ])?TATTOO[_ ]A3288`),
		regexp.MustCompile(`(?i)HTC[ _-]P715a`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer Build`),
		regexp.MustCompile(`(?i)HTC[ _-](A10[13]) Plus`),
		regexp.MustCompile(`(?i)HTC[ _-](A10[0123])`),
		regexp.MustCompile(`(?i)HTC[ _-]Flyer[ _-]([\w]{1,5})`),
		regexp.MustCompile(`(?i)HTC(?:[ _-])?(?:One[ _-]max|6600LVW|0P3P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)USCCHTC(\d+)`),
		regexp.MustCompile(`(?i)Sprint (ATP.*) Build`),
		regexp.MustCompile(`(?i)Sprint (APA.*) Build`),
		regexp.MustCompile(`(?i)Wildfire (E3) lite`),
		regexp.MustCompile(`(?i)Wildfire (E2?) plus`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build`),
		regexp.MustCompile(`(?i)HTC[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)HTC[ _]([a-z0-9]+[ _-]?(?:[a-z0-9_+\-])*)`),
		regexp.MustCompile(`(?i)(?:HTC-)?HTC(?:[-/ ])?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)HTC;(?: )?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Amaze[ _]4G|One ?[XELSV\+]*) Build`),
		regexp.MustCompile(`(?i)(ADR[^;/]+) Build`),
		regexp.MustCompile(`(?i)(ADR[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HTV32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HAFURY|(?:GT20|MEET)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MIX|UMAX|MEET)`),
		regexp.MustCompile(`(?i)Haier|(?:M53-52401|I6_Infinity|Titan[ _]T[135]|(?:HW-)?W(?:71[67]|757|86[07]|970)|S5 Silk|(?:HM-)?(N505|N700|G(?:152|303|353|552|70[01])?-FL|HM-(?:I559|N50[15]|I560|G553|N70[01])-FL|HR-V101|G(?:303)?-W|I(?:557)?-FL)|(?:PAD[ _](?:D71|G781|d85))|A2_Lite_NFC|A4_Lite|HL810G|Andromax C46B2H|OLED TV S9|MINTAKA|android 8([\d.]*);(?: [\w-]+;)? E13)(?:[);/ ]|$)|Android [67](?:[\d.]*);(?: [\w-]+;)? P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)E13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:HM-)?(G(?:152|353|552|70[01])|G(?:303)|I(?:557))`),
		regexp.MustCompile(`(?i)(Titan[_ ]T[135]|I6_Infinity)`),
		regexp.MustCompile(`(?i)(?:HW-)?W(71[67]|757|86[07]|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINTAKA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAD[ -_](D71|G781|d85)`),
		regexp.MustCompile(`(?i)(HL810G|HR-V101|M53-52401)`),
		regexp.MustCompile(`(?i)Haier MatrixTV AEL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Haier[ _-](H[WT]-[^/;]+) Build`),
		regexp.MustCompile(`(?i)Haier[ _-](H[WT]-[a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Haier[ _-](sy[0-9]+)`),
		regexp.MustCompile(`(?i)Haier[ _-]([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)Haipai ?noble S6`),
		regexp.MustCompile(`(?i)Haixu[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)Hamlet[ _]|XZPAD412LTE`),
		regexp.MustCompile(`(?i)(?:Hamlet[ _])?XZPAD(412W|412LTE)`),
		regexp.MustCompile(`(?i)(?:Hammer[_ ](?:Construction|Explorer[_ ](?:Plus|Pro)|FORCE|Blade_[34]|Blade2_PRO|Blade_5G|IRON_[234](?:[_ ]LTE)?|IRON|Explorer|ENERGY(?:_18x9|_2_2022|_[2X])?|Titan 2|Active2?(?:_LTE)?)|Iron[_ ](?:2|Va)|Blade V 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer[_ ]Construction`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Plus`),
		regexp.MustCompile(`(?i)Hammer[_ ]Explorer[_ ]Pro`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY_2_2022`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY[ _](18x9|3G|\d+|X)`),
		regexp.MustCompile(`(?i)HAMMER[ _]ENERGY`),
		regexp.MustCompile(`(?i)Hammer[_ ]FORCE`),
		regexp.MustCompile(`(?i)(?:Hammer[ _])?Iron[ _]([234]|Va?)`),
		regexp.MustCompile(`(?i)Hammer[ _]Iron`),
		regexp.MustCompile(`(?i)Hammer[ _]Explorer`),
		regexp.MustCompile(`(?i)Hammer Active(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Active2_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hammer_Blade_([34])`),
		regexp.MustCompile(`(?i)(?:ALGIZ_RT8|NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NAUTIZ_X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ALGIZ_RT8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})|SN97T41W|SN1AT71W\(B\)|SN70T51A|SN70T31?|T7-QC`),
		regexp.MustCompile(`(?i)(HSG[0-9]{4})`),
		regexp.MustCompile(`(?i)SN1AT71W\(B\)`),
		regexp.MustCompile(`(?i)Hanson[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)ODROID[-]?(C2|[NU]2|XU[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HARPER|(?:HARPER[_ ])?(?:ABX-332|ABX-[12]10|24R470TS|32R750TS|32R670TS|40F660TS|40F750TS|43U750TS|24R490TS|65U660TS|43F6[69]0TS|50U660TS|32R751TS|43F750TS|85U750TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HARPER[_ ])?(ABX-332|ABX-[12]10|32R751TS|40F660TS|24R490TS|65U660TS|50U660TS)`),
		regexp.MustCompile(`(?i)(?:HARPER[ _-]?)?(\d{2}[QUFR]\d{3}TS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTY[_-]\d{2}\w+-(?:S2|H[ACK]22|S2-T9|V[DNZS])|HTY-32HDR06G|HTY_43FHD06B|HTY-43F06B-VZ|HTY-50UHD05B|HTY-24H06W-VZ|HTV-55U11B-VS|43F01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)43F01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HT([YV])[_-](\d{2}(?:[^/;)]+))(?: Build|[);])`),
		regexp.MustCompile(`(?i)Hasee ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hasee ([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DVB-ATV100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hpad[12]|Wpad3| F3A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hpad([12])`),
		regexp.MustCompile(`(?i)Wpad(3)`),
		regexp.MustCompile(`(?i)F3A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEIMAT[ _](H43PU2303SVF|H65PU2303SVF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Helio (S60|S5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HB_X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HTB801|HBook-Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Boost(?:[ _](?:Hypa|Max|Ultra))?(?: Build|[;)])|HMR(?:5012|5450)|Crusader|(?:VHIX-)?VHIX-\w+(?:-[A-Z])?|43FSY112X[bcd]?|32HSY119X|39HSY111X|55USY151X|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost[ _](Hypa|Max|Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMR5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HMR5450|Crusader)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VHIX-)?VHIX-(\w+)`),
		regexp.MustCompile(`(?i)(32HSY119X|39HSY111X|55USY151X|43FSY112X[bcd]?|50USY151X|65USY151X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hebe|Hera|Hinova)-BD00|(?:ALH-BD00|MGZ-BD00|FIO-BD00|MIZ-BD00|MNT-BD00|SUP-BD00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hinova-BD00|MIZ-BD00`),
		regexp.MustCompile(`(?i)HLV-T([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:R6III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OC101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIHI-(4[01])KH-TAB-0?1`),
		regexp.MustCompile(`(?i)HIKING[_ ]|(?:HK-MH501|Fun5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIKING[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)HK-(MH501)`),
		regexp.MustCompile(`(?i)HIMAX[_ ]|PURE_III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLYMER( X)?`),
		regexp.MustCompile(`(?i)HIMAX[_ ]PURE[_ ]3S`),
		regexp.MustCompile(`(?i)(?:32Y_STV-R|HIBERGQLED\d{2}Y|HIBERG\d{2}YUHD(?:-R)?|(?:5[05]|43|65)YUHD-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIBERGQLED(\d{2}Y)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIBERG)?(\d{2})YUHD-R`),
		regexp.MustCompile(`(?i)HIBERG(\d{2})YUHD`),
		regexp.MustCompile(`(?i)(32Y_STV-R)`),
		regexp.MustCompile(`(?i)(ELT070[46]H|ELT0802H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HIGHSCREEN|(Easy[- ]Power(?:[- ]Pro)?|Pure[_ ](?:Power|F)|Power Ice(?: Max)?|Easy[_ ]([SFL]|XL)(?:_Pro)?|Razar_Pro|Power Rage(?: Evo)?|Zera-S-Power|Zera[ _][UFS]|Power[ _]?Five[ _]?(?:Pro|Evo|Max|Max(?:Lite|2))|Power(?:Four|Five)|BOOST II(?:se)?|Fest(?:XL)?(?:-Pro)?|Tasty|Boost3|Boost 3(?: Pro)? SE|Expanse|Explosion|Hercules|Alpha Rage|VergeM|Ice2|Prime [LS]|Spade|Spark 2|Alpha GT[RX]|Wallet|Thunder|Razar|COSMO DUO|Prime Mini SE| Bay|Omega Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Power Ice(?:[ ](?:Max|Evo))?|Power Rage(?: Evo)?|Zera[ _][UFS]|Alpha GT[RX]|Wallet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFivePro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMaxLite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFiveMax2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Evo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power Five Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]?Five(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spade(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spark 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FestXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bay(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PowerFour(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[_ ]Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure[ _]F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Razar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SLF]|XL)[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Easy[_ ]([SFL]|XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy[- ]Power[- ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HIGHSCREEN )?Easy-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST IIse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Boost 3 Pro SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOOST3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zera-S-Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tasty(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VergeM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WinWin(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Expanse(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hercules(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alpha Rage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ice2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime Mini SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime ([LS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_|10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_9DTB39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10DTB12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HS_([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hiremco|(?:Matador Pro Air|X6-PRO|MATADOR[- ]PRO|Matador)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MATADOR[- ]PRO`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/]+) Build|Hisense|HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9-]*|HNR(?:320T|55[01]T)|E270BSA|HWCD100E|HITV300C|HITV205N|M470BS[AE]|EG98|E2281|EG680|I46D1G|HAT4KDTV|HITV10[12]C|HLTE(?:[237]00T|229T|200M|203T|202N|21[023567][TM]|22[67]T|22[13]E|230E|239E|103E|310[TM]|31[16]T|500T|501N|510[TM]|556N|7[23]0T|720E|M800)|KS(?:907|964)|U972|U601S Pro|U972_Pro|HiSmart [24]K ATV4|HiSmartTV A4`),
		regexp.MustCompile(`(?i)HITV10[12]C`),
		regexp.MustCompile(`(?i)M470BS[AE]`),
		regexp.MustCompile(`(?i)E50s \d+GB|HLTE239E`),
		regexp.MustCompile(`(?i)HLTE221E|E MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE200T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE210T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE215T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE213T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE311T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE216[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE316T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE226T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F8 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE217T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE227T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR550T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HNR551T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE310[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE510[TM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE500T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLTE230E|Infinity H40 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLTE720T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWCD100E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HLTE300T|HLTE200M|HLTE212T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HITV300C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E260T\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U972|U601S)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity H([56]0) ZOOM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity E30SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HS-(?:G|U|EG?|I|L|T|X)[0-9]+[a-z0-9-]*|U972)`),
		regexp.MustCompile(`(?i)(HAT4KDTV|HiSmart [24]K ATV4|HiSmartTV A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hisense;SmartTV;([a-z0-9_ -]+)V[ST];`),
		regexp.MustCompile(`(?i)Hisense;SmartTV;([a-z0-9_ -]+);`),
		regexp.MustCompile(`(?i)Hisense; ?SmartTV_([0-9]{4})_1;`),
		regexp.MustCompile(`(?i)(HE43A6500UWTS)`),
		regexp.MustCompile(`(?i)HITV205N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KS964(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense (U3) 2021(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+) Plus(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:HS-)?Hisense ([^/]+)/`),
		regexp.MustCompile(`(?i)HITACHI[;,]`),
		regexp.MustCompile(`(?i)HITACHI, ?([0-9]+[a-z0-9_ -]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(Amaze[ _](?:S2_4G|S[56] 4G|S1|S[56](?: Plus)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HOFFMANN|Neo[_ ]A[1379]00|X-Go|X-Play|X-Pro|X_Ultra|X-Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[_ ](A[1379]00)`),
		regexp.MustCompile(`(?i)HOFFMANN[ _]X[-_ ](Prime|Twist|Max)`),
		regexp.MustCompile(`(?i)X[-_](Play|Go|Pro|Ultra|Max)`),
		regexp.MustCompile(`(?i)(Box Q|Box R 4K| KP1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ideal (?:10S|Tab [79]|8S)|ALFA(?:10T[BX]|7LM)|ALFA[_ ](?:10R[CX]|10BS|10TM?|8T|10MB|10YC|7RS|[78]M?RC|7M|8S[TL]|8RX|8MG|10BT_V2)|HT[ _](?:7RT|8MZ)|7_PREMIUM_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ideal (?:10S|Tab 9|8S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ALFA[_ ]?(10R[CX]|10YC|10BS|10T[BMX]?|7RS|[78]M?RC|7L?M|10MB|8T|8S[TL]|8RX|8MG|10BT_V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ideal Tab 7 Ips( 3G)?`),
		regexp.MustCompile(`(?i)HT[ _](7RT|8MZ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom|(?:HT[0-9]{1,2}(?: ?Pro)?|HT3_Pro|P30 Pro|android 8([\d.]*);(?: [\w-]+;)? S17)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2})[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Homtom[_ ])?HT ?([0-9]{1,2}?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Homtom ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:EDA5[01]K?|EDA[47]0|EDA71_G|EDA5[12]|CK65|CT[46]0|CT45P|CN80|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CT45P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EDA5[01]K?|EDA[47]0|EDA5[12]|EDA61K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CK65|CT[46]0|CN80)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001)|F13_EEA|MZ104|HZ0010J?|HZ1012|YK_P30(?:_EEA)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HOOZO[_ ](MT232|MT116|MT Pad 116 LTE|X1001|MZ104)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HZ0010J?|HZ1012)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F13_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YK_P30)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY(?:416|820)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY(416|820)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WEE5-75EU-FDVB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Horizont[_ ])?(32LE7011D|43LE7022D|32LE705[12]D|65LE7053D|43LE7052D|50LE7053D)`),
		regexp.MustCompile(`(?i)HOSIN[ _-]`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)HOSIN[ _-]([^;/]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:HPP-(GS1|L55B)|VLE5|Puya|HPPL6[03]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Venus[_ ](?:X[12]|X1[0245679]|R8 PLUS|R[236-9]|R1[028]|X16-1)|Cosmos[ _](?:V8_lite|V19_Plus|V2[0-3]|U2?|V1[359]|V[45689]|V8-2)|Pearl K[123]|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Hot[_ ]6|Symbol (?:M1|X|Max|R60|Pro|S4)|Symbol|Note 12 EF|Cyber (?:[78X]|1[35])|Cyber (?:9|13|X) Pro|Cosmos|W10 Pro|TAB R[57]|TAB R6 (?:Pro|Ultra)|T5 Pro| M5i|Hyper 7 Pro)(?:[);/ ]|$)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? M5 Plus|Android 12(?:[\d.]*);(?: [\w-]+;)? W10|Android 13(?:[\d.]*);(?: [\w-]+;)? (?:T7(?: Pro)?|T5 Max))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Cosmos[ _]V8_lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hot[_ ]6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ]X16(?:-1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus[_ ](X[12]|X1[0245679]|R[236-9]|R1[028])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cyber (\d*|X) Pro`),
		regexp.MustCompile(`(?i)Cyber (\d*)`),
		regexp.MustCompile(`(?i)Symbol (S4|M1)`),
		regexp.MustCompile(`(?i)(W10|T[57]) Pro`),
		regexp.MustCompile(`(?i)W10?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl K(3) (2021)`),
		regexp.MustCompile(`(?i)TAB R([57])`),
		regexp.MustCompile(`(?i)(Cosmos[ _](?:V19_Plus|V2[0-3]|U2?|V1[359]|V[45689])|Pearl K[123](?: Prime)?|Magic Q8|Magic 5 Plus|Magic (?:[89]|1[13])|Symbol (?:X|Max)|Cosmos|M5 Plus)(?:-2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HT-705XS|705-G Go|1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HT-705XS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(1001-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(705-G Go)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _]|(?: HG11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huadoo[ _](HG0[46]|HG11|V[34])`),
		regexp.MustCompile(`(?i)HG11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huagan[ _]`),
		regexp.MustCompile(`(?i)Huagan[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)KHATAR H-(?:10 mini|20 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-10 mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KHATAR H-20 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HW-)?(?:Huawei|nova (?:Y\d|[678])|Maimang \d|MediaPad T1|Ultym5|Ideos|Honor[ _]?|(?:(?:AGS|AGS2|ALE|ALP|AMN|ANA|ANE|ARE|ARS|ASK|ATH|ATU|AUM|BAC|BAH[234]?|BG2|BGO|B[ZK]K|BKL|BL[ALN]|BND|BTV|CA[GMNZ]|CH[CMW]|CHE[12]?|CLT|CMR|COL|COR|CPN|CRO|CRR|CUN|DIG|DLI|DRA|DUA|DUB|DUK|EDI|EL[EN]|EML|EVA|EVR|FDR|FIG|FLA|FRD|FRL|GEM|GRA|HDN|HLK|HMA|Hol|HRY|HWI|H[36]0|INE|JAT|JEF|JDN|JDN2|JKM|JMM|JSN|KII|KIW|KNT|KOB|KSA|LDN|LEO|LIO|LLD|LND|LON|LRA|LUA|LY[AO]|MAR|MHA|MRD|MYA|NCE|NEN|NEM|NEO|NXT|PAR|PCT|PIC|PLE|PLK|POT|PPA|PRA|RIO|RNE|RVL|SCC|SCL|SCM|SEA|SHT|SLA|SNE|SPN|STF|STK|TAG|TIT|TNY|TRT|VCE|VEN|VIE|VKY|VNS|VOG|VRD|VTR|WAS|YAL|G(?:527|620S|621|630|735)|Y(?:221|330|550|6[23]5))-(?:[A-Z]{0,2}[0-9]{1,4}[A-Z]{0,3}?)|H1711|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508))(?:[);/ ]|$))|hi6210sft|PE-(UL00|TL[12]0|TL00M)|T1-(A21?[Lw]|A2[23]L|701u|823L)|G7-(?:L01|TL00)|HW-01K|JNY-(LX[12]|[AT]L10|L[02]1)|OXF-AN[01]0|TAS-(A[LN]00|L[02]9|TL00)|WLZ-(AL10|AN00)|YOK-AN[10]0|NIC-LX1A|MRX-(AN19|AL[01]9|W[0-3]9)|CDY-(?:[AT]N00|AN[29][05]|NX9[AB]|TN[29]0)|GLK-(?:[AT]L00|LX1U|LX[23])|JER-(?:[AT]N20|[AT]N10)|ELS-(?:[AT]N[10]0|NX9|N[23]9|N04)|AKA-(AL10|L29)|MON-(W|AL)19|BMH-(?:TN10|AN[12]0)|AQM-([AT]L[01]0|LX1)|MOA-([AT]L[02]0|LX9N)|NTS-AL00|ART-(?:[AT]L00[xm]?|L29N?|L28)|MED-(?:[AT]L00|LX[29]N?|AL20)|EBG-(?:AN[01]0|TN00|N19)|ANA-(?:[AT]N00|NX9)|BZ[AK]-W00|BZT-(W09|AL[01]0)|HDL-(AL09|W09)|HWV3[123]|HW-02L|TEL-[AT]N(?:00a?|10)|KKG-AN[07]0|MXW-[AT]N00|JKM-(?:AL00[ab]|L03)|TAH-(?:N29|AN00)m?|C8817D|T1-821W|d-01[JKH]|d-02[HK]|KRJ-(?:W09|AN00)|HWT31|Y320-U10|Y541-U02|VAT-L19|70[14]HW|60[58]HW|NOH-(?:NX9|AN0[01]|AN[58]0|AL[01]0)|TNNH?-AN00|LIO-(?:[TA]L00|[LN]29|AN00)|KOB2K-L09|KOB2-(?:AL00|[LW]09|L03)|AGS3-(?:[WL]09|AL0[09]|W00[DE]|W9)|DNN-LX9|NEY-NX9|LON-AL00|HLK-L41|503HW|AGR-(?:[LW]09|AL09)|PPA-LX[12]|ANG-(?:AN00|LX[12])|NOP-AN00|ALA-AN70|DVC-[AT]N[02]0|302HW|Nexus 6P|DBY-W09|WKG-(?:LX9|[AT]N00)|JSC-(?:AN00|AL50)|OCE-A[NL][015]0|NZA-AL00|BRQ-A[LN]00|BZC-(?:AL|W)00|NEN-L(?:X1|22)|KOZ-(?:AL[04]0|AL00CM)|NTH-(?:AN00|NX9)|MRR-W[23]9|WGR-(?:W[10]9|AN19)|TET-AN[10]0|SCMR-(?:W09|AL09)|OXP-AN00|HJC-(?:AN90|LX9)|CDL-AN50|CND-AN00|NTN-(?:LX[13]|AN20|L22)|RNA-[AT]N00|CHL-(?:A[LN]00|AL60)|ELZ-AN[012]0|NAM-(?:LX9|AL00)|JLH-AN00|JAD-(?:AL[0568]0|LX9)|AGS6-[WL]09|AGS5-(?:L09|W0[09])|AGS3K-(?:W20|[WL]0[09])|AGRK-[WL]09|MT2L03|LSA-AN00|KJR-W09|TET-A[NL][05]0|TYH601M|RTE-AL00|BAL-(?:AL[08]0|AL60|AN20|L49)|BZI-(?:AL00|W00)|BZT3-(?:AL00|W09)|BZD-(?:W00|AL00)|MLD-AL[01]0|AGM3-(?:W09|AL09)HN|ABR-(?:AL[0689]0|LX9)|GIA-AN[08]0|LEO-DLXXE?|BZA-L00|MGI-AN00|CMA-(?:LX[123]|AN[04]0)|NEW-AN90|KRJ2-(?:W09|AN00)|BRT-(?:W09|AN09)|ANY-(?:[LN]X1|LX[23]|AN00)|JLN-(?:LX[13]|AL00)|LGE-(?:NX[19]|AN[012]0|N49B)|TNA-AN00|TFY-(?:LX[123]|AN[04]0)|DIO-AN00|BZW-AL[01]0|MOGOLIA|CM990|MGA-(?:AL[04]0|LX[39])|60[56]HW|Peppa-(?:L2[23]B|L0[23]B)|KANT-\d{3}[BCS]?|Kobe3-L09|FNE-(?:NX9|AN00)|HPB-AN00|Mate ?(?:[34]0 RS|Xs|30)|Y530|SDY-AN00|EC6108V[89]|CTR-(?:LX[123]|AL[02]|L81)|VNE-(?:LX[123]|N41|AN[04]0)|HMW-W09|GLA-(?:LX[13]|AL00)|HEY2?-[NW]09|GOT-(?:AL[01]9|W[02]9)|PAL-(?:AL00|LX9)|PAN-L29|NNH-AN00|P Smart S|NCO-(?:LX[13]|AL00)|DCO-(?:AL00|LX9)|CET-(?:AL[06]0|LX9)|ADT-AN00|RMO-(?:AN00|NX[13])|RKY-(?:AN[01]0|LX[123])|M300-L09|EVE-(?:AL00|LX[39]N?)|BNE-(?:LX[13]|AL00)|dtab01|BZT4-W19|ROD-W09|ANP-AN00|WGRR-W09|HN3-U01|Holly-U19|BLM-00|ANN-AN00|VNA-(?:LX[23]|L29)|CRT-(?:NX[13]|LX[123]|AN00)|AGM-W09HN|PGT-(?:AN[012]0|N[01]9)|GLL-AL01|MNA-(?:LX9|AL00)|LNA-(?:AL00|LX9)|ALT-(?:L29|AL[01]0|AN00|LX[12]|NX[13])|MAO-(?:LX9N?|AL00)|Enjoy (?:20 SE|20 5G|Z 5G|20 Plus|20 Pro|[12]0e)|ANB-AN00|STG-(?:AL00|LX[12])|LTK-LX3|GOA-(?:LX9|AL80)|nova (?:6 5G|6SE|Lite3Plus|5T Pro)| Angela-L|DBR-(?:W[01]9|W10)|WOD-LX[123]|REP-AN00|WDY-(?:LX[123]|AN00)|FOA-(?:LX9|AL00)|ALI-(?:AN00|NX[13])|DBY2-(?:W0[09]|L09)|REA-(?:NX9|AN00)|AMZ-L29|AGT-AN00|VER-(?:AN[01]0|N49)|ELN-[WL]09|BTK-(?:AL09|W09)|FRI-(?:NX9|AN[01]0)|LLY-(?:LX[123]|AN00|NX1)|MAA-AN[01]0|BVL-(?:N[45]9|AN(?:16|[02]0))|MAG-AN00|RBN-NX[13]|PCE-(?:W29|W[34]0)|ALN-AL[018]0|FIN-AL60|ADA-AL[01]0U?|BON-AL00|BRA-AL00|CLK-(?:LX[123]|AN00|NX[123])|FGD-AL00|GDI-W09|GAR-AN[06]0|CHA-AL80|MLA-L1[12]|LEM-AL00|ADY-(?:AL[01]0|LX9)|VCA-AN00|JuliaQN-(?:L[02]1B|L23A)|HBP-(?:AL00|LX9)|ARC-AL00|BLK-AL00|HBN-(?:AL[018]0|LX9)|JDY-(?:LX[123]|AN00)|ELI-(?:AN00|NX9)|GFY-(?:AL00|LX2P)|PE-CL00|DBY2-L09CK|ELP-(?:AN00|NX9)|LRA-(?:AN00|TL00)|GBD-NX9|FCP-(?:AN10|N49)|CAM-L03|TGR-W09|Yale-(?:L71A|L61D)|Wukong-L29A|RTG-NX9|Bach-W09|ROD2-W09|FLC-AN00|NDL-[WL]09|Marie-L21BX|LYN-AN00|Y6(?: (?:Pro )?2019| ?Prime)|GRL-AL10|PTP-(?:N49|AN[0167]0)|IVY-LX2|BRP-(?:NX1|AN[08]0)|BRC-AN00|MRO-W09`),
		regexp.MustCompile(`(?i)ADY-(?:AL[01]0|LX9)`),
		regexp.MustCompile(`(?i)HBP-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)HBN-(?:AL[18]0|LX9)`),
		regexp.MustCompile(`(?i)CRT-NX[13]`),
		regexp.MustCompile(`(?i)CLK-NX[13]`),
		regexp.MustCompile(`(?i)REA-(?:NX9|AN00)|RTG-NX9`),
		regexp.MustCompile(`(?i)POT-[TA]L00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z100-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y320-(?:U10|T00|U05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y330-U05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y541-U02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G527-U081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G620S-L0[13]|C8817D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G630-U251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G7-(?:L01|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P7-L(?:10|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P6 ?S-U06`),
		regexp.MustCompile(`(?i)G730-C00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H1711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y221-U(?:[12]2|[0345]3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y550-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y560-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Huawei g700(?:-(?:U[012]0|T0[01]))?`),
		regexp.MustCompile(`(?i)ART-[AT]L00[xm]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-(?:[AT]L00|AL20)(?:[);/ ]|$)|Enjoy 10e`),
		regexp.MustCompile(`(?i)AQM-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-[ACT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG-(?:L0[13]|L32|L13|L2[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NCE-(AL[10]0|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-(?:TL10|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-(?:AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIG-(?:[AT]L[10]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TRT-AL00[A]?|TRT-TL10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-(?:AL[12]0|TL[02]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRD-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DVC-[AT]N20|Enjoy 20 Pro 5G`),
		regexp.MustCompile(`(?i)(?:DVC-AN00|Enjoy Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-AL20|Enjoy 20 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRL-[AT]N00|Enjoy 20 Plus 5G`),
		regexp.MustCompile(`(?i)MLD-AL[01]0|Enjoy 20e Helio P35`),
		regexp.MustCompile(`(?i)U8665(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MED-LX9N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G735-L(?:03|12|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHC-U(?:0[13]|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?G621-TL00M?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KII-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L2[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-L0[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIO-[UT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)LNA-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)JAD-(?:AL[0568]0|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ABR-(?:AL[08]0|LX9)`),
		regexp.MustCompile(`(?i)ABR-AL[69]0`),
		regexp.MustCompile(`(?i)BAL-(?:AL[08]0|L49)`),
		regexp.MustCompile(`(?i)U8860(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COL-(?:AL[01]0|TL[01]0|L29|L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HRY-(?:[AT]L00[A]?|LX[12]|L21|LX1MEB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HRY-LX1T|Honor 10i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U9508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LRA-[AT]L00|Honor 20 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(HRY-AL00T[a]?|Honor 20i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YAL-(L41|AL10)|Honor 20 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAR-LX1H|YAL-[AT]L50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YAL-(?:L21|[AT]L00)|Honor 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EBG-[AT]N00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:EBG-AN10|EBG-N19|Honor 30 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:AN9[05]|NX9A|TN90)|Honor 30S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LRA-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MXW-[AT]N00|Honor 30 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BMH-(?:AN[12]0|TN10)|Honor 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hol-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G750-T01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CHM-U01(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor 4c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-[AT]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L(?:1[12]|23)|Che1-L04|CHE-TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CUN-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?CAM-(?:AL00|TL00H|TL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:AL10|L51|UL10|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-(?:L22|TL00H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?KIW-(?:AL10|TL00H|[TC]L00|L2[1-4]|UL00)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTH-(?:NX9|AN00)`),
		regexp.MustCompile(`(?i)JLH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-(?:LX[13]|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNA-[AT]N00`),
		regexp.MustCompile(`(?i)((?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?|HW-H60-J1|MOGOLIA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-TL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PE-([CU]L00|TL[12]0|TL00M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?DLI-(?:AL10|L[24]2|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L21HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BLN-(?:L2[124]|AL[1-4]0|TL[01]0(?:[);/ ]|$))`),
		regexp.MustCompile(`(?i)(?:Honor[_]?|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?NEM-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-(?:AL[20]0|L33[A]?|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUM-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?(?:LND-(?:AL[34]0|L29|TL[34]0)|AUM-L41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-(?:[CAU]L00|TL00H?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?DUA-(?:L22|LX3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HONOR[ _]?)?BND-(?:AL[01]0|TL10|L2[14]|L31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FRD-(?:AL[01]0|L0[249]|L1[49]|DL00)|VAT-L19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRA-(?:AL00X|AL00|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-(?:L09|TL30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEN-L22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAT-L41|Honor 8A Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAT-L(29|X[13])|Honor 8A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKK-(?:AL[10]0|L21|L22|LX2|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KSA-(LX[239]|AL00)|Honor 8S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSN-L(?:2[123]|42)|JSN-[TA]L00[a]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARE-(?:AL[10]0|L22(?:HN)?|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STF-(?:AL[10]0|L09S?|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-LX9N|Honor 9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-L29|Honor 9C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-(?:AL[01]0|L[23]1|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LLD-AL[23]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DUA-LX9|Honor 9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLK-(?:AL10|L4[12])|Honor 9x Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HLK-AL00a?|Honor 9x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-UL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Holly-U19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNY-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VER-(?:AN10|N49)`),
		regexp.MustCompile(`(?i)LGE-(?:AN10|NX9|N49B)|GBD-NX9`),
		regexp.MustCompile(`(?i)MGI-AN00|PGT-(?:N09|AN00)`),
		regexp.MustCompile(`(?i)PGT-(?:AN10|N19)`),
		regexp.MustCompile(`(?i)ALI-NX[13]`),
		regexp.MustCompile(`(?i)BVL-AN16|BVL-N49`),
		regexp.MustCompile(`(?i)BVL-(?:AN20|N59)`),
		regexp.MustCompile(`(?i)PTP-AN[06]0`),
		regexp.MustCompile(`(?i)PTP-(?:N49|AN[17]0)`),
		regexp.MustCompile(`(?i)ANA-(?:[AT]N00)`),
		regexp.MustCompile(`(?i)ANA-(?:AL00|N29|L04)`),
		regexp.MustCompile(`(?i)COR-(?:AL[01]0|L29|TL10)`),
		regexp.MustCompile(`(?i)(?:KSA-AL10|Honor Play 3e)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ASK-AL(00x|20)|Honor Play 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNNH-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHM-[CUT]L00[HM]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OXP-AN00|Honor Play 4T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AKA-AL10|Honor Play 4T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RKY-LX[123]`),
		regexp.MustCompile(`(?i)CLK-LX[123]`),
		regexp.MustCompile(`(?i)ALT-LX[12]`),
		regexp.MustCompile(`(?i)(?:NZA-AL00?|KOZ-AL40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-AN40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CHL-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUA-[TA]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-AN90(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KOZ-AL00CM(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HJC-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JAT-[AT]L00|Honor Play 8A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOA-(?:AL[02]0|TL00))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:AL00|AL20|AL30|L09|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-[TA]L10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOK-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KNT-(?:AL[12]0|[TU]L10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUK-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JMM-[AT]L[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BKL-(?:L04|L09S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCT-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OXF-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?SCL-L(0[1-4]|21|32)(?:_TD)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L[02]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Honor_|HW-)?LYO-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NTN-AN20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TEL-(?:AN(?:00a?|10)|TN00)|Honor X10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Honor X10 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMA-LX[123]`),
		regexp.MustCompile(`(?i)TFY-LX[123]`),
		regexp.MustCompile(`(?i)CRT-LX[123]`),
		regexp.MustCompile(`(?i)LLY-LX[123]`),
		regexp.MustCompile(`(?i)ELI-(?:AN00|NX9)`),
		regexp.MustCompile(`(?i)ELP-(?:AN00|NX9)`),
		regexp.MustCompile(`(?i)VNE-LX[123]`),
		regexp.MustCompile(`(?i)WDY-LX[123]`),
		regexp.MustCompile(`(?i)JDY-LX[123]`),
		regexp.MustCompile(`(?i)(?:KKG-AN00|Honor X10 Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DNN-LX9|Honor X10 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANY-(?:NX1)`),
		regexp.MustCompile(`(?i)ANY-(?:LX[23])`),
		regexp.MustCompile(`(?i)VNA-LX[23]`),
		regexp.MustCompile(`(?i)BRP-AN[08]0`),
		regexp.MustCompile(`(?i)WOD-LX[123]`),
		regexp.MustCompile(`(?i)ALA-AN70(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U8800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IDEOS[_ ]X5[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TNN-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maimang (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAH-(?:N29|AN00)m|Mate Xs)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAL-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)ALT-(?:AL00|L29)`),
		regexp.MustCompile(`(?i)TET-(?:A[NL]00|AN10)`),
		regexp.MustCompile(`(?i)ALP-(?:[TA]L00|L[02]9|L09S|L29S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-(?:AL00|L(?:01|03|21|23))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLA-(?:A09|L[02]9|L29S|[TA]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMA-(?:[AT]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNE-(?:AL00|LX[0-3]|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYA-(?:AL[01]0|L[02]9|L0C|TL00)|PAN-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LYA-AL00P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVR-(?:[TA]L00|L29|N29|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAS-([AT]L00|L[02]9)|AMZ-L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAS-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LIO-AN00P|Mate30 RS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPN-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:[TA]L00|L[02]9|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-(?:N29|TN00|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO-AN00m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOH-(?:NX9|AN0[01]|AN50|AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOP-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mate 40 RS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OCE-(?:A[NL]50|AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DCO-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)CET-(?:AL00|LX9)`),
		regexp.MustCompile(`(?i)ALN-AL[08]0`),
		regexp.MustCompile(`(?i)NXT-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MHA-(?:L[02]9|[AT]L00)|M300-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLL-L23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LON-(?:AL00(?:-PD)?|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRR-(?:L09|UL[20]0|CL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BND-L34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CAZ-(?:AL[01]0|TL[12]0)|CAN-L[01][1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:608HW|PRA-LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-L1[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)nova Lite3Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PIC-(?:[AT]L00|LX9)|HWV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:L0[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-(?:AL00|L2[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RNE-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HWI-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAR-(?:[AT]L00|LX[19]|LX1M|TL20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INE-(?:AL00|LX[12]r|LX[12]|TL00)|IVY-LX2`),
		regexp.MustCompile(`(?i)VCE-(L22|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAR-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEA-AL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLK-(?:[AT]L00|LX1U|LX[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YAL-L61|Yale-(?:L71A|L61D)`),
		regexp.MustCompile(`(?i)SPN-TL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AN00|nova 6 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JNY-[AT]L10|nova 6SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WLZ-AL10|nova 6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JEF-(?:[AT]N00|[AT]N20|NX9)|nova 7 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JER-(?:[AT]N10|[AT]N20)|nova 7 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CDY-(?:[AT]N00|NX9B|[AT]N20)|CDL-AN50|CND-AN00|nova 7 SE 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOA-(?:LX9|AL80)`),
		regexp.MustCompile(`(?i)FOA-(?:LX9|AL00)`),
		regexp.MustCompile(`(?i)FIN-AL60a?`),
		regexp.MustCompile(`(?i)(?:JNY-LX2|nova 7i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEN-L(?:X[13]|22)|nova 8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANG-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JSC-AL50|nova 8 SE`),
		regexp.MustCompile(`(?i)BRQ-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BRQ-AN00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANG-LX[12]|Angela-(?:L2[12]B|L02B)|nova 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAM-(?:AL00|LX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RTE-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JLN-(?:AL00|LX[13])|JuliaQN-(?:L[02]1B|L23A)`),
		regexp.MustCompile(`(?i)GLA-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)NCO-(?:AL00|LX[13])`),
		regexp.MustCompile(`(?i)BNE-(?:LX[13]|AL00)`),
		regexp.MustCompile(`(?i)DIG-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WKG-[AT]N00|Enjoy 20 5G`),
		regexp.MustCompile(`(?i)(?:WKG-LX9|Wukong-L29A|nova Y60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVE-LX[39]`),
		regexp.MustCompile(`(?i)MGA-LX[39]`),
		regexp.MustCompile(`(?i)CTR-LX[123]|CHW-LX3`),
		regexp.MustCompile(`(?i)STG-LX[12]`),
		regexp.MustCompile(`(?i)FIG-L(?:A1|X[123]|[13]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-(?:LX(?:[123]|1T|2J|1AF)|AL00|L01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POT-LX1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PPA-LX[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P Smart S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VTR-(?:L[02]9|AL00|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WAS-(?:L(?:X1|X1A|X2|X2J|X3|03T)|TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VKY-(?:AL00|L09|L29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAC-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EML-(?:[TA]L00|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ANE-(?:LX[123]|LX2J|L2[23]|TL00)|HWV32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CLT-(?:AL0[01]|TL0[01]|L0J|L(?:04|[02]9))l?|HW-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ELE-L(?:04|09|29)|ELE-[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAR-(?:LX(?:1[BM]|2B|[13]Am?|2J?|3BM)|TL00|L21B|L21ME[AB])|NIC-LX1A|HWV33)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VOG-(?:L(?:04|09|29)|TL00|AL10)|HW-02L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ANA-LX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JNY-(?:LX1|L[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L29N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ELS-(?:[AT]N00|NX9|N04)|NEY-NX9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ELS-(?:AN10|N[23]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-(?:L09|[TU]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HUAWEI P8max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRA-UL10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ALE-L(?:02|21|23)|ALE-[TUC]L00|503HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PRA-L(?:A1|X[12])|hi6210sft)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVA-(?:AL[10]0|L[012]9|[TCD]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L(?:[23]1|[26]2|53|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-L52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SLA-L(?:02|03|22|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIG-L(?:03|23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIE-(?:AL10|L[02]9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLA-TL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNS-[AT]L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATH-UL0[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U(8230|8661|8667)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ARS-([AT]L00|L22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-(?:L[02]2|U00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUA-(U22|L2[12]|U03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(?:L(?:02|03|2[23])|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-L(?:01|03|21|23|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AMN-LX[1239](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-LX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CRO-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAG-L[02]3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DRA-(?:LX2|[AT]L00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L13(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUN-(?:L(?:0[123]|2[123]|33)|U29)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SCC-U21|SCL-U31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYA-(L41|AL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ATU-L(?:11|21|22|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MRD-L(?:X1[NF]?|X3)|Y6 2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ATU-L(?:31|42)|Y6Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIT-(?:AL00|L01|U02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M[ER]D-LX2|Y6 Pro 2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y625-U03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L0[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y635-L21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CAM-L(?:03|21|23|32)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRT-LX[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LDN-L(?:01|X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HUAWEI[ _]?)?DUB-(?:LX[13]|TL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:AL00|L21)|TRT-TL10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LDN-(?:LX2|TL10)|TRT-(?:L21A|L53))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-(?:LX2|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL00a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DUB-AL20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PPA-LX3|Peppa-(?:L2[23]B|L0[23]B))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ART-L28(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQM-LX1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLA-(LX[123]|AL20|TL10|L23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKM-(?:[TA]L00[ab]?|LX[123]|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK-(L2[12]|LX3)|LTK-LX3`),
		regexp.MustCompile(`(?i)FRL-L2[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302HW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NMO-L31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CM990(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultym5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G6-L11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexus 6P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FCP-(?:AN10|N49)`),
		regexp.MustCompile(`(?i)HWT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDN-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH4-(?:L09|AL10)`),
		regexp.MustCompile(`(?i)BAH4-W(?:29|[03]9)`),
		regexp.MustCompile(`(?i)BAH3-(?:AL00|[LW]09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-W59(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH3-AN10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DB[YR]-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBR-W1[09]`),
		regexp.MustCompile(`(?i)GOT-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GOT-W[02]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCMR-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-(A?L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W0?9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS5-L09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DBY2-W0[09]`),
		regexp.MustCompile(`(?i)AGS5-W0[09](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMW-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HDL-(?:W09|AL09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-(?:AL00|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRJ-AN00|Honor V6 5G`),
		regexp.MustCompile(`(?i)KJR-W09|KRJ-W09|Honor V6 Wi-Fi`),
		regexp.MustCompile(`(?i)ELN-L0[39]`),
		regexp.MustCompile(`(?i)AGS3-AL09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W09HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY2-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEY2-N09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MON-(W|AL)19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZA-L00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZC-W00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZW-AL[01]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT4-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-80[123]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-A01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2-801W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-AL[01]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRX-W[0-3]9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MRR-W[23]9`),
		regexp.MustCompile(`(?i)MRX-AN19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WGRR?-W[10]9`),
		regexp.MustCompile(`(?i)PCE-W(?:29|[34]0)`),
		regexp.MustCompile(`(?i)CMR-(?:AL[01]9|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CMR-W19(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-AL09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GEM-70[1-3]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JDN2-(:?[WL]09|AL[50]0|AL50HN)|BAH2-(?:AL[01]0|L09|W[01]9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT-(?:AL|W)09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VRD-(?:(AL|W)09|AL10|W10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCM-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BTV-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BAH-W09|Bach-W09|CPN-(?:L|W)09|CPN-AL00|701HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BAH-(?:L09|AL00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AGS2-AL00|JDN2-(?:AL00|W09))HN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS2-(?:[LW]09|W09HN|W19|L03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KOB2-(?:[LW]09|L03)|Kobe3-L09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGR-[LW]09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS-(?:L0[39]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KOB-(?:L|W)09|BZK-[LW]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BG2-(?:U0[13]|W09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BGO-L03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BGO-DL09|PLE-70[13]L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JDN-L01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FDR-(A01[LW]|A03L)|60[56]HW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-(?:A21[LW]|A2[23]L)|MediaPad T1 10 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1-701u(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T1-82(?:3L|1W)|MediaPad T1 8\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3K-W0[90]`),
		regexp.MustCompile(`(?i)AGS2-AL00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AGS3-W00[DE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-(?:AL[01]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BZT-W09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:d-01J|d-02[HK])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:dtab)?(d-01[KH]|01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-BX9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEO-DLXXE?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLM-00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EC6108V(8|9)`),
		regexp.MustCompile(`(?i)KANT-350[BC]`),
		regexp.MustCompile(`(?i)(MediaPad[^/;]*) Build`),
		regexp.MustCompile(`(?i)Ideos([^;/]*) Build`),
		regexp.MustCompile(`(?i)(?:HUAWEI )?MT([0-9]+)`),
		regexp.MustCompile(`(?i)Huawei[ _-]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:HW-)?Huawei(?:/1\.0/0?(?:Huawei))?[_\- /]?([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)Huawei; ([a-z0-9 \-]+)`),
		regexp.MustCompile(`(?i)Hugerock|T101_2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hugerock[_ ](T70H)`),
		regexp.MustCompile(`(?i)BrailleNote Touch \+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BrailleNote Touch(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Humax[;,_]|(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Humax[;,] ([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Humax_liberty,([a-z0-9]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(AIVI-N3000RV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]|(?:Flame_Plus|Glaze|Cobra|Ridge Plus|Rush Plus|DZIRE|Android 7(?:[\d.]*);(?: [\w-]+;)? Beam|Vulcan|SAGE|Iris Plus 2021|VortexPlus|Excite|Flint|Panther|Slam|Epic)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hurricane[ _]IGNITE`),
		regexp.MustCompile(`(?i)Hurricane[ _]Bolt`),
		regexp.MustCompile(`(?i)Hurricane[ _]VORTEX`),
		regexp.MustCompile(`(?i)Hurricane[ _]GIGA`),
		regexp.MustCompile(`(?i)(?:VULKANO|ST-810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST-810)`),
		regexp.MustCompile(`(?i)Model[ _](5|6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PTC760|PNC5[56]0)`),
		regexp.MustCompile(`(?i)(PTC760|PNC5[56]0)`),
		regexp.MustCompile(`(?i)Hyundai|(?:Ultra (?:Active|Air|Charm|Dream|Energy|Latitude|Link|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)|Ultra_Vision_Plus|(?:Android 9(?:[\d.]*);(?: [\w-]+;)? [EL]553)|E435 Plus|E503F|E601F|L503F Plus|L604|L622|L601F|E(?:475|504|603)|G(?:24027|2552[34])K|W25042L|HP554O|Seoul (ECO|S8|MIX|5 Plus|9)|HT0701L16|HT0703K16|HT0704K08|HT100(?:4LI?16|2W32|3X16|2W16)|Koral_8W2|HT0701W16|Eternity[_ ](?:G25|H6[578])|HYMI 5S Plus|7GB1|7WD1|10LA1|10LB1|10WB[12]|E465GO|H-LED(?:55[BG]U7003|50FU7001|50[BG]U7003|50EU1311|55EU1311|65[BG]U7003|65EU1311|75BU7005|24BS5000|40GS5003|40FS500[13]|42FS500[13]|43FS500[13]|43EU1312|32FS500[135]|32GS5003|(?:32|40)BS5003|43[BG]U7003)(?:-[PC])?|H-DMP10[03]|HT070[34]W08|Koral 7W4|LGE; [0-9]{2}HYN[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultra[_ ]Vision[_ ]Plus`),
		regexp.MustCompile(`(?i)Ultra (Active|Air|Charm|Dream|Energy Lite|Energy Plus|Energy|Latitude|Link|Live II|Live|Shadow|Shine|Storm|Style|Sync|Trend|Vision|Wave)`),
		regexp.MustCompile(`(?i)Seoul (\d+)`),
		regexp.MustCompile(`(?i)Eternity[_ ](G25|H6[578])`),
		regexp.MustCompile(`(?i)E(475|504|503F|553|603|601F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L(553|601F|604|622)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Hyundai[_ ])?(Eternity[_ ](?:G57L?|G[56]0W?)|H7|Aero Plus|E435 Plus)`),
		regexp.MustCompile(`(?i)(H-LED\w+)(?:-[PC])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(H-LED\w+|H-DMP10[03]|2K TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; ([0-9]{2}HYN[a-z0-9]+)`),
		regexp.MustCompile(`(?i)HT0704W08|Koral 7W4`),
		regexp.MustCompile(`(?i)7GB1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7WD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hyundai ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Hyundai[ _-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:Pryme 01|ST01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COMMUNICATOR[_ ]9\.7[_ ]3G`),
		regexp.MustCompile(`(?i)(?:Nu65|iPlus P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nu65)`),
		regexp.MustCompile(`(?i)IDC_Voice_20_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GO5_55|BLESS_GO55|BLESSPLUS|KF4Go|KF5bless|GO4\.5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO4\.5`),
		regexp.MustCompile(`(?i)(KF4Go|KF5bless)`),
		regexp.MustCompile(`(?i)IKU[_ ]|(?:Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Powerful_K55i|Curvy C50L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](A22|A[457]0|X[23]|K3|i[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ](T[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IKU[_ ]T[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]\w`),
		regexp.MustCompile(`(?i)IMO[ _]Q([23]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q([4]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]FEEL A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S89(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S99(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S98(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S87(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S67(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]S78(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Discovery II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _]Q(5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO[ _](Y5|Z[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMO TAB X9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KZCAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INQ[/ ]`),
		regexp.MustCompile(`(?i)INQ/([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)INQ ([^;/]+) Build`),
		regexp.MustCompile(`(?i)INSYS|(?:HK9-4010|IH9-L614|AC7_DJ17|HN2-M16Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GU4-K147|HN2-M16Q|VI4-103)`),
		regexp.MustCompile(`(?i)T95pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM (?:picasso|vivaldi|newton)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM picasso(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM vivaldi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM newton(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IRA_DUO|IRAW7258)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IRAW7258)`),
		regexp.MustCompile(`(?i)IT-(?:1101S?|1101-QUAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IT-(1101S?)`),
		regexp.MustCompile(`(?i)IUNI[ _]`),
		regexp.MustCompile(`(?i)IUNI[ _](U3|i1|N1)`),
		regexp.MustCompile(`(?i)IconBIT|NT-(3506M|1501C|0704S|0909T|1009T|10[01]1T|1017T|3601P/3602P|3603P|3702S|3805C|3905T|3701S|0701S|0805C|0902S|370[23]M)|XDS[789]4K|Omnicast UHD|Movie Smart 4K|Movie IPTV Quad|TOUCAN (?:Smart 3D Quad|(?:NANO|Stick) 4K)|NetTAB_Space_3G|XLR3089`),
		regexp.MustCompile(`(?i)NT-10[01]1T`),
		regexp.MustCompile(`(?i)(?:iconBIT )?(Movie (?:Smart 4K|UNO|Play|IPTV Quad|Ultra HD 4K)|XDS[789]4K|XLR3090|Omnicast UHD|Stick|XDS1[01]00?|Movie [XZ])`),
		regexp.MustCompile(`(?i)(SWU-6522)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMAQ TETRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Impression[ _-]?([^/;]+)|A502|I10\-LE|ImPad[ _]?(.*)|ImSmart[ _]?(.*))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A502)`),
		regexp.MustCompile(`(?i)ImSmart[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)ImPad[ _]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(I10\-LE)`),
		regexp.MustCompile(`(?i)Impression[ _-]?([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)(?:IF(900[1237]|902[19]|903[15]|236a|195a)|M370i?|InFocus M808i?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M370i?)`),
		regexp.MustCompile(`(?i)IF(236|195)a`),
		regexp.MustCompile(`(?i)InFocus M([0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:INFONE (?:XE?)|GORILLA 9 PLUS|X_RAINBOW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFONE (XE?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inch (?:Regulus (?:7\.85|II)|Avior 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Regulus 7\.85)`),
		regexp.MustCompile(`(?i)(Regulus II|Avior 3)`),
		regexp.MustCompile(`(?i)(?:Inco[ _](Aurora II|Colors|Sphere|Plain[_ ]2S?|Plain2 S|Flex(?: 2S)?|S4|Bloom(?: 2)?)|(Horizon_S|Horizon \+|MATTER)|Bloom4|eco_s|Flex-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bloom ?4`),
		regexp.MustCompile(`(?i)(?:Inco[ _])?(Plain[_ ]2S?|Colors|Horizon_S|Horizon \+|Aurora II|Flex(?: 2S)?|S4|Bloom(?: 2)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flex-(3)`),
		regexp.MustCompile(`(?i)Inco Sphere( 3)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INFINITON[_ -]|Earth 7\.0'3G|EARTH10`),
		regexp.MustCompile(`(?i)INFINITON[_ -]T5`),
		regexp.MustCompile(`(?i)Earth 7\.0'3G`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6739`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6871`),
		regexp.MustCompile(`(?i)Infinix[ _-]X260`),
		regexp.MustCompile(`(?i)Infinix[ _-]X502`),
		regexp.MustCompile(`(?i)Infinix[ _-]X570`),
		regexp.MustCompile(`(?i)Infinix[ _-]X350`),
		regexp.MustCompile(`(?i)Infinix[ _-]X351`),
		regexp.MustCompile(`(?i)Infinix[ _-]X352`),
		regexp.MustCompile(`(?i)Infinix[ _-]X403`),
		regexp.MustCompile(`(?i)Infinix[ _-]X503`),
		regexp.MustCompile(`(?i)Infinix[ _-]X511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X400`),
		regexp.MustCompile(`(?i)Infinix[ _-]X401`),
		regexp.MustCompile(`(?i)Infinix[ _-]X450`),
		regexp.MustCompile(`(?i)Infinix[ _-]X451`),
		regexp.MustCompile(`(?i)Infinix[ _-]X454`),
		regexp.MustCompile(`(?i)Infinix[ _-]X500`),
		regexp.MustCompile(`(?i)Infinix[ _-]X501`),
		regexp.MustCompile(`(?i)Infinix[ _-]X506`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6731B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6731`),
		regexp.MustCompile(`(?i)Infinix[ _-]X509`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6821`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X552|Zero 3)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6861)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6860)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X(?:574|602)|Zero 4 Plus)`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X555|Zero 4)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603`),
		regexp.MustCompile(`(?i)Infinix[ _-]X603B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X620`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X687`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6815`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6811`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6810`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6820`),
		regexp.MustCompile(`(?i)Infinix[ _-]X507`),
		regexp.MustCompile(`(?i)Infinix[ _-]X510`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X55[34]|HOT 3 LTE)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X669`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6831|X6833B)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6835B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6832`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6528`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6836`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6837`),
		regexp.MustCompile(`(?i)Infinix[ _-]X622`),
		regexp.MustCompile(`(?i)Infinix[ _-]X521`),
		regexp.MustCompile(`(?i)Infinix[ _-]X522`),
		regexp.MustCompile(`(?i)Infinix[ _-]X557`),
		regexp.MustCompile(`(?i)Infinix[ _-]X556`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559[cF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6882`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6531`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6720B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X559`),
		regexp.MustCompile(`(?i)Infinix[ _-]X606[BC]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X623`),
		regexp.MustCompile(`(?i)Infinix[ _-]X608`),
		regexp.MustCompile(`(?i)Infinix[ _-]X624`),
		regexp.MustCompile(`(?i)Infinix[ _-]X625`),
		regexp.MustCompile(`(?i)Infinix[ _-]X650`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655F`),
		regexp.MustCompile(`(?i)Infinix[ _-]X655`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680[BCEF]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X680`),
		regexp.MustCompile(`(?i)Infinix[ _-]X688`),
		regexp.MustCompile(`(?i)Infinix[ _-]X682[BC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X689F`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X659|PR652|X658)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X573B?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6812`),
		regexp.MustCompile(`(?i)Infinix[ _-]X675`),
		regexp.MustCompile(`(?i)Infinix[ _-]X662`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6816C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X668C?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665[EC]`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6826`),
		regexp.MustCompile(`(?i)Infinix[ _-]X666`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6825`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6827`),
		regexp.MustCompile(`(?i)Infinix[ _-]X665`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6817`),
		regexp.MustCompile(`(?i)Infinix[ _-]X612`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5010`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5515[FI]?`),
		regexp.MustCompile(`(?i)Infinix[ _-]X609`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X627`),
		regexp.MustCompile(`(?i)Infinix[ _-]X5514D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6532`),
		regexp.MustCompile(`(?i)Infinix[ _-]X653`),
		regexp.MustCompile(`(?i)Infinix[ _-]X657`),
		regexp.MustCompile(`(?i)Infinix[ _-](?:X6823C?|X6511G)`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6511`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6512`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6517`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6515`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6516`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6525B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6525`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6526`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X626`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X652`),
		regexp.MustCompile(`(?i)Infinix[ _-]X660`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6838`),
		regexp.MustCompile(`(?i)Infinix[ _-]X551`),
		regexp.MustCompile(`(?i)Infinix[ _-]X600`),
		regexp.MustCompile(`(?i)Infinix[ _-]X601`),
		regexp.MustCompile(`(?i)Infinix[ _-]X572`),
		regexp.MustCompile(`(?i)Infinix[ _-]X571`),
		regexp.MustCompile(`(?i)Infinix[ _-]X604`),
		regexp.MustCompile(`(?i)Infinix[ _-]X605`),
		regexp.MustCompile(`(?i)Infinix[ _-]X610`),
		regexp.MustCompile(`(?i)Infinix[ _-]X690`),
		regexp.MustCompile(`(?i)Infinix[ _-]X656`),
		regexp.MustCompile(`(?i)Infinix[ _-]X692`),
		regexp.MustCompile(`(?i)Infinix[ _-]X683`),
		regexp.MustCompile(`(?i)Infinix[ _-]X695`),
		regexp.MustCompile(`(?i)Infinix[ _-]X693`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X677`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6819`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X671B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X672`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663D`),
		regexp.MustCompile(`(?i)Infinix[ _-]X663`),
		regexp.MustCompile(`(?i)Infinix[ _-]X697`),
		regexp.MustCompile(`(?i)Infinix[ _-]X698`),
		regexp.MustCompile(`(?i)Infinix[ _-]X670`),
		regexp.MustCompile(`(?i)Infinix[ _-]X676C`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6716B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6716`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6710`),
		regexp.MustCompile(`(?i)Infinix[ _-]X678B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6711`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6850B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6850`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6851B`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6851`),
		regexp.MustCompile(`(?i)Infinix[ _-]X6852`),
		regexp.MustCompile(`(?i)Infinix[ _-]X685`),
		regexp.MustCompile(`(?i)Infinix[ _-]X1101B?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinix HOT ([a-z]?[1-6])( (?:Lite|Plus|Pro))?`),
		regexp.MustCompile(`(?i)Infinix[ _-](X[78]00)`),
		regexp.MustCompile(`(?i)Infinix[ _-](X\d+)`),
		regexp.MustCompile(`(?i)Infinix[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Infinix[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(TVB-906X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MAG(?:200|[23]50|425A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Inhon[_ ](V6)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)intki[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)InnJoo|(?:Halo Plus|Halo2 LTE|Halo X|Halo 5 3G|Halo[ _]4(?:[ _]mini[ _]LTE)?|VISION LTE|Halo2 3G|Fire 4 ?(?:Pro|Plus)?|Fire_Plus_LTE|Fire3 mini|Fire2 (?:Air|Pro|Plus) LTE|Fire2 LTE|Superb(?:_PLus)?|VOOM TAB 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]X[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo[ _]4[ _]mini[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?2 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Halo ?([25]) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]Pro2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo ONE 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Innjoo[ _]2[ _]LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)InnJoo[ _]([2-4])`),
		regexp.MustCompile(`(?i)Innos_?(D6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INOI|(?:A126|A1[68]1|A170_Plus|A161_Plus|(?:Android 12(?:[\d.]*);(?: [\w-]+;)? (?:A151))|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? (?:A17[01]|A180))|A181_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)inoiPad mini 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 2\+32 Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)inoiPad 128\+4GB Wi-Fi\+4G`),
		regexp.MustCompile(`(?i)inoiPad mini 1\+16 Wi-Fi`),
		regexp.MustCompile(`(?i)inoiPad 64GB Wi-Fi\+3G`),
		regexp.MustCompile(`(?i)INOI (2|5) Lite (2019|2021)`),
		regexp.MustCompile(`(?i)INOI[_ ]([123])[_ ]LITE`),
		regexp.MustCompile(`(?i)(A126|A17[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(1[58]1)`),
		regexp.MustCompile(`(?i)(?: A161|A161_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI ([257]) (?:\d\+\d+ )?(2019|202[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INOI[_ ]([^);/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NS-(P11A8100|P10A8100|P10A6100|P16AT08|P16AT10|P16AT785HD|P08A7100|P10A7100)(?:[);/ ]|$)|AFTEAMR311|AFTJMST12`),
		regexp.MustCompile(`(?i)NS-(P10A6100|P16AT10)`),
		regexp.MustCompile(`(?i)NS-(P10A8100|P10A7100)`),
		regexp.MustCompile(`(?i)Intex|(Aqua|Cloud[ _][XY][0-9]{1}|Cloud (?:Fame|Glory) 4G)|(?:CLOUD TREAD|IM0318ND|IV0318ND)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]T1[ _]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _]LIONS[ _]([NT]1|[23]|E3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA (A4) PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA[ _](A4|S[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Intex[ _]IM0118ND`),
		regexp.MustCompile(`(?i)AQUA CRYSTAL\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA FulVU e5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQUA JEWEL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua[_ ]Life[_ ]?III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4\.0[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]4G[_ ]MINI`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]LIONS[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]PRIME[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]ZENITH`),
		regexp.MustCompile(`(?i)(?:INTEX[_ ])?AQUA[_ ]POWER[_ ]IV`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]YOUNG[_ ]4G`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]TREND[_ ]LITE`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]AMAZE\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Supreme\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]STYLE (\d)`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]Strong 5\.1\+`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?AQUA[_ ]CRYSTAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL[_ ]PLUS`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ]DUAL`),
		regexp.MustCompile(`(?i)(?:INTEX[ _])?ELYT[_ ](E\d+)`),
		regexp.MustCompile(`(?i)Intex[ _]IV0118ND`),
		regexp.MustCompile(`(?i)Intex[ _]IP0418ND`),
		regexp.MustCompile(`(?i)Intex[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)CLOUD TREAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cloud (?:Fame|Glory) 4G)`),
		regexp.MustCompile(`(?i)(Aqua|Cloud)[ _\.]([^/;\)]+)(?:[ _]Build|/|\))`),
		regexp.MustCompile(`(?i)Intex[ _]([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(?:Diamond D[56]|Fighter|Eager|Royal R[1-8]|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:MAX[89]|MAX_2))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MAX[_ ]?([89]|2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Fighter|Eager|Royal R[1-8]|Diamond D[56])`),
		regexp.MustCompile(`(?i)INVIN[ _-]|(?:IPC002|KM5PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INVIN[ _-](X[24]|KM[678])`),
		regexp.MustCompile(`(?i)(IPC002)`),
		regexp.MustCompile(`(?i)IRBIS|TZ(1(?:0[04]|42|5[01]|84|65|7[01345-89]|8[356]|9[12578])|200|49|55|72|22|7(?:0[127]|1[1-46789]|2[021567]|3[025-8]|4[257]|5[23457]|6[12]|72|7[137]|8[1]|9[147])|8(?:[34]1|32|5[3-8]|6[2-5]|7[12478]|8[1-5]|9[0127])|96[0-9])|TZ199|TZ85|TZ13|TZ(?:one|art|HIT|81L)|(SP(?:0[56]|2[01]|4[1-36]|40[12]|45[345]|49[34]|50|51[0147]|531|54[12]|55[0124]|571)|\d{2}[FYHU]1YDX000F?BS2|65U001BS2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TZ(?:[0-9]+)|TZ(?:one|art|HIT|81L))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SP[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}[FYHU]1YDX000F?BS2|65U001BS2)`),
		regexp.MustCompile(`(?i)(?:Vox[_ ](?:[45]S|Alpha|POP|STEEL Plus|Energy|FORTIS|VERO)|IS2_?Plus|IS[36]Plus|IS2S|Next_P(?:_PRO)?|NEXT U|NEXT P\+|IRS002-16|X1 mini|Iris_Pad_G8020|G7060|G7100|G8060)(?:[);/ ]|$)|android 9(?:[\d.]*);(?: [\w-]+;)? (?:N30)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Vox[_ ]([45])S`),
		regexp.MustCompile(`(?i)N30(?: Build|[;)])`),
		regexp.MustCompile(`(?i)VOX[_ ]FORTIS`),
		regexp.MustCompile(`(?i)VOX[_ ]VERO`),
		regexp.MustCompile(`(?i)NEXT[_ ]([PU]\+?)`),
		regexp.MustCompile(`(?i)IS([236])_?Plus`),
		regexp.MustCompile(`(?i)(?:Iris_Pad_)?(G7060|G7100|G80[26]0)`),
		regexp.MustCompile(`(?i)TPC-[A-Z0-9]+|TPCY-TX[TE][^);/ ]+`),
		regexp.MustCompile(`(?i)TPC-PA10\.1M`),
		regexp.MustCompile(`(?i)TPC-(XE10D-H)`),
		regexp.MustCompile(`(?i)TPC-([A-Z0-9]+)`),
		regexp.MustCompile(`(?i)(TPCY-TX[TE][^);/ ]+)`),
		regexp.MustCompile(`(?i)JFone[ _](JS501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JKL[_ ](A28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JP5s?) Inmate Media Device(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(JR-J71)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JVC[;, ]|JVC-CVTE|AV-10NT310|(?:smarttv_)?(?:AFTSO001|AFTJULI1|AFTWMST22|LT-98N7125)`),
		regexp.MustCompile(`(?i)JVC[;,](32D1290)`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTSO001`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTJULI1`),
		regexp.MustCompile(`(?i)(?:smarttv_)?AFTWMST22`),
		regexp.MustCompile(`(?i)(LT-98N7125)`),
		regexp.MustCompile(`(?i)JVC, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)JVC-CVTE;SmartTV|JVC Android TV`),
		regexp.MustCompile(`(?i)(AV-10NT310)`),
		regexp.MustCompile(`(?i) (?:JP1)( Build|[;)])`),
		regexp.MustCompile(`(?i)Remix (?:Pro|Mini)`),
		regexp.MustCompile(`(?i)(?:JK(?:960|[71]03) 3G|JK702|JK101|JK[17]00 v2\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(960|[71]03) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JK(702|[17]00 v2\.0|101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)|J9S_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jesy_(J7)`),
		regexp.MustCompile(`(?i)JK-?(760)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-]|(?:JY-G4[\\_]G5|(?:JY-[a-z0-9]+)|JY_G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JIAYU G4_G5|JY-G4[\\_]G5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIAYU[ _-](G4[S]?|G2F|G3[S]?|S[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JY[-_]([a-z0-9]+|G4C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JIN[ _]TU[ _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Jinga[-_ ]|(?:(?:Fresh|Optim)4G|Pass(?:Plus|3G)|PicassoNote|Hotz[_ ]M1|WinPRO|Touch4G|Start(?:3G|LTE)?|IGO[ _]L[41]|Basco[ _](?:L3|L[45]00|L45[01]|XS1|S2|M1)|M500-1|Hit4G|A450|Neon|IGO_L3|JoyPRO|Fresh|GoalPlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optim4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hotz[_ ]M1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PassPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pass3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GoalPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Win|Joy)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Touch4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StartLTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PicassoNote(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Iron(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fresh(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IGO_L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Basco neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M500-1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jinga[ _])?Basco[ _](L[13]|L[45]00|XS1|S2|L45[01]|M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jinga Trezor S1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JINGA_IGO_L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?IGO[_ ]([ML]1|L4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:JINGA[_ ])?(Neon|A450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jio/[^/]+/|LS1542QWN?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS1542QWN?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jio/([^/]+)/`),
		regexp.MustCompile(`(?i)(?:Revolution TnT3|Xtreme_(?:[37]|3x)|Xtreme (?:XT84|XT309|XT309 Plus|1)|Opus S3|JSPQ65|Prime (?:P3[09]0|P4442?|P30))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Revolution (TnT3)`),
		regexp.MustCompile(`(?i)Xtreme (XT84)`),
		regexp.MustCompile(`(?i)Prime (P4442?|P3[09]0|P30)`),
		regexp.MustCompile(`(?i)Xtreme (XT309) Plus`),
		regexp.MustCompile(`(?i)Xtreme (XT309)`),
		regexp.MustCompile(`(?i)Xtreme[ _]([137]|3x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy (?:HH|JD)`),
		regexp.MustCompile(`(?i)Joy[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:TB-JS101A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EZpad ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER(s)?|COSMO[_ ](L707|L808)|BLASTER|FREEDOM[ _](C10[05]|M303|X1)|Freedom`),
		regexp.MustCompile(`(?i)COSMO[_ ](L707|L808)`),
		regexp.MustCompile(`(?i)FREEDOM[ _](C10[05]|M303|X1)`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2s`),
		regexp.MustCompile(`(?i)JUST5(-)?SPACER2`),
		regexp.MustCompile(`(?i)(?:KLT_K301|NAVTECH_TOUCHY_F2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _][a-z0-9]+|(?:Pace 2 Lite|KT202011(?:99|88)|LDXA-2[01]22|LDOX-2130|LDOX-212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([^/;]*)[ _]Build`),
		regexp.MustCompile(`(?i)K-?Touch[ _]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KATV-01) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)|(?:INFOBAR A01|HTX21|HTL21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)kddi-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)INFOBAR (A01)`),
		regexp.MustCompile(`(?i)HTX21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HTL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 13(?:[\d.]*);(?: [\w-]+;)? (?:E1[1278]|E28|E38|H38|H21|H19|H11)|Armor_C1w|Armor P1s|Armor I1 Slim|Kenshi[_ ]K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kenshi[_ ](K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 13(?:[\d.]*);(?: [\w-]+;)? (E1[1278]|E28|E38|H38|H21|H19|H11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KWSA80K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KINGZONE_|K1[_ ]turbo`),
		regexp.MustCompile(`(?i)KINGZONE_(N5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K1[_ ]turbo`),
		regexp.MustCompile(`(?i)(K22M43298U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)knmobile[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)J?KOPO[ _-]?([^/;)]+)`),
		regexp.MustCompile(`(?i)KREZ[_ ]`),
		regexp.MustCompile(`(?i)KREZ[_ ](SL502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KREZ[_ ](TM100[12]S8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KRIP_|K(?:4[bm]|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KRIP_)?K(4[bm]?|5[bdm]|6b|55h?|57|65|700A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NET1100|NET_(?:LITE|TITAN|VOLT|MAX|MATRIX|[KR]7)|android 8([\d.]*);(?: [\w-]+;)? NETWORK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NET_(LITE|TITAN|VOLT)`),
		regexp.MustCompile(`(?i)NET_([KR]7)`),
		regexp.MustCompile(`(?i)(KM-[a-z0-9]+|EV-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KZG[_ ](Scope)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KAAN[ _](N[12]|A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KaiCloud[ ]?(7[48]4|942)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KALLEY|(?:ELEMENT (?:4 Plus|5|MAX|PLAY|Q)|ELEMENT_PRO_2|K-BOOK(?:8MG|73G)|SILVER_MAX(?:_Pro_2)?|Silver Max (?:Lite|Pro)|Black[ _][13CGXZ](?:_PRO)?|Black_G_2|BLACK_PRO|ATV R[12]|GOLD_PRO|KBOOK7M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Black[ _](C)_PRO`),
		regexp.MustCompile(`(?i)Black[ _]([13CGXZ])`),
		regexp.MustCompile(`(?i)Element 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silver[_ ]Max[_ ]Pro[_ ]2`),
		regexp.MustCompile(`(?i)Silver Max (Lite|Pro)`),
		regexp.MustCompile(`(?i)K-?BOOK(8MG|73G|7M)`),
		regexp.MustCompile(`(?i)ATV (R[12])`),
		regexp.MustCompile(`(?i)KALLEY,(43D1800|55D1240)`),
		regexp.MustCompile(`(?i)KJ[-_](OB0[23]|YU_?BI|SMART4K|GOCHI|ALFARK|AC0[25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KJ[-_]OB03`),
		regexp.MustCompile(`(?i)KJ[-_]OB02`),
		regexp.MustCompile(`(?i)KJ[-_]YU_?BI`),
		regexp.MustCompile(`(?i)KJ[-_]ALFARK`),
		regexp.MustCompile(`(?i)KJ-(AC0[25])`),
		regexp.MustCompile(`(?i)(SmartVision3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Browser-)?Karbonn|K9 Kavach 4G|K9[_ ](?:Viraat|Smart)[_ ]Plus|K9 Music 4G|K9 Smart|K9 VIRAAT 4G|Aura (?:Sleek Plus|Sleek 4G|Power 4G Plus|Note Play|Note 2|Storm|Champ)|Titanium[ _](?:3D-Plex|Octane Plus|Vista 4G|Jumbo|S360|S1[059]|S35|S20[13]|S22|S[15]|S200 HD|Frames S7|MOGHUL|S9)|MACHFIVE|MACHONE|Sparkle V|Alfa A114 Quad|Quattro[ _]L(?:45|5[025])[ _](?:HD|IPS|VR)|A41 Power|A(?:[19]|4[05])[ _]Indian|S2052GB|MACH SIX VR|K-Lite F3|Titanium Vista`),
		regexp.MustCompile(`(?i)K9[_ ]Smart[_ ]Plus`),
		regexp.MustCompile(`(?i)K9 Smart(?: 1GB)?`),
		regexp.MustCompile(`(?i)A([19]|4[05])[ _]Indian`),
		regexp.MustCompile(`(?i)K9[_ ]Viraat[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:karbonn)?K9 Viraat 4G`),
		regexp.MustCompile(`(?i)Titanium[ _]S([29])[ _]?Plus`),
		regexp.MustCompile(`(?i)Titanium[_ ]S(99|360|1[059]|109|35|200 HD|20[13]|22|[15])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Titanium Vista(?: 4G)?`),
		regexp.MustCompile(`(?i)Titanium[ _]MOGHUL`),
		regexp.MustCompile(`(?i)Titanium[ _]3D-Plex`),
		regexp.MustCompile(`(?i)Quattro[ _]L(5[05])[ _]HD`),
		regexp.MustCompile(`(?i)Quattro[ _]L(45)[ _]IPS`),
		regexp.MustCompile(`(?i)Quattro[ _]L(52)[ _]VR`),
		regexp.MustCompile(`(?i)Karbonn ([a-z0-9]+) WAP-Browser`),
		regexp.MustCompile(`(?i)WAP Browser-Karbonn ([a-z0-9]+)/`),
		regexp.MustCompile(`(?i)Karbonn_([^;/)]+)`),
		regexp.MustCompile(`(?i)Karbonn ([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Karbonn ([^;/]+)/`),
		regexp.MustCompile(`(?i)Kata[ _-]`),
		regexp.MustCompile(`(?i)Kata[ _-](C3|L1|M3s|M4s?|V[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata[ _-]i5-\w`),
		regexp.MustCompile(`(?i)Kata-(T5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata-Tmini4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kata Box 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam|(?:Trooper_X[0-9][0-9]|Tornado 348|TROOPER 4\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TROOPER 4\.0`),
		regexp.MustCompile(`(?i)Trooper_X([0-9])([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kazam[; _]([^;/)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus|Alumini ?[23]|KEMPLER_(?:P[13]|TV|[X9]|8_PLUS)|ZKEMPLER[ _](?:PLUS|PRO)|P1[ _]Amateur`),
		regexp.MustCompile(`(?i)Alumini ?2`),
		regexp.MustCompile(`(?i)Alumini_?3_?Plus`),
		regexp.MustCompile(`(?i)KEMPLER_P([13])`),
		regexp.MustCompile(`(?i)P1[ _]Amateur`),
		regexp.MustCompile(`(?i) (O[76]1|E61Pro|O31 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(O[76]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI|(?:Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Hemera|Teta Dual|Helios)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]liberty`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]FLASH`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SUN`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]ZETA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-]SIGMA`),
		regexp.MustCompile(`(?i)KENEKSI[ _-](Moon|Libra_Dual|Glass|Amber|Chance|Amulet|Choice|Crystal|Dream|Delta[_ ]Dual|Norma 2|Norma|Sky|Fire 2|Fire|Flame|Flora|Rock|Solo|Soul|Step|Smart|Star|Storm|Wind)`),
		regexp.MustCompile(`(?i)Three[_ ]Proofings[_ ]W([5-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (VIM2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kiano|Elegance_[45]_[015](?:_PRO)?|ELEGANCE 5\.0 Lite|Elegance_4\.5|Elegance 6|CORE 10\.1 DUAL 3G|Intelect ?(7|8|10)|Slim ?Tab ?\d+(?:[_ ]3GR?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slim ?Tab ?(\d+)(?:[_ ]3GR?)?`),
		regexp.MustCompile(`(?i)CORE 10\.1 DUAL 3G`),
		regexp.MustCompile(`(?i)Elegance_(5)_([51])_Pro`),
		regexp.MustCompile(`(?i)ELEGANCE 5\.0 Lite`),
		regexp.MustCompile(`(?i)Elegance_([45])[_.]([015])`),
		regexp.MustCompile(`(?i)(Kiano)?(Intelect|Elegance) ?(7|8|10)?`),
		regexp.MustCompile(`(?i)Kiano[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingstar[-_ ]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kingsun[ _-]`),
		regexp.MustCompile(`(?i)Kingsun[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Kingsun[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(KST103SD(?:-L)?)`),
		regexp.MustCompile(`(?i)KIOWA[_ ]|(?:[AS]5|X4)_CRISTAL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X4|[AS]5)_CRISTAL`),
		regexp.MustCompile(`(?i)KIVI [24]K|(?:24H600G[RU]|24FR50WU|24HK30B|32HR55GU|32H700GU|32F700WU|4[39]UP50GU|40UR50G[RU]|40U600G[RU]|50U730GR|55U600(?:G[RU]|KD)|65UP50GU|55U[PC]50G[RU]|50U600G[RU]|50UX10S|55UR50G[RU]|40FK30G|40FR5[02]BR|43U(?:800B[RU]|600KD|K3[05]G|700GR)|50FK30G|50UK35G|32HR50GR|32[FH]700GR|55UC30G|55U730GR|32HK30G|40FK30G|32HR50GU|32FR50(?:WR|BU)|32FK3[02]G|32F700WR|32H600KD|40U600KD|32H600G[RU])(?:_-Ver0[0-9])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(55UC30G|40FK30G|43UK30G|32HR50G[RU]|32HK30G|32FK32G)_-Ver0([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d{2}(?:[HFU]|U[CPRXKX]|[BHF][RK])\d{2,3}(?:[GW][RU]|B[UR]|KD|[BGS]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIVI ([24]K Android TV)`),
		regexp.MustCompile(`(?i)KLIPAD_|(?:KL-V905|KL(2108NBE|[46]889|489[08]|9878A?E?|3669|759[01]|500|638DK|60[15]|988)?(?:_EEA)?|7589AN|KL628_HL|KL628KO|KL4898[_ -]A50|V356B?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KLIPAD_)?(V355B?|KL600|KL-V905|V356B?|KL500|KL60[15])(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KL[46]889|7589AN|KL759[01]|KL9878A?E?|KL628KO|KL3669|KL489[08]|KL988|KL2108NBE|KL638DK)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KL4898[_ -]A50`),
		regexp.MustCompile(`(?i)Kocaso|(?:DX765 Pro|M(?:6200|729|7[357][026][hw]?|76[01236][bw]?|83[016]|8[567]0|1050s|106[012368]w?|1070|X736(?:-kit)?|X780))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DX765 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M6200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(7[357][026])[hw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(76[01236])[bw]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX780(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(83[016])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(8[567]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1050S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(106[012368])W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX736(?:-kit)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kocaso[ _-]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kocaso[ _-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KODAK|(?:IM5|KD50|Ektra|Smartway[_ ](?:[FT]1|[LT]2)|D55L|D61L|D6[05]LX|PATH_7XPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KD50|D55L|D6[05]LX|D61L)`),
		regexp.MustCompile(`(?i)Ektra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]L1 PRO`),
		regexp.MustCompile(`(?i)(?:KODAK[_ ])?SMARTWAY[_ ]([FLMTX]1|[LMTX]2|T3)`),
		regexp.MustCompile(`(?i)Tablet (7|10)`),
		regexp.MustCompile(`(?i)Kogan|(?:Agora (?:8 Plus|XI|Go|Lite|4G Pro))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kogan ?(SmarterTV(?: 2K)?|TV|TVAP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Agora ([68]) ?Plus`),
		regexp.MustCompile(`(?i)Kogan[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Kogan[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Komu[_ -]`),
		regexp.MustCompile(`(?i)Komu[_ -]([^;/).]+)(?: Build|[;).])`),
		regexp.MustCompile(`(?i)Komu[_ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)|(?: R[EU]1|KC516(?: Pro)?|KUD50WT702AN|UDE55NR314ANTS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W(9[67]0)`),
		regexp.MustCompile(`(?i)( R[EU]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KUD50WT702AN|UDE55NR314ANTS)`),
		regexp.MustCompile(`(?i)KONKA[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KONROW[_ ]|(?:LINK55|KTAB_1003|BIGCOOL|SOFT5P?|COOLFIVE|COOL-K|Just5|Link5|EASY ?(?:5|62|K55)|EASY_5_EEA|EASY55|CITY55?|CITY4|Cool55|SKY_?55_EEA|Android 11(?:[\d.]*);(?: [\w-]+;)? SWEET5|SWEET 55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BIGCOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINK55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOL-K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Cool55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOFT5P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COOLFIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Just5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Link5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY ?(55?|62|K55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EASY_5_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CITY(55?|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY_?55_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWEET ?(55?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KONROW[_ ](701X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KTAB_1003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee|(?:F2_Plus|SL004T|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:K60))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2[_ ]Plus`),
		regexp.MustCompile(`(?i)(K60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Koobee[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Koobee[ _-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(K1 Trio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kooper-mobile-W502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Korax[_ -]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)KORIDY[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(KL1071Z|KL1084)`),
		regexp.MustCompile(`(?i)(?:Kraft[_ -])?KTV-(\w+)`),
		regexp.MustCompile(`(?i)Kruger[ _&]Matz|KrugerMatz[ _]|K&M|EAGLE_(?:807|961|107[46]|1068)|FLOW ?5PLUS|FLOW 1[01]|FLOW 4 PLUS|Flow 9|FLOW_5|FLOW7|FLOW6(?:S|Lite)?|DRIVE9|DRIVE 8|DRIVE[_ ]6S?|Drive 10|MOVE8mini|MOVE9| MOVE 10|MOVE_|LIVE_6plus|LIVE 5 PLUS|Live [89]|LIVE4_KM043[89]|LIVE 7S?|Flow 7S|Eagle 806|KM(?:106[679]|107[23]|1065G|0701(?:_1)?|0702|080[45](?:_1)?|1070)|Live 10S`),
		regexp.MustCompile(`(?i)MOVE[_ ]([78]|6S?|10)`),
		regexp.MustCompile(`(?i)DRIVE[ _]?([45689][S]?|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW ?([54]) ?PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW6Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FLOW[ _]?([4-7][S]?|9|1[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE4_(KM043[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KrugerMatz_LIVE4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)_LIVE5_(KM0450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE 5 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE_6plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIVE ([79]|10)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Live ([789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(106[679]|1072)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1073)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle 806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle_807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eagle_(107[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EAGLE_(961|1068)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1070)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM(1065G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(701)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(80[45])(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM0(702)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K&M,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)KULIAO (K10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Ambition|Beyond)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:KM-)?Kumai[ _-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Kurio|C15100m`),
		regexp.MustCompile(`(?i)C15100m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?(10S|7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kurio[_ ]?Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera|KWC-|QC-[0-9]{4}|(?:QC6035|NP501KC|302KC|503KC|602KC|705KC|901KC|C51[27]0|C5155|C5215|C67[35]0|C6522N?|C6530N|C6740N?|C6743|E6[89]10|KYL2[13]|KYV3[1-9]|KYT3[123]|KYF3[1235789]|KYF4[012]|KYX31|KYG0[13]|KYY2[1-4]|S2151|KC-S701|S[468]-KC|S9-KC|S10-KC|KYV40U?|KYY31|KYV4[1-8]|KYV4[47]|KC-S301AE|KC-S302|X3-KC|E6560[CT]|E6782[L]?|E6790(?:TM)?|SZJ-JS20[12]|KCP01K|[47]04KC|A[0-3]01KC|A205KC|WX10K|URBANO PROGRESSO|E7110|E7200|E6921|KY-(?:42C|51B)|C6930|A101BM)(?:[-_][uj]2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101BM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([4689]|10)-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5155(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)503KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)404KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)302KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KC-S302(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP501KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WX10K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A101KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KY-42C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV39(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYX31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5170(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C5215(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6522N?`),
		regexp.MustCompile(`(?i)C6740(N)?`),
		regexp.MustCompile(`(?i)E6560[CT]`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?E68[12]0`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E69[12]0|E6921)`),
		regexp.MustCompile(`(?i)(?:KYOCERA-)?(?:E7200)`),
		regexp.MustCompile(`(?i)KYL21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYL23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY24(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYG03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF32|KYF41)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF3[179](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYV48|KYF42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYF33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KYF38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV35(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV46(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV32?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV47(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV43(?:_j)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)705KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV37(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV42(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV44(?:_u2?)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT32(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYT31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV40U?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY23(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV34(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYV(?:45|38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A301KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Kyocera-)?E6790(?:TM)?`),
		regexp.MustCompile(`(?i)X3-KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6782L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KCP01K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KC-S301AE|KY-51B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SZJ-JS20[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A205KC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URBANO PROGRESSO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KYY31(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kyocera-KZ-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Kyocera(?:[\-/])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KWC|QC)-?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(KA-E410W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ureki_U1|Victor V1|Lamia L01|DART KZ07|REX RX|Eva_E01|Majesty (?:M5|4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Majesty (M5|4G)`),
		regexp.MustCompile(`(?i)(?:Sapphire 8|Sapphire[76]|Mega plus[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mega plus([23])`),
		regexp.MustCompile(`(?i)Sapphire ?([678])`),
		regexp.MustCompile(`(?i)LAIQ|(?:Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAIQ_)?(Glam|New York|Dubai|Monaco)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LCT_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:LEM1[456]|LEM12Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEM12)Pro`),
		regexp.MustCompile(`(?i)(LEM1[456])`),
		regexp.MustCompile(`(?i)LG|NetCast|WebAppManager|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713|(LM-[A-Z][0-9]{3}[A-Z]{0,3}(?:\(FGN?\)|\(G\)|\.FN|\.F(?:GN?)?)?)|LM-(X625N1|G820QM[0127])|G Watch|lucye)(?:[);/ ]|$)|RS98[78]|RS500|VS(?:50[01]|835|876|880|98[05-8]|99[056]|(410|415|425|500|880)PP)|VS820|VS870 4G|Nexsus 5|10A30Q|LML(41[34]D|211B|713D|212V)L|VK810 4G|VK815|X5-LG|L-05[DE]|L-03K|L-01[LJK]|L-52A|L-[45]1A|901LG|A001LG|80[12]LG|402LG|LGT32|L-02K|L-01F|LM-V40|DM-01K|DM-02H|LMX130IM|LMG820UM1|VS810PP|VS425|VM670|VS930 4G|US215|LGE[;,] (?:[0-9]{2}[ELSTUP][ABCFGHJ-NP-TWX][a-z0-9]{4,7}(?:\-[a-z]{2})?|[0-9]{2}NANO[a-z0-9]+|OLED[0-9]{2}[a-z0-9-]+)|(?:27ART10AKPL|28MT49S-PSS|HF60LS-EU)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DM-(01K|02H)`),
		regexp.MustCompile(`(?i)LG-?(?:D32[0159]|AS323|LS620)`),
		regexp.MustCompile(`(?i)LG-?(D315|L31L|F370)`),
		regexp.MustCompile(`(?i)LG-D4(?:[01]5|[01]0)`),
		regexp.MustCompile(`(?i)LG-D37[35]`),
		regexp.MustCompile(`(?i)LG-D12[05]`),
		regexp.MustCompile(`(?i)LG-?(?:X132|X130g)`),
		regexp.MustCompile(`(?i)LG-?(?:D157f|D150)`),
		regexp.MustCompile(`(?i)LG-D10[057]`),
		regexp.MustCompile(`(?i)LG-X14[057]`),
		regexp.MustCompile(`(?i)LG-X13[57]`),
		regexp.MustCompile(`(?i)LG-D28[05]`),
		regexp.MustCompile(`(?i)LG-?LS675`),
		regexp.MustCompile(`(?i)LG-?LS665`),
		regexp.MustCompile(`(?i)VS980|L-01F|LG-(?:F320[LKS]|D80[012356]|LS980)`),
		regexp.MustCompile(`(?i)LG-D6(?:1[08]|2[05])`),
		regexp.MustCompile(`(?i)LG-(?:D85[012568]|AS990|F400[LKS])|LG-?LS990|(?:LG-)?(?:VS985|LGUS990|LGL24|LGD85[05]|LGV31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?LS885`),
		regexp.MustCompile(`(?i)LG-D722`),
		regexp.MustCompile(`(?i)LG-(?:D72[23568]|F470[LKS]|D722J)`),
		regexp.MustCompile(`(?i)LG-D693n?|LG-D690n`),
		regexp.MustCompile(`(?i)LG-?H81[012589]|LG-?[LU]S991|LGV32|LG-F500[LSK]|VS986`),
		regexp.MustCompile(`(?i)LG-H525n?`),
		regexp.MustCompile(`(?i)LG-H22[012]`),
		regexp.MustCompile(`(?i)LG-(?:H540|H542|H630)`),
		regexp.MustCompile(`(?i)LG-H73[46]`),
		regexp.MustCompile(`(?i)LG-H8(?:20|3[01]|5[08]|6[08])|VS987|(?:LG-)?RS988|LG-F700[SKL]|LG-?(?:[LU]S992|AS992)`),
		regexp.MustCompile(`(?i)LG-H84[05]`),
		regexp.MustCompile(`(?i)VS988|LG-H87(?:[01](?:DS|[SI]|AR)?|[23])|LG-?US997|LGM-G600[SKL]|LG-[AL]S993|lucye`),
		regexp.MustCompile(`(?i)LG-?(?:L23|D95[015689]|LS995|D950G|F340[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:H95[059]|F510[KLS]|LS996|AS995)`),
		regexp.MustCompile(`(?i)LG-D68[0-6]`),
		regexp.MustCompile(`(?i)LM-G820([NV]|QM[0127]|UMB)?`),
		regexp.MustCompile(`(?i)LG-F310LR?`),
		regexp.MustCompile(`(?i)901LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-H410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:D486|F480[LKS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?T480[KS]`),
		regexp.MustCompile(`(?i)LG-F610[KS]`),
		regexp.MustCompile(`(?i)VS501|LM-X120`),
		regexp.MustCompile(`(?i)LGMS395|LG-D393`),
		regexp.MustCompile(`(?i)LG-(?:F520[LKS]|H788)`),
		regexp.MustCompile(`(?i)(?:LG-)?H50[02]`),
		regexp.MustCompile(`(?i)LGL16(?:3BL|4VL)`),
		regexp.MustCompile(`(?i)LG-(?:X15[05]|X165g)`),
		regexp.MustCompile(`(?i)LG-D33[157]`),
		regexp.MustCompile(`(?i)LG-D29[05]`),
		regexp.MustCompile(`(?i)(?:LG-)?H343`),
		regexp.MustCompile(`(?i)(?:LG-)?H650`),
		regexp.MustCompile(`(?i)(?:LG-)?M154`),
		regexp.MustCompile(`(?i)LGM-K120[LSK]`),
		regexp.MustCompile(`(?i)LG-K120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X320[SKL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-F620[KLS]`),
		regexp.MustCompile(`(?i)LG-?L18VC`),
		regexp.MustCompile(`(?i)(?:LG-)?P500H`),
		regexp.MustCompile(`(?i)(?:LG-?)?VS450PP`),
		regexp.MustCompile(`(?i)LG-(?:E97[567]|F180[KLS]|E987|LS970)|LGL01E`),
		regexp.MustCompile(`(?i)LG-?L39C`),
		regexp.MustCompile(`(?i)LG-(?:F240[KLS]|E98[69]|E98[015])`),
		regexp.MustCompile(`(?i)LG-E435f?`),
		regexp.MustCompile(`(?i)LG-E4(?:70f|40|65f)`),
		regexp.MustCompile(`(?i)LG-E4(?:67f|45)`),
		regexp.MustCompile(`(?i)LG-?(?:D180f|D175f|D170|D165)`),
		regexp.MustCompile(`(?i)LG-E4[56]0`),
		regexp.MustCompile(`(?i)LG-E61[02]`),
		regexp.MustCompile(`(?i)LG-(?:E4[17]5f|E410)`),
		regexp.MustCompile(`(?i)LG-(?:D605)`),
		regexp.MustCompile(`(?i)LG-?(?:P655H|MS659)`),
		regexp.MustCompile(`(?i)LGMS500|LG-D505`),
		regexp.MustCompile(`(?i)(L-05[DE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-L160L|LG-F160`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:P713|P71[0245]|P713TR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-P716(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?MS323`),
		regexp.MustCompile(`(?i)L-01D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:F800[SKL]?|H990|H910(?:PR)?|US996|V34|LS997)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710(?:\(FGN\)|[\.]?FGN)`),
		regexp.MustCompile(`(?i)LG-?(?:D22[17]|D213)`),
		regexp.MustCompile(`(?i)LG-?(?:K520|F720[KLS])`),
		regexp.MustCompile(`(?i)LG-(?:K53[05])`),
		regexp.MustCompile(`(?i)LM-Q[67]10\.FG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(Q72[57][KLS]|Q610[\(.]FGN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q815[KSL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGM-X800[KL]|LG-H970`),
		regexp.MustCompile(`(?i)LM-Q925[LKS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:Q730N|Q620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q520N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGV33(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-03K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGLS775|LGL8(?:2V|1A)L`),
		regexp.MustCompile(`(?i)VS835(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS550|K55[07])`),
		regexp.MustCompile(`(?i)L-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:MS63[14]|H63[145]|F560K|LS770)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?(?:LS777|L84VL|M430|L83BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?([TM]P450|M470F?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q710|LML713DL|LG-Q710[AP]L`),
		regexp.MustCompile(`(?i)(?:LM-Q720|LGL722DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-G710(N|VM)?|LG-G710`),
		regexp.MustCompile(`(?i)LG-H44[35]`),
		regexp.MustCompile(`(?i)LM-X410\.FG?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGL455DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LML41[34]DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L6(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L5(?:2V|1A)L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?L355DL`),
		regexp.MustCompile(`(?i)LM-X210[KLS]`),
		regexp.MustCompile(`(?i)LG-(?:K580|F690[LS])`),
		regexp.MustCompile(`(?i)LG-?K600`),
		regexp.MustCompile(`(?i)LG-(?:SP320|M32[27]|US601)`),
		regexp.MustCompile(`(?i)LG-?(?:LS676|L56VL|L53BL|K200)`),
		regexp.MustCompile(`(?i)LG-?(?:K500|F650|S02)`),
		regexp.MustCompile(`(?i)LG-(?:M710|H700|US701)`),
		regexp.MustCompile(`(?i)LM-X(?:41[05]K|410S)`),
		regexp.MustCompile(`(?i)LM-X(415[LS]|410L)`),
		regexp.MustCompile(`(?i)LM-X410(?:\.FN|\(FG\))`),
		regexp.MustCompile(`(?i)LM-X(?:320|410[UP]M)|LGL322DL`),
		regexp.MustCompile(`(?i)LG-?LS740`),
		regexp.MustCompile(`(?i)LG-?LS751`),
		regexp.MustCompile(`(?i)(?:VS425|LG-?(?:K120GT|K121|M151|X230))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-K130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:M160|L57BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:802LG|LM-X520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-X510[KLS]|X5-LG)`),
		regexp.MustCompile(`(?i)LGMS210|LG-M210`),
		regexp.MustCompile(`(?i)LM-X210[G]?`),
		regexp.MustCompile(`(?i)LM-X220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-X220N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V40(?:5|9N|5EBW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-(?:V500N?|V450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:RS987|H90[01]|H96[0218]|VS990|F600[LKS]|K428)`),
		regexp.MustCompile(`(?i)LG-(?:X240|M200)`),
		regexp.MustCompile(`(?i)(?:LG-)?RS500`),
		regexp.MustCompile(`(?i)(?:LG-)?VS500`),
		regexp.MustCompile(`(?i)LM-X212\(G\)|(?:LG)?US215`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:VS995|F800K|US999|LS997|H91[058]|H990(?:DS|[NT])?)`),
		regexp.MustCompile(`(?i)(?:VS996|LG-(?:H933|H93[012]|H930RE|H932PR|[LU]S998|AS998)|LGM-V300[KLS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-01K|LGV35|LG-H930DS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L-52A|LM-G900(?:[NV]|TM)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-V700N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001LG|LM-V600V?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?VS410PP`),
		regexp.MustCompile(`(?i)LM-V350[N]?`),
		regexp.MustCompile(`(?i)(?:LG-)?VS415PP`),
		regexp.MustCompile(`(?i)(?:LG-)?VS425PP`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K100|LS450)`),
		regexp.MustCompile(`(?i)LG-AS110|LGUS110`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)33[02]|LG-X210`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K|MS)350`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K420(?:N)?|K425|F670[KLS]?|K430(?:DS|DSF|DSY)?|K410|MS428)`),
		regexp.MustCompile(`(?i)(?:LG-)?(?:M250N?|M257PR)`),
		regexp.MustCompile(`(?i)(?:LG-)?M255`),
		regexp.MustCompile(`(?i)(?:LG-?)?[MT]P260`),
		regexp.MustCompile(`(?i)LM-K200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K420(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LM-K500|LGL555DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K526(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q510N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q310N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-Q630N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-)?M700(?:N|A|DSK|AN)?|LGM-X600[SLK]|LG-M703|LG-US700`),
		regexp.MustCompile(`(?i)LGV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-M257(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-K400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LG-?)?(?:K220|LS755|F750K|US610)`),
		regexp.MustCompile(`(?i)(?:LG-?)?M320`),
		regexp.MustCompile(`(?i)(?:LG-)?K371`),
		regexp.MustCompile(`(?i)(?:LG-)?M150`),
		regexp.MustCompile(`(?i)(?:LG-)?F100[SL]`),
		regexp.MustCompile(`(?i)(?:LG-)?F200(?:[KLS]|LS)`),
		regexp.MustCompile(`(?i)(?:LG-)?VM670`),
		regexp.MustCompile(`(?i)(?:LG-)?P880`),
		regexp.MustCompile(`(?i)(?:LG-)?(H340n?|H32[04])`),
		regexp.MustCompile(`(?i)(?:LG-)?H34[25]|LGMS345`),
		regexp.MustCompile(`(?i)(?:LG-)?H4(?:40|2[02])`),
		regexp.MustCompile(`(?i)(?:LG)?C660`),
		regexp.MustCompile(`(?i)LML21(?:1B|2V)L`),
		regexp.MustCompile(`(?i)LG-?L4(?:4V|3A)L`),
		regexp.MustCompile(`(?i)VS880(PP)?|LG-(?:D690|D631)`),
		regexp.MustCompile(`(?i)LG-?(?:D838|F350[LKS])`),
		regexp.MustCompile(`(?i)LG-F300[LKS]`),
		regexp.MustCompile(`(?i)LG-D38[05]`),
		regexp.MustCompile(`(?i)LG-?(?:L16C|L15G)`),
		regexp.MustCompile(`(?i)LM-F100N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LM-T60[05]`),
		regexp.MustCompile(`(?i)LG-?(?:(?:UK|V)410|V411|V400Y7)`),
		regexp.MustCompile(`(?i)LG-?(?:LK430|V400)`),
		regexp.MustCompile(`(?i)LG-V49[56]`),
		regexp.MustCompile(`(?i)LG-V4[89]0`),
		regexp.MustCompile(`(?i)LGT01|LG-P490L`),
		regexp.MustCompile(`(?i)LG-V50(?:0|7L)`),
		regexp.MustCompile(`(?i)LGT02|LG-?V522`),
		regexp.MustCompile(`(?i)LG-V525(?:S[13])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LG-?[VP]755`),
		regexp.MustCompile(`(?i)LG-V52[01]`),
		regexp.MustCompile(`(?i)LG-?UK750`),
		regexp.MustCompile(`(?i)\(LGE?, WEBOS[123], (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV.+\( ?;LGE? ?;(\d{2}\w+) ?;`),
		regexp.MustCompile(`(?i)LGE;? (?:HOTEL\-TV; )?([0-9]{2}[a-z0-9]{4,9}(?:\-[a-z]{2,3})?)`),
		regexp.MustCompile(`(?i)\(LGE?,? ([a-z0-9_ -]+)(?:\.[a-z]+)?,? (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Media/([a-z]{2,3}[0-9]{3,4})`),
		regexp.MustCompile(`(?i)webOS\.TV`),
		regexp.MustCompile(`(?i)LGE_DLNA_SDK|NetCast`),
		regexp.MustCompile(`(?i)G Watch( R)?`),
		regexp.MustCompile(`(?i)(LM-[A-Z]{1}[0-9]{3}([A-Z]{1,3})?)`),
		regexp.MustCompile(`(?i)LGE(?: |-LG| LG-AX|-)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)FBDV/LG-([a-z0-9]+);FBSV`),
		regexp.MustCompile(`(?i)LGE;([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)LG[ _-](V90.*|Optimus[ _-]Pad.*) Build`),
		regexp.MustCompile(`(?i)LGM-([^/;]*)( Build|[;)])`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([^/;]*) Build`),
		regexp.MustCompile(`(?i)LG(?:/|-LG| |-)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LG; ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:KE|KG|KP|L3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(VX[0-9]+)`),
		regexp.MustCompile(`(?i)Web0S; Linux/SmartTV`),
		regexp.MustCompile(`(?i)(H11)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGAN_(Panita)_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(APPLLP Max|APPLLP2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _-](?:P[89]|9701|9902|P10I|NOTE 10[SM]|NOTE 30|C1[45]00|C3[1235]00|C3750|S10[ _]Lite|S10|S33|S9_NOTE|M[56]|M5_lite|C1300|6509|2003)|(?:C3[67]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[- ]NOTE ([13]0[SM]?)`),
		regexp.MustCompile(`(?i)LT[ _-]C3100`),
		regexp.MustCompile(`(?i)LT[ _-]C3200`),
		regexp.MustCompile(`(?i)LT[ _-]C3750`),
		regexp.MustCompile(`(?i)LT[ _-]C1400`),
		regexp.MustCompile(`(?i)LT[ _-]C3500`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3600`),
		regexp.MustCompile(`(?i)(?:LT[ _-])?C3700`),
		regexp.MustCompile(`(?i)LT[ _-](C3300|C1500)`),
		regexp.MustCompile(`(?i)LT[ _]S10[ _]Lite`),
		regexp.MustCompile(`(?i)LT[ _]S10`),
		regexp.MustCompile(`(?i)LT[ _]C1300`),
		regexp.MustCompile(`(?i)LT[ _]P10I`),
		regexp.MustCompile(`(?i)LT[ _]9701`),
		regexp.MustCompile(`(?i)LT[ _]6509`),
		regexp.MustCompile(`(?i)LT[ _]9902`),
		regexp.MustCompile(`(?i)LT[ _]2003`),
		regexp.MustCompile(`(?i)LT[ _]S33`),
		regexp.MustCompile(`(?i)LT[ _]P([89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])[_ ]lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LT[ _]M([56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LU-(V78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LW788)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-[456][0-9]{3}|LYF/[^/]+/`),
		regexp.MustCompile(`(?i)(LYF[ _])?LS-4006`),
		regexp.MustCompile(`(?i)LS-450[58]`),
		regexp.MustCompile(`(?i)LYF/([^/]+)/`),
		regexp.MustCompile(`(?i)LFi ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](?:X1[0-9]|Explore|LUXURY|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)|Polar3|Vphone[- ]X3|ST11-A5`),
		regexp.MustCompile(`(?i)Land[ ]?Rover[d]?[ _-](X1[0-9]|Explore(?: R)?|T878|L15\+|V18|V[168]|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vphone[- ]X3`),
		regexp.MustCompile(`(?i)(ST11-A5)`),
		regexp.MustCompile(`(?i)XM[123]00|S6 Build`),
		regexp.MustCompile(`(?i)XM([123])00([^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)lanin (T4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)|Ilium[ _]|LANIX_PAD|IliumPad|X120C|(?:Alpha 950(?:XL)?|Alpha [1359]V|X540)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]?PAD[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ilium[ _](Alpha [15]s|Alpha [379]|Alpha 1T|L(?:200|6[12]0|9[0125]0|1[0124]00|1050|1120)|LT5[012]0|M[579]s|M7T|M[13579]|S(?:106|520|6[27]0)|X(?:1[12]0|2[0126]0|400|5[12]0|500B|710))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILIUM[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha (9500|950(?:XL)?)`),
		regexp.MustCompile(`(?i)Alpha ([1359])V`),
		regexp.MustCompile(`(?i)(X540)`),
		regexp.MustCompile(`(?i)LANIX-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Lark|Cumulus|Evolution|FreeMe|Ultimate (?:X4|7i))[ _-]|Build/Lark|Bjorn[_ ]SP-500|FreeBird 5WiFi|Impress_Noda`),
		regexp.MustCompile(`(?i)Cumulus[ _](5\.5|[56])[ _]HD`),
		regexp.MustCompile(`(?i)FreeMe X2 ([79]) (?:ver|v)?\.([23])`),
		regexp.MustCompile(`(?i)FreeMe[ _]X2[ _]([7-9])`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]7[_ ]?HD`),
		regexp.MustCompile(`(?i)FreeMe X4[ _]9`),
		regexp.MustCompile(`(?i)(?:Lark[ _-])?Evolution[ _](X2 7 3G-GPS|X4[_ ]10\.1|10|X4[_ ]7[ _]IPS)`),
		regexp.MustCompile(`(?i)Ul(?:ti|it)mate (X4 10\.1 3G IPS|X4 8s 3G|7i)`),
		regexp.MustCompile(`(?i)Phablet 6\.0`),
		regexp.MustCompile(`(?i)Bjorn[_ ]SP-500`),
		regexp.MustCompile(`(?i)Cirrus[ _](4\.5|[45])`),
		regexp.MustCompile(`(?i)Lark[ _](Stratus[_ ]5)`),
		regexp.MustCompile(`(?i)(?:MID_1089IPSA100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID_1089IPSA100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lava[ _]|LAVA(?:A1|X10)|(?:DISCOVER136|KKT QUADRA)|iris[ _]?([^/;)]+)(?: Build|[;)])|A(?:67|76) Build|X1 Selfie Build|X41 Plus Build|X1_atom_L|(?:Flair (?:[ZS]1|P8)|PixelV1|Pixel V2\+?|Z60s|Z61_2GB|A97 IPS|A97 2GB PLUS|L[EH]9920(?:[_ ]P)?|L[NEH]9910|LH9810|Ivory(?:S1|S4G)?|A76Plus|Grand2c|AH9910| A3_mini|T71_w|V23GB|R1_Lite|Atom 2X|AF9030|Z50_Pro| Z(?:[56]1|92)|Android 6(?:[\d.]*);(?: [\w-]+;)? (:?X28|P7plus)|AF9020|Alfa L|T81N(?:_UP)?|LN982[01]|Fuel F1 Mini|LE000Z93P|LZX415)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX409(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX404(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZX407(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Flair ([ZS]1|P8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AF9020(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LXX504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z61P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 IPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF6810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A97 2GB PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A76Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3_mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel V2\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixel ?V([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1_atom_L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X41 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LAVA[_ ]?)?A([13]|67|76)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVA_R(1s?)`),
		regexp.MustCompile(`(?i)Z(\d{2})(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMX06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]225(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE000Z93P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403[ _]25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LZG401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z60s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920[ _]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9940(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9810(?:_2GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LF9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9830(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH993[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9821(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Atom 2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LN9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE9910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LH9920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X\d+)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X28)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris88[_ ]go`),
		regexp.MustCompile(`(?i)KKT40[ ]?Power[P\+]`),
		regexp.MustCompile(`(?i)Ivory(S1|S4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N_UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T81N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T71_w(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)[_ ]lite(?: Build|[);])`),
		regexp.MustCompile(`(?i)iris[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lava[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)LAVA[ _]([^/;)]+)/MIDP`),
		regexp.MustCompile(`(?i)Le ?Pan|TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)TC970 ([^;/]+)Build`),
		regexp.MustCompile(`(?i)Le ?Pan ?(II|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le ?Pan ?([^;/]+) Build`),
		regexp.MustCompile(`(?i)LeBest[_ ](L9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Letv|LeEco|Le ?X[0-9][^;/]+|Le Max|Le [12]|Le2[_ ]x527|X900 Build|(?:X[89]00\+|X52[67]|lineage_c106)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X800\+`),
		regexp.MustCompile(`(?i)X900\+`),
		regexp.MustCompile(`(?i)X50[10]`),
		regexp.MustCompile(`(?i)LE ?(X62[26]|X522)`),
		regexp.MustCompile(`(?i)(X910)`),
		regexp.MustCompile(`(?i)LEX72[057](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX65[0137](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE(X620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Le ?X526|Le2[_ ]x527|Le 2|X52[67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEX82[019]|Le Max 2`),
		regexp.MustCompile(`(?i)Le ?X([^;/]+) Build`),
		regexp.MustCompile(`(?i)Le ?X([^) ;/]+)`),
		regexp.MustCompile(`(?i)Le ?([12][^;/]+) Build`),
		regexp.MustCompile(`(?i)Le Max([^;/]*) Build`),
		regexp.MustCompile(`(?i)Le Max([^ ;/]*)`),
		regexp.MustCompile(`(?i)LeEco ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(Vyper|N-5[07]|N-45|LP DAISY|LP_(?:Spectrum_S2|VEYRON|PRADO|Pro1|B-50|EVORA_light)|LP_T70|LP[ _]INFINITY\+?|LP T70 Lite|INFINITY_light|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LP INFINITY\+`),
		regexp.MustCompile(`(?i)(?:LP_)?(Vyper|N-5[07]|N-45|Pro1|Alphatel_T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MY)?LEAGOO[ _-]?|(?:XRover(?: C)?|Shark (5000|1|6300)|M5 EDGE|KIICAA (POWER|MIX)|Leapad[ _](?:X|7s|7Pro)|Alfa [125]|Elite [15Y]|Venture 1|Z10-E|M9 Pro|Power 5|Power[ _]2(?: Pro)?|Android 9(?:[\d.]*);(?: [\w-]+;)? M1[23]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:Z9A|T8s)|Lead 3| T5c)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?M([89])[_-]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LEAGOO[- _](Z[156]|Z5c|M[58]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[_ ])?Lead ?([357])`),
		regexp.MustCompile(`(?i)Elite ([15Y])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shark (1|5000|6300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:leagoo-)?Power[ _]([25])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Alfa ([125])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XRover( C)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO[- _])?(Z10-E|M6|M1[23]|T5c|T8s|Z9A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:My)?Leagoo[- _](E4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LEAGOO_)?Leapad[ _](7s|10|X|7I)`),
		regexp.MustCompile(`(?i)LECT-TAB(1011H?|0711)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ledstar[_ ])?(?:Trendy 5\.0|Novus_Premium_6\.0)`),
		regexp.MustCompile(`(?i)Trendy 5\.0`),
		regexp.MustCompile(`(?i)Ledstar_Novus_Premium_6\.0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leelbox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(32[FH]540S|32H5[235]0T|(?:32|40)F550T|32H650S|43U540S|43U550T|5[05]U5[14]0S|55U630S|(?:43|65)U520S|40F540S|43F5[35]0T|32H511T|24H5[12]0T|28H540S|28H541T|28H550T|50U6[23]0S|55U620S|43F511T|43F520T|43[FU]541T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RST)_(B\d{4}HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Leke[ _]Pad-([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lemco (FBX-3566W?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lemhoov[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lenco (?:[^/);]*)(?: Build|[);])|(?:TDV900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenco ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|ZUK[ -_]|TB-X306|(?:TB2-X30L|TB3-710[IF]|TB128FU|YT3-X50[MFL]|K50a40|TB-(?:Q706Z|X103F|8504F|X304F|X704V|X704A)|A5500-H|A2107A-H|A3500-HV|A2109A|S6000|Z2 Plus|Vibe[ _](?:P1|S6i Plus|S[23567]i|C|[ZX]2|K5(?: Plus)?|V7)|P2A42|L38011|L18011|[5-8]01LV|[67]02LV|Z2131|K350t|K31-t3|Tab A1020|TAB 2 A8-50LC|S90-A|A101LV|P70-A|VR-1541F|d-42A|lineage_A6020|EveryPad2|A2010l36|F0CU0028RK|TB310XU|TB301[FX]U|TB132FU|TB32(?:8[FX]U|0FC)|TB138FC|PB-6505Y|TB-X505[FLX]|TB-8704V|TB351FU|TB3[05]0[FX]U|TB-X606[XFM]|L38043|TB3-X70L|TB-X605[LF]C?|A7600-HV?|YT-X703F|TB330XU|TB371FC|TB3[17]0FU|TB331FC|TB321FU|A397i|TB330FU|NL5H00X|L79031|XT2091-[78]|L71061|L70081|L78031|20JJS0CU1M|A6020l3[67]|A6020a46|TB360ZU|TB375FC|L58091|L39051|L19041|L19111|L780[157]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?G780`),
		regexp.MustCompile(`(?i)Lenovo ?A3500-FL`),
		regexp.MustCompile(`(?i)(?:Lenovo ?)?A3500-(?:H|HV|F)`),
		regexp.MustCompile(`(?i)(?:Lenovo[ _])?A5500-[HF]`),
		regexp.MustCompile(`(?i)Lenovo ?A7600|A7600-H`),
		regexp.MustCompile(`(?i)TB2-X30[FL]`),
		regexp.MustCompile(`(?i)TB-X6C6[XF]`),
		regexp.MustCompile(`(?i)YT3-X50[FLM]`),
		regexp.MustCompile(`(?i)YT-J706[XF]`),
		regexp.MustCompile(`(?i)TB3-710[IF]`),
		regexp.MustCompile(`(?i)TB-8703[XF]`),
		regexp.MustCompile(`(?i)501LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB 2 A10-70L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TB3-850[FM]|601LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X304[FL]`),
		regexp.MustCompile(`(?i)TB-8504[XL]`),
		regexp.MustCompile(`(?i)(?:TB-X704[FVL]|70[12]LV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)801LV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X103F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X704A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB330[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB310[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X705[FL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-Q706[FZ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J606[FN]`),
		regexp.MustCompile(`(?i)TB-J607F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J6C6F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J616[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J706[LF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB132FU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB350[FX]U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-J607Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7104[IF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-8304F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7504X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X606[FXV]A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-X605[FL]C`),
		regexp.MustCompile(`(?i)TB-?360ZU`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB12[58][FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB328[FX]U`),
		regexp.MustCompile(`(?i)(?:Lenovo )?TB-X505`),
		regexp.MustCompile(`(?i)TB-7305[IXF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TB-7306[XF](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ?B8000(-[FH])?`),
		regexp.MustCompile(`(?i)Lenovo ?B8080(-[FH])?`),
		regexp.MustCompile(`(?i)YOGA Tablet 2 Pro-1380[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-1050[FL]`),
		regexp.MustCompile(`(?i)YOGA Tablet 2-830(?:[FL]|LC)`),
		regexp.MustCompile(`(?i)Lenovo ?B6000(-[FH])?`),
		regexp.MustCompile(`(?i)YT3-X90(L|F|X)`),
		regexp.MustCompile(`(?i)YT3-850[FL]`),
		regexp.MustCompile(`(?i)YT-X703[FL]`),
		regexp.MustCompile(`(?i)YT-X705[FL]`),
		regexp.MustCompile(`(?i)YB1-X90[FL]`),
		regexp.MustCompile(`(?i)TB37[15]FC`),
		regexp.MustCompile(`(?i)S6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo ([ASB][0-9]{4})[A-Z]?\-[EHF]`),
		regexp.MustCompile(`(?i)ThinkPadTablet_(A[0-9]{3})_`),
		regexp.MustCompile(`(?i)ThinkPad ?Tablet([^;/]*) Build`),
		regexp.MustCompile(`(?i)Lenovo ?A3300-(?:GV|H)`),
		regexp.MustCompile(`(?i)TAB 2 A7-30[HGD]C`),
		regexp.MustCompile(`(?i)TB-8704[FV]`),
		regexp.MustCompile(`(?i)TB-X505[FX]`),
		regexp.MustCompile(`(?i)TB-X104[FXL]`),
		regexp.MustCompile(`(?i)Tab2A([0-9]-[0-9]{2}[a-z]?)`),
		regexp.MustCompile(`(?i)IdeaTab[ \-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Yoga Tablet([^;/]+) Build`),
		regexp.MustCompile(`(?i)TB-8505[FX]S`),
		regexp.MustCompile(`(?i)TB-8505[FX]`),
		regexp.MustCompile(`(?i)TB-8506[FX]`),
		regexp.MustCompile(`(?i)TB300[FX]U`),
		regexp.MustCompile(`(?i)TB301[FX]U`),
		regexp.MustCompile(`(?i)TB-8705[FX]`),
		regexp.MustCompile(`(?i)(?:TB-9707F|TB320FC|TB321FU)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo (TB[0-9]?\-[a-z0-9-]+) Build`),
		regexp.MustCompile(`(?i)Lenovo S([69]0)-?[aU]`),
		regexp.MustCompile(`(?i)Lenovo K30-W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L10041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z213[12]`),
		regexp.MustCompile(`(?i)ZUK[ -_]([^/;]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)K10a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:k50a40|K50-t5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(1[30]) Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7010(?:a48)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K350t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:L38041|K5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L39051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A7020a4[08]|L38012|K52e78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L19041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K31-t3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A6010Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A6020a46|Vibe K5 Plus|lineage_A6020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Lenovo-)?(?:A6020(?:a40|l3[67])|Vibe K5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE C|A2020a40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIBE X2|X2-(?:X+CU|TO|AP))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X3(?:a40|c[57]0)|K51c78)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE V7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE S6i Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIBE[ _]S([23567])i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L79031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L70081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k33a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L3808[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P2A42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)k53a48(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K33a42(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P1ma40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vibe P1 Turbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:P1(?:a42|c72)|Vibe P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2016a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1010a20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z90a40|Z90-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1a40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S1La40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro 5G|L79041)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z6 Pro|L78051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L78032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L38111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58041(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L58091(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L18021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB2-6(?:70M|50[YM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PB1-770M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S90-A|P70-A|A397i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IdeaPad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)d-42A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo K12 Pro|XT2091-[78]`),
		regexp.MustCompile(`(?i)Lenovo X2(?:-[ER]U)?`),
		regexp.MustCompile(`(?i)LENOVO/81W8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81MV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LENOVO/81SS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F0CU0028RK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20JJS0CU1M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lenovo TAB ?([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Lenovo ([^/);]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)`),
		regexp.MustCompile(`(?i)(LESPH501[14]|LESPH5003B|SUPERNOVA[ _](?:Qi16|i216|Qi32|i3G96[X]?|iS3G)|PULSAR QI3G|LETAB916|Titanium T355)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPERNOVA[ _](i216|Qi16|Qi32|i3G96[X]?|iS3G)`),
		regexp.MustCompile(`(?i)PULSAR (QI3G)`),
		regexp.MustCompile(`(?i)lephone[ _]|lephoneP1|S104G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)lephone[ _](K7|K10)`),
		regexp.MustCompile(`(?i)lephone_W7_plus|lephone W7+`),
		regexp.MustCompile(`(?i)lephone(?:[ _])?([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)ANOVA A5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lexand[ _]|(?:S[BC]7 PRO HD|SB5 HD|S5A[1-4]|S4A[1-5]|S6A1|A811|A802|LPH7_Smarty)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A(811|802)`),
		regexp.MustCompile(`(?i)(S[CB]7) PRO HD`),
		regexp.MustCompile(`(?i)(SB5) HD`),
		regexp.MustCompile(`(?i)Lexand[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)MFC17[05]FR`),
		regexp.MustCompile(`(?i)(MFC[0-9]{3}[a-z]{2,})`),
		regexp.MustCompile(`(?i)((?:24|32)TP1HDTA1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIFEMAXX, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Lime(?:Z2PLUS|T95)`),
		regexp.MustCompile(`(?i)Lime(T95)`),
		regexp.MustCompile(`(?i)(?:Venus Pad1[456]|L24 Ultra|L16 Max|G15 Pro Max|G24_mini|G15_mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venus Pad(1[456])`),
		regexp.MustCompile(`(?i)G(15|24)_mini`),
		regexp.MustCompile(`(?i)Lingwin[ _-]`),
		regexp.MustCompile(`(?i)Lingwin[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Lingwin[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)LI(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]|(?:F10XIPSQ|F10XIPG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F10XIPSQ|F10XIPG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINSAY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Webpad[_ ]?(100[123]|7007)`),
		regexp.MustCompile(`(?i)LOEWE[;,]`),
		regexp.MustCompile(`(?i)LOGIC[_ ]|(?:LOGIC[_ ](X4 Plus|X50|X[135]|X4M|L4T|L5D|X5[AFT]|X57A|X60G|L50T?|L57|L6[0135]|X60_PLUS)(:?[_ ]LITE2?)?|L55[ABS]|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ]X60_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65|X5|X4M)[_ ]LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](L65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X5)[_ ]LITE2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGIC[_ ](X4 Plus|X50|X[13]|X4M|L4T|L5D|L6[013]|X5[AFT]|X57A|X60G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L50T?|L55[ABS]|L57|Q-502)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Logic Instrument|Fieldbook K101`),
		regexp.MustCompile(`(?i)Fieldbook F1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LOGICOM[_ ]|La_tab_link|(TAB950|TAB1062|E731|E812|E912|E1031|POWER BOT|La[ _]?Tab[ _]?(?:7[24]|10[57]|11[345]|12[4789]|292|Stand(?:RB)?)|(?:[BCM]|ID|VR)[ _]?BOT[ _]?(?:TAB[ _])?([0-9]+\+?)(?:PLUS)?|KT712A_4\.4|L-?IXIR[0-9]*|L_IXIR_TAB_1047HD|L-ITE|L-EGANTONE(?:-R)?|Le Fizz|L-?EMENT.+|Le[ _]?(?:Up|Connect|Omega|Hop|Hello|Lift|Pulse|Prime|Swipe|Wave|Hola|Moov[2]?|Must(?: 2)?|Starter L|Fit FR|Spark|Prime|Smooth(?: FR)?)|Tab_Stand_Pro|LeFit|logikids4|Le Link|TAB76|Five Pro|Solar(?: Pro)?|LUNAR|Lunar Pro|Elio)(?:[);/ ]|$|_)`),
		regexp.MustCompile(`(?i)La[ _]?Tab[ _]?(7[24]|10[57]|11[345]|127 HD|12[89]|105_P|292|Stand)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LaTabStandRB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB76(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)La[_ ]Tab[_ ]124[_ ]HD[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LOGICOM_)?LA_TAB_LINK_(7[14])`),
		regexp.MustCompile(`(?i)KT712A_4\.4|L-IXIR TAB 701 3G`),
		regexp.MustCompile(`(?i)L-?IXIR[ _]TAB[ _]([^);/]+)( Build|[);])`),
		regexp.MustCompile(`(?i)L-ITE[ _](400M|452|50[46] HD|506R HD|552 HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-ITE[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(350|451|40[103]|55[013]|50[15]|500L?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)L-?EMENT[ _](?:TAB)[ )]?([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)L-?EMENT[ _]?(74[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB950|TAB1062|E731|E812|E912|E1031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M bot (5[14])`),
		regexp.MustCompile(`(?i)VR bot (552) Plus`),
		regexp.MustCompile(`(?i)VR bot (552)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?TAB[ _]([0-9]+(?:PLUS|\+)?)`),
		regexp.MustCompile(`(?i)((?:[BCM]|ID|VR))[ _]?BOT[ _]?((?:TAB[ _])?([0-9]+\+?)(?:PLUS)?)`),
		regexp.MustCompile(`(?i)Le[ _]Connect`),
		regexp.MustCompile(`(?i)Le[ _]Pulse`),
		regexp.MustCompile(`(?i)Le[ _]Prime`),
		regexp.MustCompile(`(?i)Le Hola FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hola(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LeMoov(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Fit FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]?Fit`),
		regexp.MustCompile(`(?i)Le Hop(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Hello(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth FR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Smooth(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Must(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Starter L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Spark(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le[ _]Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Le Up(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIXONS-LOGIK[;,]`),
		regexp.MustCompile(`(?i)GR0006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LongTV LOUiE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lovme[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Lumigon[ _](T3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L950[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO(SR620|SC600)|INNOSR545|Lumus[_ ]Ion|AEONSR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO(SR620|SC600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)INNO(SR545)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lumus[_ ]Ion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AEON(SR570)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LUNA[ _](?:[VG]55|G[56]0|G9|G6E|V6)|TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUNA[ _]([VG]55|G[56]0|G9|G6E|V6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TG-L800S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LUXOR, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TPC1013)`),
		regexp.MustCompile(`(?i)M-HORSE|(?:Pure (?:3|2A?)|Pure ?1|Power1|Top_(?:S[78]|P9|H740|10|i7|Note8)|Top-V30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure ?([13]|2A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Top[_ -](S[78]|P9|H740|10|i7|V30)`),
		regexp.MustCompile(`(?i)(X20|X2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Eros[_ ](4G|Star|Smart|Plus|Power)|MTECH (?:ACE9|TURBO L\d+|TEZ 4G|JAZBAA)|Foto3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eros[_ ]Star`),
		regexp.MustCompile(`(?i)Eros[_ ]Smart`),
		regexp.MustCompile(`(?i)Eros[_ ]Plus`),
		regexp.MustCompile(`(?i)Eros[_ ]Power`),
		regexp.MustCompile(`(?i)TURBO L(\d+)`),
		regexp.MustCompile(`(?i)M\.T\.T\.|MTT IDEAL`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?Tablet([^;/)]+)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M\.T\.T\. ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:M3US20W|M3SL20|M3SM15X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M4[ -]SS[0-9]{4}(?:-R)?|M4_B[23]|M4_R2|R2_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SS4458-R|M4-SS4458-R`),
		regexp.MustCompile(`(?i)M4_B([23])`),
		regexp.MustCompile(`(?i)M4_R(2)`),
		regexp.MustCompile(`(?i)(CRD55-UHD9)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(M82[01])(?:-EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAXVI[ _](?:MS401)(?:[);/ ]|$)|\w*_?MAXVI?_\w+|MS502[_ ]Orion|MS531`),
		regexp.MustCompile(`(?i)MAXVI[ _](MS401)`),
		regexp.MustCompile(`(?i)MS502[_ ]Orion`),
		regexp.MustCompile(`(?i)\w*MAXVI_(P11|K10|X[358]00)_`),
		regexp.MustCompile(`(?i)(T1270G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBI[_ ](R7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MBK-T2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MBOX3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Prime_S|M300 4G|MDC M5|Nova Pro|Grand Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M300) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDC M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDTV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEEG[ _-]`),
		regexp.MustCompile(`(?i)MEEG[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEEG[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MEGAMAX(?:_W_)?(\d{2}MG11FSM)`),
		regexp.MustCompile(`(?i)MEO TV Box 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MES-B[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEU ([a-z0-9]+) Build`),
		regexp.MustCompile(`(?i)(Caryota [1245789]|Jazz J[13] 2018)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Caryota [1245789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jazz (J[13]) 2018`),
		regexp.MustCompile(`(?i)MIWANG[_ ](M2s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35|M20|G7106|G7108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M[0-9]{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(G[0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLAB[ _-]`),
		regexp.MustCompile(`(?i)MLAB[ _-]GLOWY([78]|10)`),
		regexp.MustCompile(`(?i)MLLED[ _]`),
		regexp.MustCompile(`(?i)MLLED[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MLLED[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ(?:0705|L550|1017|1010w?|1012N?|1019N|1025|1060M|1380|1401|1436|1452a|1453|1470|1502a|1511|155[23]|1568|1570|1805N|180[68]|1810B_M|1832|1850|1890|5017|L626|9610|181011N|A27X_E|E[12]00|EL41|G550|GW516|L30|L5[01]|M801|M1001|N700|P50|R300|S300|S801|S1001|W503|W511T|W553N?|W60[38]|W626|M960|D10S|D700|9013_4N|F 200|T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ0705(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD10S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1010W?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1012N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ9013_4N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1019N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1805N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ181011N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1380(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1436(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1452a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1470(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1502a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1552(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1568(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1808(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1810B_M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1832(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1850(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ1890(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ5017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQ9610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQM960(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQS801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQGW516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQE100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQE200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQA27X_E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQEL41(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQL51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQM1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQN700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQP50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQS1001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQ1060M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQR300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW608(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQW603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW511T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW553N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQL626?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IQW503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQD700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQT800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQF ?200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MMI, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(TAB-S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(?:9[13]|81|76)|(?:Enjoy 7 Plus|GP70 2OD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo ?(9[13]|76|81)`),
		regexp.MustCompile(`(?i)(GP70 2OD)`),
		regexp.MustCompile(`(?i)MStar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTC[ _](968|97[82]|970|982[OT]?|1078)|(?:MTC[_ ])?SMART[ _]?(?:Race[2]?|Sprint|Run|Turbo|Surf[2]?)[ _]4G|MTC975|Smart Bit|Smart_(?:LINE|Light)|(?:MTC[ _])?SMART[ _](?:Run|Start[_ ][23])|Redbox Mini 5\(MTS\)|MTS TV|DV8235|DV9135|DV9157-C|DV8304-C|Osmartphona`),
		regexp.MustCompile(`(?i)MTC[ _]?(97[258]|970[H]?|982[OT]?|968)`),
		regexp.MustCompile(`(?i)MTC[ _](1078)`),
		regexp.MustCompile(`(?i)SMART[ _]Race[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Race2[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Sprint[ _]4G`),
		regexp.MustCompile(`(?i)(?:MTC_)?SMART[ _]Start[ _]([23])`),
		regexp.MustCompile(`(?i)SMART[ _]?Run(?:[ _]4G)?`),
		regexp.MustCompile(`(?i)SMART[ _]Surf2[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Surf[ _]4G`),
		regexp.MustCompile(`(?i)SMART[ _]Turbo[ _]4G`),
		regexp.MustCompile(`(?i)Redbox Mini 5\(MTS\)`),
		regexp.MustCompile(`(?i)MTS TV Box (\d{3})`),
		regexp.MustCompile(`(?i)(DV8235|DV9135|DV9157)`),
		regexp.MustCompile(`(?i)MTN-|(?:Kafit V900|Faith29|Ka ?Chocolate|M56[01]M3|M571M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Faith29(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ka ?Chocolate(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MTN-(L860|S620)`),
		regexp.MustCompile(`(?i)MTN-([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(MC-X7MINI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(?:M8[12]0|M825)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mafe_(M810|M825)`),
		regexp.MustCompile(`(?i)(?:N5NOVA|IRON\+|N5Max_X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IRON\+`),
		regexp.MustCompile(`(?i)(?:Magnus[ _](?:bravoZ[23]0|Infinity_?(?:G8|G11))|bravo Z40|Bravo Z11|bravo[-_]Z[12]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)bravo[ _-]?(Z[234]0|Z11|Z[12]2)`),
		regexp.MustCompile(`(?i)(?:Magnus[ _])?Infinity_?(G8|G11)`),
		regexp.MustCompile(`(?i)MAJESTIC[;, _-]|CRONO ?[0-9]+|(?:TAB (?:647|411) 3G|TAB_(?:81[12]|912|918_PRO)_4G|TAB_911_3G|TAB-714|TAB_814|TAB (711 4G|747 3G|[56]11 3G)|URANO27|URANO 47|URANO 77LTE|PLUTO__?26N?|JACK| JOE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JACK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JOE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO 77LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)URANO ?([24]7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLUTO__?(26N?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]PRO_([34])G`),
		regexp.MustCompile(`(?i)TAB[ _](\d{3})[ _]([34])G`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]Tab([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^;/]+)Build`),
		regexp.MustCompile(`(?i)MAJESTIC[ _]([^);/]+)(?:(?:[);/ ]|$)|$)`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+) Build`),
		regexp.MustCompile(`(?i)CRONO ?([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Build/)?Malata[ _]?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mango[_ ](?:AKABUTO_4G|S5|SQ7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mango[_ ](S5|SQ7)`),
		regexp.MustCompile(`(?i)MANN[ _]|(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANN[ _](8S)`),
		regexp.MustCompile(`(?i)(ZUG 3|ZUG 5S(?: Q)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANTA[;,]|MSP950(1[245]|2[01])|MSP96017|MSP94501|MSP95009|MSP96002|MSP450[79]|(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID713|MID(?:06[SN]|08[S]?|12|13|14|15|701|702|703|704|705(?:DC)?|706[AS]?|707|708|709|711|712|714|717|781|801|802|901|1001|1002|1003|1004(?: 3G)?|1005|1009|1010|7802|9701|9702))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MSP450[79]|MSP95009)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MANTA,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(MFSTAB(?:_74G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mara(?: Phones)?[ _](Z1?|X1|S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(700A|720|617)`),
		regexp.MustCompile(`(?i)Marshal[_ -]?ME-(34[78]|352|36[456])`),
		regexp.MustCompile(`(?i)Mascom (S750|SS289|WS517)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Massgo[ _]`),
		regexp.MustCompile(`(?i)Massgo[ _]VI2S`),
		regexp.MustCompile(`(?i)Massgo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Masstel|(?:Juno[ _]Q[567]|Tab10Ultra|Tab(?:[78]|10)Plus|Hapi10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]Juno[_ ]Q5Plus`),
		regexp.MustCompile(`(?i)(?:Masstel_)?Hapi ?(1[05]|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel[_ ]N660s`),
		regexp.MustCompile(`(?i)Masstel[_ ]\((M18)\)`),
		regexp.MustCompile(`(?i)Masstel_Tab7LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab10 WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Masstel_Tab10_?4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab([78]|10)Plus`),
		regexp.MustCompile(`(?i)(?:Masstel[ _])?Tab[ _]?([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Masstel[_ ]*)?(Juno[_ ]Q[3567]|Juno_S6|[MNXB]\d+|LT52|N600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTER-G[;,]|NEOQC4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTER-G,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ -]+),(?:wired|wireless)|QC77QPS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MASTERTECH,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(QC77QPS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maximus 3\.0)`),
		regexp.MustCompile(`(?i)(?:7116-A5|818 3G|MATRIX GRAVITY|Matrix7116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7116-A5|818 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Matrix7116(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MLT(?:43|55)USD02G?|MLT32HSX02|MLT55USX02|MLT43FSX02|MQT55USD03)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAXCOM|(?:MS(?:45[036]|505|507_STRONG|514|57[12]|651)|MS457(?:PLUS)?|RS-401|Neva Rise S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS457)PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS507)_STRONG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS(45[0367]|505|514|57[12]|651)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAXCOM )(MK241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-401(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Max80 Plus)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Maximus[ _]|(Noir X|G10 max|iX Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Maximus[ _])?(Noir X|D1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G10 max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maximus_(T2)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|V1[2357]|V20|S[89]|T1|Genio|Apollo|PLUTO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-]PLUTO`),
		regexp.MustCompile(`(?i)Maxtron[ _-](V[327]|S[89]|V1[2357]|V20|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxtron[ _-](T1|Genio)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAXWELL[;,]`),
		regexp.MustCompile(`(?i)(?:Astro[_ ](?:Phablet_9|55?N[_ ]LTE|55[RT]|5 PRO|5[sTX]|[45]P|X4|5_GO_LTE|X55s?|4\.5|4|63R|X5|8R)|Astro6|Virtue Z5|Nitro[_ ](?:4S?|55[ARCMN]|5[XRPNM]|[45] GO|4[sN] LTE|55[ _]LTE|N62)|Gravity_(?:55?_GO|6P)|Gravity 5\.5 LTE|Nitro_Phablet_9s|Nitro Phablet 7N|Nitro 8|MX-(?:A10R|A6[45]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX-(A10R|A6[45])`),
		regexp.MustCompile(`(?i)Astro[_ ](55?)N[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ]X55[_ ]LTE`),
		regexp.MustCompile(`(?i)Astro[_ ](55[RT]|X55s?|5[sTX]|4|X[45]|[45]P|8R|63R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astro[_ ](4\.5)`),
		regexp.MustCompile(`(?i)Astro[_ ]X4`),
		regexp.MustCompile(`(?i)Nitro ([45]) GO`),
		regexp.MustCompile(`(?i)Nitro[ _]4s`),
		regexp.MustCompile(`(?i)Nitro[_ ]((?:55|4N)[_ ]LTE|4|55[ARCNM]|5[XRPNM]|8|N62)`),
		regexp.MustCompile(`(?i)Gravity_(55?)_GO`),
		regexp.MustCompile(`(?i)Gravity 5\.5 LTE`),
		regexp.MustCompile(`(?i)Nitro[_ ]Phablet[_ ](9s|7N)`),
		regexp.MustCompile(`(?i)(?:Alpha[_ ]X|Maze Alpha)(?:[);/ ]|$)|(?:Android [78](?:[\d.]*);(?: [\w-]+;)? Blade|Comet)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Alpha[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maze Alpha(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Blade|Comet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP5184G|MS5424G|MS5514G|MS5539G|MS5614G|SSB-(?:500|508)|SSB408D|SSB504R|M1582C_MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MP5184G|MS5424G|MS5514G|MS5539G|MS5614G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSB-?(500|508|408D|504R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)McLaut TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Grace (9|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MF716\+?|M785|800P3[12]C|101P51C|X1010|M7[67]QF6|M17QF[67][_-][43]G(?:plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF6-3Gplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M17QF([67])_([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7([76])QF6`),
		regexp.MustCompile(`(?i)MF716\+`),
		regexp.MustCompile(`(?i)Mecool[ _-]|(?:ME-COOL S|KM9 ?PRO|BB2 PRO|K[I]{1,3} PRO|KI PLUS|KM9_TV_BOX|M8SPROW|M8S (?:PLUS|PRO) (?:DVB|[LW]|PLUS)|M8S (?:MAX|PRO)| KM[135679]| KD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9 ?PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KM9_TV_BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K[I]{1,3}) PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KI PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8SPROW(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PLUS ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO ([LW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME-COOL S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K([MD]\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mecool[ _-]([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:SmartPad7503G|M-SP10MXA|M-PPAB500|SmartPad970s2(?:3G)?|M[_-][MPS]P[0-9a-z]+|M-IPRO[0-9a-z]+|10edge|1AZ2[TP]| (?:7[BCD]Y|8[ADE]Y|1[AB]EC|1CY|1AZ|1[DI]Y4G|1AZ2TW|1EY4G|1HY4G)(?:_eea)?|Azimut[ _]?[234](?: Lite|Pro)?|M-WPW801| 1EY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad7503G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartPad970s2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP84[02]M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP940M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8MXA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP7MXAH?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP8HXAH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(?:710|720|725|726|740)GOx?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP876S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S2[AB]?3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP(101|102|860|875)S2[BW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP85S23G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1[DEHI]Y4G`),
		regexp.MustCompile(`(?i)M-MP10[45][01]S2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S2[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8[24]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP9S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1[02]S4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S4A3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1040MC?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP1S4[AB]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10HXxH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-SP10MXHL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP8PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP10PA3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-IPRO([18][01]0)[BW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:1AZ2[TP]|Azimut2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut ?3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Azimut[ _]4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8DY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10edge(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1EY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-WPW801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7[BCD]Y|8[AE]Y|1BEC|1CY|1AZ|1AZ2TW)(?:_eea)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M-MP75S23G|M-MP72[01]M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP7S2[ABDK]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP5303G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxB400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAB500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2G530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPG700(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS531(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S650C?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS551U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPAG4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP[ABC]G500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PP2S500[BC]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx(S510|G551|G51[0125]|G415)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M[_-]PP[Ax]X(470|510|555|520)U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(400|501|[457][PM]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxS(532[LU]|470|501|5P?|7P?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPxG(4[15]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPA(S520|R450|G552)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-PPx([XS]5\d{2}[UL])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M-MP([0-9a-z]+)`),
		regexp.MustCompile(`(?i)Medion|(?:MD_)?LIFETAB|([SPX]10[0-9]{2}X|E10[45]1X|X5001|P851X|P850X|E691X|E10[56]0X|B5532)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MD_)?LIFETAB[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(E450[46]|E5004|S5004|X5001|E5020|P5015|P500[45]|X6001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B553[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(E10[45]1X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([SPX]10[0-9]{2}X|P851X|P850X|E691X|E10[56]0X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Medion(?: Smartphone)? ([^/;]+) Build`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MegaFon|MFLoginPh|MegLogPh|(MFLogin[34]T?|MS3B|SP-A5|SP-A20i|KM8-ATV-MF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MFLoginPh|MegLogPh`),
		regexp.MustCompile(`(?i)MFLogin3T|MegaFon Login 3`),
		regexp.MustCompile(`(?i)MS3B|Megafon Optima`),
		regexp.MustCompile(`(?i)(SP-A5|SP-W1)`),
		regexp.MustCompile(`(?i)MegaFon V9+`),
		regexp.MustCompile(`(?i)(KM8-ATV-MF)`),
		regexp.MustCompile(`(?i)OTT Xview AV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meitu[2]?|MP1503|MP1512|MP160[235]|MP170[19]|MP171[138]|MP1801)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MP1512|Meizu M6s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1602(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:01|13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MP17(?:09|11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meitu (Kiss|[MV]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Meizu|MZ-[A-Z]|(M04[05]|MZ-16th(?: Plus)?|MZ-16[st]|M7[12]1C|M35[1356]|M612C|M578CA|M181[36]|M1822|M681C|M6T|MX[ -]?[2345](?: Pro)?|(?:MZ-)?m[1-6] note|M621C|M1852|M57[18]C|M3[ESX]|M3 Max|M031|m1 metal|M1 E|M2|M2 E|M5s Build|PRO [567]|PRO 7-[HS]| 15 Lite| 16th|MZ-15 (?:Lite|Plus)|15 Plus|MZ-16 X| 16 X| 16T|MX6| M5c|16s Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? 16|Mblu 21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M571C`),
		regexp.MustCompile(`(?i)(?:MZ-|Meizu-)?m([1-6])[_ ]note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M1 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2 E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M578C[A]?|M2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M681C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M621C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M711C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M721C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M6T|MX6|M3E|M3X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?M3 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M5S|M612C`),
		regexp.MustCompile(`(?i)(?:MZ-)?M5c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M04[05]|MX[ -]?2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M35[1356]|MX[ -]?3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MX[ -]?4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Meizu[- _])?MX[ -]?5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1813(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1816|M8 lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8c Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 7-[HS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([76]) Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO ([567])`),
		regexp.MustCompile(`(?i)M031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1852(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1822(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16th Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?15 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-15 Lite| 15 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-16th| 16th(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16 X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)16(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?16s Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meizu (17|C9|2[10]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZ-?M3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Meizu[_ ])?note([89]|21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:MZ-)?Meizu[_ ]([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)MZ-([^/;]+) Build`),
		regexp.MustCompile(`(?i)MELROSE[_ ](?:S9\+?|S9P|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ]S9\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE[_ ](S9|S9P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MELROSE_2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}(?:[);/ ]|$)|SP704CE?|SP-NG708-3G`),
		regexp.MustCompile(`(?i)SlidePad ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)SPNG([0-9]{2,4}[a-z]{0,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP-NG(708)-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SP704(CE?)`),
		regexp.MustCompile(`(?i)(?:Pacific|Quest).+OculusBrowser|Standalone HMD|PortalGo`),
		regexp.MustCompile(`(?i)(?:Quest 2|Standalone HMD)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?(?:ME ?10(?:2[35]|30)|MX1037|MX1024|MX10[24]1|MX1397)([ _][34]G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]ME ?(1023|1030)(?:[_ ]([34])G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiXzo[_ ]MX1021(?:[_ ]3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiXzo[ _])?MX(1037|1041|1024|1397)[ _]4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ME ?1025`),
		regexp.MustCompile(`(?i)(?:MicroMax[ \-\_]?[a-z0-9]+|Q327)|4560MMX|P70221|(?:YU(?:5012|5040|5530)|AQ5001(?: Canvas Power)?|Android 4(?:[\d.]*);(?: [\w-]+;)? A240|Android 8(?:[\d.]*);(?: [\w-]+;)? B5Pro|Bharat 5|N8216|N8301|IN_2[bc]|IN_Note1|ione note|E7446|E7533|E6523)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A240(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A107(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q465(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E451(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4560MMX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_2c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E6523(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AQ4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E453(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E481(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q462(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P70221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q(3[25]7|30[13]|326|354|338|3[03]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q402\+`),
		regexp.MustCompile(`(?i)YU5040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Micromax_)?(Q333|S302|Q324)`),
		regexp.MustCompile(`(?i)Q402 ?Plus`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]HS1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q440Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax[_ ]Q353P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q452(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q421(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E313(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q413(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q4251(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Micromax C1A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2APLS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat[ _](\d)[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bharat (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ione note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN_Note1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7446(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E7533(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P681|P802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(X291|X246|X252|X458|X312)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?(P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)MicroMax(?:[ _-])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)|RM-(?:1010|1031|106[57]|107[23467]|1089|109[02]|1096|1099|1109|111[348]|1127|1141|115[24]|994)|Microsoft; Lumia|Lumia (?:1530|1320|950|850|650|640|550|535|435)|Corporation/Surface|Surface Duo|Surface 3`),
		regexp.MustCompile(`(?i)KIN\.(One|Two)`),
		regexp.MustCompile(`(?i)RM-1099|Lumia 430`),
		regexp.MustCompile(`(?i)RM-1114|Lumia 435`),
		regexp.MustCompile(`(?i)RM-1031|Lumia 532`),
		regexp.MustCompile(`(?i)RM-109[02]|RM-1089|Lumia 535`),
		regexp.MustCompile(`(?i)RM-1141|Lumia 540`),
		regexp.MustCompile(`(?i)RM-1127|Lumia 550`),
		regexp.MustCompile(`(?i)RM-106[57]|RM-1096|Lumia 640 XL`),
		regexp.MustCompile(`(?i)RM-1109|RM-1113|RM-107[23467]|Lumia 640`),
		regexp.MustCompile(`(?i)RM-1154|Lumia 650`),
		regexp.MustCompile(`(?i)Lumia 950|RM-1118`),
		regexp.MustCompile(`(?i)RM-994|Lumia 1320`),
		regexp.MustCompile(`(?i)Surface Pro( [34])?`),
		regexp.MustCompile(`(?i)Microsoft; Lumia ([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:ETL101(?:GB|AL)|ETW101GT(?:_C)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ETL101(?:GB|AL)`),
		regexp.MustCompile(`(?i)(MT003-21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEO[- ](?:X8-H|X8|U9-H|X[57]-mini|X8H?-PLUS|X88-?I|X7-216A|X5-116A|X[68]|U1|Z64|U22-XJ)|MNBP-300G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO-X([57])-mini`),
		regexp.MustCompile(`(?i)NEO-(X8H?)-PLUS`),
		regexp.MustCompile(`(?i)NEO-X88-?I`),
		regexp.MustCompile(`(?i)NEO-X([68])`),
		regexp.MustCompile(`(?i)(MNBP-300G)`),
		regexp.MustCompile(`(?i)(?:Pearl_Neo|M4CRD?|Emerald_M55CR|Mint[ _](?:VirGo|Orion))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pearl_(Neo)`),
		regexp.MustCompile(`(?i)Emerald[_ ]M55CR`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?VirGo`),
		regexp.MustCompile(`(?i)(?:Mint[_ ])?Orion`),
		regexp.MustCompile(`(?i)(?:Cool|Fresh|Ultra)?Mintt`),
		regexp.MustCompile(`(?i)Mintt (M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coolmintt ?(Blaze 2|Tribe|A[3578]|M[12]|P[13]|X7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ultramintt ?(A[56]|R1|S[12]|X[56]|Y[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UltraMintt ?(T10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FRESHMINTT ?(A7|A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)|(?:MOBIX M6|Mio TouchPad 7 Quad Core)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOBIX M6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIO(?:/)?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Mione[_ ]`),
		regexp.MustCompile(`(?i)Hero (\d+)`),
		regexp.MustCompile(`(?i)Mione P2\+`),
		regexp.MustCompile(`(?i)Mione U1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione Pro Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]N10pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]Q1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mione[_ ]Q11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIRAY[;,]|MIDM[_-]|MPM[_-]|TPM4G_WT8`),
		regexp.MustCompile(`(?i)MIDM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MPM[_-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MIRAY,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)MITCHELL_BROWN[;,]`),
		regexp.MustCompile(`(?i)MITO[- _]`),
		regexp.MustCompile(`(?i)MITO[- _]3255(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _]A37[_ ]Z1plus`),
		regexp.MustCompile(`(?i)MITO[- _](A(?:19[_ ][12]GB|37[_ ]Z1|36[_ ]W1|[0-9]+)|311)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITO[- _](T(?:[0-9]+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MITSU|portalmmm/[12]\.0 M`),
		regexp.MustCompile(`(?i)MITSU/[a-z0-9.]+ \(([a-z0-9]+)\)`),
		regexp.MustCompile(`(?i)MITSU[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (M[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(MC32020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mobell[ _](?:S50)|NOVA P3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobell[ _](S50)`),
		regexp.MustCompile(`(?i)(?:MobiGo2|MobiPrint 4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiPrint 4\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobiGo|(?:Kiona|KANUNA|Halona|IKOSORA\+|Kicka[_ ][45][ _]Plus|Kicka Zoom|Kohana|Kayeta|Kosumi|KWANITA|Lonan|Hotah|Kicka 5|Kiona|Smart[ _]?(?:[CEN]11|N12|P24)|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart[ _]?([CEN]11|N12|P24)`),
		regexp.MustCompile(`(?i)(IKOSORA\+|Kiona|Kicka[_ ][45][ _]Plus|Kohana|Kayeta|Kosumi|Lonan|Halona|Hotah|Kicka 5|Kicka Zoom|Kiona|Sakari)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobicel[_ ](R[16]|METRO2)||(?:Android 6(?:[\d.]*);(?: [\w-]+;)? SHIFT)|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:BEAM|ZOOM|RUBY)|FAME(?:_DS)?|CLIK|R7_[12]|HYPE(?:_X)?|DANDY(?:_ZAM)?|Matrix|VENUS_G|TRENDY PLUS|FENDY_DS|TANGO_LITE|BLINK|BERRY|BERRY[_ ]?(?:[12]|PLUS)|R1PLUS_1|ZOOM-H|REBEL|LEGEND (?:MAX|PRO_1|Pro LTE)|HERO_DS|Switch[ _]GO|SWITCH1|switch plus|PULSE_1|TRENDY 2|TRENDY_LITE|FEVER_PLUS(?:_[HJ])?|RIO_(?:SS|ZAM|RW|BN)|Clik plus|(PURE|Fendy) PLUS|RX PRO|Neo[ _]LTE|Titan_1|ZOOM_1|R4 LTE|NEO_1|EPIC_[12]| GLO|EPIC PRO_[12]|IX PRO|OREO|Cosmo LTE|Neo_Plus|IX-1|Android 13(?:[\d.]*);(?: [\w-]+;)? IX|Android 1[12](?:[\d.]*);(?: [\w-]+;)? FORCE|VX20|VX19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EPIC PRO_([12])`),
		regexp.MustCompile(`(?i)IX(?: Build|[;)])`),
		regexp.MustCompile(`(?i)EPIC_([12])`),
		regexp.MustCompile(`(?i)BERRY[_ ]PLUS`),
		regexp.MustCompile(`(?i)R7_[12]`),
		regexp.MustCompile(`(?i)GLO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neo[ _]LTE`),
		regexp.MustCompile(`(?i)RIO_(SS|ZAM|RW|BN)`),
		regexp.MustCompile(`(?i)Switch[ _]GO`),
		regexp.MustCompile(`(?i)VX(19|20) Pro`),
		regexp.MustCompile(`(?i)VX(19|20)`),
		regexp.MustCompile(`(?i)Mobicel_(R[16])`),
		regexp.MustCompile(`(?i)FEVER_PLUS_([HJ])`),
		regexp.MustCompile(`(?i)Mobiistar|Zumbo[ _]S|(?:PRIME X MAX|X1 (?:Notch|Dual)|E1 Selfie|XQ[_ ]Dual|C1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X1 (Notch|Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E1 Selfie(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ[_ ]Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar_LAI_Zumbo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zumbo[_ ]S[_ ]2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mobiistar ZUMBO S2( Dual)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J_2017(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar_LAI_Zumbo_J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]J2`),
		regexp.MustCompile(`(?i)Mobiistar[_ ]Zumbo[_ ]S2`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]YUNA[ _]([1XCS])`),
		regexp.MustCompile(`(?i)mobiistar[ _](?:LAI[ _])?ZORO[ _]([235])`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Zena`),
		regexp.MustCompile(`(?i)mobiistar[ _]LAI[ _]Z([12])?`),
		regexp.MustCompile(`(?i)mobiistar LAI 504([KC])`),
		regexp.MustCompile(`(?i)mobiistar[ _]PRIME[ _](X1|558|X[ _]Plus|X[ _]Grand) Build`),
		regexp.MustCompile(`(?i)mobiistar[ _]KOOL([ _]Lite)?`),
		regexp.MustCompile(`(?i)Mobiistar[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)GENESIS_126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS5[50]X6|MS55X5|MS55L1|MS50L1|MS43A3000|MS45A4000|MS50A4000|MS50A4500|MS50A5000|MS50A6000|MS50B11000|MB-2900 QUATTRO|POLYS[_ ]MS45L1|Wave5)`),
		regexp.MustCompile(`(?i)POLYS[_ ]MS45L1`),
		regexp.MustCompile(`(?i)(Cynus[ _][^/;)]+)( Build|\))`),
		regexp.MustCompile(`(?i)(?:(?:MOBO[_ ]MB7005|MT7-421HD)|(?:MT7-442D|MT7-411D))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOBO[_ ])?(MB7005|MT7-421HD|MT7-442D|MT7-411D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TicWatch (Pro 3 Ultra GPS|C2|C2\+|Pro S|S2?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEP2Q421G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+|(?:ECHO LOLLY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)xino Z([\d]+) X([\d]+)`),
		regexp.MustCompile(`(?i)FreeTab[ _-]?([^/;]+)? Build`),
		regexp.MustCompile(`(?i)FreeTab[ _-]?([^);/ ]+)?`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)FreeWay Tab[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Mofut[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Mofut[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)MD-PH-001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:momo3s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TurboPhone4G Compact 2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOT|DROID ?(?:Build|[a-z0-9]+)|portalmmm/2\.0 (?:E378i|L6|L7|v3)|XOOM [^;/]*Build|XT1941-2|XT1924-9|XT1925-10|XT1965-6|XT1970-[25]|XT1799-2|XT1021|XT2171-[23]|XT2013-[124]|XT2015-2|XT2045-3|XT2055-2|XT2061-3|XT2071-4|XT2201-[126]|XT-2201|XT2113-2|XT2115-1|XT2175-2|XT2141-1|XT2125-4|XT2127-2|XT2129-[123]|XT2143-1|XT2153-1|XT2158-6|XT2215-[124]|XT2221-[12]|XT2225-[12]|XT2233-2|XT2251-1|XT2243-2|XT2241-1|XT2163-4|XT2169-1|XT2137-[12]|XT1710-(?:08|10)|XT180[3-5]|XT2315-1|XT2261-1|XT2271-5|XT2333-1|XT2335-[23]|XT2139-1|XT2131(?:-[134]|DL)|XT2303-2|XT2301-5|XT2307-1|XT2321-[23]|XT2323-3|XT2343-[1236]|XT2363-2| XT2401-2|XT2409-5|XT2453-2|XT194[23]-1|XT1929-15|XT2073-2|XT2083-9|XT2081-1|XT2093DL|XT2093-[37]|(?:XT|MZ|MB|ME)[0-9]{3,4}[a-z]?(?:\(Defy\)|-0[1-5])?(?:[;]? Build|\))|lineage_osprey|ATRIX HD|PAMR00(?:0[28]|10)IN|PANB0001IN|PANB001[35]IN|PANV000[59]IN|PAGS0005IN`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT300`),
		regexp.MustCompile(`(?i)XT2321-[23]`),
		regexp.MustCompile(`(?i)motorola razr 50(?: Build|[;)])|XT2453-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT30[35]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT31[16]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2125-4`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola[- ])?edge \(?(202\d)\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2307-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2175-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2143-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2153-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT32[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT3(?:89|90)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT502`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT531`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT535`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2083-9`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT55[567]C?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT603`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT610`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT615`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT621`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT626`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT682`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT685`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT687`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?Atrix HD`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT720`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT800W`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT860`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT881`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT882`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT88[56]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT890`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT894`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT897`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT901`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT90[567]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT910S?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT91[4568]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT9(?:19|20)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT925`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT912`),
		regexp.MustCompile(`(?i)XT2221-[12]`),
		regexp.MustCompile(`(?i)XT2335-[23]`),
		regexp.MustCompile(`(?i)XT2343-[1236]`),
		regexp.MustCompile(`(?i)XT2225-[12]`),
		regexp.MustCompile(`(?i)PAMR00(0[28]|10)IN`),
		regexp.MustCompile(`(?i)XT2055-[124]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT102[12]|XT830C|XT15[12]4|XT152[67])`),
		regexp.MustCompile(`(?i)Moto E \(XT2052DL\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1706`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2158-6`),
		regexp.MustCompile(`(?i)MotoE2\(4G-LTE\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1924-9`),
		regexp.MustCompile(`(?i)moto e\(?([0-9])\)? plus`),
		regexp.MustCompile(`(?i)Moto E([0-9]) Play`),
		regexp.MustCompile(`(?i)moto-e([0-9])-play`),
		regexp.MustCompile(`(?i)moto e6 \(XT2005DL\)`),
		regexp.MustCompile(`(?i)moto e5 cruise(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e5 supra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E5 go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?(\di?)\)? Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?((?:[567]|22)i?)\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E\(?([567])s\)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto E(\d+)\(?s\)?`),
		regexp.MustCompile(`(?i)Moto E(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1030`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1565`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1096`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT175[046]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT172[135]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1254`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT10(?:28|3[12349]|68|69)|lineage_osprey`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT106[34]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?g\(?(\d+)\)? 5G`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1609`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT180[1-6]|Moto G ?5S Plus|Moto G \(5S\) Plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1799-2|Moto G \(5S\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT168[57]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT167[06]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1925-10`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1965-6`),
		regexp.MustCompile(`(?i)XT2129-[123]`),
		regexp.MustCompile(`(?i)XT2137-[12]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT10(?:49|5[23568]|6[04]|9[23457])|XT1093)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT156[234]|Moto X Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT157[02]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1575`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT158[01]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2401-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1080`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1585`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1650(?:-05)?`),
		regexp.MustCompile(`(?i)moto z4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Moto Z3 Play(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1635(?:-0[1-3])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1710-(?:-0[28])?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1789-05|Moto Z2 Force(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1929-15|moto z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT166[23]`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2241-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2243-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2409-5`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2201-6`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT-2201`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT2301-5`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1943-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1941-2`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?XT1942-1|P30 Note(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus 5G UW \(2022\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus \(?(202[23])\)?`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge plus|XT2061-3`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge ([23]0) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge 20 lite|XT2139-1`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) fusion`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) ultra`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) pro`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+) neo`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:edge 5G UW \(2021\)|XT2141-1)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge (\d+)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge \(2021\)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?edge`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one vision plus`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?(?:XT1970-[25]|one vision)`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one power`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one hyper`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one zoom`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion\+`),
		regexp.MustCompile(`(?i)(?:MOT-|Motorola-)?one fusion|XT2073-2`),
		regexp.MustCompile(`(?i)motorola one action|XT2013-[124]`),
		regexp.MustCompile(`(?i)motorola one 5G ace|XT2113-2`),
		regexp.MustCompile(`(?i)moto g stylus \(XT2115DL\)`),
		regexp.MustCompile(`(?i)moto g stylus \((202[12])\)`),
		regexp.MustCompile(`(?i)moto g stylus 5G \((2022)\)`),
		regexp.MustCompile(`(?i)XT2215-[124]`),
		regexp.MustCompile(`(?i)moto g stylus 5G|XT2131(?:-[134]|DL)`),
		regexp.MustCompile(`(?i)moto g play \(2021\)|XT2093DL|XT2093-[37]`),
		regexp.MustCompile(`(?i)moto g power \(XT2041DL\)`),
		regexp.MustCompile(`(?i)moto g power \(2021\)`),
		regexp.MustCompile(`(?i)moto g power \(2022\)`),
		regexp.MustCompile(`(?i)moto g pure|XT2163-4`),
		regexp.MustCompile(`(?i)moto g fast|XT2045-3`),
		regexp.MustCompile(`(?i)moto g 5G \(2022\)`),
		regexp.MustCompile(`(?i)moto g\(?40\)? fusion|PANV000[159]IN`),
		regexp.MustCompile(`(?i)PANB001[35]IN|PANB0001IN`),
		regexp.MustCompile(`(?i)moto g\(?60\)?s`),
		regexp.MustCompile(`(?i)moto g(\d+)\((\w)\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) \(XT1925DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) forge`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo \(XT1952DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) optimo maxx\(XT1955DL\)`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) power lite`),
		regexp.MustCompile(`(?i)moto g\(([0-9]|10)\) power`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) supra`),
		regexp.MustCompile(`(?i)moto g\(([0-9])\) plus`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\) play`),
		regexp.MustCompile(`(?i)moto g\(([0-9]+)\)`),
		regexp.MustCompile(`(?i)moto g(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)moto e\(?([0-9]+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto x\(?(4+)\)?(?: Build|[;)])`),
		regexp.MustCompile(`(?i)moto(?:rola)? one 5G`),
		regexp.MustCompile(`(?i)Moto MAXX|XT1225`),
		regexp.MustCompile(`(?i)Moto ([CGEXZ]) ?\(([a-z0-9]+)\)( Plus| Play)?`),
		regexp.MustCompile(`(?i)Moto ?([CGEXZ])([0-9]+)( Plus| Play)?`),
		regexp.MustCompile(`(?i)(?:Motorola-)?Moto[ _]?([CGEXZ])([ _](?:Plus|Play))?`),
		regexp.MustCompile(`(?i)Moto(?:rola)?[- _]F100`),
		regexp.MustCompile(`(?i)razr \(?(202[02])\)?`),
		regexp.MustCompile(`(?i)MOTORAZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)MOTORIZR[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)motorola razr (40) ultra`),
		regexp.MustCompile(`(?i)motorola razr (40)`),
		regexp.MustCompile(`(?i)Motorola[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Moto[ _-]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)MOT[O]?[_-]?([a-z0-9.]+)`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9 ]*) Build`),
		regexp.MustCompile(`(?i)DROID ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:E378i|L6|L7|V3)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(XOOM [^;/]*)Build`),
		regexp.MustCompile(`(?i)(MZ[0-9]{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:ME|MB|XT)[0-9]{3,4}(?:\(Defy\))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LEX L11[ae])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOVIC|F4502`),
		regexp.MustCompile(`(?i)MOVIC[ -]K(2)`),
		regexp.MustCompile(`(?i)MOVIC[ -]W([2345])`),
		regexp.MustCompile(`(?i)(F450[12])`),
		regexp.MustCompile(`(?i)M(?:8421|9101[AB]|910[36]|841[4568]|8601)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(\d{4}[AB]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MH-T6000|MT-T8B22|MT-T800)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT-T8(00|B22)`),
		regexp.MustCompile(`(?i)(?:MPQC|MPDC)[0-9]+|PH(?:150|340|350|360|451|500|520|544|604)|(?:MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP100i OCTA|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(1[01]|77)(?: 3G)?)|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:MPQC|MPDC)[0-9]+[^/;)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)MP100i OCTA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MPQCG10(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID(?:7C|74C|82C|84C|801|811|701|711|170|77C|43C|102C|103C|104C|114C)|MP(?:843|717|718|1010|7007|7008|843|888|959|969|QCG(?:11|77))|MGP7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PH(?:150|340|350|360|451|500|520|544|604))`),
		regexp.MustCompile(`(?i)MultiPOS[ _]?(X9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]|ML-TI-MS|(?:MS50[LGXM]|M7[_-]3G[_-](?:PLUS|QC_3|QUAD_CORE)|MS5\.V2|M9-3G|MS45S_A6|ML([02]1|12)-M7s[- ]?Quad-?Core| ML01-M7-SD|MS45S|MS50S|MS60[XZ]|M7SQC_Plus|MS80X|MS40[GS]|MS55M|MS70|M7_3G_A10|M7_3G|M7S_PLUS|M10A?_3G|M7-3G QUAD CORE|M7s_?Lite|M[79]_WIFI|ML-(?:SO|WI)-M9-3G|M10A-Lite|M10_4G_PRO|MS50L?_4G|MS60F(?:_PLUS)?|MS45S_A6_(?:Teen|Senior)|MLX8|ML-WI-M7_3G_PLUS|KIDPAD_LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([EFG])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[_ ]Elite[_ ]2`),
		regexp.MustCompile(`(?i)Multilaser[ _]F[_ ]Pro[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]GMAX_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G_?MAX_2_SE`),
		regexp.MustCompile(`(?i)Multilaser[ _]G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]G[ _]2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]E[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([H])[_ ]5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]([FEH])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]ZAPP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Multilaser[ _]ZAPP[ _]II[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MS60F_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MS50[LGXSM]|MS45S_A6|MS40[GS]|MS55M|MS60F|MS70|MS60[XZ]|MS45S|MS80X|MS50L?_4G|MS5\.V2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-WI-)?M7[_-]3G[_-]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M([79])_WIFI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10_4G_PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7SQC_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G_QC_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7-3G[ _]QUAD[ _]CORE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML([02]1|12)-M7s[- ]?Quad-?Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7s_?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML01-M7-SD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M10A-Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ML-(?:SO|WI)-)?M9-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M7_3G_A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MLX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M(10A?|7)_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KIDPAD_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ML-TI-(MS\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MP01A3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyGica[_ ]`),
		regexp.MustCompile(`(?i)HDR (Quad Core|Smart TV) Box`),
		regexp.MustCompile(`(?i)ATV(19[60]0|495 Pro 16G)`),
		regexp.MustCompile(`(?i)MY MOBILE (708)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyPad[ _][^;/)]+( Build|[);])|MyPhone ?(?:A888|A919 Duo|Agua (?:Infinity|Rio ?(?:Fun|Lite)?)|MY27|Rio (?:2 ?(?:Fun|Lite)?|Pixie)|UNO)|my(?:A(?:10|[789])|T[356]) DTV|myWX1 Plus|myXI1(?:[ _](?:Plus|Pro))?|my(?:G1|XI3|NX1|X12|X[23589]|A1[0-35-8]|29S|807)|Brown [12]|A898 DUO`),
		regexp.MustCompile(`(?i)myT([356]) DTV`),
		regexp.MustCompile(`(?i)myA([789]|10) DTV`),
		regexp.MustCompile(`(?i)myXI1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myXI([13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)my(A1[0-35-8]i?|G1|NX1|X[23589]|X12|29S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myWX1 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brown 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)brown 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)MyPad[ _]([^;/(]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:MyTAB[ _-](?:8 MINI Dual Core|U55GT)|U103GT1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB[ _-]8 MINI Dual Core(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyTAB-U55GT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U103GT1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyWigo[ _]([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)MygPad[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(MOVE_S201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Myria[_ ][^/;]+|502M|Cozy|Easy tab 9|Grand|Compact_E2_Plus)(?: Build|[;)])|Myria_FIVE|Myria_Grand_4G|Myria_Wide_2|Myria_Wide_4G`),
		regexp.MustCompile(`(?i)(502M|Grand|Compact_E2_Plus)`),
		regexp.MustCompile(`(?i)(Cozy|Easy tab 9)`),
		regexp.MustCompile(`(?i)Myria[_ ]([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(E70 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY|(MID-(?:123G|72[12]|7[01348]3G|753G|8[23]3G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MID-(123G|72[12]|7[01348]3G|753G|8[23]3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MYSTERY[_ ]TV[_ ](D\d{4}[A-Z]{2}\d{2})`),
		regexp.MustCompile(`(?i)Npad[ _-]?(?:X1?|plus|Air|Pro|Y1|[SQ])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Npad[ _-]?plus`),
		regexp.MustCompile(`(?i)Npad[ _-]?Air`),
		regexp.MustCompile(`(?i)Npad[ _-]?Pro`),
		regexp.MustCompile(`(?i)Npad[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NASCO (?:TANGO 7)|SNAP_PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEC[ _-]|KGT/2\.0|portalmmm/1\.0 (?:DB|N)|(?:portalmmm|o2imode)/2\.0[ ,]N|(?:PC-T[SE]\d{3}[\w]{2,3}|N-06C|N-02E|LAVIE T11 (?:11QHD1|112K1)|LAVIE Tab E (?:10|8)FHD[12]|7SD1|8HD1|LAVIE Tab (?:10FHD3|T12 12QHD1|9QHD1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-06C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEC[ _-]|KGT/2\.0 )([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/1\.0 ((?:DB|N)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0[ ,](N[a-z0-9]+)`),
		regexp.MustCompile(`(?i)LAVIE Tab E ((?:10|8)FHD[12]|7SD1|8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab 10FHD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE Tab T12 12QHD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T11 (11QHD1|112K1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T7 (7SD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAVIE T8 (8HD1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PC-TE(\d+)`),
		regexp.MustCompile(`(?i)PC-TS(\d+)`),
		regexp.MustCompile(`(?i)LAVIE Tab (9QHD1)`),
		regexp.MustCompile(`(?i)(?:NEKO_(?:W_)?LT[-_](\w+)|LT-\d{2}N(?:[HF]8020S|X8001S|F7021S))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEKO_)?(?:W_)?LT[-_](\w+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETWIT_([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)Nevir,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(MXQ|MXQ-Pro)-NEXBOX|NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXBOX-([^) ]+)`),
		regexp.MustCompile(`(?i)NEXON[ _](X[1235]\+|X[123589]|X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Discovery_XT|Revolution-X69K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NG3128HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NGM[_ ][a-z0-9]+|(Forward|Dynamic)[ _]?[^/;]+(?:Build|/)|Smart5Plus32GB|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:P50[89]|P55[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(50[89]|55[01])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(Forward|Dynamic)[ _]?([^/;]+)/`),
		regexp.MustCompile(`(?i)NGM ([^;/]+) Build`),
		regexp.MustCompile(`(?i)NGM_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Android 4(?:[\d.]*);(?: [\w-]+;)? (3188HD)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)NINETOLOGY[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[ _]|Hummer(?:_2019_R|LE)|NextSE|Vivo 4G_r|SPRINT4G|SparkSE`),
		regexp.MustCompile(`(?i)NOA[_ ]CORE[_ ]FORTE`),
		regexp.MustCompile(`(?i)NOA[_ ]Hummer[_ ]Lite`),
		regexp.MustCompile(`(?i)NOA[_ ]HUMMER`),
		regexp.MustCompile(`(?i)NOA[_ ]MOVEse`),
		regexp.MustCompile(`(?i)NOA[_ ]NEXT`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3SE`),
		regexp.MustCompile(`(?i)NOA[_ ]VISION[_ ]H3`),
		regexp.MustCompile(`(?i)NOA[_ ]LOOP`),
		regexp.MustCompile(`(?i)(?:NOA-)?NOA[_ ]H4se`),
		regexp.MustCompile(`(?i)NOA[_ ]Mg12`),
		regexp.MustCompile(`(?i)NOA[_ ]H44SE`),
		regexp.MustCompile(`(?i)NOA[_ ]H10LE`),
		regexp.MustCompile(`(?i)NOA[_ ](M108K|P497)`),
		regexp.MustCompile(`(?i)(?:NOA[_ ])?Vivo 4G_r`),
		regexp.MustCompile(`(?i)NOA[_ ]([^;)/ ]+)`),
		regexp.MustCompile(`(?i)SMART_VOLT_NX5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NOGAPC (?:LIVE|PRO|ULTRA)|NOGAPAD ?(?:7G|10\.1GHD|10HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPAD ?10\.1GHD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC LIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOGAPC ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Bonvi Note|Bonvi Prime|Bonvi Pro|Borneo_Pro|Vi_Note)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HB-(2000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_|(?:(?:N(500[12]|550[12]|570[24]|6001)L|S(?:5501|5701|600[13]|6303|6501|6512)L|T080[12]L)|S6702X|A6L-[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T080[12]L`),
		regexp.MustCompile(`(?i)NUU_A([13]L?)`),
		regexp.MustCompile(`(?i)NUU_M([32])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NUU_X5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NUU_)?(N5001L|A6L-[CG]|Q500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[ _]|(?:GLAM|ARGON|TQ14|GO-X|orbis)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NYX[_ ]ALTER`),
		regexp.MustCompile(`(?i)NYX[ _]REX`),
		regexp.MustCompile(`(?i)(TQ14|GO-X)`),
		regexp.MustCompile(`(?i)(?:DMTAB-(?:IN08A|NV08B|NV2[04]A)|NBTY07SMKG|NBFP07PMKG|SNB02-NV7A|NABI2-NV7A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DMTAB-(?:IN08A|NV08B)`),
		regexp.MustCompile(`(?i)DMTAB-NV(2[04])A`),
		regexp.MustCompile(`(?i)android 7(?:[\d.]*);(?: [\w-]+;)? (?:F101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAOMIPHONE Ambar|DAMMAR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAOMIPHONE Ambar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DAMMAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NX-32THS100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NEXO (?:Smarty|handy|SMART DUO|Evo)|MOVIO 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP-752Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NeoTab)[ _-]((?:S1[23]0|S125|H85|H11[05]|KID741|S9700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _]|(?:T737PRO|T505PRO|T500 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NAVITEL[ _])?(T70[07]|T500) 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](T757)LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NAVITEL[ _](A73[0157]|A650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T(505|737)PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RE900 Full HD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]|(?:Vision_Tab_(?:7|10)|Pure Micro|Superme_Max|Raptor3G8GB|Predator (?:10|3G)|Platinum[_ ]?10[_ ]?3G(?:_V2|2019)?|Supreme[_ ](?:Fine(?:[_ ]Micro)?|Chief|Pure|Pro)(?:[_ ](?:Mini|Plus))?|T400 3G 2017|Spirit_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M505 LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F552|D504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Superme_Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine_Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Fine[_ ]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme_Fine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Chief(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pure[ _]Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme Pure(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Supreme[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pure Micro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spirit_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ]Infinity(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Navon[_ ](D405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum[ _]10[ _]3G(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Platinum103G2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon[_ ])?Orpheus[ _]3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Navon_)?Predator[_ ](3G|10|7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Raptor3G8GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vision_Tab_(7|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M002[DGQK]-2|M002N|M002N-3T|M002W-2T|6M-3T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEDAPHONE[ _](V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos|(TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C57|TP601[ABCE])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neffos[_ ]Y50`),
		regexp.MustCompile(`(?i)Neffos[_ ]((?:[YNCXA])[0-9][A-Z]?(?: Max| Lite| Plus)?)`),
		regexp.MustCompile(`(?i)Neolix[ _-]`),
		regexp.MustCompile(`(?i)Neolix[ _-]T7[_ ]`),
		regexp.MustCompile(`(?i)Neolix[ _-]1-C-`),
		regexp.MustCompile(`(?i)Neolix[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)NEO[ ]?(90[689])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:NQT-(?:101|7)[34]GIQ(?:11)?|NQT-7W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NQT-1013GIQ11)`),
		regexp.MustCompile(`(?i)NQT-101([34])GIQ`),
		regexp.MustCompile(`(?i)NQT-7([34])GIQ`),
		regexp.MustCompile(`(?i)KT1007_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETBOX-Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NETBOX-ShineS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NM-NETPAD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NIM-(450D|550O|[56]00Q)`),
		regexp.MustCompile(`(?i)neutab ?k1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neutab ?k1`),
		regexp.MustCompile(`(?i)NB (RunIQ)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBTB10[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWAL[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)NEWGEN\-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NLS-(?:MT90|NFT10|MT65)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newman[ _](P308|K1|G5i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CarPad-(?:II|III)-P)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Newsday[_ ](E1|A[12]|N2\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexa[ _](?:Atlas|Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Vega N1)`),
		regexp.MustCompile(`(?i)Nexa[ _](Atlas)`),
		regexp.MustCompile(`(?i)S?Nexian`),
		regexp.MustCompile(`(?i)S?Nexian[ ]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)S?Nexian-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)^NEXT |LGE; YE-[0-9a-z]+(?:-4K)?;|MyBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MyBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (YE-[0-9a-z]+)-4K;`),
		regexp.MustCompile(`(?i)LGE; (YE-[0-9a-z]+);`),
		regexp.MustCompile(`(?i)Next[0-9]|NX(?:785QC8G|M900MC|008HD8G|010HI8G|M908HC|M726|16A8116K|A8QC116|A8LTE116|16A10132S|16A11264|A116QC164|A101LTE116)|(?:BRT81)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRT81)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Next([0-9]+[^;/]+) Build`),
		regexp.MustCompile(`(?i)TAB (A40[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nextbit|(?:Robin)(?: Build|\))`),
		regexp.MustCompile(`(?i)(Robin)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)NOAIN[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)Nobby[ ](S500|X800(?: Pro)?|S300(?: Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Noblex|NBX-|(?:A[56]0UNS|T7A6INC|T7A6N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Noblex|NBX)[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(A[56]0)UNS`),
		regexp.MustCompile(`(?i)(T7A6INC|T7A6N)`),
		regexp.MustCompile(`(?i)Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900|TA-[0-9]{4}|N(?:1374|1530|15[01256])DL|ARM; 909`),
		regexp.MustCompile(`(?i)TA-10(07|23|29|35)`),
		regexp.MustCompile(`(?i)TA-10(20|28|32|38)`),
		regexp.MustCompile(`(?i)TA-10(24|27|44|53)`),
		regexp.MustCompile(`(?i)TA-10(00|03|21|25|33|39|54)`),
		regexp.MustCompile(`(?i)TA-10(04|12|52)`),
		regexp.MustCompile(`(?i)Nokia 6\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 5\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 3\.1 Plus`),
		regexp.MustCompile(`(?i)Nokia 2 V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia[_ ]Xplus`),
		regexp.MustCompile(`(?i)N15[26]DL`),
		regexp.MustCompile(`(?i)Nokia ?X2DS`),
		regexp.MustCompile(`(?i)(?: )?(Nokia500|nokiaasha500(?:dualsim)?)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia5130c(?:-2)?`),
		regexp.MustCompile(`(?i)Nokia8800e?`),
		regexp.MustCompile(`(?i)Nokia808 ?PureView`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})c(?:-)?`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})s(?:-)?`),
		regexp.MustCompile(`(?i)Nokia[ _]?([0-9]{4})[ _]?Flip`),
		regexp.MustCompile(`(?i)Nokia[ _]?([0-9]{4})[ _]?V[ _]?Flip`),
		regexp.MustCompile(`(?i)Nokia ?([0-9]{4})`),
		regexp.MustCompile(`(?i)(?: )?Nokia([235][0-9]{2})(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia([CEX]-?[0-9]{1,2}i?)-[0-9]{1,2}u?(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)Nokia;? 520T`),
		regexp.MustCompile(`(?i)RM-91[45]`),
		regexp.MustCompile(`(?i)RM-997|Nokia 526`),
		regexp.MustCompile(`(?i)RM-97[68]`),
		regexp.MustCompile(`(?i)RM-97[45]`),
		regexp.MustCompile(`(?i)NOKIA;? 710`),
		regexp.MustCompile(`(?i)Nokia;? 720T`),
		regexp.MustCompile(`(?i)RM-103[89]`),
		regexp.MustCompile(`(?i)Nokia;? 800C`),
		regexp.MustCompile(`(?i)Nokia;? 800`),
		regexp.MustCompile(`(?i)Nokia;? 900`),
		regexp.MustCompile(`(?i)(RM-82[12]|Nokia;? 920)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)(RM-89[23]|RM-910|Nokia;? 925)(?: Build|[a_);/])`),
		regexp.MustCompile(`(?i)(ARM; 909|NOKIA;? 909|NOKIA; id300)(?: Build|[_);/])`),
		regexp.MustCompile(`(?i)NOKIA;? 1520\.1`),
		regexp.MustCompile(`(?i)Nokia T([12]0|21)`),
		regexp.MustCompile(`(?i)Streaming (Stick 800|Box 8000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nokia ([A-Za-z0-9\. ]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Nokia(N[0-9]+)`),
		regexp.MustCompile(`(?i)Nokia-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NOKIA; ([a-z0-9\- ]+)`),
		regexp.MustCompile(`(?i)NOKIA[ _]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)NOKIA/([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9-]+ XL)`),
		regexp.MustCompile(`(?i)(Lumia [a-z0-9-]+)`),
		regexp.MustCompile(`(?i)Maemo RX-51 ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)`),
		regexp.MustCompile(`(?i)nok([0-9]+)`),
		regexp.MustCompile(`(?i)Symbian.*\s([a-z0-9]+)$`),
		regexp.MustCompile(`(?i)Nomi[ _-]|(C101010 Ultra2|i501[234]|i5032|i50[537]0|i5031|i55[13]0|i5532|C0(700(?:[02358]|2HD)|7850)|C1010[0-3]|i(?:50[0158]|450|40[01]|55[02])|i504 Dream|AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i501[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i506(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i5730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i6030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]I4070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5030(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i5530(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[_ ]i5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?i5710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i508(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?i(50[015]|450|40[01]|55[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i507(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _]i503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi[ _]i504|i504 Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _](\w+)[ _]PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AB5116-01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101040`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C101044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070020`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070011`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070030`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070014L`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C0700[13]4`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C070044`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080012`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080010`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080034`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C080014`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C07008`),
		regexp.MustCompile(`(?i)(?:Nomi_)?C10105`),
		regexp.MustCompile(`(?i)(?:Nomi[ _])?(C0(?:700(?:[0235]|2HD)|7850|9600)|C1010[0-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Nomi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:Nomu[ _-](?:T18|S30mini|S10)|(?:V1600S|S10 PRO|S50_Pro)|LMCV1|Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]T18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]s10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nomu[ _-]S30mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LMCV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S([15]0)[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1600S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xeno V1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y-(?:4301|4001)-FHD-R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NORDMENDE[ _;,]`),
		regexp.MustCompile(`(?i)NORDMENDE[_ ](43NM6000F|55NM6000U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NT-TP10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nos (?:FIVE|NOVU|NEVA|Roya)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS FIVE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NOVU(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS NEVA 80(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOS Roya(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A06[35]|AIN065|A142P?|Phone \(2a\))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A063|A015`),
		regexp.MustCompile(`(?i)A(?:IN)?065`),
		regexp.MustCompile(`(?i)A142|Phone \(2a\)`),
		regexp.MustCompile(`(?i)(?:NS(?:[356]|500[2-68]|5511|5502)|NS 5511)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NS 5511(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NS[0-9]{1,4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPYBOXS11_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPYBOXS11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NWX-40F171MSY|NVX-32H219MSY|NVX-43U329MSY|NVX-39H211MSY|NWX-43F149MSYv?|NWX-24H121MSY|NWX-24H121WSY|NWX-32H171MSY|NVX-55U321MSY|NVX-50U329MSY|NWX-65U169TSY-A|NVX-65U321MSY|NVX-75U131MSY)x?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Novey|(?:Pro K10|(?:Force (?:F15|G20)|Alpha A1[06]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Force (F15|G20)`),
		regexp.MustCompile(`(?i)Alpha A(1[06])`),
		regexp.MustCompile(`(?i)Novey (L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NoviSea[ _](A10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEO \[Reloaded\](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TM800A620M|TM101A620M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nubia[ _]|(?:NX(?:302J|403A|404H|406E|40[X2]|503A|50[5678]J|51[0123]J|521J|523J_V1|529Jq?|5[345]1J|5[48]9J|569[HJ]|5[67]3J|575J|59[157]J|60[1689]J|61[12679]J|62[79]J|65[19]J|6[126]9J|66[67]J|679[JS]|70[129]J|71[123]J|72[1459]J|73[36]J|769J|709S|907J|789J)|NP0[13]J|Z235[12]N|Z2357N|Z6255CA|Z2353)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP0[13]J`),
		regexp.MustCompile(`(?i)Z2357N|NX302J`),
		regexp.MustCompile(`(?i)NX679[JS]`),
		regexp.MustCompile(`(?i)NX40[X2]`),
		regexp.MustCompile(`(?i)NX(403[AE]|406E|404H)`),
		regexp.MustCompile(`(?i)(NX5[12]1J|Nubia Z9 mini)`),
		regexp.MustCompile(`(?i)(NX510J|Nubia Z9 Max)`),
		regexp.MustCompile(`(?i)(?:NX549J|Nubia Z11 mini S)`),
		regexp.MustCompile(`(?i)(?:NX529Jq?|Nubia Z11 mini)`),
		regexp.MustCompile(`(?i)NX569[HJ]`),
		regexp.MustCompile(`(?i)NX6(?:08|17)J`),
		regexp.MustCompile(`(?i)Nubia[_ ]([^;)/]+)( build|[;)])`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35|Blue ND40|Green[_ ]ND[_ ]45)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nuvo[_ ](NS35)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blue (ND40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Green[_ ]ND[_ ]45(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NVIDIA|SHIELD|Tegra(Note-P1640| Note 7)|wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)wx_na_wf|wx_un_do`),
		regexp.MustCompile(`(?i)(SHIELD Tablet(?: K1)?|Tegra Note 7)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)SHIELD Andr[o0]id TV`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|FAB GO|360|8\.(?:3[178]z|[15]2|37y|3[38]|9[12378]|1[75]|6)|Air|Grande|Crunch|Ultra|Xfinit|Upsized|Venti|EVO 4G|Sonic|360[ _]ALPHA[ _]PLUS[ _]2\.0|360[ _]HD[ _]2\.0|Stream HDTV)`),
		regexp.MustCompile(`(?i)O\+[ _](Presto 700 LTE|Grande|Crunch|Ultra 2\.0|Xfinit|Ultra Lite|Ultra|Sonic|Upsized|Venti 4G|EVO 4G|8\.(?:3[178]z|37y|3[38]|[15]2|9[12378]|1[75]|6))`),
		regexp.MustCompile(`(?i)O\+_AIR`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]HD`),
		regexp.MustCompile(`(?i)O\+[ _]360[ _]ALPHA[ _]PLUS[ _]2\.0`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA Plus`),
		regexp.MustCompile(`(?i)O\+[ _]360 ALPHA`),
		regexp.MustCompile(`(?i)O\+[ _]360`),
		regexp.MustCompile(`(?i)O\+ Stream HDTV`),
		regexp.MustCompile(`(?i)O\+ FAB GO`),
		regexp.MustCompile(`(?i)Xda|O2[ -]|COCOON`),
		regexp.MustCompile(`(?i)O2 TV Box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xda[ _][a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(COCOON)`),
		regexp.MustCompile(`(?i)O2-(X[12]i|X4)`),
		regexp.MustCompile(`(?i)O2 ([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)O2-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TEG9300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OINOM[_ ](V9D|V7H|V[679])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GEN-10|GT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OKWU SIGMA|PI[_ ]Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PI[_ ]Plus`),
		regexp.MustCompile(`(?i)OLTO[_-]|(?:43ST20[HU]|32ST[23]0H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OLTO-)?(\d{2}ST\d{2}[HU])`),
		regexp.MustCompile(`(?i)OMIX[ _.]|(?:X600 NFC|Android 1[12](?:[\d.]*);(?: [\w-]+;)? X[467]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(\d*)`),
		regexp.MustCompile(`(?i)onn\.|Onn 2k|(10007148[135]A|ONA19TB00[327]|10000356[12]|100110027|100110603|10000520[6-9]|O8HD|100011886(?:C?A|_GTW)|10001188[56]|100015685-[AE]|100026191|100043279|100044018G?|10007148[1356]|TBBVNC10000520[78]|100092980A?|10013592[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(100092980A?|10007148[135]A|ONA19TB00[327]|10000356[12]|10000520[6-9]|O8HD|100011886(?:C?A|_GTW)|10001188[56]|100015685-[AE]|100026191|100043279|100044018G?|10007148[1356]|TBBVNC10000520[78]|100110027|100110603|10013592[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(4K Streaming Box)`),
		regexp.MustCompile(`(?i)ONVO[ _]|\d{2}OV|(?:Apollo Premium4K TV|0V50500|OV43400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(0V50500|OV43400)[,;]?`),
		regexp.MustCompile(`(?i)(?:ONVO[_ ])?(\d{2}OV[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo Premium4K TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KON_TIKI(2)?|Nova3Color|GoColor7|Lomonosov|Poke2Color|NovaAirC|NoteAir(?:2P?|[34]C)|TabUltraCPro|LIVINGSTONE[23]|MC_FAUST[23]|DARWIN[9X]|MC_DARWIN[678]|MC_GAMA4|MC_Cristo4|MC_NovaPro|VOLTA[45]|Kon_Tiki3|FAUST[56]|GALILEO|Poke3|KANT2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLTA([45])`),
		regexp.MustCompile(`(?i)KON_TIKI([23])?`),
		regexp.MustCompile(`(?i)(?:MC_)?FAUST([2356])`),
		regexp.MustCompile(`(?i)(?:MC_)?DARWIN([6789X])`),
		regexp.MustCompile(`(?i)LIVINGSTONE([23])`),
		regexp.MustCompile(`(?i)NoteAir([34])C`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)|Reno Ace|N1T|R8001|R820[16]|A101OP|OPG0[1-4]|A00[12]OP|(?:X90[07][0679]|U70[57]T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057]|15 Neo)[KLSTW]?|N520[79]|N5117|A33[wf]|A33fw|A37fw?|PAAM00|A303OP|PAAT00|PAC[TM]00|R7kf|R7plus[fmt]?|A1601|CPH[0-9]{4}|CPH19(69|79|23|1[179])|PB(A[TM]00|CT10|BT30|CM[13]0|[FD]M00)|P(E[RFHG]M\d{2}|E[GH]T\d{2}|DAM10|ADM00|AF[TM]00|ADT00|AHM00|BBM[03]0|BBT00|BDT00|BFT00|[CB]E[MT]00|CA[MT]00|C[CDG]M00|CA[MT]10|[CD]PM00|CRM00|CDT00|CD[TM]10|CHM[013]0|CKM[08]0|CLM[15]0|DEM[13]0|DHM00|D[RK][TM]00|DPT00|DB[TM]00|DCM00|[CD]NM00|DVM00|DY[TM][12]0|DNT00|EA[TM]00|CRT01|EDM00)|PFDM00|PEG[MT]10|PEM[MT][02]0|PDCT00|PDET10|PDS[TM]00|PEC[MT]30|PE[QYPEXNLU]M00|PCHT[13]0|PCRT00|PFGM00|PF[VU]M10|A102OP|PFCM00|PFJM10|PGCM10|PECM20|PDAT10|A103OP|PCCT00|PFTM[12]0|PFFM20|OW19W[123]|OW20W1|PGJM10|PGAM10|PF[EF]M10|Reno[4567]|Find X[23]|Find N| R7sf| 1201|[56].*; (?:R7[gf])|OPD(?:210[12]A?|220[12]|230[123])|PFZM10|PGIM10|A1603|A201OP|PESM10|PGBM10|PH[WQJMU]110|PH[AY]120|PGGM10|PG[WX]110|PGU110|PCCM40|PGT110|PGEM10|RX17Neo|R15 Dream Mirror|R9 Plustm A|PGFM10|A301OP|P(?:J[CGJSU]|H[FVSTNYZ])110|K9 Pro 5G| K9[xs]|CPH1821EX|PJ[HYBVRW]110|PKA110|CHP(?:1723|2219|2365)|PKD130|RX17Pro|F7 Youth|A302OP|Reno [56]|PKD110|PJT110|PKC110|PJU110_A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCH[TM]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHQ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2681|PKD130`),
		regexp.MustCompile(`(?i)PKA110|CPH2693`),
		regexp.MustCompile(`(?i)PJY110|CPH2665|CPH2639`),
		regexp.MustCompile(`(?i)PCHT30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2083|CPH2077)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2179)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2271)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2349|CPH2351`),
		regexp.MustCompile(`(?i)CPH22(?:69|75)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(CPH1837|CPH2669|PAD[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A37f(w)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A37f(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2579(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PESM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH20(?:81|73|31|15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH18(?:0[35]|53)|PBBM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1809|PBA[TM]00|PBBT30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:3[13]|43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEC[MT]30|PECM20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDVM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEFM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDA[TM]10|CPH2069|CPH2061)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2127|213[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2135(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2321(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2195|OPG02|CPH2303)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2239|CPH2241)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2273(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEM[MT][02]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2631|CPH3669`),
		regexp.MustCompile(`(?i)(?:A102OP|CPH2309)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH170[15]|CPH2407)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFTM20|CPH2387`),
		regexp.MustCompile(`(?i)CPH19(?:09|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH190[15]|PBF[TM]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1717(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1801(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]20|CPH2067)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH(?:2161|2099)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CHP|CPH)2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2263(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDY[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1715)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2339|CPH2385)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2495|CPH2483)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2565`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A79kt`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH255[37]|A303OP)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2473`),
		regexp.MustCompile(`(?i)PCD[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PBBT00|PBBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDBM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1729(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1827(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PCA[TM]10|CPH193[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH1937|CPH1941|PCHM30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCPM00|CPH20[02]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDK[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEH[MT]00|CPH212[13])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PFGM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2203|CPH2333)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2197)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2365|PELM00`),
		regexp.MustCompile(`(?i)PCE[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1903(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2455|CPH2461`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X9009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH191[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH19(?:69|87)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2095`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2119)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH172[37]|CHP1723)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1725(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH18(?:[15]9|21|21EX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1825|CPH1881)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1823(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2285|F19 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2213(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X909T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R827T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X907[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?X900[067](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PEUM00`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?Find N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGU110|CPH2439)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2437|PGT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2519|PHT110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PHN110|CPH2499)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R815[TW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8015(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R821T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U707T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?U705T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH187[15]|PAF[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PAHM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDE[TM]10|CPH2023)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH2005|Find X2 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PDEM30|OPG01|CPH2025|Find X2 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEDM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEEM00|CPH2173|OPG03|Find X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Find X3 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2307|PFFM10`),
		regexp.MustCompile(`(?i)CPH2305|PFEM10|PFFM20`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R1011 Build`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PBC(?:M30|T10))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCNM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PCLM50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(PERM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGCM10| K9x(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGGM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PERM10| K9s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH2373`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:PGJM10|CPH2337)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PGIM10`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJC110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PHS110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJG110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PHF110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?PJR110`),
		regexp.MustCompile(`(?i)CPH2667|PJT110`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N5117(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?N520[79](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R831K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:R831[SL]|1201)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33[wf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?A33fw(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R11 Plusk?t?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R8001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R820[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1721|R11s Plust?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1719|R11st?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1835|PAC[TM]00|PAAM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH183[13]|PAAT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PBCM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1879|PBE[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1893)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1877|PBD[MT]00|RX17Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R8006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R800[07](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R810[679](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7kf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sPlus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7sf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7[gf](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plus[mt]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?R7Plusf(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:X9079|R9 Plustm A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1607|R9sk)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1611|R9s Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1917|PCA[MT]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1983(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1919|PCCM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2525|PHV110|A302OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2521|PHU110`),
		regexp.MustCompile(`(?i)PJJ110|CPH2607`),
		regexp.MustCompile(`(?i)CPH2599|PJH110`),
		regexp.MustCompile(`(?i)PJ[VW]110`),
		regexp.MustCompile(`(?i)(?:PCKM00|CPH1907)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH1989(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCKM80|CPH1945|CPH1951)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2043|PDCT00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2013|A002OP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDCM00|A001OP|CPH2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCR[MT]00|CPH203[567]|CPH2009)`),
		regexp.MustCompile(`(?i)PCRT01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2113(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2125(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDP[TM]00|CPH2091)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEA[TM]00|Reno4 SE 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDN[TM]00|CPH2089)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2065|Reno4 Z 5G`),
		regexp.MustCompile(`(?i)CPH2209(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2199|A10[13]OP)|Reno5 A 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)CPH2205|Reno5 Lite(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:PEG[MT]00|CPH2145|Reno5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PEG[MT]10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2217(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2211|Reno5 Z 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PDS[TM]00|CPH220[17]|Reno5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDR[TM]00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH1921|PCCM40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2159|(?:Reno5 4G|Reno 5)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)CPH2237|Reno6 Z 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PEPM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH224[79]|Reno6 Pro 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PENM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2235|PEQM00|CPH2251|Reno6 5G|Reno 6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PFJM10|CPH2371|CPH2363|Reno7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)CPH2353|OPG04|A201OP`),
		regexp.MustCompile(`(?i)PFCM00|Reno7 SE(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:PFDM00|CPH2293|Reno7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH235[79]|PGAM10`),
		regexp.MustCompile(`(?i)CPH2481|CPH2505`),
		regexp.MustCompile(`(?i)CPH252[34]|A301OP`),
		regexp.MustCompile(`(?i)(?:PEYM00|K9 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PEXM00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCLM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PDHM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCGM00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?(?:CPH1979|PCD[TM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A59st(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPPO ?(CNM632)`),
		regexp.MustCompile(`(?i)OPD2102A?`),
		regexp.MustCompile(`(?i)OPD230[23]`),
		regexp.MustCompile(`(?i)OPD220[12]`),
		regexp.MustCompile(`(?i)OW19W[13]`),
		regexp.MustCompile(`(?i)N1T?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)R([0-9]{3,4}[KSTW]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CPH[0-9]{4})`),
		regexp.MustCompile(`(?i)(?:OB-)?OPPO[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:Spider 8|S60Pro|MODERN 8|PILOT [12]|FLAT 1C|Tiger 1[023]|android 13(?:[\d.]*);(?: [\w-]+;)? (?:Pad 1[158]|Pad 8)|android 12(?:[\d.]*);(?: [\w-]+;)? (?:C[678]0|C30 Pro|Pad (?:[167]0|13))|Pad [78]0 WiFi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PILOT ([12])`),
		regexp.MustCompile(`(?i)Tiger (1[023])`),
		regexp.MustCompile(`(?i)(C[678]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pad ([78]0) WiFi`),
		regexp.MustCompile(`(?i)Pad ([167]0|1[1358]|8)`),
		regexp.MustCompile(`(?i)OTTO (CR05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUJIA(?:2018)?[-_ ]S20`),
		regexp.MustCompile(`(?i)OUJIA[ _](S10|S8|S11|T50|S2[79]|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ox-([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Ox-p010-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OYSIN[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Apex(?:[123])|CC1 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CC1) PRO`),
		regexp.MustCompile(`(?i)Apex([123])`),
		regexp.MustCompile(`(?i)(?:Tab_A6|A1[35]_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab_(A6)`),
		regexp.MustCompile(`(?i)(A1[35])_EEA`),
		regexp.MustCompile(`(?i)(?:OBA_?(?:SMART_3|Conecta_Max|Conecta_4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBA_(Conecta_(?:Max|4G))`),
		regexp.MustCompile(`(?i)OBER[_ ](Primo E8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Obi[ _-]|(?:(?:SJ1\.5|SJ2\.6|S(400|452\+|45[13]|50[127]|503\+?|520|55[01])|falcon)|SJ1-5|SJ[23]\.2| SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SJ(\d)[.-](\d)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S400`),
		regexp.MustCompile(`(?i)(?:Obi_)?S451|falcon`),
		regexp.MustCompile(`(?i)(?:Obi_)?S452\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S453`),
		regexp.MustCompile(`(?i)(?:Obi[_ ])?(SF1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Obi_)?S501`),
		regexp.MustCompile(`(?i)(?:Obi_)?S502`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503\+`),
		regexp.MustCompile(`(?i)(?:Obi_)?S503`),
		regexp.MustCompile(`(?i)(?:Obi_)?S507`),
		regexp.MustCompile(`(?i)(?:Obi_)?S520`),
		regexp.MustCompile(`(?i)(?:Obi_)?S550`),
		regexp.MustCompile(`(?i)(?:Obi_)?S551`),
		regexp.MustCompile(`(?i)(?:Obi_)?S454`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Obi[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:FIRE_V[78]|POMELO-MAX\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_V([78])`),
		regexp.MustCompile(`(?i)POMELO-MAX\+`),
		regexp.MustCompile(`(?i)ODYS[ _-]|IEOS[_ ]([^/;]+)|NOON(?:_PRO)? Build|SPACE10_(?:PLUS|PRO)_3G|THOR_?10|TAO_X10|RAPID_?(?:10|7)_?LTE|MAVEN_?10_|CONNECT[78]|ELEMENT10_PLUS_3G|XELIO[_0-9P]|PACE_10_LTE|(?:ADM816HC|ADM8000KP|NEO6_LTE|EOS10|AEON|FALCON_10_PLUS_3G|SPACE_ONE_?10(?:SE)?|FUSION|THANOS_10|MAVEN_X10_HD(?:_LTE)?|JUNIOR_8_PRO|JuniorT8Pro|(?:NOVA|PYRO)_X?7_PLUS_3G|UNO_X8|MAVEN_[GT]10(?:_pro)?|MAVEN_7_PLUS|SLADE_X55|XELIO_PRO_10_LTE|GOAL_10_PLUS_3G|NOTOSplus3G|PACE ?10|Titan_10_LTE|PEDI_PLUS_W|NoteTab_Pro|UNO_X10|NERON)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XELIO[_ ]HD10[_ ]LTE`),
		regexp.MustCompile(`(?i)XELIO[_ ](HD10|A10)`),
		regexp.MustCompile(`(?i)MAVEN_?10_PRO_PLUS_3G`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PLUS`),
		regexp.MustCompile(`(?i)MAVEN_?10_?PRO`),
		regexp.MustCompile(`(?i)MAVEN_?10_?HD`),
		regexp.MustCompile(`(?i)RAPID_?7_?LTE`),
		regexp.MustCompile(`(?i)RAPID_?10_?LTE`),
		regexp.MustCompile(`(?i)THOR_?10 Build`),
		regexp.MustCompile(`(?i)PACE ?10`),
		regexp.MustCompile(`(?i)UNO[_ ]X(8|10)`),
		regexp.MustCompile(`(?i)THOR_?10_PLUS_3G`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]W`),
		regexp.MustCompile(`(?i)IEOS[_ ]NEXT[_ ]10`),
		regexp.MustCompile(`(?i)IEOS[_ ]QUAD[_ ]PRO`),
		regexp.MustCompile(`(?i)NEO6[_ ]LTE`),
		regexp.MustCompile(`(?i)IEOS[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON Build`),
		regexp.MustCompile(`(?i)(?:ODYS[ _-])?NOON_PRO`),
		regexp.MustCompile(`(?i)Odys[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Okapi`),
		regexp.MustCompile(`(?i)Okapi10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia|Signature (?:L|Pro|Touch)|(?:MAGIC\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Signature (L|Pro|Touch)`),
		regexp.MustCompile(`(?i)Okapia X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]Mirage(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAGIC\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Okapia[_ ]?Magic(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(?:LS[12]|smart11|LX[56])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OK-(LS[12]|LX[56])`),
		regexp.MustCompile(`(?i)Olax |Ocean K(?:10|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean (K10|K8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olax Prime 12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Olkya (Liger 71G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ollee008twoa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TREK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Onda|(?:(?:V820w|V891[w]?|V919(?: 3G)? Air)[ _-]DualOS|(?:V919 4G Air|V989 Air|V972) Core[48]|T2101L2B1C| V10 4G|OBOOK20[_ ]PLUS|OBOOK (?:20 SE|20 DualOS|20 PLUS(?: DUALOS)?)|OBOOK10 SE|V10_4G|V919 Air CH DualOS| T9S|V116w-DualOS|V80[ _]SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?: T9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONDA[ _]MID`),
		regexp.MustCompile(`(?i)V820w[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891W[ _-]DualOS`),
		regexp.MustCompile(`(?i)V891[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 3G Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)V919 Air[ _-]DualOS`),
		regexp.MustCompile(`(?i)T2101L2B1C|OBOOK 20 PLUS DUALOS`),
		regexp.MustCompile(`(?i)OBOOK[_ ]?20[_ ]PLUS`),
		regexp.MustCompile(`(?i)V10 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V80[ _]SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 DualOS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK 20 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OBOOK10 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V10_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([a-z0-9]+)[ _]Onda`),
		regexp.MustCompile(`(?i)Onda ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)X-music II pro|X-music (?:S|Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (?:Ⅲ|III)`),
		regexp.MustCompile(`(?i)X-music (S)`),
		regexp.MustCompile(`(?i)OneLern(DB\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS|(?:PGKM10|CPH251[35]|CPH2551|CPH2569|CPH249[31]|CPH244[79]|CPH240[19]|CPH24[12]3|CPH246[579]|CPH2487|CPH241[157]|CPH2419|CPH245[91]|CPH2399|CPH238[19]|CPH258[135]|CPH2573|A0001|A200[135]|AC200[13]|A300[03]|A3010|A5000|A600[03]|A601[03]|BE201[1235]|BE202[5689]|E100[135]|GM191[03517]|GM190[0135]|GM192[05]|HD191[0137]|HD190[01357]|HD1925|IN201[013579]|IN202[0135]|KB200[01357]|LE211[01357]|LE212[035]|GN2200|Nord N10 5G|LE210[01]|LE212[17]|DE211[78]|DN210[13]|EB210[13]|MT211[01]|IV2201|NE221[01357]|PG[PZ]110|PH[BKP]110|OPD(?:2203|2403|2304)|PJ[ADEFXZ]110|CPH26(?:0[59]|1[139]|21|4[95]|5[35]|6[13]|91))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PJZ110|CPH265[35]|CPH2649`),
		regexp.MustCompile(`(?i)CPH2691|CPH2645`),
		regexp.MustCompile(`(?i)(?:CPH2585|CPH2611|CPH2609)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PJD110|CPH258[13]|CPH2573)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH244[79]|PHB110|CPH2451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2487(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJE110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJX110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJF110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHK110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PJA110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGKM10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGP110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGZ110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AC200[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2399|CPH2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EB210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH266[13]`),
		regexp.MustCompile(`(?i)CPH26(?:19|21)`),
		regexp.MustCompile(`(?i)CPH(?:2381|2409)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH246[57](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2569(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH249[13]`),
		regexp.MustCompile(`(?i)BE2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE201[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DE211[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GN2200|CPH2459)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH251[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CPH2605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2469(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BE202[69]|Nord N10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BE2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DN210[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IV2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN202[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB2000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OnePlus 8 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IN201[01357]|OnePlus 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IN2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE211[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MT211[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE210[01](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2423(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH2411(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CPH241[3579](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LE212[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE2210(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NE221[1357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:GM191[01357]|OnePlus 7 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GM190[0135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD190[01357](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD191[0137]|OnePlus 7T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:HD1925|GM192[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KB200[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:KB2007|OnePlus ?8TMO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A200[135]|OnePlus2`),
		regexp.MustCompile(`(?i)E100[135](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A3010|OnePlus3T`),
		regexp.MustCompile(`(?i)A300[03]|OnePlus3`),
		regexp.MustCompile(`(?i)A5010|OnePlus[ ]?5T`),
		regexp.MustCompile(`(?i)A5000|OnePlus5`),
		regexp.MustCompile(`(?i)A600[03]|OnePlus6`),
		regexp.MustCompile(`(?i)A601[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2403(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OPD2304(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:du_)?ONEPLUS[ _]?([^;/,)(]+)(?: Build|[;,)])`),
		regexp.MustCompile(`(?i)ONIDA[_ ](i4G1)|(?:AFTLE|AFTTIFF55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIDA[_ ](i4G1)`),
		regexp.MustCompile(`(?i)AFTLE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTTIFF55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ONIX S405|AT101-1116|ONIX_8_3G_01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AT101-1116)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ONIX_8_3G_01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S405)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP-CMX1|TA2C-M8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA2C-M8)`),
		regexp.MustCompile(`(?i)(DP-CMX1)`),
		regexp.MustCompile(`(?i)Sagemcom DIW387_UHD_OOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Opel ?Mobile|(?:OpelMobile_Smart(?:JX|X1)|Easy_Smart_2|Rugged60Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Openbox (?:A[3489](?: (?:Pro|Lite))?)|AS1_HD|AS_?4K[_-](?:CI(?:_PRO|_Lite)?(?:_PLUS)?|PLUS|2X)|AS_?4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Openbox (A[3489](?: (?:Pro|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AS_?4K_CI_PRO`),
		regexp.MustCompile(`(?i)AS_?4K[_-](2X|CI)`),
		regexp.MustCompile(`(?i)AS_?4K[_-]PLUS`),
		regexp.MustCompile(`(?i)AS_?4K`),
		regexp.MustCompile(`(?i)(?:(?:Sigma|Beeta)_4_0|Active 5\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 5\.0`),
		regexp.MustCompile(`(?i)Opsson|IUSAI`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)IUSAI[ _]([^/;\)]+)[/;\)]`),
		regexp.MustCompile(`(?i)Opsson[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:Opsson-)?Opsson[ -_]([^/;]+)/`),
		regexp.MustCompile(`(?i)Optoma[-_ ]`),
		regexp.MustCompile(`(?i)SPV[ -]?([a-z0-9]+)|Orange[ _-]([^/;]+)( Build|\))|SC/IHD92|Nura 2|FunTab ([^/;]+) Build|Orange[ _](?:Mahpee|Nevalink|Nevamini)|Dive 50|MouveTab7WIFI|(?:Sanza-)?M56[02]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange TV Box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange_Nevalink(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange_Nevamini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sanza-)?M56[02]F3`),
		regexp.MustCompile(`(?i)FunTab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Orange[ _-](Rise) ?(3[125]|5[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+) Dual(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Orange[ _-])?Dive ?(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orange[ _-](Daytona|Dublin|Fova|Gova|Hi 4G|Hiro|Kivo|Monte Carlo|Neva 80|Neva play|Nura|Reyo|Rise[_ ](3[034]|40|5[345])|Rono|Roya|San Francisco|Tactile internet 2|Tado|Yomi|Yumo|Zali|Mahpee|Neva leaf|Sanza touch|Viking L508|Zilo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SPV[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)OrangePi[_ ]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)(?:RC(?:2200|501|545|555|60[89])L|R678EL|R8L5T|RC608L2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(OT-DVB\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]`),
		regexp.MustCompile(`(?i)Orbsmart[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(LeNumero[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ -]+), (?:wired|wireless)|CRANE-EVB`),
		regexp.MustCompile(`(?i)ORION, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(CRANE-EVB)`),
		regexp.MustCompile(`(?i)OUKI|OK[AU][0-9]+[a-z]* Build|OKP6 Pro`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)([^;/)]+) Build/OUKI`),
		regexp.MustCompile(`(?i)OUKI[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(OK[AU][0-9]+[a-z]*) Build`),
		regexp.MustCompile(`(?i)OU[Kc]ITEL|(?:Android 10(?:[\d.]*);(?: [\w-]+;)? (?:C19|C22)|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:C11|U23)|Android 9(?:[\d.]*);(?: [\w-]+;)? (?:K12)|Android 11(?:[\d.]*);(?: [\w-]+;)? (?:C25)|Android 12(?:[\d.]*);(?: [\w-]+;)? (?:C3[12])|Android 1[2-4](?:[\d.]*);(?: [\w-]+;)? (?:RT[89])|Android 1[23](?:[\d.]*);(?: [\w-]+;)? (?:K16|C51|C3[3568])|Android 7(?:[\d.]*);(?: [\w-]+;)? (?:U1[78]|U22)|(?:C1[569]|K10000|K[46]000)(?:[ _]Pro)|K4000Pro|C1[18]_Pro|C1[0237] Pro|C2[13] Pro|C12 Plus|[UK]15 Pro|K15_Plus|U16 Max|C11_F|U7 Max|U7 Plus|U11[_ ]Plus|U20_Plus|C21 Plus|OK6000 Plus|WP5000|WP[58] Pro|K[46]000[ _](?:Plus|Lite)|K9 Pro|Y4800|K10000|K7 Power|K[4-8]000| RT[12356]| OT[568]| C 38| OT11| WP(?:[125-79]|1[02356789]|2[0123678]|3[0235689]|5[02])|K[37]_Pro|K13_Pro|U25_Pro|OKT[13]|UniverseTap|RT7 TITAN(?: 5G)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WP(28 [ES])`),
		regexp.MustCompile(`(?i) C 38(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C1[0-9]|C2[13]|C31|K10000|K[46]000|WP\d+|U[12]5|K[379]|K1[35])[ _]?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K7 Power(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000|U16|U7)[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U20|K[46]000|U7|U11|OK6000|K15|C12|C21)[_ ]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K4000)[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(K10000)[_ ]Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UniverseTap(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Oukitel-)?(Y4800|K10000|K[4-8]000|WP5000|[CU]2|U1[078]|U2[23]|C1[19]|C[23]2|C3|C3[13568]|C51|WP15 S|C25)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? K([37]|1[26])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RT[1235689]|OKT[13]|OT5 S|OT[568]|OT11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OUKITEL)? (WP\d+|C11_F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OUKITEL; ([^;]+);`),
		regexp.MustCompile(`(?i)OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 10(?:10|27)|Livecore7032|Vertis 5021 Aim|Vertis 4004 You|OV1027[34]G`),
		regexp.MustCompile(`(?i)OV-Vertis[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)OV(\d+)([34])G`),
		regexp.MustCompile(`(?i)(?:OV-)?Qualcore[-_ ](\d+)[-_ ]([34])G`),
		regexp.MustCompile(`(?i)(OV-[a-z]+(?:[^/();]+))(?: Build|[();])`),
		regexp.MustCompile(`(?i)(?:OWWO[ _]?(?:[1457]S|Q[78])|CARNIVAL B5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWWO[ _]?([1457]S|Q[78])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARNIVAL B5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters|T84ERI[ _]3G|T72HM(s_)?3G|T102MS_3G|T102ER3G|T72ER3G|(T74HMi|T84Bi)[_ ]4G|T74MR4G|T74RD|T84Ni[_ ][34]G|Pacific(?:[ ]?800i|E)|T104B_[34]G|IndianV|T72HA_3G|T12V? 3G|T74D_3G|T74N_3G|T74SC_3G|T74Mai_3G|T74MRi3G|T104MBi_3G|T104SCi_3G|T104ER4G|Arctic450|Atlantic(?:4G|454|[EV])|AntarcticE|Life4G|T7V 3G|UBS1|Pacific(?:VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Pacific[ ]?800i`),
		regexp.MustCompile(`(?i)(?:Oysters[_ ])?Pacific(VS?|I?4G|454)`),
		regexp.MustCompile(`(?i)Atlantic(454|[EV]|4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Arctic(450)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AntarcticE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Life4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UBS1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Oysters ((?:Arctic|Indian|Atlantic|Pacific)[^/;]+) Build`),
		regexp.MustCompile(`(?i)(T84ERI[ _]3G|T72HM(s_)?3G|(?:(T74HMi|T84Bi)[_ ]4G)|T84Ni[_ ][34]G)`),
		regexp.MustCompile(`(?i)(T74MR|T102MS|T104B|T74SC|T74[DN]|T72HA|T102ER|T72ER|T104SCi|T104MBi|T104ER|T7V|T12V?|T74MRi)[ _]?([34]G)`),
		regexp.MustCompile(`(?i)(T74RD)`),
		regexp.MustCompile(`(?i)Oysters ([^/;]+)( Build|\))`),
		regexp.MustCompile(`(?i)OYYUT11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ozone HD|OzoneHD[ _]?(T2 WiFi|Nexo|4K(?: TV)?|Fun|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-0[143]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-04P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-03P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MD-01P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PAGRAER (?:P50 Pro)|PGR3042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAGRAER (P50 Pro)`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]`),
		regexp.MustCompile(`(?i)PAPYRE[_ ]pad_7\.1`),
		regexp.MustCompile(`(?i)Art-PCB-V116|Bee-PCB-V216|Clap-PCB-I316|PCB-T(?:10[34]|715|750)|Kova[ _-]PCB-\w+|Kova_Plus_PCB_T735`),
		regexp.MustCompile(`(?i)PCB-T(715|750)`),
		regexp.MustCompile(`(?i)Kova[ _-]PCB-T730`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(?:PL5507|PL571US|PH3501|PH400[12]|E400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PCD[ _])?(P[HL]\d{4}|E400)`),
		regexp.MustCompile(`(?i)PCD[ ]?50[689]|(?:PL620|P63L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PCD[ ]?(50[689])`),
		regexp.MustCompile(`(?i)(PL620|P63L)`),
		regexp.MustCompile(`(?i)PEAQ[ _]|PET \d{3}|LGE; (?:PQ[a-z0-9-]+);`),
		regexp.MustCompile(`(?i)PET ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)LGE; (PQ[a-z0-9-]+);`),
		regexp.MustCompile(`(?i)PINE ([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PIRANHA[_ ]|(?:Ultra 4 Tab 9\.0|Ultra 5 Tab White|Piranha8032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro II Tab 7\.0`),
		regexp.MustCompile(`(?i)Ultra 4 Tab 9\.0`),
		regexp.MustCompile(`(?i)PIXPRO[_ ]`),
		regexp.MustCompile(`(?i)Aura[_ ]TELPAD[_ ]MT7`),
		regexp.MustCompile(`(?i)Aura[_ ]TELPAD[_ ]MT7`),
		regexp.MustCompile(`(?i)(?:POCO[ _](?:X[2-6](?:_SN)?|F[26] PRO|M[32456]|M5s|F[356]|F4(?: GT)?|C40|C3|C51|C[67]5)|M2010J19(?:C[GI]|GC)|M2007J20C[ITG]|M2012K11AG|M2006C3MI|M2004J19PI|M2102J20S[GI]|M2103K19P[IGY]|21091116AG|21061110AG|M2104K10I|211033MI|220111[67]P[GI]|camellian?|21121210G|2203(?:1116AI|33QPG)|22021211R[GI]|2204121(?:6U?G|9P[GI])|2207(?:1219C[GI]|33SP[IH]|117BPG)|22101320[GI]|22111317P[GI]|23013PC75G|2302EPCC4[HI]|23049PCD8[GI]|2305EPCC4G|22127PC95I|2310FPCA4[GI]|MZB0(?:GGWIN|E6DIN|7Z[0-4]IN)|23076PC4BI|2312(?:FRAFDI|BPC51[HX]|FPCA6G|2PCD1[GI]|8PC33I)|2311(?:3RKC6G|DRK48[GI])|2406(?:9PC21[GI]|6PC95I)|2404APC5FG|2405CPCFBG|24095PCADG|2410FPCC5G|MZB9965IN|MZB874[13456]IN|M2004J11G|MZB0A0MIN|2412DPC0A[GI])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:POCO X2|MZB874[13456]IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23113RKC6G|POCO F6 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24069PC21[GI]|POCO F6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2311DRK48[GI]|POCO X6 Pro 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)23122PCD1[GI]|POCO X6 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2312FRAFDI|MZB0GGWIN`),
		regexp.MustCompile(`(?i)2412DPC0A[GI]`),
		regexp.MustCompile(`(?i)(?:M2012K11AG|POCO F3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23013PC75G|POCO F5 Pro`),
		regexp.MustCompile(`(?i)23049PCD8[GI]|POCO F5`),
		regexp.MustCompile(`(?i)M2004J19PI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19P[IGY]|M3 Pro 5G|camellian?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCO M([23]) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AG|M4 Pro 5G`),
		regexp.MustCompile(`(?i)22041219P[IG]|POCO M4 5G(?: Build|[;)])`),
		regexp.MustCompile(`(?i)22071219C[IG]|POCO M5(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2207117BPG|POCO M5s`),
		regexp.MustCompile(`(?i)2404APC5FG|POCO M6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2312FPCA6G|POCO M6 Pro(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2201117P[GI]|POCO M4 Pro`),
		regexp.MustCompile(`(?i)(?:M2010J19C[GI]|POCO M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20C[GT]|POCO X3 NFC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102J20S[GI]|POCO X3 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061110AG|POCO X3 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J20CI|MZB9965IN|POCO X3(?:_SN)?|MZB07Z[0-4]IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22111317P[GI]|POCO X5 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216UG|POCO X4 GT Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216G|POCO X4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320[GI]|POCO X5 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201116P[GI]|POCO X4 Pro 5G`),
		regexp.MustCompile(`(?i)(?:M2104K10I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121210G|POCO F4 GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211R[GI]|POCO F4`),
		regexp.MustCompile(`(?i)(?:M2006C3MI|POCO C3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:211033MI|22031116AI|MZB0A0MIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QPG|POCO C40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2305EPCC4G|MZB0E6DIN|2302EPCC4[HI]|POCO C51(?: Build|[;)])`),
		regexp.MustCompile(`(?i)220733SP[IH]`),
		regexp.MustCompile(`(?i)2312BPC51[HX]`),
		regexp.MustCompile(`(?i)2310FPCA4[GI]|POCO C65`),
		regexp.MustCompile(`(?i)2410FPCC5G|POCO C75`),
		regexp.MustCompile(`(?i)(?:POCO F2 PRO|M2004J11G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X5 GT PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL|P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P9000_MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POPTEL K1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(KING 7S?)`),
		regexp.MustCompile(`(?i)PRIME (O8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(\d)K Pro Android TV`),
		regexp.MustCompile(`(?i)PROFILO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PULID[ _]|F1[01357]\+? Build`),
		regexp.MustCompile(`(?i)F(1[01357]\+?) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)PULID[ _]([a-z0-9_]+)\)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D|DAYTONA-G12|MONZA-T7|SILVERSTONE-T(?:5A|10)|EasyNote TV11HC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SILVERSTONE-(T5A|T10)`),
		regexp.MustCompile(`(?i)(PB1009|M10[45]00|M7500|M7600-D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pre|Pixi)/(\d+)\.(\d+)|Palm|Treo|Xiino|PVG100(?:E_RU|E)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:Pre|Pixi))/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)Palm(?:[ -])?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Treo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Xiino|Palmscape`),
		regexp.MustCompile(`(?i)Panasonic|PANATV[0-9]+|Viera/|4KTV-0SU|(?:P902i|P-0[28]D|FZ-B2D|FZ-[NX]1|FZ-A2A|DMC-CM1|P-01[JK]|P-0[23]E|P55 Max)(?:[);/ ]|$)|Eluga[ _]|P55 Novo 4G`),
		regexp.MustCompile(`(?i)P-01J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-03E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P-02E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Eluga[ _]I7(?:_EE)?`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:Panasonic_)?Eluga[ _-]([^);/]+)[;/)]`),
		regexp.MustCompile(`(?i)(DMC-CM1)`),
		regexp.MustCompile(`(?i)P-02D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FZ-[XN]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FZ-(B2D|A2A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P(\d*) NXT`),
		regexp.MustCompile(`(?i)P902i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})\.Mediatek`),
		regexp.MustCompile(`(?i)PANATV[0-9]+|Viera/`),
		regexp.MustCompile(`(?i)(43D1200|(?:32|43)D1270|32D1280|4KTV-0SU[WF]?)`),
		regexp.MustCompile(`(?i)PANASONIC, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)PANASONIC,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Panasonic[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (P[a-z0-9]+)`),
		regexp.MustCompile(`(?i)P-08D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panavox Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Boom P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panodic(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panoramic[_ ](FQ-058/2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pantech|P[GN]-|PT-[a-z0-9]{3,}|TX[T]?[0-9]+|IM-[a-z0-9]+(?:[);/ ]|$)|ADR910L`),
		regexp.MustCompile(`(?i)Pantech[ -]?(P4100)`),
		regexp.MustCompile(`(?i)Pantech[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Pantech_([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(P[GTN]-[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+) Pro`),
		regexp.MustCompile(`(?i)(TX[T]?[0-9]+)`),
		regexp.MustCompile(`(?i)(IM-[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Xplorer_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EV1 PRO|Partner[_ ]Evolution(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Partner[_ ]Evolution`),
		regexp.MustCompile(`(?i)Pelitt[ _]`),
		regexp.MustCompile(`(?i)Pendoo|A5X MAX(?:[\.-]\w+)?\.01\.d4|(?:PNDP60L10BLK|PNDP60M7PUR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pendoo ?(T95Z|X10) PLUS`),
		regexp.MustCompile(`(?i)Pendoo ?X8PRO+`),
		regexp.MustCompile(`(?i)Pendoo[ \.]?(X9[29]|T95)`),
		regexp.MustCompile(`(?i)A5X MAX(?:[\.-]\w+)?\.01\.d4`),
		regexp.MustCompile(`(?i)(PNDP60L10BLK|PNDP60M7PUR)`),
		regexp.MustCompile(`(?i)Penta[ _]|(?:PS650)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pentagram|Quadra|Monster X5`),
		regexp.MustCompile(`(?i)(?:PENTAGRAM[_ ])?EON[_ ]PRIX`),
		regexp.MustCompile(`(?i)Quadra 7(?: UltraSlim)?`),
		regexp.MustCompile(`(?i)Monster X5?`),
		regexp.MustCompile(`(?i)Quadra ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?TAB ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)Pentagram ?([^);/]*) Build`),
		regexp.MustCompile(`(?i)(PHICOMM|E5051)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C630 \(CLUE L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E653\(ENERGY L\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM ENERGY 3\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)E5051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C6051(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHICOMM[ _]Clue[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)PHILCO[ /]|(PCS0[12]|PH350B|PTB(?:10|[78])R|PTB7PAP_PTB7PAB_PTB7PAR|Hit Max|Hit P1[023]|HIT P8|HIT P10a|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hit (P1[023]|P8)`),
		regexp.MustCompile(`(?i)(PCS0[12]|PH350B|Hit Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PTB(?:10|[78])R|TP7A4|TP10A1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHILCO Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PH60D16DSGWN4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PTB7PAP_PTB7PAB_PTB7PAR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips|NETTV/|2020/2021 UHD Android|10BDL4151T|Xenium S[25]66|(?:NeoViu D1|PI3210G|TPM1[79]1E|70PUH6774_96|QM152E|QM16[134]E|TLE(?:821L|722G)|AND1E|S397|W5510|S410J|SCN550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(10BDL4151T)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?Xenium[ _](S[25]66|V787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(X818|X588)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Philips[_ ])?(S397|W5510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AND1E|Google)(?: TV)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PI3210G)`),
		regexp.MustCompile(`(?i)(TPM1[79]1E)`),
		regexp.MustCompile(`(?i)QM152E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QM16[134]E)`),
		regexp.MustCompile(`(?i)(70PUH6774)_96`),
		regexp.MustCompile(`(?i)(202[01])/(?:20)?(2[12]) (?:Philips )?UHD Android`),
		regexp.MustCompile(`(?i)(TLE821L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE722G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S410J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Philips, BDP([0-9]{4})`),
		regexp.MustCompile(`(?i)Philips, ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(NETTV/[0-9.]{5})`),
		regexp.MustCompile(`(?i)Philips-FISIO ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Philips[ _-]?([a-z0-9\-@]+)`),
		regexp.MustCompile(`(?i)(?:PHONEMAX[_ ](?:Saturn(?:[_ ]X)?|Mars|Venus X)|Rocky 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn[_ ]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Saturn(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Mars(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHONEMAX[_ ]Venus X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rocky 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pipo[_ ]|PipoM9Pro`),
		regexp.MustCompile(`(?i)Pipo[_ ]([TP]9)`),
		regexp.MustCompile(`(?i)PIPO[_ ](X10|X9S)`),
		regexp.MustCompile(`(?i)(?:Pico (?:G2 4K|Neo ?3|4)|A8110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pico (G2 4K|Neo 3|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A8110)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pioneer|.*; R1 Build|(?:dvr700pi|XDP-300R|F9212[AB]|SDA-835TAB|SDA-80?TAB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i).*; R1 Build`),
		regexp.MustCompile(`(?i)(XDP-300R)`),
		regexp.MustCompile(`(?i)(F9212[AB]|SDA-835TAB|SDA-80?TAB)`),
		regexp.MustCompile(`(?i)Pioneer, ?([a-z0-9_ -]+), ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Pioneer[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)PIONEER COMPUTERS (DreamBook)`),
		regexp.MustCompile(`(?i)Infineum[_ ](Z4?5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixelphone S1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pixus|(hiPower|Touch_7_3G|Ride[_ ][34]G|Play[ _]Three[ _]v(?:[234]\.0|3\.1))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ride[_ ]([34])G`),
		regexp.MustCompile(`(?i)Play[ _]Three[ _]v([234]\.0|3.1)`),
		regexp.MustCompile(`(?i)Pixus[ _]Sprint`),
		regexp.MustCompile(`(?i)Pixus[ _]Drive`),
		regexp.MustCompile(`(?i)Pixus[ _]Wing`),
		regexp.MustCompile(`(?i)Pixus[ _]Line`),
		regexp.MustCompile(`(?i)Pixus[ _]Titan`),
		regexp.MustCompile(`(?i)Pixus[ _]Folio`),
		regexp.MustCompile(`(?i)(?:Pixus_)?Touch[ _]7[ _]3G`),
		regexp.MustCompile(`(?i)Pixus[ _]hiMax`),
		regexp.MustCompile(`(?i)Pixus[ _]Blast`),
		regexp.MustCompile(`(?i)Pixus[ _]Joker`),
		regexp.MustCompile(`(?i)Pixus Blaze 10\.1 3G`),
		regexp.MustCompile(`(?i)Pixus[_ ]Hammer`),
		regexp.MustCompile(`(?i)(?:Cosmo_Communicator|Gemini[_ ]4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cosmo_Communicator)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Gemini[_ ]4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PLT-[12]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLAY NOW TV BOX 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MOMO([0-9]|[ ]?mini[ ]?(?:S|3GS)?)`),
		regexp.MustCompile(`(?i)MOMO([0-9][^);/]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)PLUM[ _]|(?:Z51[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PS_TAB_(WB01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pluzz[_-](Z552|PL5[05]10|PL4010|PL501[46]|Elite_Dual)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook[ _/]`),
		regexp.MustCompile(`(?i)A7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook SURFpad 3 \(([\d]+)[,.]([\d]+)["]?\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SURFpad 4 ([LMS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PocketBook/(515|614|62[23467]|63[012]|64[01]|650|740|801|840|970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POV_TV|POV_TAB|MOB-5045|TAB-P10232-3G`),
		regexp.MustCompile(`(?i)POV_TAB[_-]NAVI7[_-]3G[_-]M`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB25XXL8?`),
		regexp.MustCompile(`(?i)POV_TAB-PROTAB([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POV_TAB-P?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Polar(?:_W?K?)?[_ ]P\d{2}|(?:P42L31T2CSM|P32L33T2CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Polar(?:_W?K?)?[_ ])?(P\d{2}[LU]\d{2}T2S?CSM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PolarLine[_ ](?:W?K?[_ ])?(\d{2}P[LU]\d{2}S?TC-SM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polaroid|POLPAROID|(?:PMID|MIDC)[0-9a-z]+(?:[);/ ]|$)|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])|(?:P(?:400[56]|4526|500[56]|502[56]|504[67]|552[56])A|P902/A900|PSPC(?:505|550|[MZL]20A0|K2[01]NA)|SIGMA 5|MIDI109PDE|MIDI156PDE|MIDB1048PHE|MIDS145PXE|MIDS747PX|MID4004JBL|MIDS185PR|PSPTD21NA|POMDTB00[56]|PSPCL30A0|PSN-H116|BDL0232PR|Mobility3G|BDL1064PR001|SMX4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PSPC(505|550)`),
		regexp.MustCompile(`(?i)PRO4611(?:PR201)?`),
		regexp.MustCompile(`(?i)SIGMA 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))`),
		regexp.MustCompile(`(?i)POLAROID, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)MIDS185PR|POLPAROID PURE`),
		regexp.MustCompile(`(?i)(MID(?:1014|0714|S145PXE|S747PX|4004JBL|B1048PHE|I109PDE|I156PDE)|POMDTB00[56]|BDL0232PR|BDL1064PR001)`),
		regexp.MustCompile(`(?i)((?:PMID|MIDC)[0-9a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P902/A900)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Polestar(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD`),
		regexp.MustCompile(`(?i)POLY ?PAD[_ .]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POLY ?PAD[_.]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)POLYTRON|W8480|W7430|PW1100S|W7550|W7531|W8570|R2401|R255B`),
		regexp.MustCompile(`(?i)POLYTRON[ _]R1500`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2402`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2403`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2406`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2407`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2452`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2457`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2501`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2507`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509SE`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2509`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R250A`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R2506`),
		regexp.MustCompile(`(?i)POLYTRON[ _-](?:R3450|W1400)`),
		regexp.MustCompile(`(?i)POLYTRON[ _-]R3500`),
		regexp.MustCompile(`(?i)POLYTRON[ _]L501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P520`),
		regexp.MustCompile(`(?i)POLYTRON[ _]P552`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G501`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G502`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G503`),
		regexp.MustCompile(`(?i)POLYTRON[_ ]?[ _]4G550`),
		regexp.MustCompile(`(?i)POLYTRON[ _]4G551`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7800`),
		regexp.MustCompile(`(?i)POLYTRON[ _]T7700`),
		regexp.MustCompile(`(?i)POMP[ _-]`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)POMP[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(V100M4L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YPY_S450|Twist 4(?: Fit|Pro)?|Twist (?:4G|5 Max)|T1085|Positivo (?:Q20|Slim)|M10 4G PRO X|UP 32|YOLO|Android 4([\d.]*);(?: [\w-]+;)? X400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X400(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo (Q20|Slim)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 4 (Fit|Pro)`),
		regexp.MustCompile(`(?i)(?:T1060B|S455|Positivo (?:Twist|Ypy|Mini I)|Twist[ _](?:\(2018\)|2 (?:Fit|Pro)|Mini|Tab|Metal(?: 32GB)?|Max|XL|SE|[23SM])|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S455(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist \(2018\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal 32GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Metal(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist[ _]Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Fit(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Go(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist 2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )?Twist ([23SM])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Positivo )Mini I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1060B|KC770|G1101T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Positivo Ypy (AB7F|AB10H|L1050E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Twist Tab(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MAXI 20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AXE_II|186HS2080531|186HS1050531|186HS1050232|186FT1080231|185FT5050231|X7[05]-2021|PREMIO[ _](?:S50|P420|P451)|Android 8(?:[\d.]*);(?: [\w-]+;)? Axe)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X(7[05])-2021`),
		regexp.MustCompile(`(?i)PREMIO[ _](S50|P420|P451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prestigio 5500 DUO|(?:PMP|PAP|PMT|PSP|PGPS)[0-9]+[a-z0-9_]+(?:[);/ ]|$)|Muze C3|PTV50SS04X_CIS_BK|PTV50SS08X|PTV32SS08Z|PTV40SS04Y_CIS_ML|PTV32SS04Z_CIS_(?:ML|BK)|SILVER POS|PAB4411|GV7777`),
		regexp.MustCompile(`(?i)P[AS]P(5517|5503|550[578])DUO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PAP(7500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Muze C3|PSP3504DUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7799CIS08GBPG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GV7777(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PGPS7797(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PMT(3118|38[74]8|3[123]01|3[12]57|778[18]|4[789]91|5588|5718|5791|577[18]|4327|3768)[_ ]([34])G`),
		regexp.MustCompile(`(?i)PMT(1177|3208|3618|31[357]1|1157|1196|3[10]96|3[17]61|3407)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(1107|3[456]37|3[34]27|3317|4638|4311|413[17]|411[178]|3771)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PMT(3231|37[01]8|4231|4667|38[3678]1)[_ ]([34])GE?`),
		regexp.MustCompile(`(?i)PSP7546DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PSP7610DUO([ _][A-Z]{2})?`),
		regexp.MustCompile(`(?i)PTV(\w+)_CIS_(ML|BK)`),
		regexp.MustCompile(`(?i)(PAB4411)`),
		regexp.MustCompile(`(?i)(PTV32SS08Z|PTV50SS08X)`),
		regexp.MustCompile(`(?i)(PM[PT][0-9]+[a-z0-9_]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PD\-(3127NC|3127) Build`),
		regexp.MustCompile(`(?i)PD\-3127NC Build`),
		regexp.MustCompile(`(?i)PD\-3127 Build`),
		regexp.MustCompile(`(?i)Primux|SirocoY|Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_ioxphone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxDelta6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(P50[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxKappa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Beta2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_?Omega([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Omega6_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxUP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PrimuxZonda4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primux_Siroco6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SirocoY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pritom_|(?:K7_A101(?:_EEA)?|Android 1[01](?:[\d.]*);(?: [\w-]+;)? (?:M10_Lite|M10_EEA|M10_(?:PLUS|Air)(?:_EEA)?|P7_EEA)|P7PRO|M10_C01_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Pritom[_ ])?M10_C01`),
		regexp.MustCompile(`(?i)Pritom[_ ]M10|M10_EEA`),
		regexp.MustCompile(`(?i)(?:T1700Q-)?PRIXTON|(T7012Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRIXTON (C18)`),
		regexp.MustCompile(`(?i)(T701[24]Q|T1700Q)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build|PLT(?:777[045]|9774|107[47]|9999)G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PLT([^;/]+) Build`),
		regexp.MustCompile(`(?i)PLT(777[045]|9774|107[47]|9999)G`),
		regexp.MustCompile(`(?i)ProVision (S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline_|(?:H10882M-TN|H1088[28]M|H1010|M504)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Proline[_ ]FalconXL`),
		regexp.MustCompile(`(?i)(H10882M-TN|H1088[28]M|H1010)`),
		regexp.MustCompile(`(?i)(MPC-(?:[57]0|65|100)|MPC-110DSP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PROTRULY[ _](D[78]|V10S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Punos (10)`),
		regexp.MustCompile(`(?i)QBOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qtouch_|[ ](Q09|QS701|Q0[15]A|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Qtouch[_ ])?[ ]?(Q09|QS701|Q0[15]A|Q85|QS31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10\.1|9\.[12]|7\.1|5\.[246])|QTAB10EW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(QPHONE[_ ](?:10\.1|9\.[12]|7\.1|5\.[246]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLW-100[BG]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 12(?:[\d.]*);(?: [\w-]+;)? F22 ?Pro|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? (?:F22|F21 Pro))(?: Build|[;)]))`),
		regexp.MustCompile(`(?i)F(\d+) ?Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F(22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Scepter[ _]?8(?: Tablet)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Scepter[ _]?8`),
		regexp.MustCompile(`(?i)QMobile|QTab|Q-?Smart|LINQ (?:L10|X100)|(?:Mark [25]|E2 Noir|Noir[ _](A[18]|X1S)|LUNA PRO|NICE S|JazzX JS(?:[27]|10)(?: PRO)?|LT[57]00[ _]PRO|LT950|Infinity (?:Cinema 2|triple|santos|Prime 2)|Q Infinity|Hot 5|Hot Pro 2|VITA S|i7i 2020|i10[ _]20(?:20|19)|V2 2018|Z12 PRO|Smart HD Pro|V[67]_Metal|Rocket (?:Lite|Pro)| GLi|i6i 2020|i6 Metal|Android 6(?:[\d.]*);(?: [\w-]+;)? (?:J5|S2 Pro|J7 PRO|M350 Pro)|Android 5(?:[\d.]*);(?: [\w-]+;)? Z9 Plus|i8i Dual|View Max Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)JazzX JS(2|10)`),
		regexp.MustCompile(`(?i)Noir[ _](A[18]|X1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile (Z9|J2)`),
		regexp.MustCompile(`(?i)(J7|S2) Pro`),
		regexp.MustCompile(`(?i)LT([57]00)[ _]PRO`),
		regexp.MustCompile(`(?i)V([67])_Metal`),
		regexp.MustCompile(`(?i)i(\d+)i 20(20|1[89])`),
		regexp.MustCompile(`(?i)i10[ _]20(20|19)`),
		regexp.MustCompile(`(?i)i6 Metal (201[78])`),
		regexp.MustCompile(`(?i)Mark ([25])`),
		regexp.MustCompile(`(?i)QSmart (X[124]0)`),
		regexp.MustCompile(`(?i)Q Infinity ([FCB])`),
		regexp.MustCompile(`(?i)(LT950|J5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LINQ (L10|X100)`),
		regexp.MustCompile(`(?i)GLi Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GLi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMobile ENERGY (X[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)QTab[ _-]([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+) PRO(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMobile|Q-?Smart)[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:QMP_K8| QMP-M1-N-IP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QMP[_-](K8|M1)`),
		regexp.MustCompile(`(?i)(Q\d{2}Y[FHK]-(?:M[GB]|PB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qilive [0-9][^;/]*|QILIVE|Q(7S5[5]?IN4G|T19101|T22101B|T23109BP|T21101|7T10INP|T19101HV|8T10IN|8S55IN4G2|8S[56]IN4G|9T9IN|9T(?:7|10)IN4G|9S55IN4G|10S5[37]IN4G|10S[56]IN4G|10S[56]IN4GR|9S5IN4G|6T7IN|T2108BP)`),
		regexp.MustCompile(`(?i)Q10S5IN4G[R]?`),
		regexp.MustCompile(`(?i)(QT19101HV|QT19101|QT23109BP|QT22101B)`),
		regexp.MustCompile(`(?i)Qilive (1\d+[^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Qilive ([0-5]*)/`),
		regexp.MustCompile(`(?i)Qilive ([6-9][^;/)]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)QILIVE[; ]Smart ?TV`),
		regexp.MustCompile(`(?i)Passion[ _]P|Hynex plus|Stark K1|Hynex H[356]|Levin V[12]|Aston A[357]\+`),
		regexp.MustCompile(`(?i)Passion[ _](P[0-9]+)`),
		regexp.MustCompile(`(?i)Hynex plus( 2)?`),
		regexp.MustCompile(`(?i)Hynex (H[356])\+`),
		regexp.MustCompile(`(?i)Hynex (H[35])`),
		regexp.MustCompile(`(?i)Levin (V[12])`),
		regexp.MustCompile(`(?i)Aston A([357])\+`),
		regexp.MustCompile(`(?i)Qtek[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Qrash|(?:Quantum (?:Fit|Five|Fly|UP|MUV (?:PRO|UP)|Go|Mini|M|V|You [2E])|GO 2|Q[23]0|LIO\+|Q-TITANO(_007i|-H2)?|Q-Pulse70M|Q-Wave(?:101|71M))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LIO\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qrash(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum (Fit|Five|Go|Mini|[MV]|Fly|You [2E]|Q[23]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum MUV UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quantum UP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-TITANO[ _-](BOS|X|M1|007i|H[12]|AK47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Pulse70M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Wave(101|71M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Quatro (8|10|FSM1453)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Cronos|MINERVA(?:_32GB)?|X668_64GB|X626_4G|Hermes|T104_64GB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MINERVA(?:_32GB)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cronos|Hermes|X626_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T104_64GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Android 1[012](?:[\d.]*);(?: [\w-]+;)? RAPTOR(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TINKU LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QUMO[ _]?|(?:Quest[ _]?(?:408|410|45[56]|50[679])|Vega[ _]?78[23]|Sirius[ _]?(?:1001|890))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?Vega[ _]?(78[23]|8002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yooda(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sirius[ _]?(1001|890)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _]?)?(Sirius 101-4G 8GB Black|Altair 701 8GB Black|Altair 71 4GB Black|Altair 700[24]|Altair 70[16]|Vega_803i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QUMO[ _])?Quest[ _]?(35[34]|40[268]|410|45[2568]|47[46]|50[679]|5[137]0|574|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QW[ _-]TB-\w+`),
		regexp.MustCompile(`(?i)QW[ _-](TB-\w+)`),
		regexp.MustCompile(`(?i)R-TV BOX[ _]?(MINI\+|X99|X10 PRO|[RXS]10)`),
		regexp.MustCompile(`(?i)R3Di_FR150(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(C50USY24F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RCA-OEM[;,]|RC[AT]([^;/]+)(?: Build|[;)]|$)|RWOSU6547|RCA RLTP4028|RLTP5567|RLTP5573|RC7T3G21|DRP(?:29101|2091)`),
		regexp.MustCompile(`(?i)(?:RCA[ _])?(RLTP4028|RLTP5567|RLTP5573)`),
		regexp.MustCompile(`(?i)RCT6873W42M|RCT6876Q22N?|RCT6873W42BMF9E`),
		regexp.MustCompile(`(?i)RCT6973W43(?:MD)?`),
		regexp.MustCompile(`(?i)RCT6703W12|RCT6B06P23`),
		regexp.MustCompile(`(?i)RCT(?:6303W87(?:DK|M)|6K03W13)`),
		regexp.MustCompile(`(?i)(DRP29101|DRP2091)`),
		regexp.MustCompile(`(?i)(RWOSU6547)`),
		regexp.MustCompile(`(?i)RCT([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)RC([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(MX101M[23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:H1A1000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RED_X_RX2441_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Regal (?:TAB 10\.1|G[o0][o0]gle TV)|REGAL, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Regal (TAB 10\.1)`),
		regexp.MustCompile(`(?i)Regal G[o0][o0]gle TV`),
		regexp.MustCompile(`(?i)REGAL, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:NEP N(?:11?|9))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEP N(11?|9)`),
		regexp.MustCompile(`(?i)BB10;|BlackBerry|rim[0-9]+|PlayBook|STV100-[1234]|STH100-[12]|BBA100-[12]|BBB100-[1234567]|BBD100-[126]|BB[EF]100-[123456789]|BB[CGH]100-1`),
		regexp.MustCompile(`(?i)BBA100-[12]`),
		regexp.MustCompile(`(?i)BBB100-[1234567]`),
		regexp.MustCompile(`(?i)BBD100-[126]|BlackBerry Motion`),
		regexp.MustCompile(`(?i)BBE100-[123456789]`),
		regexp.MustCompile(`(?i)BBF100-[1234567]|BlackBerry Key2`),
		regexp.MustCompile(`(?i)BBH100-1|Evolve X`),
		regexp.MustCompile(`(?i)(?:BlackBerry )?(9000|9790)`),
		regexp.MustCompile(`(?i)STV100-[1234]`),
		regexp.MustCompile(`(?i)STH100-[12]`),
		regexp.MustCompile(`(?i)BB10; ([a-z0-9\- ]+)\)`),
		regexp.MustCompile(`(?i)PlayBook.+RIM Tablet OS`),
		regexp.MustCompile(`(?i)BlackBerry(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)rim([0-9]+)`),
		regexp.MustCompile(`(?i)(8520|8530|9220|9320|9360)`),
		regexp.MustCompile(`(?i)(9800|9860)`),
		regexp.MustCompile(`(?i)FORTIUS QUAD 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RH-LE\d{2}DSY-C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROiK ?(10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Shock ?(?:5|5\.5)|popper2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Shock ?(5\.5|5)`),
		regexp.MustCompile(`(?i)ESKIMO_K5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZR01|3917JR|P710|P780|C330)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/);]+)(?: Build|[);])|(?:MOS1(?:max)?|W22PRO 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ramos[ _])?(R10|R9|M7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MOS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ramos ?([^/;]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Raspberry (Pi [0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RAVOZ[ _](Z[3567] (?:Lite|Pro)|Z[3-7]|R[4789]|V[1235])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XPOWER_P6000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Phone 2|Razer Edge 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Allure[_ ](?:Ultra(?:[_]Curve)?|Secure|Admire|Rise)|Opulent X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Readboy[ _-]`),
		regexp.MustCompile(`(?i)Readboy[ _-]C18Max`),
		regexp.MustCompile(`(?i)Readboy[ _-]C(\d+)Pro`),
		regexp.MustCompile(`(?i)Readboy[ _-]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(RxIS202)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Realme[ _]|(?:RMX(?:18(0[13579]|11|3[13]|2[1257]|[45]1|53|45)|19(03|4[1235]|19|9[23]|2[1579]|[01379]1|73)|20(?:[025-7]1|42|[0357]2|03|2[257]|63|7[56]|63L1|8[1356]|[2-5]0)|21(?:0[13]|1[27]|[12]1|4[24]|5[156]|6[13]|7[036]|8[0359]|9[345])|220[0125]|30(?:[3468]1|4[23]|9[23]|63|85)|31(?:15|2[125]|42|51|6[16]|71|9[1357])|32(?:0[13]|35|42|[346]1|6[0235689]|86)|33(?:[0157]0|[17]2|71|6[036]|[0186]1|57|88|9[12356])|34(?:30|78|[69]1|[67]2|7[145]|9[23])|35(?:0[1236]|1[12367]|21|[578]1|6[0123]|7[246])|36(?:1[0125789]|[39]0|36|2[347](?:_Natv_vf)?|8[67]|6[013])|37(?:0[0689]|6[125]|[14-7]0|[0457]1|8[01235])|38(?:[039]0|2[03]|34|4[01234]|5[0123]|6[789]|7[01]|88)|39(?:8[87]|9[0325-9]|10|2[01]|3[0389]|4[01]|5[01])|50(?:0[023]|1[01]|51|60))|(?:OPPO[ _]?)?CPH1861|RMP220[45]|RMP210[235-8]|4K Google TV Stick)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX370[68]`),
		regexp.MustCompile(`(?i)RMX38(?:51|00)`),
		regexp.MustCompile(`(?i)RMX501[01]`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?RMX3142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OPPO[ _]?)?CPH1861(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX180[59]`),
		regexp.MustCompile(`(?i)RMX180[137]`),
		regexp.MustCompile(`(?i)RMX(?:182[125])`),
		regexp.MustCompile(`(?i)RMX185[13]`),
		regexp.MustCompile(`(?i)RMX190[13]|Realme X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX199[12]`),
		regexp.MustCompile(`(?i)RMX1931|Realme X2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2176(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2121(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1921|Realme XT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX19(1[19]|27)`),
		regexp.MustCompile(`(?i)RMX197[13]`),
		regexp.MustCompile(`(?i)RMX203[02]`),
		regexp.MustCompile(`(?i)RMX200[13]`),
		regexp.MustCompile(`(?i)RMX204[02]`),
		regexp.MustCompile(`(?i)RMX206[13](?:L1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX215[15]`),
		regexp.MustCompile(`(?i)RMX3085|Realme 8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3151|Realme 8i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX349[123]`),
		regexp.MustCompile(`(?i)RMX3388|RMX3474`),
		regexp.MustCompile(`(?i)RMX339[23]`),
		regexp.MustCompile(`(?i)RMX347[12]`),
		regexp.MustCompile(`(?i)RMX36(?:30|15)`),
		regexp.MustCompile(`(?i)RMX366[01]`),
		regexp.MustCompile(`(?i)RMX368[67]`),
		regexp.MustCompile(`(?i)RMX3(?:636|751)`),
		regexp.MustCompile(`(?i)RMX399[29]`),
		regexp.MustCompile(`(?i)RMX39(?:88|90)`),
		regexp.MustCompile(`(?i)RMX392[01]`),
		regexp.MustCompile(`(?i)RMX1925(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX1811(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX194[1235](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RMX202[1207]|Realme G70 Series)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2185(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2189(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX218[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX219[45](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX306[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX320[13]`),
		regexp.MustCompile(`(?i)RMX326[123]`),
		regexp.MustCompile(`(?i)RMX319[13]|realme C25 Series`),
		regexp.MustCompile(`(?i)RMX319[57]`),
		regexp.MustCompile(`(?i)RMX326[589]`),
		regexp.MustCompile(`(?i)RMX350[123]`),
		regexp.MustCompile(`(?i)RMX(?:3581|3623)`),
		regexp.MustCompile(`(?i)RMX362[47]`),
		regexp.MustCompile(`(?i)RMX351[123]`),
		regexp.MustCompile(`(?i)RMX376[02]`),
		regexp.MustCompile(`(?i)RMX382[03]`),
		regexp.MustCompile(`(?i)RMX330[01]`),
		regexp.MustCompile(`(?i)RMX331[012]`),
		regexp.MustCompile(`(?i)RMX3031(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX356[012](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3563(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3371(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX3357(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX336[0136]`),
		regexp.MustCompile(`(?i)RMX3350(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX216[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX351[67]`),
		regexp.MustCompile(`(?i)RMX183[13](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(?:20(?:51|[2]5)|2144)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX207[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX2072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX(2142|2081)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMX208[56]`),
		regexp.MustCompile(`(?i)RMX346[12]`),
		regexp.MustCompile(`(?i)RMX211[12]`),
		regexp.MustCompile(`(?i)RMX220[01]`),
		regexp.MustCompile(`(?i)RMX312[12]`),
		regexp.MustCompile(`(?i)RMX304[123]`),
		regexp.MustCompile(`(?i)RMX309[23]`),
		regexp.MustCompile(`(?i)RMX361[01]`),
		regexp.MustCompile(`(?i)Realme[ _]([1-9])[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP210[23](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP220[45]`),
		regexp.MustCompile(`(?i)RMP210[78]`),
		regexp.MustCompile(`(?i)RMP210[56](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Space_M10|S[678]00[ _]MAX|IP-[67]0 MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Space_M10)`),
		regexp.MustCompile(`(?i)S([678]00)[ _]MAX`),
		regexp.MustCompile(`(?i)IP-([67]0) MAX`),
		regexp.MustCompile(`(?i)(i-Jupiter)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Wizpad_)?Valuer_V8`),
		regexp.MustCompile(`(?i)(?:Redway_7|redway7_pro|redway10_lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder[_ ](?:3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE|M7_Go|TV)|M8_Go|M8Go2020|M10SPlus|P12Curve|M10 Pro LTE|M10 Blue Max|P13[ _]Blue[ _]Plus(?:[ _]2022)?|P13_Max_Blue|P13[_ ]Blue[_ ]Ma(?:ks|x|xL)|P13_Blue|P13[ _]Blue[ _]202[12]|M7Plus|A8i-Q2|M7Go_2019|S19 Max(?: Pro S(?: Zoom)?| \d{2}GB|L 128GB| Pro)|M10 GO|S23 Pro Max|S19 Max|P11SE_Art)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)reeder[_ ](3G_Tablet|A7iC|A[78]i[_ ]Quad|A8i Q2|M8 Plus|[TM]8|M10 Plus|P11SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(?:M7Go_2019|M7_Go)`),
		regexp.MustCompile(`(?i)(?:reeder_)?(M8|M10)[_ ]Go`),
		regexp.MustCompile(`(?i)P13 Blue 202([12])`),
		regexp.MustCompile(`(?i)P13 Blue MaxL? 202([012])`),
		regexp.MustCompile(`(?i)P13[_ ]Blue[_ ]Max|P13_Max_Blue`),
		regexp.MustCompile(`(?i)S19 Max (?:32|64)GB`),
		regexp.MustCompile(`(?i)RelNAT[_ ](Premier)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (TB02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(?:16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RD(16Q|86E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TLE-(?:32|43F|50U)SBM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Retroid Pocket ([32]) ?(?:Plus|\+)`),
		regexp.MustCompile(`(?i)Revo[_ ](?:Youplus|555)|RevoYou`),
		regexp.MustCompile(`(?i)Revo[ _]?(You|555)`),
		regexp.MustCompile(`(?i)(?:S6523(?:[ _]RU)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:PACE A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RKM[_ ])?MK(902II|902|80[28][^/;]*)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Rinno (R(?:400|505))`),
		regexp.MustCompile(`(?i)(RMD[-_](?:10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)|RMP-(?:450|50[56]|530|600))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMD[-_](10(?:2[689]|30|5[089])|1121|75[017]|726|85[57]|870)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RMP[-_](450|50[56]|530|600)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RITZVIVA[_ ]S500C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RIVIERA[ _]`),
		regexp.MustCompile(`(?i)RIVIERA[ _](F23|U963)`),
		regexp.MustCompile(`(?i)PHANTOM (?:PZ|RX)|RHYTHM[ _]RX|(?:STORM_S8(?: ?plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM PZ ?(2[05]|[13]5|4|18)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PHANTOM RX ?(298|387)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RHYTHM[ _]RX ?([15-9]0|[467]5|[12]80|150|[14]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NovaTab_R10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ROAM[_ ]CAT[ _](M8)`),
		regexp.MustCompile(`(?i)(ZC-P95)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IO (?:Pro|3D|Light)|Orb S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Roku(?:OS|4640X)?/(?:DVP|Pluto)?-?|QSP; Roku`),
		regexp.MustCompile(`(?i)Rombica[_ ]|(SSQ-A0500|Smart Box v[0-9]+|Smart Box (?:[ABCDXYZ]1|[GDFQ]2|[AF]3|H4)|myPhone Jet|55MT-UDG54G|65MT-UDG54G|55XT-UD2G64N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SSQ-A0500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rombica[_ ])?Cinema4K_v01`),
		regexp.MustCompile(`(?i)(\d{2}MT-UDG54G|Infinity K8|Smart Box (?:Q1|v00[3-9]|Quad|Ultra HD v002|4K V001|[ABCDXYZ]1|[AGDFQL]2|[AFG]3|H4)|TV (?:Ultima|Fly)|Smart Stick Pro|TV Mercury|TV Air|55XT-UD2G64N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(43FSQ2020T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RM(D)?[-_](974R|600|550|790)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rover ([0-9]+)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad|RoverPhone|(?:Air|Art|Sky) 7\.85 3G|Pro_Q(?:8|10)_LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RoverPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_Q(8|10)_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Rover[ ]?Pad)?sky 7\.85(?: 3G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Air|Art) 7\.85 3G`),
		regexp.MustCompile(`(?i)RoverPad (10\.4|Air S70|9\.7 3G|Sky 9\.7|3W A73|3W7|3WT70|3W9\.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:RQ[ -](Regal R8|713S|712|768)|Bishop-RQ451)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RQ (Regal R8)`),
		regexp.MustCompile(`(?i)RQ-(713S|712|768)`),
		regexp.MustCompile(`(?i)(?:RugGear|RG(?:310|500|65[05]|702|7[13]0|850)|RG725)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RG[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FieldPad 8)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rhino-Quest(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _]|(?:M671M4|i7Plus|S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ruio[ _](S4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Ruio[ _])?(S5|i7)Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S5[05]06|S518)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo|F1-TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Runbo[ _-]?(X5-W|F1 Plus|[PF]1-TT|F1-EN|[FH]1|TT|Q5-S|X5-King|X6|Q5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pyramid A5X|RUPA[_.]smartTV`),
		regexp.MustCompile(`(?i)RUPA[_.]smartTV`),
		regexp.MustCompile(`(?i)(?:RYTE U55 LTE|RT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RYTE (U55 LTE)`),
		regexp.MustCompile(`(?i)(RT701)`),
		regexp.MustCompile(`(?i)(GT40 Ultra|SU15 Pro)(?: Build|[);])`),
		regexp.MustCompile(`(?i)S-TELL|(?:M630|M55[78]|P760|P750i|M555i|M580|M457|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P760|P750i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S-TELL[ _])?M([0-9]{3}|555i|M580|M655)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S2TEL[ _-]`),
		regexp.MustCompile(`(?i)S2TEL-(Q8)`),
		regexp.MustCompile(`(?i)(?:20220728MT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(S2[23])_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEEWO[ _](SD02)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SEG, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:GO[35]E|5101J|GO3C(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GO3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(GO[35]E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENNA_)?(32SN6000H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SERVO 16MAX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab|(?:Android 8(?:[\d.]*);(?: [\w-]+;)? (?:AURA (?:PLUS|ULTRA)|AURA))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)StarXtrem II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem ?([3-6])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarXtrem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])[ _]([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail[ _]?([1-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)aura ULTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AURA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarShine(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARADDICT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarText(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STARNAUTE ?([1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarNaute(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build`),
		regexp.MustCompile(`(?i)SGIN_(?:E10M|X10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BHX-UH200|BID-AT200`),
		regexp.MustCompile(`(?i)BHX-UH200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BID-AT200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Modern[ _](?:S10?|S[3679]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:LYNX_LUXE|Hyper X Dragon|HYPER X BLADE(?: II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Atractivo|SmartabS4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Atractivo)`),
		regexp.MustCompile(`(?i)(?:CRUSH_X565|BLAZE_X500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMUX ?BOX A1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SNAMI[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)SOLE[_ ]POP[_ ]S([45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](?:Aspire(?: M)?)|Inspire_U5(?:_PLUS)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLO[_ ](Aspire(?: M)?))`),
		regexp.MustCompile(`(?i)(?:Sonos/.+\((?:(?:BR|ZP).+)\)|Sonos;|Sonos/.+\(?:Arc|ANVIL|Play:\d\))`),
		regexp.MustCompile(`(?i)\((ZPS(?:[13569]|1[1-9]|2[0-467]|3[013-9]|4[1345]|5[45])|ZP(?:90|120))\)`),
		regexp.MustCompile(`(?i)Sonos;Beam;`),
		regexp.MustCompile(`(?i)Sonos;Roam;`),
		regexp.MustCompile(`(?i)Sonos;Bookshelf;`),
		regexp.MustCompile(`(?i)Sonos;Move;`),
		regexp.MustCompile(`(?i)Play:?(\d)`),
		regexp.MustCompile(`(?i)Sonos;One;`),
		regexp.MustCompile(`(?i)Sonos;OneSL`),
		regexp.MustCompile(`(?i)\(ANVIL\)`),
		regexp.MustCompile(`(?i)AG_1088_(A133P?|A523P)`),
		regexp.MustCompile(`(?i)(?:GRAVITY [34]G(?:_2019)?|GRAVITY2-4G|GRAVITY_4|GRAVITY_OCTACORE|GRAVITY[ -_](?:Max|SE|PRO|2-MAX|[23]|3_MINI|3_SE|ULTIMATE 2)|SPC (?:GEN|SMART)|SPC_ALIEN(?:_STICK)?|SPC Glow9\.7|Lightyear|Laika|L70_Lite|L60 Turbo|L60 Pro|FLOW 7|SMART_ULTIMATE(?:_64)?|Discovery (?:Pro|SE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G_2019`),
		regexp.MustCompile(`(?i)GRAVITY ([34])G`),
		regexp.MustCompile(`(?i)GRAVITY 2|GRAVITY2-4G`),
		regexp.MustCompile(`(?i)GRAVITY_([43])`),
		regexp.MustCompile(`(?i)SPC Glow9\.7`),
		regexp.MustCompile(`(?i)SMART_ULTIMATE(?:_64)?`),
		regexp.MustCompile(`(?i)(L60 Turbo|L60 Pro|Discovery (?:Pro|SE))`),
		regexp.MustCompile(`(?i)Spurt[_ ]|(?: K700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spurt[_ ])?K([78]00)`),
		regexp.MustCompile(`(?i)SQOOL-V(41?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y777_Fire)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:AERIAL(?: PLUS)?|BLOCK_MINI|BLOCK GO|BLOCK 3|Fractal|Joy Pro|Origins Pro|SLAY II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STG[ _](A[12] Pro|[AS]1|X[1-3]|X20|S[1-3]0|[BCHP]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]|(?:Storm 2e Pluz|Life 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STK[_ ]Transporter[_ ]1`),
		regexp.MustCompile(`(?i)STK[_ ]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STK[_ ]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)LEAP-S1|SH6B7CE_EU012`),
		regexp.MustCompile(`(?i)(SH6B7CE)_(EU012)`),
		regexp.MustCompile(`(?i)SUNWIND[_ ]|SUN[-_]LED\d+|(?:SKY 9 [EA]\d+ 3G|Sky (?:126[24]C|1123B|7143B|8244B|8421D|1430D) [43]G|SKY Kids 70 SS7238PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY ([79]) ([EA]\d+) 3G`),
		regexp.MustCompile(`(?i)Sky (\d{4}[BCD]) ([34])G`),
		regexp.MustCompile(`(?i)SUN[-_]LED(\d+\w{1,2}\d+)`),
		regexp.MustCompile(`(?i)(?:SCHR9G[RL]|PRA(?:U8|100|557|507)|ZUR(?:722M|70016W?|700[RW]|805A))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHR9G[RL]`),
		regexp.MustCompile(`(?i)PRA(U8|100|557|507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZUR(70016W?|700[RW]|805A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SWOFY[_ ]`),
		regexp.MustCompile(`(?i)SWOFY[_ ]M503-Pro`),
		regexp.MustCompile(`(?i)Young (Y56|Y36\+|Y[35]5|Y51\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Saba[_ ]|(?:32SB6000H|42SB6000F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Saba[_ ])?(\d{2}SB\d{4}[HF])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Safaricom|NEON[_ ]RAY|(?:NEON_NOVA|NEON PLUS|NEON PLUS|NEON LITE|Neon Storm|SFCSTB2LITE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ET Kimem(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Safaricom_Kimem_Kerefa_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SAGEM|portalmmm/2\.0 (?:SG|my)`),
		regexp.MustCompile(`(?i)SAGEM-(my[a-z0-9-]+)`),
		regexp.MustCompile(`(?i)SAGEM ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAGEM-([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 ((?:SG|my)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sagemcom[;, \-_]|(DIW3930|DCTIW362_PLAY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DI384|DIW350|DIW387|DIW3930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom[;,] ([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom\-OTT\-([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sagemcom_Broadband_SAS,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:STS5[57]0|STS502|STS602)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STS5[57]0|STS602)`),
		regexp.MustCompile(`(?i)(STS502)`),
		regexp.MustCompile(`(?i)Salora(?:_cx)?[;,]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SmartTV;`),
		regexp.MustCompile(`(?i)SAMSUNG|FamilyHub|Maple |Maple2012|SMART-TV.+Tizen.+SamsungBrowser|Gear Live|(?:SEC_)?SC-(?:001|01[EFGHKLM]|02[CGHJKLMF]|03[EFJKL]|04[EFJLG]|05[GL]|(?:4[12]|5[1-4])A|5[1-5][BC]|51E|5[15]D|56C|5[23]D)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|beyond[02]q?|crownq?lte|vollo Vi86(?:[);/ ]|$)|(?:lineage_|aokp_|rr_)?(?:serranoltexx|j5y17lte|Santos103G|fortuna3g|Verizon-SM)|(?:OTV-)?SMT-E5015|ISW11SC|40[34]SC|SC(?:G1[6789]|G2[0-7]|V3[1-9]|V4[0-9]|51Aa|-56B|T21|G0[1-9]|G1[0-5]|L2[234])(?:-[uj])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:OTV-)?SMT-E5015`),
		regexp.MustCompile(`(?i)Samsung, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T677(?:[ATV]|N[KL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T670(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-)?N5110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N5120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT|SM)-N8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N8020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P1000M?|SCH-I800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P3100B?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P311[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5100|SCH-I915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P511[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T217T`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5200|Santos103G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P5220`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6201`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P7100`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-P75[01]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P60[12]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P605|P607T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P901`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P905`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P587|P588C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-P200(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T307U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T297`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T505[CN]?|T507)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T50[03](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T22[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T220(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X216`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X218`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X210`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X115`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X110`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T11[03]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X205`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T830[X]?|T837R4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T837P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T835[CN]?|T837[VTA]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T725[CN]?|T720X|T727(?:R4|[AUV])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T865N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T867(?:R4|[VU])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P615[CN]?|P61[379])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P610X?|P620)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T860X?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T866N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X910(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X916[CB]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-X818U|SM-X816[BN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X716`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X616`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X(?:518U|516)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X610`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T111`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X926`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X826`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T116(?:BU|NU|NY)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T2105|T212)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T210R?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T21(?:[15]|7[AS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T230(?:NU)?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T23[15]|403SC|SM-T321`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T239|T237[PV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T232(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T311`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T315`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T33[215]|T337[AVT])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T520`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T53[15]|T537[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T536(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T532(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T530(?:NU)?|T533)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T705|T707[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:T805|T807[PV]?)|SCT21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T813|T810)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T719[CY]?|T715(?:N0|[CY])?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T71[03]|T710X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T815|T817[ATW]?|T818[ATVW]?|T819[Y]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T820`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T82[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T970(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T976[BN]|T978U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T870(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T875N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T878U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T73[57]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-T736|SM-T738[UTV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T733`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X906`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X80[68]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X706`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T900`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T285`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T3[58]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P350|T3[58]5|T357[TW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T387(?:AA|R4|VK|[TPVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T295`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T290`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P355([MY])?|T550)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P550|P555(M)?|T555)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T58[05]|P58[05])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T587[P]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T59[057]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T51(?:7P|[057])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T37[57]|T378[KLSV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T56[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T561`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T567V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-X306`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T365(?:F0|[MY])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T360(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T395[CN]?|T397U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T390(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T575N?|T577U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:T545|T547U?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-T540(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:P902|P907A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-T2519`),
		regexp.MustCompile(`(?i)SM-R8[76]0`),
		regexp.MustCompile(`(?i)SM-R90[05]`),
		regexp.MustCompile(`(?i)SM-R91[05]`),
		regexp.MustCompile(`(?i)Family ?Hub`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A245`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A256`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G850(?:8S|[AFKLMSWXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B5512`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-B7510`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5700`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5801`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I5800`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8000`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?OMNIA7`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i677`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i917`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-i937`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I8150|SM-T255S)`),
		regexp.MustCompile(`(?i)SC-01H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5830`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G357(?:FZ|M)|G310HN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8160`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313(?:HY|M[LUY]|[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G316M`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G313[HU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G316U|G318(?:H|ML))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E120`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8190`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I826[02]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHW-M570S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3589W`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8320`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I85[23]0`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3858`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I855[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G381[28]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I8730`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:E500(?:HQ|YZ|[0FHM])|S978L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E700[09FHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I90(?:00|08|18|88)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9001`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9003`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9010`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9070`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I910[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?ISW11SC`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9103`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G730(?:W8|[AV])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I919[025]|SCH-I435)|(?:lineage_|aokp_)?serranoltexx`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9515`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9295|SHV-E470S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9300|SCH-(?:I535|I939|L710))|SC-03E`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S975L|GT-I950[025]|SC-04E|SCH-(?:I545|I959|R970)|SGH-M919N?|Galaxy-S4|SHV-E300K)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-I9506)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SHV-E330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5280`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5301`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G110[BHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5360`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6310`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6312`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130(?:BT|HN|[EHMU])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G130BU`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6790`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6810`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S6812`),
		regexp.MustCompile(`(?i)SC-04J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SC-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7275`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7390`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7580`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I739`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7582`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G31[36]HU|G313HZ)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7710`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G388F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G389F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G390[FWY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G398FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G715(?:FN|U1|[AUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G889(?:YB|[AFG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G525[FN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G556`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8500`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8530`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S8600`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5380`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5250`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5330`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S5780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-S7230`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C101|C105([AL])?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:C111(M)?|C115)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G318[HM]Z`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G355(?:6D|[89HM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G350`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G360[FH]?|S820L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G361[FH]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G386F|G3518(?:_TD)?|G3586V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3568V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5108Q?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G3815`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G80[01]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G9009D`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G900FD`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G900|G906[KLS]|S902L|S903VL|G490F)|Galaxy-S5|SCL23|SC-04F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G901F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G870[AFW]|SC-02G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G903[FMW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G860P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G920(?:F[DQ]|W8|[089AFIKLPRSTVX])?|SM-S906L|SM-S907VL)|SC-05G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G890A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G925[0ADFJIKLPRSTVWX]|SCV31|404SC|SC-04G|SM-G828)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G928(?:7C|N0|R4|W8|[07ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-|Verizon-)?SM-G930(?:AZ|FD|R[467]|T1|V[CL]|W8|[0AFKLPRSTUVX8])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G935(?:R4|W8|[0AFKLPSTUVX])|SC-02H|SCV33|Galaxy s7 edge`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G891A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G950[08FNUW]?|SCV36|SC-02J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G8750`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G892[AU]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G955[0AFKLNPRTUVWX]?|SCV35|SC-03J`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G960[0FNUWX]?|SCV38|SC-02K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G965[0FNUWX]|SCV39|SC-03K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:G973|G977[BNPTU])|SCV41|SC-03L)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S10 Lite|G770(?:U1|F))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G975[08FUNWX]|SCV42|SC-04L)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-G970(?:U1|[08FUNWX])|beyond0q?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G980F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G981(?:U1|[0BNUVW])|SCG01|SC-51A|SC51Aa`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G780`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G781(?:U1|[0BNUVW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G988(?:U1|[0BNQUW])|SCG03`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G985F|SCG02`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G986(?:U1|[0BNUW])|SC-52A`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G991(?:U1|R4|[0ABNWQU])|SCG09`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G990`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SC-51B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G998(?:U1|[0BNUWTP])|SC-52B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G996(?:U1|[0BNWUP])|SCG10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S901(?:U1|[0BENUW])|SC-51C|SCG13`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S908(?:U1|[0BENUW])|SCG14|SC-52C`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S906(?:U1|[0BENUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S911|SCG19|SC-51D)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S916`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S918|SC-52D|SCG20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S711|SCG24)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S921|SCG25|SC-51E)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S926)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S928|SCG26)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F700(?:U1|[0FNUW])|SCV47`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F707(?:U1|[0BNUW])|SCG04`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-I829`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SCH-R740|SGH-S730)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SCH-S738`),
		regexp.MustCompile(`(?i)vollo Vi86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G386(?:T1|T)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A015(?:DL|[TU]1|[AFGMUV])|S111DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A013[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A025(?:[AFGM]|AZ)?|S124DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A037[F]?|SM-S13[45]DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A035[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A047`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A042[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A045`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A032[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A022[GMF]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A055`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A057`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A260[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-S115(?:DL)?|SM-A115V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-[AS]146)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A145)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A156|SM-S156V)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A155)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A225[F]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A226|SC-56B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A300(?:FU|YZ|XU|XZ|[09FGHMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A310(?:N0|[FMXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A320(?:FL|[FXY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A356`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A430F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A500(?:YZ|[9LSWY])?|SM-A5OOH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500[0FGHKM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A500(?:FU|X)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A510[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A520[FKLSWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A525`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SC-53B|SM-A526)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A600(?:AZ|FN|GN|T1|[AFGNPTUX])|SM-A6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A605(?:[FG]N|[08FGX])|SM-A6\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G6200`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A606[0Y]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A700(?:YD|[09FHKLSX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A710[08FKLMSXY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A720[FMSX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A750(?:GN|[CFGNX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A71(?:5[FW])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A725[FM](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A736`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A716(?:U1|[0BUVT])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A(?:530F|800[0FISXY])|SCV32`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[FSY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A810(?:YZ|[FS])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A8s|G887[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A530[MNWX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A730[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A900[0F]`),
		regexp.MustCompile(`(?i)SM-A9\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A920[0FXN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G885[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A9 Pro|A910[0F]|G887N)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A105[FGMN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A107[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S102DL|A102[NUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A115(?:A[PZ]|U1|[AFMUW])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A12(?:5[AFMNUWTPV]|7[FM])|S127DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A136(?:U1|[BMWUS])|S136DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A135|SM-A137F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A205(?:U1|YN|[FGSWU])|S205DL)|SC-02M|SCV46`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A215(?:DL|R4|U1|[UWTP])|SM-S215DL|SC-42A|SCV49|SM-A102J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A217[FMN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A202[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A207[0FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A235`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A23[36]|SM-S236|SC-56C|SCG18`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A305(?:[FGY]N|GT|[FGN])|SCV43)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A307(?:FN|GN|GT|[FG])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A315[FGN](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A325`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-(?:A326(?:BR|U1|[BUWJ])|S326DL)|SCG08)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A405(?:F[NM]|S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A305[018](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A415F|SC-41A|SCV48)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[AS]426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A505(?:F[GN]|U1|YN|[FGNUWX])|S506DL|505FN)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A5070(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A507FN`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:A515[FUW]|S515DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A516(?:U1|[0BNUVT])|SC-54A|SCG07)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A536V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A536|SC-53C|SCG15|SM-S536DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A546S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-[AS]546|SC-53D|SCG21)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-A556|SCG27)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A705(?:GM|[MYF]N|[0FUWX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A707[0FW]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A805[0FNX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A908[BN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A9080`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F127G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E135F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E156B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E225F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F415F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E426B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E5260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-E625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9301I`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S120VL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SGH-T399`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J100(?:FN|VPP|MU|[FGHMY])|S777C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J105[BFHYM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J106[BFHM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J120(?:ZN|[AFGHMPTW])|J05H)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J110[FGHLM]|J111[FM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200[FGHMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J200BT`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J260AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J260([AFGMY]|T1)|S260DL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J(?:210F|250[FGMNY])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S367VL|S357BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J311(?:[09]|9S)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S320VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S327VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:T1|[ATW])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327(?:[FP]|R4)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337R4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327VPP`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-S337TL`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J3109`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J300H|J320(?:[ZF]N|R4|W8|YZ|[AFGHMNPVY]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J330(?:FN|[08FGLN])|J327(?:R[76]|U))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337(?:VPP|[AWPUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G400[FG]|J400[FGM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J500(?:FN|N0|[78FGHMY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J510(?:[FGMU]N|FQ|[8FGHKLSY])?|5108|G510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530[GY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J530|(?:lineage_)?j5y17lte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G570[0FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J600[FGLN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J610[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J410[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J415(?:[FG]N|[FGN])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J710FN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J7[01]0(?:FN|MN|[8FHKM])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J700P`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J700(?:T1|T)|J710GN|J7109?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J730[K]|J727(?:R4|[AFSU]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J737(?:R4|T1|VPP|[APSTUV])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611(?:FF|MT|M)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G615F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S727VL|S737TL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:J7 Pro|J730(?:GM|[FG]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J701[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J720[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:S767VL|S757BL)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727[PTV]`),
		regexp.MustCompile(`(?i)SM-J7\[7\]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J810|SM-J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SM-J9\[7\] Prime`),
		regexp.MustCompile(`(?i)SM-J9\[8\] Pro`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M015[FG]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-[EM]045F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M013F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M017F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M025F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M022[FGM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M105[FGMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M107F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M115[FM]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M127[FGN]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M135`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M136`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M146B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M156B`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M205(?:[FGMN]|FN)|M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M215G`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M225`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236L`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M236`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:M307(?:FN|[0F])|M30s)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M305?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M315F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M325F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M326`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M336`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M317F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M346`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M356`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M405`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M426`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M515F`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M526`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M536`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M546`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M625`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-M556`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W201([689])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2022`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2020`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2021`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-A826`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W2015`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G910S`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G550(?:FY|T[12]?)|S550TL|G55[01]0|G5520)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G5528`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G600(?:FY|[0F])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G610[0KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G611[FKLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C500[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C501[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C5560`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C700[0X]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C701[08FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C710[08]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-C900[08FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z130H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z200[FMY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z300H`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-Z400[FY]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:G150(?:N[0KLS])?|G155S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-G16(?:0N|[05]0?|5N))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J321AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J326AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J336AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J727AZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J327AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-J337AZ`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:F900[0FUW]|F907[BN])|SCV44`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W9023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W9024`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W7023`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W7024`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F711|SCG12|SC-54B)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F721|SC-54C|SCG17)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F731|SCG23)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F741)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-F916(?:U1|[0BNQUW])|SCG05`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F926|SC-55B|SCG11)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F936|SCG16|SC-55C)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F946|SCG22|SC-55D)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-F956|SCG28|SC-55E)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9060(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9063`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9(?:080|128)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9168`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I9082`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7000`),
		regexp.MustCompile(`(?i)(?:SC-01G|SCL24)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N935[FSLK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-(?:I605|N719|R950)|SPH-L900|Galaxy Note 2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-N7105`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G710(?:2T|5[HL]|[25689KLS])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G720(?:AX|N0|[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:SAMSUNG-)?SM-(?:G530(?:[689]W|[AF]Z|BT|MU|R[47]|[AFHMPTWY])|G531[FH]|S920L)|(?:rr_)?fortuna3g)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G531(?:BT|[MY])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532MT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G532[MG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N7502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N750[05LQ]?`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-9005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N900(?:W8|[05689][VQ]?|[AKLPSTV])?|SCL22|SC-01F|SC-02F)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-(?:N910|910U)|N9100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N916[KLS]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N915`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N920(?:R[467]|W8|[0ACFGIKLPSTVX])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-N9208`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G750(?:8Q|[9AFH])`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I915[028]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-I920[05]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(?:SM-N930(?:R[467]|W8|[0AFKLPSTUVX])|SCV34)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N950|SCV37|SC-01K`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N960|SCV40|SC-01L)|crownqlte`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N975(?:U1|XU|[0CFUWX])|SM-N976[0BVNQU]|SC-01M|SCV45)|Galaxy Note 10\+`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-(?:N970(?:U1|W8|[089DFJKLSUWX])|N971N)|Galaxy Note 10`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?SM-N770[FX]`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N981(?:B/DS|U1|[0BNUW]))`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N985(?:F/DS|F))|Galaxy Note 20 Ultra`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N980(?:F/DS|F)|Galaxy Note 20)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG[- ])?(?:SM-N986(?:B/DS|U1|[0BCNUW])|SC-53A|SCG06)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-W750V`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?SM-G310R5`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?GT-E2152`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?(GT-(P|N8|N5)[0-9]+[a-z]?)`),
		regexp.MustCompile(`(?i)(?:SAMSUNG-)?((?:SM-[TNP]|GT-P)[a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)((?:SCH|SGH|SPH|SHV|SHW|GT|SM)-[a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Galaxy ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Galaxy ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[\-][ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9]+[\-_][a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAMSUNG[ _/\-]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)SAMSUNG;[ ]?([a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)SEC_SC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SEC-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SAM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:portalmmm|o2imode)/2\.0 ([SZ][a-z0-9]+)`),
		regexp.MustCompile(`(?i)sam([rua][0-9]+)`),
		regexp.MustCompile(`(?i)(T3G_04|TWIFI-06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SAMTRON_W_)?(43SA70[15]|50SA707|55SA703)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8312D|G(60[25]|70[3568]G?|785|803)|N83(?:-2cpu)?|N91) Build`),
		regexp.MustCompile(`(?i)G(60[25]|70[3568]G?|785|803)`),
		regexp.MustCompile(`(?i)Sansui[_ ]|(?:S505024)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sansui[_ ](Switch|Play|Fun|SA4[01]|U4[56]|U3[02]|Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN|(?:BiTBiZ_V58|ACTOMA ACE|DREAMPLUS03A|Candy U7 Pro|GAAMII|RS635H|HY-002 Plus|HongQi HQ1|G101-OG|HEXIN-H2-A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BiTBiZ_V58(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GAAMII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN-H2-A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Candy U7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DREAMPLUS03A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GreenOrange(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CLASSONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)halove(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ACTOMA ACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)monica(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HongQi HQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GALAZ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEWDUN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HEXIN[_ -](H2-A|H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HY-002 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)G101-OG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SANTIN[ _][#]?(Dante|Candy U7|Armor(?: 2)?|YSL-Y7|ANT\.W|N[13]|JS|S6|V9(?:[ _]Pro)?|Life Shine|ovvi|D|11 XS Max|SHUGUO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RS635H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Santin[ _#]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Sanyo|MobilePhone[ ;]`),
		regexp.MustCompile(`(?i)SCP-?6750`),
		regexp.MustCompile(`(?i)SCP-?6760`),
		regexp.MustCompile(`(?i)SCP-?6780`),
		regexp.MustCompile(`(?i)SANYO[ /_-]([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)MobilePhone ([a-z0-9-]+)`),
		regexp.MustCompile(`(?i) (TB-PO1|TB-B01|TB-G01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SberBox|SaluteTV|SBDV-00006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SCHNEIDER[;,]`),
		regexp.MustCompile(`(?i)Schok[ _]|FreedomTurboXL`),
		regexp.MustCompile(`(?i)(SL-LED24S90T2S|SL-LED32S49T2S|SL-LED43S98T2SU|SL-LED43S94T2S|SL-LED50S02T2SU|SL-LED55S01T2SU)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Pi 5\.5L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seatel[ _](L2|V8[AE]|T[5-8]|R6|V[89])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Seeken[ _-]`),
		regexp.MustCompile(`(?i)Seeken[_ -](SG1|SJ1)`),
		regexp.MustCompile(`(?i)Seeken[_ -](ST-101)`),
		regexp.MustCompile(`(?i)Selecline[ _]|(?:S4T7IN|ST19101|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ST19101|S4T7IN|S3T10IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selecline 10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Selenga[ _](A[1345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sencor|(?:ELEMENT[ _]?(?:(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?|P[0-9]+|10\.1 Q001)|10_1Q205|ELEMENT-P5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?Element (10\.1) (Q001)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT8`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _]9\.7`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT10[ _]1`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(7Q105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?(10)_(1Q205|1Q102)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SENCOR[ _])?ELEMENT[ _-]?P([0-9]+)`),
		regexp.MustCompile(`(?i)Sencor[ _]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Sendo([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Senkatel[ _]|(?:MaximusT1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senkatel[ _](T1009|T8002|T701[12]|T9702)`),
		regexp.MustCompile(`(?i)SENSEIT[ _]?([^;/)]+)( Build|\))`),
		regexp.MustCompile(`(?i)Senwa|(?:S\-?(?:471|7[12]5|6[01]5|915|905TL|1000|5018)|V705B|LS50F| LS50?|LS5518H|LS5718|LS5018FP?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?471(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?605(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?905TL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?5018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018FP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5018F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S-?(615|7[12]5|915)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V705B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50F(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5518H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LS5718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Senwa[ _-]*([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:AUTOID ?(?:9N|Q[79])|CRUISE[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CRUISE[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AUTOID ?(9N|Q[79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NBP-60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP|SBM|SH-?[0-9]+[a-z]?(?:[);/ ]|$)|AQUOS|(?:SH-T01|SH-M26|SH-M0[14-9]|SH-M1[1-7](?:-y)?|S[357]-SH|SH-[MZ]([12]0|01|22)|SH-C0[3-6]|SH-[CL]02|SH-RM(?:1[1258]|02)|SH-R?M19s?|SH-R10A|[34]04SH|401SH|[45]02SH|306SH|[36]05SH|70[1246]SH|80[138]SH|90[1678]SH|50[3679]SH|SHL2[1235]|SHV4[0-8]|SHV3[1-9](?:[-_]u)?|FS80(?:1[08]|32|28|0[29])|TG-L900S|NP601SH|403SH|603SH|SHF3[1-4]|SHV4[035][-_]u|SW001SH|SHG0[1-9]|X4-SH|A002SH|DM-01[JH]|A[01]01SH|606SH|FS801[56]|d-41A|d-51C|NP80[567]SH|NP501SH|A00[34]SH|A102SH|IS05|SH-(?:S50|53A|51B|[HDA]01|01FDQ|S40P|M24)|LP-0[12]|FS8014|SBM00[35]SH|SBM103SH|A10[345]SH|lineage_ss2|LCD_xxSUFOC475A|A20[1248]SH|FS802[56]|ADS1|STTM21VAPP|NPA205SH|SHG10|SHT21|A30[12]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)506SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)603SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)50[23]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[34]04SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)606SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)507SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S3-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S5-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X4-SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG06|A10[34]SH|SH-M20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51C|A204SH|SHG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-(?:M26|54D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M07(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-41A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-S40P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-54B|SHG05|SH-R?M19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG07|SH-RM19s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A208SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-53C|SH-M24|SHG10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG03|A004SH|SH-M17|SH-53A|A105SH|SH-S50)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-D01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M12(?:-y)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-H01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-[MZ]10|801SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M13|906SH|SH-01M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG04|A102SH|SH-RM18|Aquos zero6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHG02|A002SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-Z01|Aquos S2 4/64)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02E|SH-01[GH]|SH-04H|SH-09D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-01FDQ(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-?06D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHL2[1235]|SH-M01|SH-01E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(203SH|30[23]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-L02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:605SH|SH-03J|SHV39)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:701SH|SHV41|SH-M06)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-M09|SHV42|706SH|SH-03K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)803SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:908SH|SHG01|SH-M14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M16(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-M15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C06(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C03(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C05(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-C04(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHF3[1-4])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)704SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A201SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-02J|SH-04G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)30[56]SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)403SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:509SH|SH-R10A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NP601SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV40|SHV3[24])(?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)702SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquos P6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[183](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8010|SH-M08|SHV43(?:-u)?|SH-01[KL]|lineage_ss2|Aquos S2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8016(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV46|SH-R?M11|901SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV44|808SH|SH-04L|SH-03G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8032|FS8015|SH-02M|SHV45(?:-U)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SHV48|907SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM12(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-RM15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51B|A101SH|SH-M22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A202SH|SH-52C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-51D|A301SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A302SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SH-52D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV3[57](?:_u)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TG-L900S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-A01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8026(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FS8002|SHV47)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FS8028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHV36(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHG09(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW001SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DM-01[JH])`),
		regexp.MustCompile(`(?i)NP80[56]SH`),
		regexp.MustCompile(`(?i)LP-0([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(00[35]SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM(103SH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-02L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SBM200SH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SH-08E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(d-41A|d-51C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SH-T01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LC-(?:[0-9]{2})[a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHARP-AQUOS|AQUOSBrowser`),
		regexp.MustCompile(`(?i)SHARP[ -]([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)AQUOS[ _-]TV([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)(?:SHARP|SBM)([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(SH-?[0-9]+[a-z]?|IS05|ADS1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SHIFT6mq?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STV[-_](55LED41|40LED25S|40LED42S|32LED42S|32LED30C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SHTRIH-SMARTPOS-F2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PNT-704[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ](?:PLUS|e1002|Topaz)|(?:Express3-Max|SSR3-1-51-5M|SSD-1-53-13M|Mega2(?:max)?|Express3|Diamond 2|Plus3_4G|Plus2 4G|Infinity Max|Nile X|More_3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS2|Plus2 4G`),
		regexp.MustCompile(`(?i)SICO[_ ]PLUS`),
		regexp.MustCompile(`(?i)SICO[_ ]Topaz`),
		regexp.MustCompile(`(?i)SICO[_ ]e1002`),
		regexp.MustCompile(`(?i)SIEMENS|SIE-|portalmmm/2\.0 SI|(?:S55|SL45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(S[56]5|S40|C45|ME45|SLIK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIEMENS[ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SIE(?:MENS )?[\-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:SIE-)?(SL45i)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 (SI[a-z0-9]+)`),
		regexp.MustCompile(`(?i)Sigma|(X[_-]Style[ _]?Tab[_ ]A(\d+)|Tab_A1025_X-treme|X[-_ ]?treme[-_ ]?(?:PQ[0-9]{2}|PQ18_MAX)|X-Style_(?:S550[12]|S3502)|Tab A1015|Tab A802|Tab_A1010_Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SIGMAMOBILE-S3500-3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})[_ ]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?treme[-_ ]?PQ([0-9]{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[_-]Style[ _]?Tab[_ ]A(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab (A1015|A802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab_A1010_Neo(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sigma[ _])?X[-_ ]?Style[-_ ]S([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Silelis[ _](T-1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TangoTab|Presto[ )]|PicassoTab_[X9]|PICASSOTABX14|Ultimax|Valumax|S72-B|SX2W`),
		regexp.MustCompile(`(?i)TangoTab[_ ]?(\d+|X)`),
		regexp.MustCompile(`(?i)PicassoTab_?(X14|XL?|9)`),
		regexp.MustCompile(`(?i)(NP602SI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech|(?:Sapphire[_ ](?:H50S|H7S?|H90)|Infinity_I(?:1|_Mix))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sapphire[_ ](H50S|H7S?|H90)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Singtech[ _](Q2|S1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Infinity_I_Mix(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Siragon|(?:SP[_-](?:5[0124]50|5[34]00|61[05]0|7200))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Siragon[_ ])?(?:SP[_-](5[0124]50|5[34]00|61[05]0|7200))`),
		regexp.MustCompile(`(?i)(?:FINNEY U1|SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:FINNEY U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOLARIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)APRIX C55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SKY|Elite|Fuego)[_ ][3-7]\.[05](?:[A-Z]{1,2})?|Elite[ _](?:Max|PHOTOPRO|5_0T|M45|[45]T|45T|GO|A63Max|M5Plus|T8Plus|T[46]|[ABCDHP]5|A6|5_5_Octa|Octa|[A-HJLNPTVR]55|[AB]65|[CG]63|T10)|Platinum[_ ](?:5\.0M|5\.5C|[56]\.[05]\+?|[ABCMP]4|[ACGKV]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|VIEW2|O|4\.0|4_0Plus)|PLATINUMVIEW|SKY[ _](?:55M|Pro_III|PAD10|PAD8)|SKYVISION|SKY B(?:lack|63)| SKY[ _]Prestige|Sky Vision2|PRO_SELFIE|Sky,`),
		regexp.MustCompile(`(?i)Platinum[_ ](?:5\.0M|M5)`),
		regexp.MustCompile(`(?i)Platinum[_ ]5\.5C`),
		regexp.MustCompile(`(?i)Platinum[_ ]([56])\.([05])\+`),
		regexp.MustCompile(`(?i)Platinum[ _]4\.0`),
		regexp.MustCompile(`(?i)Platinum[_ ](P9) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]B4P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]([ABCMP]4|[ACGK]55|[ABDEFGHJKM]5|A7|A57|P9|X|UNO|O|6\.0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Platinum[_ ]?VIEW(2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKY[ _]PAD10Max`),
		regexp.MustCompile(`(?i)SKY[ _]PAD8Pro`),
		regexp.MustCompile(`(?i)SKY[ _]PAD(10|8)`),
		regexp.MustCompile(`(?i)Elite_Octaplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite[_ ]T8Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite_OctaXS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite Octa(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite OctaMax(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite ([ENP])55Max`),
		regexp.MustCompile(`(?i)Elite[ _](Max|M45|Go|[45]T|T[46]|[ABCDHP]5|A6|[A-HJLNPTVR]55|[AB]65|[CG]63|45T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elite (T10) Pro`),
		regexp.MustCompile(`(?i)Elite (T10)`),
		regexp.MustCompile(`(?i)Elite[_ ]([3-7])[\._]([05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)Fuego[_ ]([3-7]\.[05](?:[A-Z]{1,2})?\+?)`),
		regexp.MustCompile(`(?i)SKY Black ?(2)?`),
		regexp.MustCompile(`(?i)SKY 5\.0Pro II`),
		regexp.MustCompile(`(?i)SKY[ _]PrestigeX`),
		regexp.MustCompile(`(?i)SKY[ _]Prestige`),
		regexp.MustCompile(`(?i)SKY[_ ]([3-7]\.[05](?:[A-Z]{1,2})?)`),
		regexp.MustCompile(`(?i)Sky, (XiOneUK|LlamaUK), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ](?:3Plus|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ]3Plus`),
		regexp.MustCompile(`(?i)SKYSTREAM[_ ]One`),
		regexp.MustCompile(`(?i)(?:SKYLINE[_ ])?(32YST5970|50UST5970|24YST5970|40LST597[05]|32YST5975|43LST5975|43U6510|5[58]U7510|43LST5970)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; ST-[0-9a-z]+;|(?:50ST3204)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(50ST3204)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (ST-[0-9a-z]+);`),
		regexp.MustCompile(`(?i)Sky_?worth|SWTV-|SKW690|(?:FlowBox-F1|SWTV|SW-22AE NF)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SWTV-2[02]AE(?:-PRO|-FHD)?)`),
		regexp.MustCompile(`(?i)Sky_?worth ([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)|SMADL[ _]`),
		regexp.MustCompile(`(?i)Android.+(?:Safari)(?: Build|\) AppleWebKit)`),
		regexp.MustCompile(`(?i)SMADL[ _]Matri([2X])`),
		regexp.MustCompile(`(?i)Smailo_(2GO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Coral 4|Slide Lite|Notrino|Smart PRIME II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Coral 4|Slide Lite|Notrino|Smart PRIME II)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SK5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smarttech[;,]`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]S`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _]SB ?13`),
		regexp.MustCompile(`(?i)SMARTBOOK[ _](S9Q9|S7QS|S9\+)`),
		regexp.MustCompile(`(?i)(ST1009|ST7160|ST1009X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Android 7(?:[\d.]*);(?: [\w-]+;)? M512| M520| M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M512|M520|M700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smartfren|Androtab|Andromax|PD6D1J|AD682J|AD68[89]G|AD6B1H|AD9A1H|AD682H|AD683G`),
		regexp.MustCompile(`(?i)Andromax[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)Andromax[ _-]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Smartfren[ _-]([^/;\)]+)(?: Build|[/;\)])`),
		regexp.MustCompile(`(?i)(Androtab[^/;]+) Build`),
		regexp.MustCompile(`(?i)Smartisan[_ ]|(SM(?:70[15]|[89]01|919)|OD10[35]|YQ60[1357]|DT2002C|DE106|DT190[12]A|O[CE]106|OS103|O[CS]105)[ /;\)]`),
		regexp.MustCompile(`(?i)SM70[15]`),
		regexp.MustCompile(`(?i)YQ60[1357]`),
		regexp.MustCompile(`(?i)OD10[35]`),
		regexp.MustCompile(`(?i)OS105[ /;\)]`),
		regexp.MustCompile(`(?i)DE106[ /;\)]`),
		regexp.MustCompile(`(?i)OE106[ /;\)]`),
		regexp.MustCompile(`(?i)OC10[56][ /;\)]`),
		regexp.MustCompile(`(?i)DT2002C[ /;\)]`),
		regexp.MustCompile(`(?i)DT190[12]A[ /;\)]`),
		regexp.MustCompile(`(?i)OS103[ /;\)]`),
		regexp.MustCompile(`(?i)Smarty[_ ]`),
		regexp.MustCompile(`(?i)Mini ?(7L?)`),
		regexp.MustCompile(`(?i)Smooth|S2 Advance(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 5\.5 lite`),
		regexp.MustCompile(`(?i)Smooth (5\.[05]|6\.[015])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth626(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth 6\.26 (Lite|Max|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth Note 6\.8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smooth (8GT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smotreshka Box (115NA|413NA|213a?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (?:S2|[SE]1|FIRE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)soda (S2|[SE]1)`),
		regexp.MustCompile(`(?i)Softbank|J-PHONE`),
		regexp.MustCompile(`(?i)Softbank/[12]\.0/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)([a-z0-9]+);Softbank;`),
		regexp.MustCompile(`(?i)J-PHONE/[0-9]\.[0-9]/([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)((?:S1586K|SS(?:5[23]14|5[47]24)G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE|(?:E1457|W145[02]|Sun_S5501)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOLONE[ _]Elite[ _]L5501`),
		regexp.MustCompile(`(?i)SOLONE[ _]SUMO[_ ]S5001`),
		regexp.MustCompile(`(?i)SOLONE[ _](SL-K40|S5002)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sonim[ -]|XP(?:[67]7|[358]8|99)00(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3400`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP3900`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP5700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP6700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP7700`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP8800`),
		regexp.MustCompile(`(?i)(?:Sonim-)?XP9900`),
		regexp.MustCompile(`(?i)Sony(?: ?Ericsson)?|SGP|Xperia|(?:[4-9]0[12])SO|C1[569]0[45]|C2[01]0[45]|C230[45]|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D(?:200[45]|21(?:0[45]|14)|22(?:0[236]|12|43)|230[2356]|240[36]|2502|2533|510[236]|530[36]|5316|5322|5503|58[03]3|65(?:0[23]|43|63)|66[03458]3|66[14]6|6708)|E(?:20[0345]3|2006|210[45]|2115|2124|230[36]|2312|23[356]3|530[36]|53[3456]3|5506|55[356]3|56[46305][36]|58[02]3|6508|65[35]3|66[0358]3|68[358]3)|F(?:311[12356]|331[13]|321[12356]|5[13]21|5122|813[12]|833[12])|G(?:2299|312[135]|311[26]|322[136]|3212|331[123]|3412|3416|342[136]|823[12]|834[123]|8[14]4[12]|8188)|H(?:3113|3123|3133|3213|3223|3311|3321|3413|4113|4133|4213|4233|4311|4331|4413|4433|4493|8116|8166|82[1679]6|83[12]4|8416|9436|9493)|I(?:3[12]23|3213|[34]113|[34]312|4193|42[19]3|4332)|J(?:3173|3273|81[17]0|82[17]0|91[15]0|92[16]0)|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]+[0-9]*(?: Build|\))|X?L39H|XM50[ht]|XQ-[A-Z]{2}[0-9]{2}|W960|portalmmm/2\.0 K|S3[69]h|SOG(?:0[1-9]|10)|SOL2[2-6]|SOT[23]1|SOV3[1-9]|SOV4[0-3]|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[12]C|[2-5]D|[1-4]E|[1-5]F|[1-5]G|[1-4]H|[1-4]J|[1-5]K|1M|[1-3]L)|R800[aix]|LiveWithWalkman|BRAVIA|SGP771|E3 Dual|A[012]01SO|A204SO|A[123]02SO|SO-[45]1[AB]|SO-5[1234][ABCDE]|A[12]03SO|A002SO|NW-(A[13]00|ZX500|Z1000)Series|NSZ-GS7|SmartWatch 3|SVP-DTV15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E15[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT18[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT11`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT15`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MT27`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?MK16[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST17[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02L`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST18[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SK17[ai]?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?X10[ai]v?`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)M1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?R800`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK13i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?CK15[ai]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F100i`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J105`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J108`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U10`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U1`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U5`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?U8`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W20`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W100`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W150`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?W960`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?WT13`),
		regexp.MustCompile(`(?i)SO-01E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BE[4-7]2`),
		regexp.MustCompile(`(?i)XQ-AQ[56]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:4113|31[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3173(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SO-41B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A203SO|SO-53C|SOG08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A001SO|XQ-AU42|XQ-AU51|XQ-A[TU]52|SO-41A|SOV43)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A10[12]SO|SO-52B|SOG04|XQ-BT52)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SO-52D|XQ-DC72|XQ-DC54|A302SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-ES[45]4|XQ-ES72|SOG14|SO-52E|A402SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XQ-BT44(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-CC72|XQ-CC[45]4|SOG07|SO-52C|A202SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I(?:42[19]3|32[12]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?I4193`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J(?:9110|81[17]0)|SOV40|SO-03L|802SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J9150)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG01|SO-51A|XQ-AT42|XQ-AT51|SO51Aa|XQ-AT72)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-51B|SOG03|XQ-BC[4567]2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG06|XQ-CT[67]2|SO-51C|A201SO|XQ-CT[45]4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG10|SO-51D|XQ-DQ(?:[67]2|[45]4))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XQ-EC72|XQ-EC54|XQ-EC44|SOG13|SO-51E|A401SO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT22i|Xperia P`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT25i|Xperia V`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J92[16]0`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:J82[17]0|SO-01M|SOV41|901SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOG02|A002SO|XQ-AS[4567]2|SO-52A)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:XQ-DE72|XQ-DE[45]4)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SO-53B|A103SO|SOG05|XQ-BQ[4567]2)`),
		regexp.MustCompile(`(?i)(?:SOG09|XQ-CQ72|SO-54C|XQ-CQ[45]4|XQ-CQ62|A204SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:SOV42|902SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?J3273`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26ii`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26i|Xperia S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-02C`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-03D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT26w`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT28[aih]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT29i|Xperia TX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30a`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?LT30p`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]2`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST21[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST23[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST25[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL22`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL21`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST26[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?ST27[ia]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C150[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C160[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E210[45]|E2115|E2124)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[05]3|E2006`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C190[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C210[45]|S36h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C230[45]|S39h`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C530[236]|Xperia SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C550[23]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?C650[236]|Xperia ZL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SOL25(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C66(?:0[236]|16)|SO-02E)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C68(?:0[26]|[34]3)|XL39H|SOL24)|Xperia Z Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xperia Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D200[45]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D21(?:0[45]|14)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D22(?:0[236]|43)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2212|E3 Dual`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E20[34]3`),
		regexp.MustCompile(`(?i)H33[12]1`),
		regexp.MustCompile(`(?i)H43[13]1`),
		regexp.MustCompile(`(?i)I43[13]2`),
		regexp.MustCompile(`(?i)XQ-AD5[12]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2302`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D230[356]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D240[36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E230[36]|E23[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E2312|E2363)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[05][36]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E56[436]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2502`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D2533`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[05]3|E5306`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E53[0346]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E5506|E5553`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E55[36]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D510[236]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D530[36]|D5316|XM50[ht])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5322`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?D5503|Xperia Z1 Compact`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:C69(?:0[236]|16|43)|SOL23|L39H|SO-0[12]F)|Xperia Z1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)|Xperia Z3 Compact(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP561|SOT21(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)|Xperia Z2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D66[045]3|D66[14]6|SO-01G|SOL26|401SO)|Xperia Z3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6633|D6683)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E65[35]3)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:D6708)`),
		regexp.MustCompile(`(?i)SOV31|402SO|SO-03G`),
		regexp.MustCompile(`(?i)SGP771|SOT31|SO-05G`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E58[02]3|SO-02H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E66[05]3|SOV32|501SO|SO-01H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E66[38]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:E68[58]3|SO-03H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?E6833`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[135]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F321[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F833[12]|SOV34|601SO|SO-01J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:701SO|SOV36|G834[123]|SO-01K)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G8441|SO-02K`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G312[135]|G311[26]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G341[26]|G342[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3426`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G322[136]|G3212`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H31[123]3`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H41[13]3`),
		regexp.MustCompile(`(?i)H44[19]3|H3413`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?H(?:3213|3223|4213|4233)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G823[12]|SOV35|602SO|SO-03J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:G814[12]|G8188|SO-04[JK])`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H83[12]4|H82[17]6|SOV37|SO-03K|H8296|702SO)`),
		regexp.MustCompile(`(?i)(?:H81[16]6|SOV38)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:H(8416|9436|9493)|SO-01L|SOV39|801SO)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G331[13]`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?G3312`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04E`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-04D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?SO-05D`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5121`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5122`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F5321|SO-02J`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?(?:F8131|502SO|SOV33|SO-04H)`),
		regexp.MustCompile(`(?i)(?:Sony(?:Ericsson)?)?F8132`),
		regexp.MustCompile(`(?i)(?:Sony)?(?:SGP(?:311|312|321)|(Sony)?SO-03E|Tablet Z LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP712(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGP(?:511|512|521)(?:[);/ ]|$)|SO-05F`),
		regexp.MustCompile(`(?i)SGP(?:6[124]1|612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SGPT(?:12|121|122|123|13|131|132|133)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH21|4K VH2|4K 2015|2015|VH1|VU[12]|VU31)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SVP-DTV15(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NSZ-GS7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sony-BRAVIA-VH1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NW-(A[13]00|Z1000|ZX500)Series`),
		regexp.MustCompile(`(?i)BDPlayer; ([0-9a-z\-_]+);`),
		regexp.MustCompile(`(?i)BDP(201[3-7])`),
		regexp.MustCompile(`(?i)SonyBDP|SonyDBV|BDPlayer`),
		regexp.MustCompile(`(?i)(?:Sony-)?(KDL?-?[0-9a-z]+)`),
		regexp.MustCompile(`(?i)Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)`),
		regexp.MustCompile(`(?i)((?:WT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*)(?: Build|\))`),
		regexp.MustCompile(`(?i)(MT[0-9]{2}[a-z]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)portalmmm/2\.0 K([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SonyEricsson ?IS11S`),
		regexp.MustCompile(`(?i)Sony ?Ericsson?([^/;]*) Build`),
		regexp.MustCompile(`(?i)SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/`),
		regexp.MustCompile(`(?i)Sony ?Ericsson ?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)Sony Corporation/([^/;]*)\)`),
		regexp.MustCompile(`(?i)Sony (Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)(SGP[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^/;]*Tablet[^/;]*) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) \(AOSP\) Build`),
		regexp.MustCompile(`(?i)Xperia ([^;/]+) Build`),
		regexp.MustCompile(`(?i)(XQ-[A-Z]{2}[0-9]{2})`),
		regexp.MustCompile(`(?i)Sony[ -]?([^/;]*) Build`),
		regexp.MustCompile(`(?i)Sony[ -]?([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)Soullink[ _](S1)`),
		regexp.MustCompile(`(?i)((?:SM-LED32M(?:1[0214]|0[49])S)|SM-QLED(?:50T2|55T21)SU|SM-LED(?:24M0[69]S|43M02S|40M04S|(?:5[05]|43)M0[12]SU|32M13S|65M0[12]SU))(?:_-Ver01)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SOYES[ _](?:[67]S|XS|XS11)|S10-H|XS12 PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SOYES[ _]([67]S|XS11|XS)`),
		regexp.MustCompile(`(?i)Spark Plus 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sparx[ _]|(?:Android 1[34](?:[\d.]*);(?: [\w-]+;)? Neo 11|NEO_6|NEO 5|Neo_6_plus|Neo 5 Pro|Neo X|Neo 8 Lite|Edge 20 Pro|Ultra 8 Pro|Ultra 8)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Neo ([578]) Pro`),
		regexp.MustCompile(`(?i)Neo[ _]([5687])[ _]Plus`),
		regexp.MustCompile(`(?i)Neo[ _]([567]|11)`),
		regexp.MustCompile(`(?i)(Versity (?:9640|9553))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(CARBONO_5|CUARZO_6|DIAMANTE_5|VULCANO_55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VULCANO_55(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CARBONO_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CUARZO_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMANTE_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice|(?:Xlife[-_ ](?:\d+Q?|Victor5|M5q\+|M5 Pro|Proton5|Electro55HD))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Spice_)?Xlife[-_ ](\d+Q?|M5\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xlife-M5q\+`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(7\d{2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?Mi-?(\d{3})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Spice[-_ ]?([^/;]+)(?:/|$)`),
		regexp.MustCompile(`(?i)AQT(100|8[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N(?:9[5678]00|8800|9000|9977)|Star[ _]N9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Star_)?N(9[5678]00|8800|9977|9589)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starlight|(?:VENUS_PLUS|My_Star_X|My_star_18|RIO STAR|C_Note(?:_Pro)?|Star_Mix_2|I_STAR_PLUS|star_plus_plus|star_two|I star (?:one|two)|Milan_Pro|Gionee_?Star)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Gionee_?Star`),
		regexp.MustCompile(`(?i)I star two|star_two`),
		regexp.MustCompile(`(?i)(?:Starmobile (?:Play (?:Neo|Spark|GO|Click|Max)|Astra)|DIAMOND D1|UP[_ ](?:Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)|PLAY (?:Club|Style|Click LTE|Dash)|ENGAGE7\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile PLAY GO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Starmobile ASTRA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DIAMOND D1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Starmobile )?Play (Neo|Spark|Click|Club|Style|Max|Dash)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UP[_ ](Sense|Rave|Groove|Octa|Prime|Selfie|Snap|Xtreme|XL|Max|Vision|Neo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ENGAGE7\+`),
		regexp.MustCompile(`(?i)Andromeda[ _]S(707|84[05]|850|8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart_Starwind|(?:SW-LED(?:24SG303|32SB30[024]|42SB300|43SB30[04]|40SG300|40SB30[04]|43SG30[20]|43UB40[04]|43UG40[0135]|32SG3(?:0[01245]|11)|55UG40[03]|58UG401|5[05]UB401|50UG40[03]|65UG403|5[08]UB400|58UA401|65UG402))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SW-LED(\d{2}[SU][ABG]\d{3})`),
		regexp.MustCompile(`(?i)STILEVS|ST65SMWOS4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STILEVS SMART TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+)|STONE EVO`),
		regexp.MustCompile(`(?i)STX[ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)STX[ -]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build|STOREX LinkBox`),
		regexp.MustCompile(`(?i)eZee[^a-z]*Tab ?([^;/]*) Build`),
		regexp.MustCompile(`(?i)StrawBerry[ _]`),
		regexp.MustCompile(`(?i)StrawBerry[ _](SX|QX15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; WSTR[0-9a-z]+;|(B3 (?:Maxi|Simply)|B3Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:B1s|HT28|HT16))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(B3 (?:Maxi|Simply)|B1s|HT28|HT16)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B3Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (WSTR[0-9a-z]+);`),
		regexp.MustCompile(`(?i)STYLO|(?:TARISTAB[234]|Luna|CPE91|VS571|VS5502|S57_A[ZL]URE|BOLD_PLUS|INKOSI(?:_PRO)?|INKULU_PRO|Ithemba|S56 MIST|S55 Nova|INKOSI_PRO_4G|S40_VISTA|S50_JADE|S50_BOLD|S64_ALPHA|S53_STARK|S40_LIFE|LIFE_2|S49[_ ](?:MONO|POISE|ECO)| [27]21|721_PRO|DQR22|MOSCOW|SWIFT_4G|STEP_UP|ARCTIC|S61 JAZZ|DVK87 Orion 8 Tab|DVK82 Mercury|EBY33)(?:[);/ ]|$)| (?:BRAVE|SATURN)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)STYLO[ _](F1|Viva)`),
		regexp.MustCompile(`(?i)STYLO[ _]SONIC`),
		regexp.MustCompile(`(?i)([27]21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)STYLO[ _]S9[_ ]TOPAZ`),
		regexp.MustCompile(`(?i)SV61 VECTOR\+`),
		regexp.MustCompile(`(?i)SM61 MAGIC\+`),
		regexp.MustCompile(`(?i)S49[_ ]POISE`),
		regexp.MustCompile(`(?i)S49[_ ]MONO`),
		regexp.MustCompile(`(?i)S49[_ ]ECO`),
		regexp.MustCompile(`(?i)Stylo[_ ](521)`),
		regexp.MustCompile(`(?i)(VS571|VS5502)`),
		regexp.MustCompile(`(?i)TARISTAB([2-4])`),
		regexp.MustCompile(`(?i)SUBOR[ _]`),
		regexp.MustCompile(`(?i)SUBOR[ _](S5|2019)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUBOR[_ ]K10PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]`),
		regexp.MustCompile(`(?i)SUGAR Y([78]) MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR S60 pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR F7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+) ?Dual(?: Build|[);])`),
		regexp.MustCompile(`(?i)SUGAR[ _]([^);/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Cyclone (?:Voyager|X8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cyclone (?:Voyager 2|Voyager))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Cyclone X8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNVAN[ _-]`),
		regexp.MustCompile(`(?i)SUNVAN[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)SUNVAN[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)Model[ _][6ADSY](?:[ _]pro)?(?:[ _]4G)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Model S 4G)`),
		regexp.MustCompile(`(?i)(Model [6ADSY])`),
		regexp.MustCompile(`(?i)(?:V1s-G|T2s_LITE|V2_PRO-ST)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T2s_LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1s)-G`),
		regexp.MustCompile(`(?i)LGE; SNY?[0-9]{2}[0-9a-z]+(?:-[0-9]+)?;|(?:SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola|SN7014S?|SN7016|SN10016|SN01DNGL300|SUNNY ?(?:SS01|S52D|SN55UAL253-?)|SUNNY;SmartTV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SS4G9 Mira|SS4G7 Sole|SS4G1 Luna|SS4G8 Nora|SS4G6 Lola)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY (SS01|S52D)`),
		regexp.MustCompile(`(?i)(SN7014S?|SN7016|SN10016)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUNNY;SmartTV`),
		regexp.MustCompile(`(?i)SN01DNGL300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SUNNY[_ ]?)?(SN55UAL253)`),
		regexp.MustCompile(`(?i)LGE; (SNY?[0-9]{2}[0-9a-z]+)(?:-[0-9]+)?;`),
		regexp.MustCompile(`(?i)(TAB(?:2323GMQC|1081|918QC|917QC-(?:8|16)GB)|TAB1090)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sunwell_)?(?:T95ZPLUS|T95[KU]PRO|MINIM8S|MXQ-H3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Sunwell_)?T95ZPLUS`),
		regexp.MustCompile(`(?i)(T95[KU])PRO`),
		regexp.MustCompile(`(?i)MINIM8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MXQ-H3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUPER GENERAL[;,]`),
		regexp.MustCompile(`(?i)SuperBOX_S2PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SC-[0-9]+[a-z]+|SC-2110)`),
		regexp.MustCompile(`(?i)Android 7(?:[\d.]*); (?:BLACK|WHITE) X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SuperTab(?:A10|K7|S7G)|K7 Kids)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SuperTab(A10|K7|S7G)`),
		regexp.MustCompile(`(?i)SUPRA|NVTAB 7\.0 3G|M74C 3G`),
		regexp.MustCompile(`(?i)SUPRA[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(NVTAB 7\.0 3G|M74C 3G)`),
		regexp.MustCompile(`(?i)(SN10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOLT_(5XL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUZUKI[ _]|(?:ECOPAD7|SUMOPad10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SUMOPAD(8100|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SBX604)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Slate2|Swipe_(?:Elite_3M?|Strike8)|Elite_(?:Grace|VR)|EliteDual|Elite (?:Prime|Star|Note|Sense|Power)|Konnect (?:Prime|Power|Neo 4G))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Swipe_)?Elite[_ ]?(Sense|VR|3M?|Grace|Star|Prime|Note|Dual|Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slate2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swipe[_ ]Strike8`),
		regexp.MustCompile(`(?i)swisstone (SD 5[13]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSmart[_ ]([EM]2|M3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYCO[ _]|RS-4(?:03|42)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RS-(\d{3})`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)|(?:(?:roar[ _](?:V20|A50|V78|E80|V150))|innova[123]0|roarV95|ZVIII?|V10[25]|V1[23]0|V128|V14[012]|V1[45]5|SYMTAB\d+| (?:i9[79]|i7[245]|i8[05]|i6[568]|i30|i1[58]|i120|Z30 pro|Z60 plus|[ZR]30|V9[246789]|V75m)|INOVA|Android 7(?:[\d.]*);(?: [\w-]+;)? P11|Android 6.*; (?:V75|i2[015])|EASY_NAV_2|G10\+|helio 30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Symphony_PD1_4G_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)innova([123]0)`),
		regexp.MustCompile(`(?i)roar[ _]?(V20|A50|E80|V78|V95|V150)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z30|P7) pro`),
		regexp.MustCompile(`(?i)(Z60) plus`),
		regexp.MustCompile(`(?i)G10\+`),
		regexp.MustCompile(`(?i)(V141|V1[23]0|V10[25]|V128|V14[012]|i9[79]|i7[245]|i8[05]|i6[568]|i30|i1[58]|i120|V1[45]5|[ZR]30|V9[246789]|V75m?|i2[015]|P11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SYMPHONY[ \_]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SYMTAB(\d+)`),
		regexp.MustCompile(`(?i)(SYX-(?:T70[04]|T10[12]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)System76 Galago Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _][a-z0-9 ]+|(?:REVVLRY\+?|REVVL V\+ 5G|REVVL 2(?: PLUS)?|5062[ZW]|5007[ZW]|T790[WZ]|Telekom Puls|TMAF0[23]5G|TMRVL4G|TMRV5GTB|TMRV0[67]P?5G|T Phone|T Tablet)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5062[ZW]`),
		regexp.MustCompile(`(?i)5007[ZW]`),
		regexp.MustCompile(`(?i)T790[WZ]`),
		regexp.MustCompile(`(?i)REVVL V\+ 5G`),
		regexp.MustCompile(`(?i)REVVL 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF025G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMRV075G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMAF035G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TMRV07P5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telekom Puls(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone Pro \((2023)\)`),
		regexp.MustCompile(`(?i)T Phone \((2023)\)`),
		regexp.MustCompile(`(?i)T Phone Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone (\d*)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Phone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+) Build`),
		regexp.MustCompile(`(?i)T-Mobile[ _]([a-z0-9_ ]+)`),
		regexp.MustCompile(`(?i)T96mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TADAAM BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TAG[ -]TAB[ -]III?|TAGPhone)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAG[ -]TAB[ -](III?)`),
		regexp.MustCompile(`(?i)TAGPhone(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAUBE[;,]`),
		regexp.MustCompile(`(?i)Ignis [89]`),
		regexp.MustCompile(`(?i)Ignis ([89])`),
		regexp.MustCompile(`(?i)TCL,|TCL[a-z0-9]+;|smarttv_AFTMM-TCL|AFTDEC012E|AFTMD002|AFTSHN02|AFTMD001|TCL[_ -][a-z0-9]+|(?:TCL[_ -][^;/]+ Build)|(?:TCLGalaG60(?:\(9108A\))?|T431P|4163D|4187[DMU]|4188[CLRSVO]|5004S|5033TP|5087Z|5101A|5102[BKLMOP]|5107G|5124J|5130[JMEI]|5133MP|5133A|5148A|5152D|5159[AJ]|5164[AD]|5199I|6102[ADH]|6125[ADFH]|6127[AI]|6156[ADH]|6159[AK]|6165[AHS]|7040N|8491X|9048S|9060[GX]|9080G|9081X|9295G|9296[GQ]|A(?:50[2789]|600)DL|T(?:60[123]|701)DL|T(?:506D|671[EFGHO]|676[HJK]|766[AHJSU]|767[GHW]|770[BH]|771K|773O|774[BH]|775[BH]|776[HO]|779W|780H|781SPP|781S|781|782H|790[SY]|799[BH]|810[HS])|Percee TV|9183W|9198S|9309X2|9317X1|8[14]96G|916[016]G| 9061| 8182| 8167| 8095|BeyondTV\d?|UnionTV|T507[DU]|5131[AG]|T610[KE]|T612B|9132[GS]|9137W|T430W|T431[DUQ]|T501[CL]|T768S|9199S|9494G|9460G|9466X|T60[79]DL|T506[AGKTF])(?:_(?:RU|EEA|TR))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCLGalaG60(?:\(9108A\))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5004S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T430W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T501[CL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T779W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5[01]33[MT]P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:4163D|4188S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5131[AG]`),
		regexp.MustCompile(`(?i)T431[DUQ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5164[AD](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6102H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T506[AD]`),
		regexp.MustCompile(`(?i)T506[GK]`),
		regexp.MustCompile(`(?i)T507[DU]`),
		regexp.MustCompile(`(?i)T610[KE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T774[BH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T775H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6125[ADFH]`),
		regexp.MustCompile(`(?i)6127[AI]`),
		regexp.MustCompile(`(?i)6156[ADH]`),
		regexp.MustCompile(`(?i)6159[AK]`),
		regexp.MustCompile(`(?i)5199I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A509DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A600DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[LO](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5152D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5102[BKMP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5159[AJ](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5101A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5107G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5124J(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130[JEI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)4187[MU](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5148A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5130M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T780H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T782H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T790Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T790S|TCL 10 5G UW)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TCL[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(7040N)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A502DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A507DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A508DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T601DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T609DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T770[HB](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T766[AHJSU](?:_(?:EEA|TR|RU))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T671[HFEO](?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T768S(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6165[AHS]`),
		regexp.MustCompile(`(?i)T676[KJ]`),
		regexp.MustCompile(`(?i)(?:4188[CLRO]|T602DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T781S|T781SPP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T776[HO]`),
		regexp.MustCompile(`(?i)T767[GW](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:T671G|T701DL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T767H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T773O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5087Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T810[SH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T799[BH]`),
		regexp.MustCompile(`(?i)T771K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T607DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T612B(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8095(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9048S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9198S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9460G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9183W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:9061|9081X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8496G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)8196G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9309X2(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8167)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:8182)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9060G|9161G`),
		regexp.MustCompile(`(?i)9060X|9160G`),
		regexp.MustCompile(`(?i)(Percee TV|UnionTV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BeyondTV(\d)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:43|55)S62FS|(?:43|50)P65US|U(?:43|60|65)P60|65P4USM|(?:40|49)S62|L32S6|55P610|50P8S|55S62|(?:43|50)P6US|55DP60)`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_Tbrowser_2k20`),
		regexp.MustCompile(`(?i)AFTMD002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTSHN02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTMD001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTDEC012E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TCL,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(K(?:24|32)DLX9HS|K40DLM8FS|K40DLX9FS|K50DLX9US|K50DLJ10US|K43DLJ10US|K32DLX10HS|K32DLJ12HS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Build/TDTech|(?:NAT-TN70|TDT-MA01|AVA-PA00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECHNOSAT[ _]`),
		regexp.MustCompile(`(?i)TECHNOSAT[ _](W2)`),
		regexp.MustCompile(`(?i)TEENO[_ ](S9|A1|i12|S11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TENPLUS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TETC[ -](F\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIANYU ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIANYU-KTOUCH/([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:TIMVISIONBOX|TIM_BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Metal_Tablet_10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MT-1011QR)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOGO[_ ]`),
		regexp.MustCompile(`(?i)TOOGO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(ArtiDiag800 BT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOPSHOWS[ _-](X[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TORNADO[;,)]`),
		regexp.MustCompile(`(?i)TORNADO, ?([a-z0-9_ -]+)\*?, ?(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:(?:T1[235]|T151|T2[1268]|T181|P101)-EEA|W-?109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(T1[235]|T151|T2[1268]|P101|T181)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W-?109(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS-(SC10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Magictab (?:9GX|7GE|718))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TVPLUS BOX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(NuclearSX-SP5)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35]s|X[123567]|A5S|A3[025]|A[468]|A4S|A5[057]|P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](X[35])s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](A5S|X[123567]|A[468]|A4S|A5[057]|A3[025])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazing[ _](P6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[-_ ](?:TabPlay|Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])|TWZQQ1|(?:OX_X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWZ[_ ]TabPlay[_ ](12[56])`),
		regexp.MustCompile(`(?i)TWZ[-_ ]?(Y6[08]|Y52|A49|A[59]5|A567|AA8|QQ[12])`),
		regexp.MustCompile(`(?i)(TYD-109([_ ]Pro)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TP_1_3000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MID169|MID211H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Nitro 551)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TA-(?:2[_ ](?:3G|Pro)|5[05][_ ]Power|[1-4]|[1246]0))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tanix|(?:TX[53] MAX|TX[69]s|TX3 Mini|TX3MINI|TX5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TX([69])s`),
		regexp.MustCompile(`(?i)Tanix (A3)`),
		regexp.MustCompile(`(?i)TX([35]) MAX`),
		regexp.MustCompile(`(?i)(?:Tanix_)?(?:TX3[ _]?Mini)`),
		regexp.MustCompile(`(?i)TeachTouch[_ ]`),
		regexp.MustCompile(`(?i)TeachTouch (Table)`),
		regexp.MustCompile(`(?i)TECTOY_5029Y(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech[ _]?pad|XTAB[ _-]|(?:3G_16|Dual (?:C1081HD|C981HD)|S813G|NOTE[_ ]4CAM|M5(?:Go|Plus)|M6Plus|Android 8(?:[\d.]*);(?: [\w-]+;)? 816x?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tech ?Pad[_ ](10Y|9x|i700|10Z|7QC|10QC)`),
		regexp.MustCompile(`(?i)TechPad[_ ]3Gx`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (816x?)`),
		regexp.MustCompile(`(?i)Dual (C981HD|C1081HD)`),
		regexp.MustCompile(`(?i)XTAB[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)M5(Go|Plus)`),
		regexp.MustCompile(`(?i)NOTE[ _]4CAM`),
		regexp.MustCompile(`(?i)Tech ?pad[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]`),
		regexp.MustCompile(`(?i)TECHSMART[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TechniPhone 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:UP10SI[34]6LA|UP918|UP7[67]8|UP1018|UP10_SH36LAG|Ultrapad_UP10\.S36LA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(UP10SI[34]6LA|UP918|UP778|UP768|UP1018)`),
		regexp.MustCompile(`(?i)(?:Ultrapad_)?UP10[_.](SH36LAG|S36LA)`),
		regexp.MustCompile(`(?i)Allwinner Nitro Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast|P80_G3M2|TLA00[12]|TLA016|X98 Air III|M20_4G|X98 Air II\(HG5N\)|Tbook|X80 Power\(B2N4\)|P80H\(D1C2\)|T20\(T2E1\)|(?:[TM]40 Plus|T30|P80[XHT]|P20HD|P10[_ ]HD|M40|P10SE?|M30_Pro|M40SE|P8[05]|P25(?:_T)?|P85T|P[23]0S|P[34]0HD|T40S)_(?:ROW|EEA|RUS|W_EEA)|P20HD\(N6H5\)|T40 Plus\(M7T3\)|T40Pro|T40 PRO(?:\(T1A1\))?|T10\(E3C[56]\)|P10S\(N4H5\)|98\(M1E[45789]\)|98\(M3E3\)|X10 \(M1D3\)|M89 Pro|M40\(N9H[123]\)|P20HD\(N6H7\)|M40SE\(M5T3\)|M40(?:SE?|Pro|Air)_(?:ROW|EEA|RUS)|P30Air|P10HD_Lite|(?:T50|M40_?Plus|M40 Pro|T50Pro_W|TLG01|P26T|P40S|P25T)_(?:ROW|EEA)|M40Plus_EEA|P40HD_T_(?:EEA|ROW)|T40_Plus_RUS|T40 Air|(?: (?:T4[05]HD|P30T|P80X|M50HD)|98 \(M1E3\))|(?:Android 13(?:[\d.]*);(?: [\w-]+;)? (?:M50 Pro|T[56]0)|T50HD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tbook[_ -]([^;/]+)(?: Build|[;)]|$)`),
		regexp.MustCompile(`(?i)T10\(E3C[56]\)`),
		regexp.MustCompile(`(?i)T20\(T2E1\)`),
		regexp.MustCompile(`(?i)X10 \(M1D3\)`),
		regexp.MustCompile(`(?i)98 \(M1E3\)`),
		regexp.MustCompile(`(?i)P10S(?:\(N4H5\)|_(?:ROW|EEA))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P20HD_?(?:ROW|EEA|RUS)|P20HD\(N6H[57]\)`),
		regexp.MustCompile(`(?i)P10[_ ]HD_(?:ROW|EEA)`),
		regexp.MustCompile(`(?i)P80[_ ](?:ROW|EEA)|P80_G3M2`),
		regexp.MustCompile(`(?i)P85[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M([43]0)[_ ]?Pro[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40\(N9H[123]\)`),
		regexp.MustCompile(`(?i)M40[_ ]Plus`),
		regexp.MustCompile(`(?i)M40S[_ ](?:ROW|EEA|RUS)`),
		regexp.MustCompile(`(?i)M40 Plus|M40Plus_`),
		regexp.MustCompile(`(?i)T40 ?PRO`),
		regexp.MustCompile(`(?i)T40[ _]Plus(?:_(?:ROW|EEA|RUS)|\(M7T3\))`),
		regexp.MustCompile(`(?i)T(4[05])HD`),
		regexp.MustCompile(`(?i)M(50)HD`),
		regexp.MustCompile(`(?i)P80H\(D1C2\)`),
		regexp.MustCompile(`(?i)(P80[Xh]|P30HD|T30|M40|P25(?:_T)?|P10SE|T40S|P[24]0S|T[56]0|TLG01|P26T|P85T|P30T|T50HD|P25T)(?:[_ ](?:ROW|EEA))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)98\(M1E[45789]\)|98\(M3E3\)`),
		regexp.MustCompile(`(?i)X80 Power\(B2N4\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X98 Air II\(HG5N\)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teclast[_ -]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Tecno|Camon|Phantom[56]|Phantom6-Plus|Phantom6S|DP7C ?Pro-SGA1|(?:DP7CPRO|DP8D)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Phantom([56])`),
		regexp.MustCompile(`(?i)TECNO[ _]AD8`),
		regexp.MustCompile(`(?i)TECNO[ _]AD9`),
		regexp.MustCompile(`(?i)TECNO[ _]AC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AE10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AD11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]AX8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID3k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5b(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID5a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]ID6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]IN1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]7C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:DP7C ?Pro-SGA1|TECNO[ _]DP7CPRO|DP7CPRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P703(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]P704a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]DP10A Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]P904(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]RC6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CB7[j]?`),
		regexp.MustCompile(`(?i)Tecno[- _]C9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF7[kS]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]CC9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:CC6|KC3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:CE9h|CE7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CD6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CE7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG8h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH9n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CH6[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CH7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?(?:CH6i|CI6n?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-](?:Mobile )?CI8n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CI7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Tecno[ _-]CK7n?|Camon 20 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK6n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK8nB?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CK9n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL6[ks]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL7[ks]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CL8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CLA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CLA5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA6S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CA8S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]Camon CX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]CX Air(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]F3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SA2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1[fg](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:RA8|KB2h)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KB2j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB8S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]RB7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]B1c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]SC7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BB4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC2c?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC3?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BC1s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD2[dp]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]L6502S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]W5006S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[ai]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD4[jh](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BD3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BE8[i]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?BF6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BF7h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]BG6[ih](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KL4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]SA1S Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KG5[mh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BF7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BG6[ms]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ5n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?BG7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:Mobile )?KJ7s?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KA7O?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB6?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KB8?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC8S?|KC2j?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](?:KC6S?|KC1j)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]BB4k(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7[hS](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]KD7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE6j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5[jk]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:KF6(?:ks|[nhmjki])?|PR651[EH]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF7j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KF6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KG6k?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KG5[nkjq]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG7[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG6p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO(?: Mobile)?[ _]KG8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH7[nh]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5p(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KH6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5[km]`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI5`),
		regexp.MustCompile(`(?i)TECNO[ _]KI8`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile[ _])?KI7`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1h(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KE5S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KG5m(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KL5n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KL6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KL7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KC1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]K9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]KA9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]DP8D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _](P702AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LA6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LB7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC6a?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]LB8a?`),
		regexp.MustCompile(`(?i)TECNO[ _]LC7S?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LC8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]J8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]RA7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]W3 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _-]WX3P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LD7j?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6h?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LG6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH6n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE6j(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LF7n?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LE8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LG8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _]LH7n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LH8n(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?LI6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _](?:Mobile )?KL8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno (F2) ?LTE`),
		regexp.MustCompile(`(?i)(?:TECNO[-_])?L8Plus`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T611)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TECNO[ _-]?(T1101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tecno[ _]([^;/]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Tecno[ _-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Preo[ _]`),
		regexp.MustCompile(`(?i)Preo[ _]P([23])`),
		regexp.MustCompile(`(?i)Tele2[ _]|Tele2fon`),
		regexp.MustCompile(`(?i)Tele2fon[_ ]V6`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)[ _]1[_.]1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]Midi[ _]2[_.]0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _]((?:Maxi|Midi)(?:[_ ](?:Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tele2[ _](Mi[dn]i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELEFUNKEN|Foxtrot|TEL-1013GIQA|TEL-1014GIQ|TEL-73GIQA|TEL-74GIQ|TF-SP(?:500[12]|4002)|(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G))| TF5X| TF6|TF500|TF501_EC|(TF-LED(?:32S14T2S|43S9[57]T2SU|50S0[34]T2SU|50S25T2SU|55S11T2SU|58S06T2SU|65S75T2SU|32S39T2S|32S08T2S|32S5[289]T2S|32S60T2S|32S7[045]T2S|40S63T2S|40S19T2S|40S41T2S|43S94T2S|43S22T2SU)(?:-1)?)|LTE_LIMA|LTE Mike|Diamond_LTE|Outdoor (?:LTE|WT4|WT4-S)|TELP-1013KBC`),
		regexp.MustCompile(`(?i)TEL-(1014GIQ|74GIQ|73GIQA(?:11)?)`),
		regexp.MustCompile(`(?i)(?:TELEFUNKEN)?(TF-SP(?:500[12]|4002)|Outdoor (?:LTE|WT4-S|WT4)|Foxtrot|TF5X|TF6)`),
		regexp.MustCompile(`(?i)(TF-MID(?:[78]02G|70[78]G|80[46]G|9705RG|9707G|7805G|100[57]G|1010G)|TF501_EC|TELP-1013KBC)`),
		regexp.MustCompile(`(?i)(TF-LED(?:\d{2}S\d{2}T2SU?)|TF500)`),
		regexp.MustCompile(`(?i)TELEFUNKEN, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TELEGO|Wise2_plus`),
		regexp.MustCompile(`(?i)Telego[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Telenor|(?:Infinity[_ ](?:E[2-5]|K2?|A2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telenor[ _]([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Infinity[ _](E[2-5]|K2?|A2)`),
		regexp.MustCompile(`(?i)Telit_Mobile_Terminals-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Telit[\-_]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(TVB-100)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Telma|(?:F1x4G|Feel_Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELMA F1\+4G`),
		regexp.MustCompile(`(?i)TELMA[_ ]FEEL`),
		regexp.MustCompile(`(?i)Telma[_ ](F2|Titan[_ ]4G|EGO)`),
		regexp.MustCompile(`(?i)Telma_Wi-Kif\+3G_3G`),
		regexp.MustCompile(`(?i)Telma_Wi-Kif\+4G_4G`),
		regexp.MustCompile(`(?i)TELO[_ ](?:TE6|M5|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TELO[_ ](TE6|TE580_CO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TPS3[29]0`),
		regexp.MustCompile(`(?i)TPS(3[29]0)`),
		regexp.MustCompile(`(?i)TG ?(15|30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Teracube (2e|One)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl (?:[^/;]+)(?: Build|[;)])|W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hudl ([^/;]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)W032i-C3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CASEBOOK_3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]|(?:Knight 2|THL5000|T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THL ?(5000)`),
		regexp.MustCompile(`(?i)(T200)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Box 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)ThL[ _-]*([^ ;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Primo(7|8)|QM73[45]-8G|QM734-2|QM736-8G\(HD\)|8950|MID1002|5014G|TEO(?:13P|10[SM]|8M|7RK|X10[23]|104G)|Friendly_TH101|Delight TH201|TEOX10-MT8SL128LTE|HERO10RK|SPTEO10BK16|T43FSM5160|Origin_679(?:_Pro)?)(?:[);/ ]|$)|(?:Tlink|Every)[0-9]+|THOMSON[, ]`),
		regexp.MustCompile(`(?i)Primo(7|8)`),
		regexp.MustCompile(`(?i)QM736-8G\(HD\)`),
		regexp.MustCompile(`(?i)8950(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TEO(13P|10[SM]|7RK|104G|X10[23]|8M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(5014G|T510H)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tlink([0-9]+)`),
		regexp.MustCompile(`(?i)Origin[_ ]679[_ ]Pro`),
		regexp.MustCompile(`(?i)Origin[_ ]679`),
		regexp.MustCompile(`(?i)Every([0-9]+)`),
		regexp.MustCompile(`(?i)THOMSON[ _]SEREA500`),
		regexp.MustCompile(`(?i)(T43FSM5160)`),
		regexp.MustCompile(`(?i)THOMSON,([a-z0-9_ -]+)(?:\*[0-9])?,(?:wired|wireless)`),
		regexp.MustCompile(`(?i)Thuraya[ _](X5-Touch)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiPhone ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TIVO[ ,-]`),
		regexp.MustCompile(`(?i)(?:TiVo|VirginMedia), (?:OnDemand_)?([a-z0-9]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)TiVo-([a-z0-9]+)-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Tibuta[_ ]`),
		regexp.MustCompile(`(?i)Tibuta[_ ]MasterPad-(E100)`),
		regexp.MustCompile(`(?i)TIS001[_-]|TIS_?001`),
		regexp.MustCompile(`(?i)TIS001[_-]S([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS001[_-]T2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TIS_?001([ABC])?`),
		regexp.MustCompile(`(?i)(TC1050G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]|(?:Infinit[ _](?:Lite[_ ]2|X[_ ]CAM)|Infinit (?:MX(?: Pro)?|2)|Vision_PRO|VISION ULTRA|Epix|Yeah_Go|Insignia Delta 2|Insignia_(?:Delta3|Lab))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tmovi[ _]Prime`),
		regexp.MustCompile(`(?i)Infinit[_ ]X[_ ]CAM`),
		regexp.MustCompile(`(?i)Infinit[_ ]Lite([_ ]2)?`),
		regexp.MustCompile(`(?i)Insignia_(Lab)`),
		regexp.MustCompile(`(?i)Insignia[ _]Delta[ _]?([32])`),
		regexp.MustCompile(`(?i)Tinai (K[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TiNMO[- _](A11|K3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MiTraveler 958)`),
		regexp.MustCompile(`(?i)Tolino Tab ([^/);]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)TONE[ _-](e19|m1[57]|e2[01])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY (A19|W1|T8[368]|T1982)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOOKY A9PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Coto[_ ]|X1013`),
		regexp.MustCompile(`(?i)TopDevice|TDTV\d{2}[BC]S\d{2}[FHU]|TDT45(?:18|41)_4G|TDT3778_Wi_E|TDT3887_Wi_D|TDT4528_4G_E`),
		regexp.MustCompile(`(?i)(?:TopDevice_)?(TDTV\d{2}[BC]S\d{2}[FHU])`),
		regexp.MustCompile(`(?i)KIDS(09|708)`),
		regexp.MustCompile(`(?i)Toplux ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TOPSION|TP01_box(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TOREX[- _](?:PS12|S18|S27|PAD 8 ?PRO|PAD818)|PAD831B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOREX-(PS12)`),
		regexp.MustCompile(`(?i)(?:TOREX[_ ])?PAD(831B|818)`),
		regexp.MustCompile(`(?i)TOREX PAD 8 ?PRO`),
		regexp.MustCompile(`(?i)TOREX[- ](S18|S27)`),
		regexp.MustCompile(`(?i)(?:EGO[ _](?:Max[ _]S|Surf[_ ][iS]|Phab 3G|Note 4G)|DROIDZ (?:Drive\+|ATOM [SX]|Portal(?: X)?|Swivel|Smart|Trend|Force|Span|Play|Blast|Sport|Excel|Motion|Sky 3g|Rotate|Duo(?: Slim)?|Dash(?: X)?|Quad|Match TV|Beat TV|Avatar TV|Easy|Push i|Edge\+))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DROIDZ (Duo(?: Slim)?|Dash(?: X)?|Push i|Edge\+|Drive\+|Portal(?: X)?)`),
		regexp.MustCompile(`(?i)DROIDZ (Swivel|Trend|Force|Span|Smart|Atom X|Blast|Sport|Quad|Beat TV|Avatar TV|Match TV|Easy|Excel|Play|Rotate|Motion)`),
		regexp.MustCompile(`(?i)EGO[ _](Max[ _]S|Surf[_ ][iS])`),
		regexp.MustCompile(`(?i)Toshiba|TSBNetTV/|portalmmm/[12]\.0 TS|(?:T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AFT6E0FA|AFTBOXE1|AFTDCT31|AFTHA00[2-4]|AT(?:7-C|10-A|10[PL]E-A|100|200|270|300|330|374|400|470|500a?|503|570|703|830)|AFTKMST12|AFTBAMR311|SATELLITE (?:C655|L50-C|Pro L300|A100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AT(100|200|270|300|330|374|400|470|500|503|570|703|830)`),
		regexp.MustCompile(`(?i)AT10([PL])E-A`),
		regexp.MustCompile(`(?i)SATELLITE (C655|Pro L300|A100)`),
		regexp.MustCompile(`(?i)AFT6E0FA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTBOXE1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTHA004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOSHIBA;SmartTV;([a-z0-9_ -]+);`),
		regexp.MustCompile(`(?i)TOSHIBA, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_ -]+) Build`),
		regexp.MustCompile(`(?i)Toshiba[ /_\-]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (TS[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i) (770[NG]|1100AS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TOUCHMATE|(TM-(?:MID870SB|MID1050WKD|MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|SM500N|SM410|MID1010|MID1065))`),
		regexp.MustCompile(`(?i)(TM-(?:MID1020A|MID794C|MID795|MID710|MID798|MID792|MID788D|MID10[14]0|MID1065))`),
		regexp.MustCompile(`(?i)(TM-(?:SM500N|SM410))`),
		regexp.MustCompile(`(?i)Touchmate ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Transpeed[_ ]|(?:TR99 MINI\+|TR99|8K618-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TR99 MINI\+`),
		regexp.MustCompile(`(?i)(?:Transpeed[_ ])?(TR99|H616|6K|X4S?|8K618-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:TrekStor|Surftab) ([^/;]+)(?: Build|\))|Surftab[^;\)]*(?:[;\)]|$)|ST10216-2A|ST13416-1|VT10416-[12]|TFQCOAL01232|TFMTKAW01232|Xintroni10\.1`),
		regexp.MustCompile(`(?i)ST10216-2A|VT10416-[12]`),
		regexp.MustCompile(`(?i)TrekStor ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab ([^/;]+) Build`),
		regexp.MustCompile(`(?i)Surftab[ _]([^;\)]*)(?:[;\)]|$)`),
		regexp.MustCompile(`(?i)(TFQCOAL01232)`),
		regexp.MustCompile(`(?i)Xintroni10\.1`),
		regexp.MustCompile(`(?i)Trevi[ _]|TAB[ _]10[ _]3G[ _]V16|TAB[ _](7|8)[ _]3G[ _]V8|TAB9 3G|MINITAB 3GV|Phablet[ _](?:4|4\.5|5|5\,3|6)[ _]?[CSQ]|REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)TAB[ _]?(7|8)[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G[ _]V8`),
		regexp.MustCompile(`(?i)TAB[ _]?9[ _]3G`),
		regexp.MustCompile(`(?i)TAB[ _]10[ _]3G[ _]V16`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?C`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?Phablet[ _]4\.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5[ _]?S`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]5,3[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?REVERSE[ _]5\.5[ _]?Q`),
		regexp.MustCompile(`(?i)(?:Trevi_)?PHABLET[ _]6[ _]?S`),
		regexp.MustCompile(`(?i)Trevi[_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)TriaPlayBox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A23 Max|A75 Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Passion[-_](?:1S|PRO|PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MobileMapper60(?:_2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Trio V51 DT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Orion R68G|Draco AW80|Draco H3|Vega S95_(?:Meta|Pro|Telos))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TRUE BEYOND TAB 3G|HPH07|SMART[ _](4G Adventure(?: Pro)?|MAX 4\.0 PLUS|4G[ _](?:MAX 5\.5|GEN C [45]\.[05]|M1 Plus|Champion|Speedy 5\.0 Plus|Speedy[_ ]5inch|P1))|Alpha 5G|SMART Champ 4\.0|TRUE SMART 7\.0 Quadcore|SMART 4G M1|SMART TAB 4G (?:e-Biz|M1)`),
		regexp.MustCompile(`(?i)Alpha 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART MAX 4\.0 PLUS`),
		regexp.MustCompile(`(?i)SMART Champ 4\.0`),
		regexp.MustCompile(`(?i)SMART 4G Gen C ([45]\.[05])`),
		regexp.MustCompile(`(?i)SMART 4G Speedy 5\.0 Plus`),
		regexp.MustCompile(`(?i)SMART 4G MAX 5\.5`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Speedy[_ ]5inch`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]Champion`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1 Prime`),
		regexp.MustCompile(`(?i)SMART[ _]4G[_ ]P1`),
		regexp.MustCompile(`(?i)SMART[ _]4G M1 Plus`),
		regexp.MustCompile(`(?i)TRUE SMART 7\.0 Quadcore`),
		regexp.MustCompile(`(?i)(SSB-508[ED])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TL554B|TC504B)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)StarTrail TT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Turbo[_ ]?(?:X5[_ ]?(?:Max|Black|Space|Hero)|X8|X6[ _]Z|X[ _]Ray)|Monsterpad7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Space(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX5Hero(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TurboX[ _]Ray(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]?X5[ _]?Black(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X5[ _]Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X6[ _]Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[ _]X8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Monsterpad7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo[-_]X|(?:TURBOX_I4G|Hive V 3G|Calltab10\.1|Calltab2GB10|Calltab7inch|Turbox_S3|Fire_II_WiFi|Breeze IV|Aqua_II|RainbowIII3G|RubikII7|Rubik 10\.1 II|Rubik_10_III|QUAD-CORE A33 inet)(?:[);/ ]|$)|Mercury|(?:android 8([\d.]*);(?: [\w-]+;)? Dream)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_A2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbo-X_e3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mercury`),
		regexp.MustCompile(`(?i)Turbo-X_pi_4G|Turbo_X_Pi 1 4G`),
		regexp.MustCompile(`(?i)Turbo-X Ice(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aqua_II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Hive V 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fire_II_WiFi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Breeze IV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RubikII7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik 10\.1 II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Rubik_10_III(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RainbowIII3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Calltab10\.1`),
		regexp.MustCompile(`(?i)TURBO-X, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Turbo-X Tablet([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Turbo-X ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:Turbokids[-_ ]?(TMNT|3G|S4|Princess|3GNEW)|Monsterpad 3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?3GNEW`),
		regexp.MustCompile(`(?i)Turbokids[-_ ]?(TMNT|3G|S4|Princess)`),
		regexp.MustCompile(`(?i)Turbopad[-_ ]?(72[34]|80[23]|912|101[456]|Pro)(?:NEW)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TURKCELL[_ ]`),
		regexp.MustCompile(`(?i)Turbo T50(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T([124-8])0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Maxi Plus 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MaxiPRO5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Turkcell_T_Tablet(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(STV-32DHBK2R-T9|STV-65DUBK1R|TQ55UFBTV1|TD86UFBTV1|TQ50UFBCV1|TD32HF[GW]EV1|TD43FFGTV1|TD50UFGEV1|TD55UFBHV1|TD55UFGEV1|TQ65UFBCV1|TD(?:[67]5|43)UFGCV1|TD43[UF]FBHV1|TD50UF[BG]HV1|TD65UFBSV1|TD55UFGHV1|TQ65UFBHV1|TD43UFBSV1|TD32HFBHV1|TD24HFBHV1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TwinTAB|(?:MQ703G)(?:_1)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MQ703G)(?:_1)?`),
		regexp.MustCompile(`(?i)TwinTAB-(T103GQ1)`),
		regexp.MustCompile(`(?i)(?:TWOE[-_ ]E450R|F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TWOE[-_ ](E450R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F534L|F572L|E500A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tymes[ _](V5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TT175(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?(?:VP00[1235])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP001`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP002`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP003`),
		regexp.MustCompile(`(?i)(?:Liantong)?VP005`),
		regexp.MustCompile(`(?i)(USCC-[a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)TV3[45]8_?(?:DVB|ISDB)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV348_DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV348_ISDB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TV358DVB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGINE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGINE;SmartTV;([a-z0-9_ -]+)V[ST];`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]|(?:A[5]_Pro|.+; A[79] Pro|S3_Pro|ROME[_ ]X|BISON|hammer_S|S2 LITE|London|Z2_PRO|C NOTE 2|A11 Pro Max|Power 3|Android 10(?:[\d.]*);(?: [\w-]+;)? (?:A3[SX]|A7S)|RP0[1234]|MT0[17]|MT1[016]|MP0[1-9]|MP1[3789]|MP2[034-79]|MP34|Plus E|S2_PRO|RP05|One Pro|Diamond_X|TG3DBG1MA|Android [67](?:[\d.]*);(?: [\w-]+;)? Z Pro|Android 8(?:[\d.]*);(?: [\w-]+;)? A1_PRO|RP08|MP3[38]|PR4JBX20A|PG2309GBA)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)TG3DBG1MA|MT10`),
		regexp.MustCompile(`(?i)(A[13579]|Z2|S3)[_ ]Pro`),
		regexp.MustCompile(`(?i)MP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP33(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP34(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP27(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)PG2309GBA(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP38(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP24(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP26(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP25(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)ROME[_ ]X`),
		regexp.MustCompile(`(?i)RP05(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP01(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)RP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UMI[_ ]SUPER`),
		regexp.MustCompile(`(?i)UMI[_ ]ZERO`),
		regexp.MustCompile(`(?i)MP02(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP08(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP03(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP04(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)MP06(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(A3[SX]|A7S)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(?:UMI_)?(London|Diamond(?:_X)?)`),
		regexp.MustCompile(`(?i)UMI(?:DIGI)?[ _]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)UNIWA[ _]|(?:W888)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIWA[ _](X5|F40)`),
		regexp.MustCompile(`(?i)(W888)`),
		regexp.MustCompile(`(?i)UNNO[_ ]`),
		regexp.MustCompile(`(?i)UNNO[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UOOGOU[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)|(?:Dorel \d|Dorel 3S|Hello 7Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UTOK (45[01]D)`),
		regexp.MustCompile(`(?i)Dorel (\d)`),
		regexp.MustCompile(`(?i)utstar[ _-]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)UTIME[ _](U6|G7|U100|[TX]1|FX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uzbekistan(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS[-_ ]|(?:Android 11(?:[\d.]*);(?: [\w-]+;)? UT8|TOX[34](?:_Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS-UT3 ?Plus`),
		regexp.MustCompile(`(?i)(UT8|TOX[34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UGOOS[- _](\w{2}\d+\w?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(A101S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uhappy|UP?580|UP350|UP[35679]20`),
		regexp.MustCompile(`(?i)UP([35679]20)`),
		regexp.MustCompile(`(?i)Uhappy[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Uhappy[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone|Gemini Pro|Power[ _]Armor14|Power 3S|Power_[356]|Power_5S|S(?:10|9)_Pro|(?:Note [89]P|Note 1[23]P|Armor(?:[ _](?:[2367]|2S|X[236]|6[SE]|3WT|3W|X))?|U00[78][ _]Pro|Be[ _]X|Be[ _]Touch(?:[ _][23])?|Be[ _](?:One|Pure|Pro)(?:[ _]Lite)?|Note 14|Note (?:11P|7T)|Note 16 Pro|Tiger_lite|Note_7P|Note 10P|Paris_(?:Lite|X)|Paris|P6000_Plus|Vienna|GQ3060TF3|Android 11(?:[\d.]*);(?: [\w-]+;)? Note 6P?|Tab A11 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S(10|9)_Pro`),
		regexp.MustCompile(`(?i)Be[ _]Touch([ _][23])?`),
		regexp.MustCompile(`(?i)Be[ _]Pure[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]Pure`),
		regexp.MustCompile(`(?i)Be[ _]One[ _]Lite`),
		regexp.MustCompile(`(?i)Be[ _]One`),
		regexp.MustCompile(`(?i)Be[ _]X`),
		regexp.MustCompile(`(?i)Be[ _]Pro`),
		regexp.MustCompile(`(?i)U(00[78]) Pro`),
		regexp.MustCompile(`(?i)Power[ _]Armor[ _]?(\d+)[ _]Pro`),
		regexp.MustCompile(`(?i)Power Armor (\d+|19T|X11|18T|16S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]6S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)GQ3060TF3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([679])E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(\d+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([25])S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]3WT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](1\d|11T) 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _](8) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor[ _]([236789])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Armor Pad([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Armor([^;/)]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Gemini Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Power[_ ]([356][SL]?)`),
		regexp.MustCompile(`(?i)Note[ _]([78]P|7T|6|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note[ _](16) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Note ([69]|1[123]|10)P(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[_ ]Tab[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Ulefone[_ ](X|S1[ _]Pro|S[17])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Ulefone[ _-]?([^;/)]+)(?:[;/)]|$)`),
		regexp.MustCompile(`(?i)VisionBook[ _]|([78]Qa_3G|7A_3G|VB_10Q_Plus|10A_LTE_eea|(?:8|10)C_LTE|10L-PLUS)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:10Qi|7Q[i]?|8Q[ei]?|P70|8Qi_3G)(?:[ _](?:[34]G|Plus|LTE))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(7A(?:[ _](?:[34]G)))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)([78])Qa_3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(8|10)C_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_10Q_Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)10A_LTE_eea(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VB_10Q_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VisionBook_P50Plus_LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VisionBook[ _](?:P50 LTE|P55 X2 LTE|P55 LTE(?: Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P60_Ultra_5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:S900PROBT|S900_Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Uniden[ _](C505|Prime 500)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan(_pocket)?|Jelly(?:-Pro| Star| Max|2(?:_JP)?| 2E)|Atom_X?L|Ticktock(?:-S)?|UNIA62_S01|Titan Slim|TANK 01|TANK 2 PRO|TANK2|TANK 3|TANK MINI 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Jelly)-Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Jelly2(?:_JP)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Titan|Atom_X?L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TANK ?([23])`),
		regexp.MustCompile(`(?i)U((?:67[013]|680)C|(?:452|504)TL|683CL|69[36]CL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_|(?:[AQ]5\.8|UNI (?:10X|GO))(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)UNIQCELL_A4(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)(Space A5\.8|Q5\.8|UNI (?:10X|GO))(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Uniscope[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)Uniscope[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(UT10)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)EA(?:500Plus|520|602|630)(?:_US)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EA500Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EA(?:520|602|630))(?:_US)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SDOTT0202|SDSTB02)(?:[;/) ]|$)`),
		regexp.MustCompile(`(?i)Plasma Mobile|WebTV/(\d+\.\d+)|TV Bro| BOX|BOX | BOX |roku|YouView|DirectFB|avdn/|wired|wireless|AndroidTV|cordova-amazon-fireos|wv-atv|SDSTB|SDOTT|(?:M10 Ultra|FO-R15|TVBOX|Smart[ _-]?TV|SmartATV|M8S\+ 4K|PCBox|rk(?:3128|322x|3368)(?:[_-]box)?|H10 PLAY|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|mips.+(?:Opera TV|wireless|wired)|smartbox|TV BOX|BOX TV|I12Pro Max|(?:audi_)?ks1280x480|AT&T TV|RealtekATV|AOSP on r33a0|tv001 on rtd289x|hx322x_box|X98_S500|8K3528-T|MX10|V88|H8S|X92|AI PONT|tv\.plus|WayDroid x86_64 Device|MediaBox|Cloud Phone|HK1RBOX-X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; ([a-z0-9-]+);`),
		regexp.MustCompile(`(?i)WebTV/(\d+\.\d+)`),
		regexp.MustCompile(`(?i)M10 Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(FO-R15|X98_S500|8K3528-T|MX10|V88|H8S|X92|AI PONT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BOX|BOX | BOX |roku|YouView|DirectFB|avdn/|wired|wireless|AndroidTV|cordova-amazon-fireos|wv-atv|SDSTB|SDOTT|(Smart[ _-]?TV|SmartATV|PCBox|hx322x_box|rk(?:3128|322x|3368)(?:[_-]box)?|TVBOX|Smart AIO TV|TVBOX_L|L-BOX|TVBOX-5G|AT&T TV|RealtekATV|TV Bro|AOSP on r33a0|tv001 on rtd289x|tv.plus|MediaBox|HK1RBOX-X4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M8S\+ 4K(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H10 PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Opera TV|wireless|wired|smartbox|TV BOX|BOX TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I12Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:audi_)?ks1280x480`),
		regexp.MustCompile(`(?i)Unnecto|(?:U513|U5151|U61[1356]|U7[12]0|U-830|U90[35])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)UNSP7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Premier5Max|Premier5|Premier Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]|(?:U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(U4001|UT3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Unonu[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Unonu[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:QOOQ|QOOQ-V[1-5]0?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)QOOQ-V([1-5])0?`),
		regexp.MustCompile(`(?i)(?:DT[245]0|i6200[AS])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(DT[245]0|i6200[AS])`),
		regexp.MustCompile(`(?i)(Albatros C2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V-HOME_)?(32LH1210|43LF1210|(?:5[05]|65|43)LU1210|24LH1211|24LH1203)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V[- ]hope[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:VPA051|VA-10J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VA-10J)`),
		regexp.MustCompile(`(?i)(?:V12E-LTE-8128|V10E-LTE-464)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(1[02])E-LTE`),
		regexp.MustCompile(`(?i)VANWIN[ -_]?(V62)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VAVA[ _](X3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Camellia_II|Cactus II|Maple III|Maple-II|Cactus-Pro|LavenderII|Jasmine-II)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Camellia_II|Cactus II|Maple III)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Maple|Jasmine|Lavender)-?II(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VDVD[_ ](P20|IX21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ]|(?:VEON[_ ](?:C8680)|VN50WOS2021)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON[_ ](C8680)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEON 4K Smart TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VN50WOS2021)`),
		regexp.MustCompile(`(?i)VETAS[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VGOTEL|(?:Flex 2|Venture V(?:[278]|12)|VentureV10|Ocean[_ ][689]|Ocean9L|NEW (?:1[01256]|2[024]|[57])|V TAB 2|i_Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Venture ?V([278]|1[02])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ocean[_ ]?([689]|9L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEW (\d+)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?([45]01|512|450)|V401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIDA[-_ ](?:i-?(\d+))`),
		regexp.MustCompile(`(?i)VIDA[-_ ](V401)`),
		regexp.MustCompile(`(?i)(?:vi20220819)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Z[45]0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VILLAON[_ ]`),
		regexp.MustCompile(`(?i)VILLAON[_ ]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)A631LO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P662LO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S661LS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(F30UP)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVIMAGE[ _]([^/;)]+)(?:_EEA)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:LIGHT MINI|VIWA A5\+|LIGHT PLUS|LIGHT ONE|POWER P1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIWA A5\+`),
		regexp.MustCompile(`(?i)VK-VK([79]00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:VK700)-MAX|VK700 Pro|T5SE|VK700[0X]|vk6050|vk6735|vk700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700)-MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK700) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T5SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VK(700[0X]|6050|6735|700)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VNT_Tab8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOCAL[ _](V[01]|V11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOGA[ _]`),
		regexp.MustCompile(`(?i)(VOL001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VK-740-BL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VucaPad_(\w+)`),
		regexp.MustCompile(`(?i)ZYVV1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]|(?:QTAB1010X|S10_ROW|S[23]0_EEA|Z[14]_EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vankyo[_ ]S(10|[78])`),
		regexp.MustCompile(`(?i)(S[23]0|Z[14])_EEA`),
		regexp.MustCompile(`(?i)QTAB(1010X)`),
		regexp.MustCompile(`(?i)Vargo[; _]|(?:V210101|Android 8(?:[\d.]*);(?: [\w-]+;)? VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V210101|VX4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M910A|M783K|M783K-16G|M1072R-3G|KingPad[_ ](?:[KM]10|SA10|SA8|Z10)(?:Pro)?)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KingPad[_ ]([KM]10|SA10|SA8|Z10)(Pro)?`),
		regexp.MustCompile(`(?i)(M910A|M783K|M783K-16G|M1072R-3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vega (Q7128)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VEIDOO_(T60)_PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LD-24SR(?:4715|4815|4850)BS|LD-65SU8815BS|LD-32SR(?:4850|4815|511[25])BS|LD-32SF4850BS|LD-39SR4815BS|LD-50SU(?:8921|8815)BS|LD-55SU8815BS|LD-43SU8821BS|LD-43SF(?:4850|4815)BS(?:-T9)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CX-508|CX-551|Reiv 500|Creon F5|Isprit U50|Isprit-U50-LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Isprit U50|Isprit-U50-LTE`),
		regexp.MustCompile(`(?i)(CX-508|CX-551|Reiv 500|Creon F5)`),
		regexp.MustCompile(`(?i)(ACE10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VCT([a-z0-9_-]+)|CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT9B06Q22(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:CT9A03W23|CT9A06P23)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VCT([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)(?:RP-UDM0[12]A|RP-UDP05A|JO-UQM10A|UQM1[23]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(RP-UDM0[12]A|RP-UDP05A|JO-UQM10A)`),
		regexp.MustCompile(`(?i)(UQM1[23]A)`),
		regexp.MustCompile(`(?i)QTA(SUN[12]|XIA1|QZ3|QZ3KID|IR7)|QMV7[AB]|WTVIS01`),
		regexp.MustCompile(`(?i)QTAXIA1|QTAIR7`),
		regexp.MustCompile(`(?i)QMV7[AB]`),
		regexp.MustCompile(`(?i)Vernee|(?:Mars Pro|Apollo[ _](?:Lite|X)|Thor (?:E|Plus)|X2_euro|M7_EEA|T3 Pro|V2 Pro|Apollo)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Apollo[ _]Lite`),
		regexp.MustCompile(`(?i)Apollo[ _]X`),
		regexp.MustCompile(`(?i)(V2|T3) Pro`),
		regexp.MustCompile(`(?i)Vernee[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vernee[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)MotionE11(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V-Pad Pop)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertex[_ -]|(?:Luck|Luck_L1[02]0_[34]G|Lion_Dual|V709X|TAB X8|TAB X10|Tab [43]G (?:7-2|8-1|10-1)|Tab_3G_7-1|Pro_P3[01]0_4G|Lion_DC|Baccara|Eagle[ _]4G|ImpressMAX|Lion [1-3])(?:[);/ ]|$)|Impress[ _]([^;/]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)(?:Vertex_)?Luck[_ ]L[_ ](5045)[_ ]([34])G`),
		regexp.MustCompile(`(?i)(Lion_Dual|Lion_DC|Baccara|Eagle[ _]4G|Luck[_ ]L1[023]0(?:[_ ][34]G)?|Luck)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress ?MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IMPRESS ECLIPSE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pro_P(3[01]0)_4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Impress_Luck[_ ]?4G_NFC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Lion ([1-3])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Impress[ _][a-z]+)([34])G(?:Build|\))`),
		regexp.MustCompile(`(?i)(Impress[ _](?:[^;/]+))(?:Build|\))`),
		regexp.MustCompile(`(?i)(V709X)`),
		regexp.MustCompile(`(?i)TAB X(8|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Tab[ _]([43])G[ _]([78]|10)-([21])`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)|(?:ASTER(?: [PT])?|CONSTELLATION X|VTL-202[123]01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ASTER( [PT])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)CONSTELLATION X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vertu[ ]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5009`),
		regexp.MustCompile(`(?i)verykool[ _]?S5001`),
		regexp.MustCompile(`(?i)verykool[ _]?S5004`),
		regexp.MustCompile(`(?i)verykool[ _]?S5007`),
		regexp.MustCompile(`(?i)verykool[ _]?s5015`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5011`),
		regexp.MustCompile(`(?i)verykool[ _]?s5019`),
		regexp.MustCompile(`(?i)verykool[ _]?S5005`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5560`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5200`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5050`),
		regexp.MustCompile(`(?i)verykool[ _]?S5030`),
		regexp.MustCompile(`(?i)verykool[ _]?s5527`),
		regexp.MustCompile(`(?i)verykool[ _]?s5526`),
		regexp.MustCompile(`(?i)verykool[ _]?S5530`),
		regexp.MustCompile(`(?i)verykool[ _]?S5525`),
		regexp.MustCompile(`(?i)verykool[ _]?S5524`),
		regexp.MustCompile(`(?i)verykool[ _]?s5516`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5550`),
		regexp.MustCompile(`(?i)verykool[ _]?s5035`),
		regexp.MustCompile(`(?i)verykool[ _]?s5034`),
		regexp.MustCompile(`(?i)verykool[ _]?s5037`),
		regexp.MustCompile(`(?i)verykool[ _]?s5036`),
		regexp.MustCompile(`(?i)verykool[ _]?s6005x`),
		regexp.MustCompile(`(?i)verykool[ _]?SL6010`),
		regexp.MustCompile(`(?i)verykool[ _]?S4006[QT]?`),
		regexp.MustCompile(`(?i)verykool[ _]?S4007`),
		regexp.MustCompile(`(?i)verykool[ _]?S4008`),
		regexp.MustCompile(`(?i)verykool[ _]?s5017|Dorado s5017`),
		regexp.MustCompile(`(?i)verykool[ _]?s4510`),
		regexp.MustCompile(`(?i)verykool[ _]?s5204`),
		regexp.MustCompile(`(?i)verykool[ _]?s5205`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528Jr`),
		regexp.MustCompile(`(?i)verykool[ _]?s5528`),
		regexp.MustCompile(`(?i)verykool[ _]?s5702`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5029`),
		regexp.MustCompile(`(?i)verykool[ _]?SL5565`),
		regexp.MustCompile(`(?i)verykool[ _]?TL8010`),
		regexp.MustCompile(`(?i)verykool[ _]?T7440`),
		regexp.MustCompile(`(?i)verykool[ _]?T7445`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?:[ _]SL?[0-9]{4}[QT]?)(?: Build|[);])`),
		regexp.MustCompile(`(?i)verykool[ _]?([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VESTA_SMART|VESTA32LD86(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vestel[ _,/\-]|Venus[ _](GO|E[2-5]|V[1-9]|Z[1-9]0)|V_?TAB|VP74|VT97PRO|VSP145M|VSP250[GS]|VSP355[GS]|V3_5580_Dual|V TAB Z[12]`),
		regexp.MustCompile(`(?i)V_TAB_([0-9]{4}[A-Z]?)`),
		regexp.MustCompile(`(?i)V[_ ]TAB[_ ](Z[12])`),
		regexp.MustCompile(`(?i)Venus[ _]V([1-9])([ _][0-9]{4})?`),
		regexp.MustCompile(`(?i)Venus[ _]Z([1-9]0)`),
		regexp.MustCompile(`(?i)Venus[ _]GO`),
		regexp.MustCompile(`(?i)Venus[ _]E2 Plus`),
		regexp.MustCompile(`(?i)Venus[ _]E([345])`),
		regexp.MustCompile(`(?i)Vestel[ _]5530[ _]Dual`),
		regexp.MustCompile(`(?i)Vestel[ _](5000|5530)`),
		regexp.MustCompile(`(?i)VESTEL\-v\.tv\.([0-9]{4})`),
		regexp.MustCompile(`(?i)VESTEL, ([a-z0-9_ -]+), (?:wired|wireless)|\+CE-HTML`),
		regexp.MustCompile(`(?i)(?:Zippers Tab 10i 3G)|Vexia FCS E2 CLM`),
		regexp.MustCompile(`(?i)(Zippers Tab 10i 3G)`),
		regexp.MustCompile(`(?i)ViBox[ _](V[25])[_ ]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VI10[68]|VI86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ -]|(?:VT75C|V50DC|V406018|V512930|V50(?:2430|3630|4730|5024|5430|4630|5[98]20)|Z45_(?:Dazzle|Amaze)|Z45Q Star|Z50 Nova)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Videocon[_ -]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)VT75C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V502430(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V50DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505024(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V503630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V504730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V505820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V406018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V512930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V505430|V504630)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45_(Dazzle|Amaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z45Q Star(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z50 Nova(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V65G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic|ViewPad|ViewPhone|(?:IFP(?:98|86|[67]5)50-3|VSD[0-9]+|vsi7q_1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ViewSonic A8\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPhone ?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:ViewSonic-)?ViewPad[ _]?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(VSD[0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IFP(98|86|[67]5)50-3`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ](2018)`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]X(\d*)[-_ ]?Plus`),
		regexp.MustCompile(`(?i)Vinabox[-_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)VMP-(015-162|021-82|041-162|011-81|025-324|045-664|046-664)(?:[);/ ]|$)|VMP023\.`),
		regexp.MustCompile(`(?i)VMP023\.`),
		regexp.MustCompile(`(?i)(XA Pro) Build`),
		regexp.MustCompile(`(?i)VMP0617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z08MK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO[_ ]`),
		regexp.MustCompile(`(?i)ViPro S20(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO2X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vipro Edge 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIPRO PRO[ _-]?([0-9])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V608C|V50[15]c|VT701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(50[15]|608)C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VT701)`),
		regexp.MustCompile(`(?i)LGE; VS-[0-9a-z]+;|XS100MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XS100MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (VS-[0-9a-z]+);`),
		regexp.MustCompile(`(?i)Vision ?Touch`),
		regexp.MustCompile(`(?i)(?:Prime10(?:SE|ES)|Elite(?:7QS|8QI|9QL|10QH(?:Pro)?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime10(SE|ES)`),
		regexp.MustCompile(`(?i)Elite(7QS|8QI|9QL|10QH)`),
		regexp.MustCompile(`(?i)Vitelcom|portalmmm/[12]\.0 TSM`),
		regexp.MustCompile(`(?i)TSM-([a-z0-9]+)`),
		regexp.MustCompile(`(?i)TSM([a-z0-9-]+)`),
		regexp.MustCompile(`(?i)portalmmm/[12]\.0 (TSM[a-z0-9 ]+)`),
		regexp.MustCompile(`(?i)(24LH1207|43LU1222|43L[FU]1204|50LU1204|43LF1212|32LH1212|32LH1221)(?:-V)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ]EV[56]|EV7_Pro|EV6 ELITE|EV5 X|EV7_Play| EV7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(EV7)_Pro`),
		regexp.MustCompile(`(?i)(EV6) ELITE`),
		regexp.MustCompile(`(?i)(EV7)_Play`),
		regexp.MustCompile(`(?i)EV7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](EV[56])`),
		regexp.MustCompile(`(?i)VIVAX|(?:Fly4|Fly5[_ ]Lite|Fun[_ ]S500|Point[_ ](?:X[12]|X50[123]|X450)|SMART FLY V500|PRO3|32LE77SM|40LE77SM|FUN S1|FUN_S20|TPC[-_ ](?:7121|80[56])3G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly5[_ ]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fly4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART FLY V500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Point_X([12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Fun[_ ]S500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN[ _]S(10?|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly ?(\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[ _]Fly[ _]V(1|550)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX )?(Point[ _](?:X551|X50[123]|X450))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART Point X5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIVAX[_ ]PRO[_ ]?(3|M1)`),
		regexp.MustCompile(`(?i)(?:VIVAX[ _])?TPC[-_ ](105|7121|806)_?([34])G`),
		regexp.MustCompile(`(?i)(?:TABLET )?TPC[-_ ](\d+) ?([34])G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIVAX-)?(40LE78T2S2SM|32LE77SM|40LE77SM)`),
		regexp.MustCompile(`(?i)((?:VIV-|BBG-)?vivo)|iQOO Neo \d|(?:V1730(D[AT]|GA)|V18(?:01A0|13B[AT])|1819|V1937|I(?:192[78]|201[28]|2218)|V(?:2026|2031|2036|2043)_21|V1936TL|V1936AL|V(?:1732|1809|181[3468]|182[149]|183[1268]|1901|191[13469]|192[1-48]|193[0246]|194[15]|195[05]|196[235]|198[16]|1990|201[12]|202[03-5]|203[146]|204[6789]|205[45679]|2066B|206[1568]|207[23]|208[05]|2099|2106|211[18]|212[135]|213[346]|214[1358]|2162)A|V1824BA|V(?:1731|1818|2020)CA|V(?:1818|1938)CT|V(?:1730|2031)EA|V(?:1732|1809|181[3468]|182[19]|183[1268]|1901|1913|1938)T|I201[19]|I212[67]|X50 Pro\+|I220[123678]|I2401|I221[234679]|I222[03]|I230[1-6]|I2403|I2009|I2017|I2022|V1962BA|V1930|PA2170|PA23[57]3|V20(?:0[1256]|0[215]A|[34]4|29_PK|4[57]A?|23EA|2[2-9]|3[0-35-9]|4[0-3568]|5[02-5789]|6[015689]|69B?A|70)|V21(?:0[12459]|1[01]|2[04-79]|3[012459]A?|7[12]A|4[0-79]|40A|6[0289]|64[KP]A|6[234568]A|7[08]A|1[4-8]A?|0[28]A?|5[4678]A|5[0-478]|8[03568]A|80GA|66(?:BA)?|56FA|9[069]A|99GA)|V22(?:8[2345]A|7[01289]A|5[0123]|30EA|4[0246789]|41HA|5[46]A?|3[016789]|34(?:_PK)?|3[01289]A|4[2345]A|[34]1A|2[12589]|2[079]A|[36]6A|0[37]A|0[1-9]|1[789]A|1[24789])|V23(?:4[34]A|4[1-8]|12BA|24HA|61GA|66[GH]A|3[1-46789]|3[4789]A|39FA|0[1-479]A|0[23789]|52A?|5[0156]|5[3479]A|53DA|6[124]A|2[0-57]|2[3479]A|1[0124-9]|1[23478]A)|V24(?:0[13469]|1[02789]|2[346]|33|0[358]A|2[569]A|1[0579]A|30A)|S7t 5G| (?:Y30g|Y20T|Y31s 5G|Y33s|Y50t|Y55s 5G)|iQOO (?:U[13]x?|Z1x 5G|Z5x|[578]|Z[153])|V17 SD665|NEX 3s? 5G|Z5x 712|iPA2375|iPA2475|PA2473|Y51A|Y51 PK|1907_19|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:Y85A?|Y83A|Y71A?)|X21i A|X21A|Y52s|Y71t|Y76s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2170A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y20T|Y30g|X21i A|X21A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2324A|V2309(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2366[GH]A`),
		regexp.MustCompile(`(?i)V2309A|V2308`),
		regexp.MustCompile(`(?i)(?:V2307|V2343A|V2401)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2336(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1824[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1955A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2171A|I2017)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2172A|I2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2243A|I2212)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2220|V2307A`),
		regexp.MustCompile(`(?i)V2408A|I2401`),
		regexp.MustCompile(`(?i)I192[78](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2165A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2049A|I2009|iQOO 7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2231A|I2214)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2304|V2339A`),
		regexp.MustCompile(`(?i)V2154A|iQOO Neo 5S`),
		regexp.MustCompile(`(?i)I2012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1922A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1916A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1914A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1981A|iQOO Neo 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1936(?:TL|A[L]?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2118A|iQOO Neo 5 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2055A|iQOO Neo 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2199A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1986A|iQOO Z1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2012A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iQOO Z1x 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2073A|I2011|iQOO Z3 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1919A|iQOO Z5x`),
		regexp.MustCompile(`(?i)I2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2148A|iQOO Z5`),
		regexp.MustCompile(`(?i)(?:I220[236]|I2127|V2220A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2126(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I22(?:13|07)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2216(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2223(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I2302|I2218`),
		regexp.MustCompile(`(?i)I2219|V2353A`),
		regexp.MustCompile(`(?i)(?:V2023A|iQOO U1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2065A|iQOO U1x)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2061A|iQOO U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2143A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2106A|iQOO U3x 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025A|iQOO 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2024A|iQOO 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2141A|iQOO 8 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2136A|iQOO 8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2339(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2337(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2025)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2066|V2108)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2061(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2040(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1921(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo 1916(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1805(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1912|V1923A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1924A|NEX 3 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1950A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEX 3s 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo NEX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1821[AT]|vivo 1813)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vivo ONE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2115A|V2141|V2157|V2150`),
		regexp.MustCompile(`(?i)V2253|V2312`),
		regexp.MustCompile(`(?i)V2320|V2199GA`),
		regexp.MustCompile(`(?i)V2334(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23[45]6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2338(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2203A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1831[AT]`),
		regexp.MustCompile(`(?i)V1832[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V211[56]`),
		regexp.MustCompile(`(?i)V220[19]|V2242(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22(?:31|46)`),
		regexp.MustCompile(`(?i)(?:V2352|V2433)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2244(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2318(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2343(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V23(?:27|14)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2341|V2424|V2417)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2418|V2403)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1932[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1962A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2162A?`),
		regexp.MustCompile(`(?i)V2020C?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2080A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S7t 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2072A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2048A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1941A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1928A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1804(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1806(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1818(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 19(?:10|09)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1907(?:_19)?|1907_19)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 19(?:20(?:_20)?|19)|V17 SD665)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1933(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]1601(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1611(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (1713|1612)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1718(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166BA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1716|1850)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1723(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1727|V9Youth)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1851|V9Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo V3Max(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X9s(?: [AL])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2241A|V2218(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2219(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X20Plus UD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1721(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X20Plus(?: a)?|vivo 1720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X21UD(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1725|X21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1814[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1809[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1816[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V18(38|29)[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1836[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938CT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1938T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2001A|vivo 2004)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1930(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1937|V1937)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2005A|vivo 2006)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2011A|X50 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20(?:46|59)A|V2045)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2085A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2047A|V2046)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2056A|V2047)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2134A|V2105)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2145A|V2114)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2133A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2104(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2144|V2183A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V218[56]A|V2145`),
		regexp.MustCompile(`(?i)V2208(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X([0-9])Plus(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1929|2015)(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1902(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2310|V2331`),
		regexp.MustCompile(`(?i)(?:V2333|V2345)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2410(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V22[01]4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 1906(?:_20)?|V2236A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2239|V2412`),
		regexp.MustCompile(`(?i)V2166(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2203|V222[19])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V225[24]|V2325)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2217|V2236|V2234_PK)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2234)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2332|V2406`),
		regexp.MustCompile(`(?i)V2409|V2344`),
		regexp.MustCompile(`(?i)vivo 19(?:04|40)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2102(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 2007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1901(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V212[05]|V2139)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2147|V2212`),
		regexp.MustCompile(`(?i)vivo 1915(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2419|V2423)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V202[79](?:_PK)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2207|V2238)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2206(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1613(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2043_21|V2048)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V205[24]|V2070|V2101|V2034)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2037(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2129(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2065(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2028(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2038(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2043(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2041|2060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2110(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2152(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2111(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2149(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2140(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V213[15](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2023(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1901[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo 193[89]|V203[46]A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2160(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2099A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2066[B]?A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2036(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2068A?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2228(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2109|Y33s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2146(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2166A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2205(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2247|V2324)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2248(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2357A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1934A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V1965A|vivo 1935)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2023EA|Y50t)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V(?:2024|203[05])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y51 PK(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031(?:_21)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y51A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2054A|Y31s 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2057A|Y52s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2053(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1606a(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2058|V2111A|V2123A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1603(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2164A|Y55s 5G`),
		regexp.MustCompile(`(?i)V2311|V2225`),
		regexp.MustCompile(`(?i)vivo 1719(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1714|Y69A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2002A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1724|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y71t(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1801i?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1731CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2059(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2031A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2124(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2156F?A|Y76s(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1913[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 180([38]|8i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1812(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1732[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:Y83A?|1802)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1726(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730EA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1823|1908)(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 181[17](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1820(?:_19)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1945A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V2026|V2033|V2042)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:V20[63]9|V2026_21)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 18(16|20)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V1818[AT]|vivo 181[45])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1818C[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1807(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1801A0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo (?:1918|1951|Z1Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1730D[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo 1917(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1813B[AT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Z3x|V1730GA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1921A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1911A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1990A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V1963A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V2142(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:vivo Y75s|V2069BA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X710L?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X6SPlus(?: [AD])?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X6S(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X([5679]|20)[ALD]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo X5Pro(?: L)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y66i(?: A)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Y(\d{2})[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)vivo Xplay(\d)[AL]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:VIV-|BBG-)?vivo[ _]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (Y85A?|Y83A|Y71A?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vizio|(?:VAP430|VTAB1008|XR6[PM]10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VIZIO ([a-z0-9_-]+) ViziOS/`),
		regexp.MustCompile(`(?i)Model/([a-z0-9_-]+)\)`),
		regexp.MustCompile(`(?i)Vizio, ([a-z0-9_-]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)(VTAB1008|XR6[PM]10)`),
		regexp.MustCompile(`(?i)VIZ(?:101|070)TAB[78]11`),
		regexp.MustCompile(`(?i)VIZ070TAB(\d{3})`),
		regexp.MustCompile(`(?i)VIZ101TAB(\d{3})`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _]|(?:Kicka 5 Plus 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vodacom)[ _](Power Tab 10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]|VodafoneSmartChat|Smart Ultra 6|Smart ?Tab ?(?:III? ?)?(?:4G|7|10)[;/ )-]|(?:GigaTV|VFD[ _][0-9]+|VFD[37]20|VF6[89]5|VF-(696|1397|795|895N|1497)|SmartV22)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 50[012]`),
		regexp.MustCompile(`(?i)VFD 51[0123]`),
		regexp.MustCompile(`(?i)VFD 52[789]`),
		regexp.MustCompile(`(?i)Vodafone[ _]875(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]975N?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]785(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD 525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]890N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _]985N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Smart ?Tab ?3G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4G`),
		regexp.MustCompile(`(?i)Smart ?Tab ?4`),
		regexp.MustCompile(`(?i)SmartTab7[);/ -]`),
		regexp.MustCompile(`(?i)SmartTab10[);/ -]`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?II ?10`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?7`),
		regexp.MustCompile(`(?i)Smart ?Tab ?III ?10`),
		regexp.MustCompile(`(?i)Vodafone TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VFD[ _]([0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Vodafone[ _-]([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)Volla Phone (22|X23)`),
		regexp.MustCompile(`(?i)VOLT[_ ](SV451[_ ]Vision)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vonino|Epic (?:E8|P7)|Epic_(?:M8|P7)|Gyga[ _](?:X|S|QS|XS)|Jax[ _](?:QS|[SXQN]|Mini)|Magnet[ _](?:M[19]|G[135]0|W10)|Navo_QS|Navo S|Onyx_(QS|Z)|Orin_QS|Pluri[ _](?:[BCMQ]7|[CQM]8)|Sirius_QS|Spirit QS|Volt[ _][XS]|Xavy[_ ]([GT]7|L8)|Xylo[ _][XSPQT]|Zun[ _](?:N|X[OS]?)|JAX_N|Druid_L10|iMart_Pro|MusicPAD_[HM]1`),
		regexp.MustCompile(`(?i)Zun[ _](N|X[OS]?)`),
		regexp.MustCompile(`(?i)Xylo[ _]([PSXQT])`),
		regexp.MustCompile(`(?i)Volt[ _]S_A7`),
		regexp.MustCompile(`(?i)Volt[ _]S`),
		regexp.MustCompile(`(?i)Volt[ _]X`),
		regexp.MustCompile(`(?i)Gyga[ _]QS`),
		regexp.MustCompile(`(?i)Gyga[ _]XS`),
		regexp.MustCompile(`(?i)Gyga[ _](S|X)`),
		regexp.MustCompile(`(?i)Jax[ _]QS`),
		regexp.MustCompile(`(?i)Jax[ _]S_A7`),
		regexp.MustCompile(`(?i)Jax[ _]([SQXN])`),
		regexp.MustCompile(`(?i)Jax[ _]Mini`),
		regexp.MustCompile(`(?i)Epic[_ ]([EM]8|P7)`),
		regexp.MustCompile(`(?i)Pluri_M([78])_2020`),
		regexp.MustCompile(`(?i)Pluri[ _]([BCMQ])7`),
		regexp.MustCompile(`(?i)Pluri[ _]([CQM])8`),
		regexp.MustCompile(`(?i)Druid[_ ](L10)`),
		regexp.MustCompile(`(?i)Magnet[_ ]M10[_ ]2020`),
		regexp.MustCompile(`(?i)Magnet[_ ](G50)[_ ]Pro`),
		regexp.MustCompile(`(?i)Magnet[ _](M[19]|G[135]0|W10)`),
		regexp.MustCompile(`(?i)Navo[_ ](Q?S)`),
		regexp.MustCompile(`(?i)Onyx_(QS|Z)`),
		regexp.MustCompile(`(?i)Xavy[_ ]([GT]7|L8)`),
		regexp.MustCompile(`(?i)MusicPAD_([HM]1)`),
		regexp.MustCompile(`(?i)(HK1 (?:Max|MINI\+?|PLUS|PRO)|KK MAX|VONTAR[_ -](?:Z[58]|[VH]1|KIII|MX-4K|X[234]|R3)|H618|DQ08)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DQ08(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VONTAR[_ -](Z[58]|[VH]1|KIII|MX-4K|X[234]|H618|R3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KK MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 MINI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HK1 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORAGO|(?:PAD-7-V5|PAD-7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PAD-7-V5|PAD-7)`),
		regexp.MustCompile(`(?i)(?:SXPro|S7-classic|SXPRO_classic|Quartz(?:PRO|LITE)|ULTRAPAD)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORKE[ _](Z[157]|Z6(?: Plus)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VORMOR-X5-pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Android 13(?:[\d.]*);(?: [\w-]+;)? (?:HD65)|ZG65|SYNQ|CMG101|CM62|CG65|T10M_Pro|HD55|HD60[iL]?|HD62|HD68|ZTAB10|BTAB10|HD65[ _](?:Choice|Select|Ultra|PLUS)|ZG55|ZG65 Pro|V39TPHE01S|V32TPHDE1S|V24TPHDE1S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HD65[_ ]Choice`),
		regexp.MustCompile(`(?i)HD65[_ ]Ultra`),
		regexp.MustCompile(`(?i)HD65[_ ]Select`),
		regexp.MustCompile(`(?i)HD65[_ ]PLUS`),
		regexp.MustCompile(`(?i)(SYNQ|CM62|CG65|ZG55|HD55|HD60[iL]?|HD6[258]|ZG65)`),
		regexp.MustCompile(`(?i)(CMG101)`),
		regexp.MustCompile(`(?i)(V39TPHE01S|V32TPHDE1S|V24TPHDE1S)`),
		regexp.MustCompile(`(?i)VOTO[ _-]|VT8[89]8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOTO[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)VOTO[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(VT8[89]8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Voxtel_([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:VOYO[_ ](?:A15)|i8-Max|Q101-4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i8-Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Q101)-4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VOYO[_ ](A15)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Joy [123]\+|Joy [34]|Active 1\+|Bee 3|Active [13]|V341U|Bee Lite|Aris| Bee|Star [345])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([123])\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Joy ([34])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active 1\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Bee(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Star (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Active (\d)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V341U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VSUN (?:ILLUSION|RACE|V9|TOUCH)|Aqua Tough|MERCURY Tough|MARS TOUCH|MARS NOTE|MARS NOCAM|SATURN SELFIE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILLUSION(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MARS TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SATURN SELFIE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RACE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VSUN TOUCH(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (81V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:VP5004A|VS5513|VS4011|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VP5004A|VR6031)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS5513(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VS4011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Nexo-TAB-7(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:X9 CALL2| WO (?:[789]|1[02])|WO Pad Max|WO Pad Pro)(?: Build|[);])`),
		regexp.MustCompile(`(?i)WO (1[02]|[789])`),
		regexp.MustCompile(`(?i)(F808NM|F803YM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; WLE[0-9a-z]+;|(?:WUD55H7762SN|WUD55G7762S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WUD55H7762SN|WUD55G7762S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LGE; (WLE[0-9a-z]+);`),
		regexp.MustCompile(`(?i)WE (A[15]0|B3|F[12]0|E[12]|L[3469]|R[34]|V[34]|S1|X[13]|T1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIWA DREAM PLAYER(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)W10_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TD-TP010G-2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (P10X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WALKER[;,]`),
		regexp.MustCompile(`(?i)Walton|Walpad|RX7 Mini|Primo[ _](?:C[1234]?|D[1-689]|E[1-589]|F8s|EF[23]?|EM|F[1-79]i?|G[1-9]|GF[234]?|GH[23]?|GM|H[2-689M]|H10|H7s|N[F1]?|NX2?|R[1-689]|R[HM]2?|RX[23]?|S[1-8]|V1|X[1-4]|Z|[ZV]X)|Orbit M20|Orbit Y(?:2[10]|[57]0)|XANON X[29]0|NEXG N(?:7[0-3]|25|[689])|LT750`),
		regexp.MustCompile(`(?i)Walpad[ _]?([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Primo H8 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo (RM2|ZX2|NX4) mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Primo H8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)RX7 Mini(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Orbit Y(\d{2})`),
		regexp.MustCompile(`(?i)Orbit M(\d{2})`),
		regexp.MustCompile(`(?i)NEXG N(7[0-3]|25|[689])`),
		regexp.MustCompile(`(?i)(LT750)`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)[ _]Plus(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Primo[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Walton[ _]([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Waltter NEO 10\.1`),
		regexp.MustCompile(`(?i)(?:ZC-339)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZC-339)`),
		regexp.MustCompile(`(?i)V10(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)PRO 8475(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(WM1001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:C81W_EEA|P16W|F21W)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(P16W|C81W|F21W)(?:_EEA)?`),
		regexp.MustCompile(`(?i)(?:20200808A1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)weplus_3|WEIMEI_NEON2`),
		regexp.MustCompile(`(?i)WELLCOM[ _\-/]([a-z0-9]+)`),
		regexp.MustCompile(`(?i)Westerndigital|WDSimpleBrowser`),
		regexp.MustCompile(`(?i)(65WS3205)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WESTPOINT[;,]`),
		regexp.MustCompile(`(?i)(TETS-4919SM)`),
		regexp.MustCompile(`(?i)Wexler|(?:MOBI 7 LTE|ULTIMA 7 TWIST PLUS|ULTIMA 7|ULTIMA [78] TWIST|TAB10iQ3G|TAB[ _]10Q)(?:[);/ ]|$)|ZEN[ _](?:4\.[57]|5)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _.-])?ZEN[ _]4\.5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _.-])?ZEN[ _]4\.7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[ _.-])?ZEN[ _]5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN[ _]5\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wexler[._-])?TAB[ _]?10Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TAB10iQ3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wexler[ _.-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Wexler[ _.-]([^);/]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ULTIMA 7 TWIST PLUS|ULTIMA [78] TWIST|ULTIMA 7 OCTA|ULTIMA 7|MOBI 7 LTE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AM1010V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAB-8US2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wieppo (S6 Lite|S[658]|E1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Wigor (?:V4))(?:[);/ ]|$)|Android 7(?:[\d.]*);(?: [\w-]+;)? V3(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Wigor (V4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(V3)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:WIKO[_ -])|(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink([^/;]*)|Highway([^/;]*)|Iggy|Stairway|Rainbow ?(Jam|Lite|Up)?|Darkside|Darkmoon|Darkfull|Darknight|Freddy|FEVER|Jerry[2]?|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa|Kite|Robby|Lenny[2-9]?|Slide2?|Sunset[2-9]?|Sunny[2-9]?|Tommy[2-9]?|PULP(?: Fab)?|Wax|HARRY|Ridge(?: Fab)?|U FEEL(?: Prime| Lite)?|U PULSE(?: LITE)?|View2 (?:Go|Plus)|View XL|View Prime)(?: Plus)?(?: 4G)?(?: Build|$)?|W_(?:C8[06]0|K[346]00|P130|P200|C200SN)|WC300|W-(?:V7[23]0|V745|V755|V8[035]0|P[36]11|K130|K211|K3[68]0|K420|K510S?|K521|K560|K610|K630)-(?:BYT|EEA|FRA|OPE|SU[IN]|SWI|TIM|TRU|TMV|TVM|DU|T[HV]|ID)|WIM Lite|W-V851|W-V6[08]0|W-V750BN|W-V770|W-K200|W-U300|(?:U307AS|CINK PEAX 2|HIGHWAY PURE|C210AE|v3913|U614AS|V3991AN|v12fnlite|K-KOOL|p6901|U616AT|VHEM|KENNY|View Go| WIM|Aix-AN00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V770`),
		regexp.MustCompile(`(?i)(?:WIKO-)?VHEM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U616AT`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V745`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V750`),
		regexp.MustCompile(`(?i)(?:WIKO-)?W-V755-EEA`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Cink Peax 2`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Cink([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?CINK_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY PURE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY STAR`),
		regexp.MustCompile(`(?i)(?:Wiko-)?Highway([^/;]*) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HIGHWAY_([a-z0-9_]+)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Iggy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?FEVER`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Stairway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ridge`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow ([^/;]+) Build`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Rainbow`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkside`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkmoon`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darkfull`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Darknight`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sublim`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Ozzy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Barry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Birdy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Bloom`),
		regexp.MustCompile(`(?i)(?:WIKO-)?JIMMY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Jerry`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Getaway`),
		regexp.MustCompile(`(?i)(?:WIKO-)?KENNY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Goa`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Freddy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Kite`),
		regexp.MustCompile(`(?i)C210AE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U307AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U316AT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)v3913(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?3 Max`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?4 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny[ -_]?([2-9])`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Lenny`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Slide`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunset`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3 Mini`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny3`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny2`),
		regexp.MustCompile(`(?i)W-K211-(?:TH|TVM)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Sunny`),
		regexp.MustCompile(`(?i)(?:W_K600|Tommy3|W_C200SN)`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy2`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Tommy`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Wax`),
		regexp.MustCompile(`(?i)(?:WIKO-)?HARRY`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM Lite|p6901`),
		regexp.MustCompile(`(?i)(?:WIKO-)?WIM`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp Fab`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp 4G`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Pulp`),
		regexp.MustCompile(`(?i)(?:WIKO-)?Robby(2)?`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U PULSE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL LITE`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL PRIME`),
		regexp.MustCompile(`(?i)(?:WIKO-)?U FEEL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Go`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View2 Plus`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View XL`),
		regexp.MustCompile(`(?i)(?:WIKO-)?View Prime`),
		regexp.MustCompile(`(?i)W_P130|View Go`),
		regexp.MustCompile(`(?i)W-V800-(TVM|TIM|EEA|OPE|DU)`),
		regexp.MustCompile(`(?i)W-K130-(?:OPE|EEA|BYT)`),
		regexp.MustCompile(`(?i)W-K510-(?:TVM|EEA|OPE|SUN|BYT|TH)|W-K510S-SWI`),
		regexp.MustCompile(`(?i)W-K560-(?:EEA|TVM)`),
		regexp.MustCompile(`(?i)W-K610-(?:SUI|FRA)`),
		regexp.MustCompile(`(?i)W-V720-(?:EEA|OPE|SUN)`),
		regexp.MustCompile(`(?i)W-P311-(?:EEA|OPE|TVM)`),
		regexp.MustCompile(`(?i)W-P611-(?:EEA|OPE)`),
		regexp.MustCompile(`(?i)W-V830-(?:EEA|OPE|ID)`),
		regexp.MustCompile(`(?i)W-V730-(?:EEA|TVM|ID|OPE)`),
		regexp.MustCompile(`(?i)W-U300(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U520AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)U614AS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K-KOOL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wiko ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(42QWS9001)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox|(?:Swift 2|crackling)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox Spark \+`),
		regexp.MustCompile(`(?i)Wileyfox; Pro`),
		regexp.MustCompile(`(?i)Swift 2 (X|Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Swift 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wileyfox (Spark|Swift)`),
		regexp.MustCompile(`(?i)Wileyfox ([^/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:NOTE GRACE V)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[_ ]|SWITRON-i12A`),
		regexp.MustCompile(`(?i)Wink[_ ]((?:Glory|World|Share|City)(?:[_ ](?:SE|S))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wink[ _](Primo|Highway)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Winmax[ _](?:XC14|XC[46]|TX30)|PolarH4|Tiger_X12)(?:[);/ ]|$)|MAUI.+Winmax_BD45`),
		regexp.MustCompile(`(?i)Winmax[ _](XC14|XC[46])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winmax[ _](TX30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MAUI.+Winmax_(BD45)`),
		regexp.MustCompile(`(?i)Winnovo|(?:T10LTE|H(?:7|10)_US)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T10LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)H(7|10)_US(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _]?(M866|M798|VTab|750[PK]|T2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Winnovo[ _](V51)`),
		regexp.MustCompile(`(?i)Winnovo[ _](K5[46]|K43)[a-z]{2}`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)Winstar S-?5`),
		regexp.MustCompile(`(?i)(WISENET5|WPOS-3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WIZARPOS[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)miSmart|miTab|WIAM[ _]\#?\d+|WOLDER`),
		regexp.MustCompile(`(?i)WIAM[_ ]\#?65[_ ]lite`),
		regexp.MustCompile(`(?i)(?:WOLDER_)?WIAM[ _]\#?(\d+)`),
		regexp.MustCompile(`(?i)WOLDER[_ ](\d+)`),
		regexp.MustCompile(`(?i)miSmart[ \-_]?([^/]+) Build`),
		regexp.MustCompile(`(?i)miTab[_ ]PRO[_ ]10[_ ]plus`),
		regexp.MustCompile(`(?i)miTab[ \-_]?([^/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)AT[ _-]AS([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:W55SE|W626 LITE|WS054|WS067|WS5SE|WS626)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Wonu ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)SP5026i-Scorpio|SP5040-Casiopea`),
		regexp.MustCompile(`(?i)TERRA[ _]PAD[ _](\d+)(_V2)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]|Nimbus 101Q`),
		regexp.MustCompile(`(?i)Nimbus ?(101Q|115|1100RX)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WOXTER[ _]I-101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([SQ]X) ?([0-9A-Z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[_ ](?:Zielo[ _])?(Q27|Z800|Z420)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Woxter[ _]([^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)G1LITE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-]?BO (V[78]|V1[01]|V[89]\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XMOBILE|(?:XM-SW1|X63Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XMOBILE) X7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X[-_]TIGI|Hope(?:[78]|10)[_ ](?:Mate|Max|Pro|Plus|LTE)|JOY(?:10|8) Mate|JOY10_LTE|Photo_P15_Lite|SHARP_2|SHARP1|V18 pro_A`),
		regexp.MustCompile(`(?i)X[_ ]TIGI[_ ]JOY7_TV`),
		regexp.MustCompile(`(?i)(?:X_TIGI_)?JOY(10|[78])[ _]Mate`),
		regexp.MustCompile(`(?i)Hope([78])[_ ](Mate|Max)`),
		regexp.MustCompile(`(?i)Hope ?8 LTE`),
		regexp.MustCompile(`(?i)Hope10[_ ]Pro`),
		regexp.MustCompile(`(?i)Hope10[_ ]Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]V28[_ ]LTE`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]V19`),
		regexp.MustCompile(`(?i)X[-_]TIGI[_ ]A1[_ ]?Plus`),
		regexp.MustCompile(`(?i)X-TIGI[_ ]Photo[_ ]P11`),
		regexp.MustCompile(`(?i)SHARP_?([12])`),
		regexp.MustCompile(`(?i)X[-_]TIGI[ _-]([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)X-View|(?:ZEN_U5\+|AMBER_KIDS|Proton_(?:Amber_HD|Neon|JADE_2_PRO)|TitaniumGTColorsGO|FTB13)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZEN_U5\+`),
		regexp.MustCompile(`(?i)(FTB13)`),
		regexp.MustCompile(`(?i)(?:X96Air_(?:A100|100W|V2|P[1-3])|X96_X6_I|X96Max_Plus_?(?:Ultra|[25]|Q[12])?|X96MATE_PLUS|X96MINI_11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X96Air_(100W|A100|V2|P[1-3])`),
		regexp.MustCompile(`(?i)X96Max_Plus_?([25]|Q[12])`),
		regexp.MustCompile(`(?i)X96Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](?:X520|ISMART)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XCOM[ _](X520)`),
		regexp.MustCompile(`(?i)XCOM[ _]ISMART`),
		regexp.MustCompile(`(?i)(V1277)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGEM[;,]`),
		regexp.MustCompile(`(?i)XGEM[;,] ?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:XGIMI TV|XK03H|MoGo Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MagicDrawingPad)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X4000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YT5760[ABL]|YT5716C?|YT7216C?|YT7260[BL]|YT9216[BC]J|YT9213AJ|YT9270)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Enia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDSR785HDR_AVANT)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY|(?:Y19\(EU\)|XGT_EEA|N01Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XGODY Y17(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Y19\(EU\)`),
		regexp.MustCompile(`(?i)XGODY_X96(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(XDH-(?:0F-A1|1[78]-A1|21-A1|29-B1|2A-B1)|XD-SDD05-2101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?)|HLA Note(?:3|1-L)|L7620DE|20190416Q|20170608S|20180322D|20190325D|20190718Q|20190417Q|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HLA Note1-L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LA2-(?:L|S[N]?))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(20190416Q|L7620DE|20180101M|20170605Q)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20170608S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20180322D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190325D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190718Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)20190417Q(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi| ONC(?: Build|[;)])|MiTV-\w|Mi9 ?(?:Lite|SE)|MiProj(?:A1|M05)|Mi9 Pro 5G|(?:Mi5X|MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+|MIX(?: 2S?)?|MIX 2S ART|pomelo|rubyplus|AFTBTX4)(?:[);/ ]|$)|HM (?:[^/;]+) (?:Build|MIUI)|(?:2014501|2014011|201481[12378]|201302[23]|2013061) Build|Redmi|POCOPHONE|(?:SHARK )?KTUS-[AH]0|(?:SHARK )?(KLE|KSR|MBU|PAR)-[AH]0|SK[RW]-[AH]0|PRS-[AH]0|POCO F1|DLT-[AH]0|MIBOX[234]([_ ]PRO)?|MiTV4[ACSX]?|AWM-A0|MI CC 9 Meitu Edition|MiBOX1S|M2006J10C|M2006C3(?:L[IGC]|LVG|MN?G|MT)|M2007J1(?:7[CGI]|SC)|M2002(?:J9[SEG]|F4LG)|HM2014819|WT88047|210611(?:8C|19(?:BI|[AD]G|AL))|M2001(?:J[12]G|J2I|C3K3I)|M2004J1(?:5SC|9AG)|M2004J(?:7[AB]|19)[CG]|M2012K11(?:[CGI]|A[CI])|M2011K2[CG]|M2011J18C|M2006C3[ML]II|M2003J(?:15SC|15SS|6B2G|6A1G|6[AB]1I)|M2007J3S[ICYGP]|M2007J22[CG]|M2103K19[CGYI]|M2101K(?:[79]AG|7AI|7B[GI]|6[GIRP]|7BNY|9[GCR])|M2010J19S[CGYIL]|M2102(?:K1AC|K1[CG]|J2SC)|HM NOTE 1(?:LTE|W)|MI[_ ]PLAY|Qin 1s\+|Qin ?2(?: Pro)?|MI_(NOTE_Pro|5X|4i|(?:A2|8)_Lite)|A001XM|lancelot|XIG0[1-5]|2107119DC|M1810(?:F6LI|F6[GI])|M2101K(?:7BL|9AI)|A101XM|M2012K10C|M2104K10AC|M19(?:01F7[1S]|10F4S|08(?:F1XE|C3JGG)|08C3J[IH]|06F9S[IH]|02F1G|03C3GI)|21051182[CG]|21081111RG|2109119D[GI]|21091116(?:AI|[AU]?C|i|U[GI])|220111(?:7T[LGIY]|19TI|19UY|6S[IRC]|6TG|[67]SG|7SL)|21121(?:119S[CG]|23A[CG]|119VL|210C)|2204121(?:6[CI]|6UC|9[CGI]|9NY|1AC)|220333Q(?:AG|NY|L|BI)|2107113S[IGR]|22031(?:29G|116BG|21C)|PAR-H0|M2105K81A?C|2109119BC|2202(?:1119KR|1211RC|33L2[CGI])|22011(?:2[23][CG]|211C|16TI|17S[YI])|joyeuse|galahad|hydrogen|begonia|kenzo|willow|beryllium|rosemary|biloba| MD(?:G1|E5)|KLE-AO|Mi ?Pad ?\d|220612(?:18C|[23]SC)|2207(?:12(?:2MC|12AG|19AI)|33S(?:F?G|[ILH])|43FI)|2208(?:7RA4DI|1212(?:U?G|[CR])|128(?:1AC|3[GC]))|Black Shark|MZB82(?:98|5[57])IN|MZB0A5[HE]IN|2210(?:1317C|1320C|1316(?:U[PG]|UCP?|[CIG])|1(?:29SG|32[CG]))|2211(?:13(?:3[CG]|17I)|1317G)|23013RK75C|2305(?:3RN02[AYLI]|4RA19C)|2209(?:5RA98C|116AG|129SC)|2212(?:0RN86[CGIH]|6RN91Y|ARNC4L|2RK93C|7RK46C)|2302(?:6RN54G|1RAA(?:EG|2Y)|7RAD4I|8R(?:N4D[GI]|A60L|NCA[GI]))|angelican|vnd_camellia|2304(?:9RAD8C|FPN6D[GC]|6RP50C|3RP34[CGI]|6PNC9C)|2303(?:0RAC7Y|CRA44A|ERA42L)|M1908C3(?:[KJI]G|KH|I[CH])|M1906G7G|M1901F7G|M1903(?:F10I|C3GG|C3E[IG])|M1904F3BG|Hongmi [45]A?|M1912G7B[CE]|2307(?:7RABDC|6RN4BI|6RA4BR|6RN8DY|8PND5G|8RKD5C|6RA4BC|3RPBF[GCL]|BRPDCC)|2310(?:6RN0DA|8RN04Y)|2312(?:CRNCCL|DRA50G|9RAA4G|9RA5FL|9RN51[HX]|CRAD3C|DRAAB[CGI]|7PN0C[CG]|DRA50[CI]|4RA7EO|4RN87[CIG])|2311(?:6PN5B[CG]|BPN23C|7RA68G|DRN14I|7RK66C|FRAFDC|DRK48C|3RKC6C)|2308(?:CPXD0C|8PND5R)|24018RPAC[CG]|2404(?:ARN45A|8RN6C[GI]|0RN64Y|4RN32L|9RN28L)|2405(?:3PY09[CI]|CRPFD[CG]|CPX3D[CG])|2306EPN60G|23090(?:RA98[CGI])|23100RN82L|2406(?:9RA21C|ERN9C[IC]|APNFAG)|2403(?:1PN0DC|0PN60G)|QIN3ULTRA|FengMiProjA2|A401XM|MZB8458IN|M1805E10A|M1803D5XA|2407(?:6RP19G|FPN8EG|2PX77C|FRK8EC|4RPD2[GI]|5RP89G)|2411(?:DRN47C|6RACCG|5RA8E[CG]|7RK2CC|7RN76[OLEG])|A201XM|2409(?:0RA29[CG]|BRN2C[AILGY]|4RAD4[CIG])| Mi8|MDE40|2410DPN6CC|2412(?:9PN74C|9RT7CC|7RK2CC|2RKC7C)`),
		regexp.MustCompile(`(?i)SKR-[AH]0`),
		regexp.MustCompile(`(?i)SKW-[AH]0`),
		regexp.MustCompile(`(?i)DLT-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-A[0O]`),
		regexp.MustCompile(`(?i)(?:SHARK )?KSR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KLE-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-H0`),
		regexp.MustCompile(`(?i)(?:SHARK )?MBU-A0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PRS-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?PAR-[AH]0`),
		regexp.MustCompile(`(?i)(?:SHARK )?KTUS-[AH]0`),
		regexp.MustCompile(`(?i)Black Shark ([^/);]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)Xiaomi_2014501|2014501 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014011|2014011 Build`),
		regexp.MustCompile(`(?i)Xiaomi_201302[23]|201302[23] Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]2014818|2014818 Build`),
		regexp.MustCompile(`(?i)Xiaomi_2014817|2014817 Build`),
		regexp.MustCompile(`(?i)Xiaomi[_-]201481[123]|201481[123] Build`),
		regexp.MustCompile(`(?i)Hongmi ([45]A?)`),
		regexp.MustCompile(`(?i)MI[_ ]PLAY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi ?9 ?SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Lite|M1904F3BG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?M1902F1[GT]`),
		regexp.MustCompile(`(?i)MI CC 9e|MI CC9e`),
		regexp.MustCompile(`(?i)MI CC ?9 Pro`),
		regexp.MustCompile(`(?i)MI CC 9(?: Meitu Edition)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:M2001J2E_TD-LTE|M2001J2[GI])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xiaomi_)?(?:Mi 10 Pro|M2001J1[EG](?:_TD-LTE)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011K2[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116UI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11I|Mi 11X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[GI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J3S[CYP](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J1SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102J2SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2002J9[EGS]|XIG01|Mi 10 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11G|MZB0A5EIN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2107113S[IGR]|Xiaomi 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21081111RG|Xiaomi 11T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2109119DI|(?:Xiao)?mi 11 Lite (?:5G )?NE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9[GCR]|2109119DG|Mi 11 Lite 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K9A[GI]|Mi 11 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2102K1[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2102K1AC|Mi 11 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201122[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201123[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209116AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071212AG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2207122MC|Xiaomi 12 Pro Dimensity)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22081212(?:U?G|[CR])|Xiaomi 12T Pro|A201XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206122SC|Xiaomi 12S Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2206123SC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2203121C|Xiaomi 12S Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2203129G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2112123A[CG]|Xiaomi 12X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2210132[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2210129SG|Xiaomi 13 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2211133[CG](?:[);/ ]|$)|Xiaomi 13(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:2304FPN6D[CG]|Xiaomi 13 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23078PND5G|23088PND5R|Xiaomi 13T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2306EPN60G|XIG04)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23127PN0C[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24031PN0DC|24030PN60G|Xiaomi 14 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24053PY09I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2311(?:6PN5B[CG]|BPN23C)|Xiaomi 14 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(2407FPN8EG|2406APNFAG|Xiaomi 14T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2410DPN6CC|Xiaomi15 Pro`),
		regexp.MustCompile(`(?i)MI[ _]8[ _]?Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 8 Explorer Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ?8 ?([a-z]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi ?8(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi 9T Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Mi ?9 Pro 5G|M1908F1XE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 9 Transparent Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ([89]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 5s Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_MDT2|Mi5X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xiaomi_2013061|2013061 Build`),
		regexp.MustCompile(`(?i)Mi[- ]([43])c(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi_4i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI 4 ?LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI MAX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MI MAX|hydrogen)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MDE40(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[ _]A2[ _]Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1906F9S[IH](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2106118C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1803D5XA|MDE5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi MIX 3 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX ([23])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S ART(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX 2S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2405CPX3D[CG]`),
		regexp.MustCompile(`(?i)24072PX77C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POCOPHONE[ _]F1|POCO F1|beryllium|M1805E10A`),
		regexp.MustCompile(`(?i)M1903C3G[IG]`),
		regexp.MustCompile(`(?i)24069RA21C|Redmi Turbo 3`),
		regexp.MustCompile(`(?i)MDG1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WT88047(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM2014819(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 2A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1S[CW]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2001C3K3I|MZB8298IN|M1908C3K[GH]|MZB8458IN)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MZB825[57]IN|M1908C3I[CG]|M1908C3IH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 8A (Dual|Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7AC|M2004J15SC|Redmi 10X (?:4G|LTE))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220333Q(?:AG|NY|L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2310(?:6RN0DA|8RN04Y|0RN82L)|2311DRN14I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2404(?:ARN45A|0RN64Y|9RN28L)`),
		regexp.MustCompile(`(?i)23124RN87[CIG]`),
		regexp.MustCompile(`(?i)2409BRN2C[AILY]`),
		regexp.MustCompile(`(?i)(?:M2004J19[CG]|M2006C3MII|lancelot|galahad|M2004J19AG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J19I|Redmi 9 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19SI|Redmi 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3L[GCI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LII(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MZB0A5HIN(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3M[GT](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2006C3LVG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2010J19S[GYL]|pomelo|Redmi 9T, Note 9 4G, 9 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 9T NFC(?:_SN)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006C3MNG|Redmi 9C NFC|angelican)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219(?:G|NY)|Redmi 10 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119D[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220333QBI|Redmi 10 Power)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220233L2[CGI](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119A[GL]|21121119(?:SG|VL)|22011119UY|Redmi 10 2022)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219I|Redmi 10 Prime\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011119TI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21061119[BT]I|Redmi 10 Prime)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2004J7BC|Redmi 10X Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22120RN86[CGIH]|22126RN91Y|2212ARNC4L`),
		regexp.MustCompile(`(?i)23053RN02[AYLI]`),
		regexp.MustCompile(`(?i)(?:23076(?:RN8DY|RA4BR|RN4BI)|23077RABDC|XIG03|Redmi 12 5G|A401XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22071219AI(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20 Pro Premium Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K20Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom Edition(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 Pro Zoom(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30S Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K([23]0) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1912G7B[CE](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K30i 5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2012K11AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22021211RC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K10C|Redmi K40 Gaming)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi K40 Pro\+(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2012K11C|Redmi K40 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2006J10C|Redmi K30 Ultra)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22011211C|Redmi K50 Pro`),
		regexp.MustCompile(`(?i)22127RK46C|Redmi K60 Pro`),
		regexp.MustCompile(`(?i)23078RKD5C|Redmi K60 Ultra`),
		regexp.MustCompile(`(?i)241[12]7RK2CC|24122RKC7C`),
		regexp.MustCompile(`(?i)Redmi Y1 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1810F6[GI]`),
		regexp.MustCompile(`(?i)ONC(?: Build|[;)])|M1810F6LI`),
		regexp.MustCompile(`(?i)M1903C3E[IG]`),
		regexp.MustCompile(`(?i)Redmi (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi 4 Prime(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:220733SFG|Redmi A1\+|220743FI)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)220733S[GHIL](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2302(?:8RN4D[GI]|6RN54G)`),
		regexp.MustCompile(`(?i)23028RNCA[GI]`),
		regexp.MustCompile(`(?i)23129RN51[XH]`),
		regexp.MustCompile(`(?i)2404(?:4RN32L|8RN6C[GI])`),
		regexp.MustCompile(`(?i)Qin ?2 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Qin 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2107119DC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2109119BC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2209129SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23046PNC9C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24053PY09C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Civi 1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2105K81AC|22081281AC|(?:Xiao)?mi Pad 5 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21051182[CG]|(?:Xiao)?mi Pad 5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2105K81C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23046RP50C|Pad 6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)23043RP34[CGI]|Xiaomi Pad 6(?: Build|[;)])`),
		regexp.MustCompile(`(?i)2307BRPDCC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24018RPAC[CG]|Xiaomi Pad 6S Pro 12\.4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI (?:PAD ?4 ?PLUS|Pad4\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD4 Wi-?Fi(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI ?PAD 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD 2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI PAD(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22081283[GC](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2405CRPFD[CG](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2407(?:6RP19[GI]|5RP89G)|Redmi Pad SE 8\.7`),
		regexp.MustCompile(`(?i)(?:23073RPBF[GCL]|Redmi Pad SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)24074RPD2[CGI]`),
		regexp.MustCompile(`(?i)FengMiProjA2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX3[ _]Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MIBOX([234])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiBOX1S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MSSP[123](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MTEQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AESP0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-(?:ANSP0|AYFR0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOSR1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOQ1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-MOOR4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:MiTV-AXSO0|MiTV4(?:A|-ANSM0)|MiTV-MSSP0)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AXSO[12](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV(4[CSXI]|4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-AFKR0(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AFTBTX4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MiTV-([A-Z]{4}[0-9]{1})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2011J18C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22061218C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2308CPXD0C|Mix Fold 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1W(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM NOTE 1TD (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM NOTE 1(?:LTE|S)(?:W|GLOBAL|TD)? (?:Build|MIUI)|HM NOTE 1LTE`),
		regexp.MustCompile(`(?i)Xiaomi[_ ]2015052`),
		regexp.MustCompile(`(?i)(?:M2010J19SC|M2003J15SS|Redmi Note 9 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J6A1G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2003J15SC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K7BL|rosemary)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2007J22G|A001XM)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J22C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2007J17C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:joyeuse|M2003J6(?:B2G|A1I))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note 10 Lite|M2002F4LG(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Redmi Note ?9 Pro Max|M2003J6B1I)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2101K7A[GI]`),
		regexp.MustCompile(`(?i)M2103K19Y|22021119KR`),
		regexp.MustCompile(`(?i)M2101K7B(?:[GI]|NY)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2103K19[GC]|Redmi Note 10 5G|vnd_camellia)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M2103K19I|A101XM|Redmi Note 10T 5G`),
		regexp.MustCompile(`(?i)XIG02(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M2101K6[GIRP]|M2104K10AC|Redmi Note 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)rubyplus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316[CIG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101320C|Redmi Note 12 Pro Speed)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2303(?:0RAC7Y|CRA44A|ERA42L|Redmi Note 12S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2302(?:1RAA2Y|1RAAEG|8RA60L|7RAD4I)|22101317C|22111317G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Redmi Note 12R Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23076RA4BC|Redmi Note 12R)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23049RAD8C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23054RA19C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316UC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22101316U[GP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22101316UCP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22111317I(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116C|2201116T[IG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312(?:CRAD3C|DRA50C)|23117RA68G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2311FRAFDC)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312DRA50[GI]|Redmi Note 13 Pro 5G|XIG05)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2312(?:4RA7EO|9RAA4G|9RA5FL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:23090RA98C)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24115RA8E[CG])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:24090RA29C|24116RACCG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2409(?:4RAD4[CIG])`),
		regexp.MustCompile(`(?i)24117RN76[OLEG]`),
		regexp.MustCompile(`(?i)(?:23090RA98[GI]|Redmi Note 13 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2312DRAAB[CGI]|Redmi Note 13 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SC|Redmi Note 11E Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041219C|Redmi Note 11E)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22041216C|Redmi Note 11T Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22041216UC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116S[GR]|Redmi Note 11 Pro 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:2201116SI|Redmi Note 11 Pro\+ 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116U[CG]|Redmi Note 11 Pro\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)21091116AC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)22095RA98C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21121119SC|2201117T[GILY]|Redmi Note 11 4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:22087RA4DI|Redmi Note 11 SE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)2201117S[GIYL]`),
		regexp.MustCompile(`(?i)(?:22031116BG|Redmi Note 11S 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:21091116(?:AI|I)|Redmi Note 11T 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3J[IH]|M1908C3JG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:M1908C3JGG|Redmi Note 8 \(2021\)|biloba)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:begonia|M1906G7G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)willow(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F71(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F7S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)M1901F7G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro Max(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi Note (\d+) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Redmi[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Redmi[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Mi Note 10 Pro|M1910F4S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi Note 10|M1910F4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MI[ _]Note[ _]([^;/) ]+)?`),
		regexp.MustCompile(`(?i)Qin 1s\+`),
		regexp.MustCompile(`(?i)MI[- ]One[ _]?Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi[- ]One[ _]?([a-z0-9]+)?(?: Build|[);])`),
		regexp.MustCompile(`(?i)MI[ _]([^;/]*) Build`),
		regexp.MustCompile(`(?i)MI[ _]([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HM Note ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)HM ([^/;]+) (?:Build|MIUI)`),
		regexp.MustCompile(`(?i)Xiaomi[ _-]([^/;]+)(?: Build|$)`),
		regexp.MustCompile(`(?i)XI[_-]CE(?:655|U55|U[48])`),
		regexp.MustCompile(`(?i)XI[_-]CE(655|U55|U[48])`),
		regexp.MustCompile(`(?i)Xolo|(?:Q600|Q700s?|Q800|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5\.[05]|Era5X|Era[ _]2[VX](?:[_ ]3GB)?|era[ _]X|era_HD|era[_ ]4[GK]|Era_4?X(?:_2GB)?|BLACK-1XM|A1000s_Lite|cube 5\.0_2GB|Opus 3|era1X|era [2X]|era1Xpro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLACK-?1XM?`),
		regexp.MustCompile(`(?i)Era[ _]?1X ?Pro`),
		regexp.MustCompile(`(?i)Era[_ ]?([145])X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era_4X_2GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Era[ _]2V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)era[_ ](HD|4[GK]|2X?|X)`),
		regexp.MustCompile(`(?i)cube 5\.0_2GB`),
		regexp.MustCompile(`(?i)(Q600 Club|Q600|Q700s?|Q800|Q1000s Plus|Q1000s|Q1000[ _]Opus|Q1010i|Q2000|Omega[ _]5\.[05]|A1000s_Lite|Opus 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xolo[ _]?([^;/]+) Build`),
		regexp.MustCompile(`(?i)Xolo[ _]?([a-z0-9_-]+)`),
		regexp.MustCompile(`(?i)XORO[ _]|(?:TelePAD(?:795|731|1032|10A3|7A3)|HMT(?:390Q?|400)|HST 260)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(7|10)A3 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)TelePAD(795|731|1032)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MegaPAD3204V5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HMT(390Q?|400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HST 260(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xshitou[_ ](P7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Xsmart (?:Nova 7|Mate 10)|CORE_X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xsmart (Nova 7|Mate 10)`),
		regexp.MustCompile(`(?i)(?:Xtouch[ _](?:X10|A5|X)|XBot[_ ](?:Senior|Junior)|X9_16GB|XP10_Wifi)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Xtouch[ _](X10|A5|X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)X9_16GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)XBot[_ ](Senior|Junior)`),
		regexp.MustCompile(`(?i)(?:BRIO[_ ]X31|XM14G|X10MT(?:16|87))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BRIO[_ ]X31)`),
		regexp.MustCompile(`(?i)Xpad_(M9_3G)`),
		regexp.MustCompile(`(?i)YASIN ([24])K G Smart TV`),
		regexp.MustCompile(`(?i)YASIN (?:Android|2K) (?:Android )?TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YASIN 4K Android TV(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YY-\d{3}[a-z]?)`),
		regexp.MustCompile(`(?i)M20201419(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:X109|(?:Y103|Y61|Q11)[-_]EEA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Y103|Q11|Y61)[-_]EEA`),
		regexp.MustCompile(`(?i)(X109)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU Fly (\w+)`),
		regexp.MustCompile(`(?i)YUHO_|(?:Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUHO_(O2|H2|Y[123])_PRO`),
		regexp.MustCompile(`(?i)(?:YUHO_)?(Vast2?|O[12]|Y2|Netra(?:[_ ](?:Plus|Lite))?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(L211|N10|U221|U310)-EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YUNDOO[ _-]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:YNDX-?00(?:0SB|10[12]|055|07[1-7]|09[12])|YandexModule2-00001|yandexstation_2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YNDX-?(0007[1-7]|0009[12]|0010[12])`),
		regexp.MustCompile(`(?i)YNDX-?000SB`),
		regexp.MustCompile(`(?i)YNDX-?00055`),
		regexp.MustCompile(`(?i)Xenta[ -]Tab|Luna TAB|TAB09-410|TAB10-410|TAB07-485|TAB0[78]-200|TAB08-201-3G|TAB9-200|TAB09-211|TAB10-2[01]1|TAB13-201`),
		regexp.MustCompile(`(?i)Luna TAB07-10[01]`),
		regexp.MustCompile(`(?i)Xenta-TAB07-21[01]`),
		regexp.MustCompile(`(?i)TAB10-2[01]1`),
		regexp.MustCompile(`(?i)M631Y|M685Y4|M651G_MY|YES (?:Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)YES (Altitude 4|MPY(?:48|54))`),
		regexp.MustCompile(`(?i)yestel|(?:T5|T13|X2)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)yestel P30(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(X2|T5|T13)_EEA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Yezz|ANDY[ _]|(?: (?:4E4|5EQ)|A5EI|LIV[ _][13]S?|LIV1|LIV2[_ ]?LTE|ART ?[123](?:_?PRO|S)?|MAX_1_PLUS|MAX2 PLUS|EPIC T|GO ?[123])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:YEZZ[_-])?(4E4|5EQ|A4M|A5EI)`),
		regexp.MustCompile(`(?i)GO ?([123])`),
		regexp.MustCompile(`(?i)LIV[ _]([13])S`),
		regexp.MustCompile(`(?i)LIV2[_ ]?LTE`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9]\.[0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9])([0-9][A-Z0-9]*)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)Andy[ _]([A-Z]*[0-9][A-Z0-9]+)(?:[ _](LTE))?`),
		regexp.MustCompile(`(?i)KB2 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YPAD(P70[12])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(YD20[16]|YOTA 3[+])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YD20[16](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOTA 3[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YOU-BOX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Youwei[ _]`),
		regexp.MustCompile(`(?i)youwei[ _]mini5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YTONE[ _-]`),
		regexp.MustCompile(`(?i)YTONE[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)YTONE[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)(?:YU5[05]10[A]?|YU4711|AO5510|YU5050|YU501[14]|YU5551|YU Yureka Black|YU 6000)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5010[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AO5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5551(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5510[A]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU4711(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU5014(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YU (Yureka Black)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:N101[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?(?:[ _]V11)?|N70 DUAL CORE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N(101|70)[ _]DUAL(?:[ _]CORE)?(?:[ _]?2)?`),
		regexp.MustCompile(`(?i)(?:YS[78]pro|YS6 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)YS([678]) ?pro`),
		regexp.MustCompile(`(?i)YUNO\.|ULX-(?:55UTCS3234|32TCS226|43UTCS347|39TCS222|50UTCS3234|43FTCS2234|32TCSW2234|24TCS221)`),
		regexp.MustCompile(`(?i)ULX-(\d{2}[FU]?TCSW?\d{2,4})`),
		regexp.MustCompile(`(?i)Yusun|LA2-T`),
		regexp.MustCompile(`(?i)Yusun ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Yusun ([a-z0-9_\-\+]+)`),
		regexp.MustCompile(`(?i)YXTEL_([HU]1|U3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZMOOTH)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Odyssey[_ ](?:evo|DTV[67]|J[59]|J10|GLAZE\+?|RANGE|ACE|AEON|VICTORY|SACRED|SAGA|SWIFT|O2|ULTRA|FLAME|POPO|PERRI|TYTAN|HIGH|SOAR|ERA)|ODYSSEY[ _]?NEXT|INTENSE (?:RISE|Hype|GAME))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]J10[ _]Mini`),
		regexp.MustCompile(`(?i)ODYSSEY[ _](O2|J[95]|DTV[67]|J10)`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]AEON`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ACE`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]ULTRA`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]?NEXT`),
		regexp.MustCompile(`(?i)ODYSSEY[ _]PERRI`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]FLAME`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]evo`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]Victory`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SWIFT`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]TYTAN`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SAGA`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]SACRED`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]POPO`),
		regexp.MustCompile(`(?i)ODYSSEY[_ ]RANGE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE\+`),
		regexp.MustCompile(`(?i)Odyssey[_ ]GLAZE`),
		regexp.MustCompile(`(?i)Odyssey[_ ]HIGH`),
		regexp.MustCompile(`(?i)Odyssey[_ ]SOAR`),
		regexp.MustCompile(`(?i)Odyssey[_ ]ERA`),
		regexp.MustCompile(`(?i)(65W600U)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIFRO|(?:ZT-97003G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZT-9700)3G`),
		regexp.MustCompile(`(?i)ZIK[_ ](W1027)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade[ _](?:A[57] 20(?:19|20)(?:RU)?|(?:V1000|L8)RU|E01|V0820|L110|L[2357]|L210(?:RU)?|L7A|L8|S6|V[6789]|V8Q|V8 SE|V9 VITA|X7|A(310?|320|460|465|475|510|520|530|602|51|30|3)|V580|V Ultra|Q Lux)|N9[15]8St|N818S|N951[0579]|N91[38]0|N9101|N913[267]|N952[01]|N9560|N9810|N799D|[UV]9180|[UV]9815|Z(?:5151V|610DL|6250CC|6400C|6410S|233V|331|5031O|559DL|6621O|667T|6750M|768G|792|81[25]|818L|82[08]|83[12359]|85[125]|851M|992|(557|71[67]|798|836|861|916)BL|986DL|(232|718|828)TL|(?:233|353|558|717|799|837|862|899|917|963)VL|955A|95[678]|965|97[018]|98[1237]|986U|999|936L)|V769M|Blade Apex2|G (LTE|Lux)|Vec|Z959|V865M|Z3001S|902ZT|KIS II Max|Kis 3|K3DX-V5G|Z930L|Optus X|Blade[ _](A[357] 2019(?:-T)?|A[35] 2020-T|A7S 2020-T|A6 MAX|A0622|X9)|Z3153V|Z836F|Ctyon-A9|602ZT|MO-01[JK]|Z963U|402ZT|P545|P609|P650 Pro|dandelion|901ZT|A00[13]ZT|Z-01K|UZTE (?:GRAND V7|V808)|ZTG01|K8[37]CA|K87CC|VERGATARIO ?5(?:PLUS)?|Axon mini|KIS C341|A[13]03ZT|Z335(?:1S|[23]CA)|Z5156CC|Z5157[VY]|B867RE|MEO Smart A[48]0|SmartA35|P65[10] 2021|Z6201V|Z6252CA|Z6251V?|A2020N3|A2322G|A202ZT|A302ZT|Z719DL|Z5158|Z235[069]|Z245[03]|B2017G|5G UG Phone U23|ATLAS[ _]W|A2121G|A2022|A202[23]P|A0622|A0616|2050RU|Z7540|A2022PG)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)5G UG Phone U23|ZTE 7160N`),
		regexp.MustCompile(`(?i)P651 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 2021(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7530N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9040N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9042N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7531N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2122H(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)602ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A001ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A003ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A103ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A202ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A302ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)901ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A303ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTG01(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)7543N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T221(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0616(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3352CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3353CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ]A(3[13])[_ ]?(?:Plus|\+)`),
		regexp.MustCompile(`(?i)(?:A7020(?:RU)?|Blade A7S 2020-T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6252CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A7030|A71 5G`),
		regexp.MustCompile(`(?i)Z5157[VY]`),
		regexp.MustCompile(`(?i)A0722(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6201V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade 10 Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6251V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)? (?:2050|V1050)(?:RU)?`),
		regexp.MustCompile(`(?i)ZTE Axon 7(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2019G? Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:902ZT|A2020N[23] Pro|A2020N3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2020 SP(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:A2021[LGH]?|ZTE Axon 11 5G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2021E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9000N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A2322|A2022L`),
		regexp.MustCompile(`(?i)A2023G?`),
		regexp.MustCompile(`(?i)ZTE[ _]?9047`),
		regexp.MustCompile(`(?i)N799D(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z818L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3001S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z3351S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Ctyon-A9(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K3DX-V5G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE)?N918St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N958St(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9101(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z963U(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9120(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5156CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5158(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9130(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9132(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9136(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9137(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5151V(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9517(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z559DL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)402ZT(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?Blade[ _]Q[ _]Lux(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T320(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9519(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9521(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N9810(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9180(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[UV]9815(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]Blade[_ ](C2|V7)[_ ]Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[_ ])?BA521`),
		regexp.MustCompile(`(?i)(?:ZTE_)?V829`),
		regexp.MustCompile(`(?i)V970M?|V987`),
		regexp.MustCompile(`(?i)Z959(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:[RV]880H|V965)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z95[67]`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Grand[ _]Era`),
		regexp.MustCompile(`(?i)Z331(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)N818S(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[_ ]V0840(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z5031O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P545(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P609(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Optus X Start(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BA520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A(5[12]) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L2 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade[ _]L2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3 Apex(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T610(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]Blade L4 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade L5 Plus|BLADE L0510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade L(\d+)(?:RU)?`),
		regexp.MustCompile(`(?i)Blade A([357]) (20(?:19|20))`),
		regexp.MustCompile(`(?i)ZTE BV0720(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A[35] 2020-T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE C880A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade A([35]1?) Lite`),
		regexp.MustCompile(`(?i)Blade A(53) Pro`),
		regexp.MustCompile(`(?i)Blade (S6|A[35]1?) Plus`),
		regexp.MustCompile(`(?i)(?:ZTE[ _])?BLADE[ _]A062[02](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:A6 MAX|A0605)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)A0622(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6 Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE A5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T920(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[ _]T617(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[ _])?Blade[ _]L(210|130)`),
		regexp.MustCompile(`(?i)(?:ZTE_)?Blade_A5_2019`),
		regexp.MustCompile(`(?i)BLADE V Ultra(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V6 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V7 Lite|V0720)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0710(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([67])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)9050N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8050(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8150N(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE 8550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BV0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[ _])?Blade V1000|(?:ZTE_)?V1000`),
		regexp.MustCompile(`(?i)Z6750M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade X([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T630(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE T520(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade (?:V8Q|V0840)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V8 SE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE (?:V0850|V8 Mini)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0920|ZTE-V9VITA`),
		regexp.MustCompile(`(?i)Blade V(9|10) Vita(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade V([89]|10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BLADE V0820(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Blade[ _])?(Apex2|G (LTE|Lux)|Vec)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z768G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z717[BV]L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z233VL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z798BL|Z799VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z792`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z812`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z719DL`),
		regexp.MustCompile(`(?i)(?:ZTE-)?Z7540`),
		regexp.MustCompile(`(?i)Z851(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z836BL|Z837VL|Z836F)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z861BL|Z862VL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Z958|Z955A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)dandelion(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6250CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZTE[-_])?Z992`),
		regexp.MustCompile(`(?i)(?:Z999|Z-01K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B201[56]|Axon mini`),
		regexp.MustCompile(`(?i)A2017[GU]?`),
		regexp.MustCompile(`(?i)(?:A2020(?:RU|[GU])? Pro|Axon 10 Pro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V?975|geek`),
		regexp.MustCompile(`(?i)(?:ZTE-)?G-X991`),
		regexp.MustCompile(`(?i)Z936L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MO-01[JK](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V865M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Z6621O(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)P650 Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V769M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO 5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)VERGATARIO5PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE V5 PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)MEO Smart A([48]0)`),
		regexp.MustCompile(`(?i)Smart ?A(35)`),
		regexp.MustCompile(`(?i)ATLAS[ _]W`),
		regexp.MustCompile(`(?i)A2121[GLE]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)B867RE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K83CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K87CC(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K88(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE-K92(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)T1004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AxonPhone ([^;/]+) Build`),
		regexp.MustCompile(`(?i)([a-z0-9]+)_USA_Cricket`),
		regexp.MustCompile(`(?i)ZTE[- ](V98|V96A|V81|V70)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ](A(\d+)C?|L111|V580|E01)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade A53\+`),
		regexp.MustCompile(`(?i)Blade[_ ]V0730(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V0800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Blade[_ ]V1000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE B(A601|A910|A510)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE Blade (A[35]1|A7s|C370)`),
		regexp.MustCompile(`(?i)ZTE BA610T(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZTE[- ]([a-z0-9\-_ ]+) Build`),
		regexp.MustCompile(`(?i)ZTE-(?:G |G-)?([a-z0-9 _]+)`),
		regexp.MustCompile(`(?i)U?ZTE[ _]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)ZYQ-Q88|(Q(?:2602|262[436]|638|2688|272[89]|3022|3623|TAB Tab4|328 m9|328|668)|J77|Q[._](?:Up|Boss P99|Dee R09|Good M9|Hi|Hot|Me|Mate R99|Next|TOP-X8|You))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q\.Up C5`),
		regexp.MustCompile(`(?i)Q\.Up`),
		regexp.MustCompile(`(?i)Q\.Boss P99`),
		regexp.MustCompile(`(?i)Q[._]Dee R09`),
		regexp.MustCompile(`(?i)Q\.Good M9`),
		regexp.MustCompile(`(?i)Q[._]Hi S1`),
		regexp.MustCompile(`(?i)Q[._]Hi`),
		regexp.MustCompile(`(?i)Q[._]Hot P7 3G`),
		regexp.MustCompile(`(?i)Q[._]Hot`),
		regexp.MustCompile(`(?i)Q[._]Me Phone7 3G`),
		regexp.MustCompile(`(?i)Q[._]Me Plus7`),
		regexp.MustCompile(`(?i)Q[._]Me`),
		regexp.MustCompile(`(?i)Q[._]Mate R99`),
		regexp.MustCompile(`(?i)Q[._]Next B7`),
		regexp.MustCompile(`(?i)Q[._]Next J2`),
		regexp.MustCompile(`(?i)Q[._]TOP-X8`),
		regexp.MustCompile(`(?i)Q[._]You`),
		regexp.MustCompile(`(?i)(ZB30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z3211G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZXT-10HL323S|ZXT-10FL323G-PRO)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]|(?:[ ]WIND|ZPAD_1|ZPLAY1_2018|Zpower_(?:Plus|2018))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZATEC[_ ]GRAVITY(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)[ ]WIND(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Zealot(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(THOR 4 Plus|THOR S|THOR PRO)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)THOR (S|4 Plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i) (MC2[27]00|TC15|TC2[01567]|TC5[12567]|TC7[05]x|TC7[57]|TC700H|ET51|MC33|MC93|EC30|EC55|PS20J|VC8300)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TC15|TC2[01567]|TC5[12567]|TC7[05]x|TC7[57]|TC700H|MC33|EC30|EC55)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ET51)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC2[27]00|MC93|PS20J)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(VC8300)`),
		regexp.MustCompile(`(?i)ZEEKER[ _](P10|T100)`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;]+) Build`),
		regexp.MustCompile(`(?i)ZEEMI[ _-]([^/;)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))|(?:AdmireGlam|M72 Smart)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SWADESH\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SENSE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE[_ ]NEO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]CURVE\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]NEO\+`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]DUO`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]SHINE`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]INFINITY`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]Unity`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]STRONG`),
		regexp.MustCompile(`(?i)ADMIRE[_ ]GLORY\+`),
		regexp.MustCompile(`(?i)(M72 Smart)`),
		regexp.MustCompile(`(?i)(Admire[_ ][^/;]+|Cinemax[^/;)]+)(?:Build|\))`),
		regexp.MustCompile(`(?i)Z5007|Z551[679]|Z6001`),
		regexp.MustCompile(`(?i)(?:C-723ULTRA|C-70[13] ?ULTRA)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C-(\d+) ?Ultra`),
		regexp.MustCompile(`(?i)ZFINERY900(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIDOO[ _](H6 Pro|X6 Pro|X9S|Z10|X[1589]|X20 Pro|Z9S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Eon45i)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)KidsLegacyTabPro|Zpad-X8-PRO`),
		regexp.MustCompile(`(?i)ZIOX[_ ]|(?:Astra Viva 4G|Astra (?:(?:NXT|Curve|Young) Pro|(?:Metal|Titan|Young|Curve) 4G|Star|Blaze)|Duo(?:tel|pix)[ _]\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZIOX[_ ]F9[_ ]PRO(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Viva|Titan|Young|Metal|Curve) 4G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (Star|Blaze)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Astra (NXT|Curve|Young) Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Duo(tel|pix)[ _](\w\d{1,2})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)|ZA409`),
		regexp.MustCompile(`(?i)(ZM(?:CK|EM|TFTV|TN)[a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:K101_EEA|K118)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)K(101|118)`),
		regexp.MustCompile(`(?i)Android 8(?:[\d.]*);(?: [\w-]+;)? (LitePro)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LT600T)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO|(?:ZOPO[_ ])?(HERO2|Flash X3|F2_Color5_5|F5_Color_M5|C2_Color_M4|ZP[0-9]{2,}[^/;]+)(?:\)| Build)`),
		regexp.MustCompile(`(?i)(?:ZOPO_C2_MOD|ZP998)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO 9xxQuad(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980[+](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?ZP980(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP952(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)HERO2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP951(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP955(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP950[+h]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:900H?|910)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP(?:800H|810)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP500[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP330(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP370(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F2_Color5_5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)F5_Color_M5(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)C2_Color_M4(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP5(63|86)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP567(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP300[S+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP200[+]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP1790(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZP781(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZOPO[_ ]ONE[_ ]([YXTP])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:ZOPO_)?(Flash X3|X1i|ZP[0-9]{2,}[^/;)]+)(?: Build|\))`),
		regexp.MustCompile(`(?i)Zuum[ _-]|Android 6.+ UNIQ(?: Build|[);])|(?:ROCKET III?|Akus (?:PRO|[ZP]1?)|AURA_Z|COVET|MAGNO(?:-S)?|ONIX(?: S)?|STEDI|STELLAR(?:[ _](?:Z|PRO|[MP]1|M2))?|GRAVITY [ZM]|AURA (?:PLUS JLO|PRO JLO|PRO|X)|COVET_PRO_LITE|RONI|Android.*; (?:GRANT|LIMIT)|Gravity Life|SENS M1|ULTRA Z)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)AKUS ([ZP]1?)`),
		regexp.MustCompile(`(?i)AURA_Z(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)COVET( [XZ])?`),
		regexp.MustCompile(`(?i)MAGNO( C[12]?)?`),
		regexp.MustCompile(`(?i)STELLAR ([MP]\d|Z)`),
		regexp.MustCompile(`(?i)GRAVITY ([MZ])`),
		regexp.MustCompile(`(?i)ROCKET (III?)`),
		regexp.MustCompile(`(?i)Android 6.+; UNIQ(?: Build|[);])`),
		regexp.MustCompile(`(?i)Android.+; LIMIT(?: Build|[);])`),
		regexp.MustCompile(`(?i)Zuum[ _-]([^;/]+) Build`),
		regexp.MustCompile(`(?i)Zuum[ _-]?([^;/)]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ZYNC|(Cloud Z5|Z1000|Z18|Z99|Z99[_ ][23]G|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Z18| DuZ99al Core|Z99[_ ][23]G|Z99 Dual Core|Z99|Z900[_ ]Plus|Z909|Z930[+]|Z930)`),
		regexp.MustCompile(`(?i)(Z1000[^/;]+)Build`),
		regexp.MustCompile(`(?i)Cloud (Z5)`),
		regexp.MustCompile(`(?i)ZYNC Cloud[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)ZYNC[ _]([^;]+)Build`),
		regexp.MustCompile(`(?i)(Desk21T-03)`),
		regexp.MustCompile(`(?i)Allente 1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AS51[2456])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(AL-555|GI-626|OB[_-](?:421|588|728|62[78]))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OB[_-](421|588|728|62[78])`),
		regexp.MustCompile(`(?i)Astro;([A-Z0-9]+);`),
		regexp.MustCompile(`(?i)Decade 53(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BO-(FRSP4|LFSPBS5|LFSP4|LFSPSL4|LFSPBS5|LFSPSL6QCI)`),
		regexp.MustCompile(`(?i)BO-(FRSP4)`),
		regexp.MustCompile(`(?i)Aquaris|bq [^/;]+ Build|BQS[-_]([0-9]{4})|(BQ(ru)?[_ -][0-9]{3,4})|BQ5059|BQ1008G|BQru_BQru-|Edison 3|Smart_TV_BQ|Fnac 10 3G`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5209L|5044)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:6035L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5535L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-6353L`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:5070|6040L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(S|ru)?-(?:6424L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5730L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5731L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-57[46]5L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5533G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5031G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5732L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6430L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-6630L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-9011[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8068L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru)?-(7082)`),
		regexp.MustCompile(`(?i)BQ-7022(G)?`),
		regexp.MustCompile(`(?i)BQ-6200L|BQ-6000L`),
		regexp.MustCompile(`(?i)BQ(?:ru|s)?-6631G`),
		regexp.MustCompile(`(?i)BQ(ru)?[ -]6015L`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5525|6030G|6010G)`),
		regexp.MustCompile(`(?i)BQ-6001L|BQ-6050`),
		regexp.MustCompile(`(?i)BQ-5707G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5700L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5591|551[89]G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5520L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5519L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5540L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5517L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5516L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5515|6868L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5515L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5512L|5528L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5511L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS[_ ]5505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5521|5594)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5508L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5507L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5504(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-6045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4030G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5501(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5500L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5302G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5301(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5300G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(ru|S)?-(?:5211|5020)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5206L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-(?:5204|5050)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5203(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5202(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5201(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5082(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5045L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5047L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5071(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5065|5340)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-5046L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-?(?:5059|5514G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:BQru_)?BQ(?:ru)?-5058(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5057(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:5056|5030)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6042l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5055(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5054(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5052(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-6051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-5045(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:5037|5514L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5035(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5033(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5541L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5032(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5025(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-5022(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5015L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5016G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5012L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5521L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5011(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5010G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5009L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-500[59](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5008L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5007L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5006(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:5005L|5530L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5003L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5002G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5002(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-5001L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-5001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru|S)?-5000(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4800(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4707(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4702(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4701(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:4585|5011G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4583(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4570(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4560(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4555(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4550(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-(?:4526|5004G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4525(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4516(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4515(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4505(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4502(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4501G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4077(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-4072(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[- ]402[68](?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4010(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4009(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4008(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4005(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4004(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-4001G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-4001(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3510(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQS-3503(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1085L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1084L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1082G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1057L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1051G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[-]?1008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Aquaris (M10 FHD|M10 4G|M8)`),
		regexp.MustCompile(`(?i)Aquaris_([AM])4\.5`),
		regexp.MustCompile(`(?i)BQ(?:ru)?[_ -](?:5590|5740G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ[S]?-(?:6016L|5520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:S|ru)?-(?:5701L|5060)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(BQ-7850|BQ-700[12]G|BQ-8002G|BQ-905[12]G|BQ-9702G|BQ-7056G)`),
		regexp.MustCompile(`(?i)BQ-8006G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7062G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1081G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7802G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7008G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7064G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7050G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7000G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7040G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7038G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7005G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7098G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1007(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-1045[G]?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-(?:1054L|1020L)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-7083G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ-8077L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7083(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1056L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1022l(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1024L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7055L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-1025L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BQ(?:ru)?-7081(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Edison 3(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris ([^/);]*)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:bq )?Aquaris`),
		regexp.MustCompile(`(?i)bq ([^/;]+) Build`),
		regexp.MustCompile(`(?i)eNOVA|(?:TAE08N10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(TAE08N10)`),
		regexp.MustCompile(`(?i)eSTAR[_ ](?:Grand|GO\!?|Zoom Quad|Gemini|MINI[_ ]3G|BEAUTY|MOON)|(?:Digni-Smart|MERCURY HD Quad core|MID1020L|takee 1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)eSTAR (Grand|GO\!?) (HD Intel|IPS Intel|IPS|HD|Intel) Quad Core 3G`),
		regexp.MustCompile(`(?i)eSTAR (Zoom Quad|Gemini|GO)`),
		regexp.MustCompile(`(?i)eSTAR GRAND HD quad core( [34]G)?`),
		regexp.MustCompile(`(?i)eSTAR[_ ]MINI[_ ]3G`),
		regexp.MustCompile(`(?i)(MID1020L)`),
		regexp.MustCompile(`(?i)eTouch ?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(Smart-Ex02|Ex-Handy 10)(?: (?:ROW|RUS))?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)EVVOLI[;,]`),
		regexp.MustCompile(`(?i)EVVOLI,([a-z0-9_ -]+),(?:wired|wireless)`),
		regexp.MustCompile(`(?i)(?:Freebox Player Mini|Free_Wi-Kif4G_4G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)hoco[_ -]?([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)iCherry_?`),
		regexp.MustCompile(`(?i)iCherry[ _](C(?:25[1258]|21[16]|110|121|22[01379]|23[03])|X1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Joy|i-Call|(?:Neon[79]|Sygnus|Deox|Elektra (?:M|L|XL|XXL))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra M(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra L(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Elektra XXL(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Neon([79])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Sygnus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Deox(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i-Call ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-Joy ([^;/]+) Build`),
		regexp.MustCompile(`(?i)i-mate ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)i-mobile[ _]?[a-z0-9]+|i-Style|IQ ?(9\.1|5\.5|5\.6A?)`),
		regexp.MustCompile(`(?i)i-mobile (i-note[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-Style ?([^;/)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:i-mobile_)?IQ[ _]XPRO2`),
		regexp.MustCompile(`(?i)(?:i-mobile_)?IQ[ _]BIG2`),
		regexp.MustCompile(`(?i)IQ ?(9\.1|5\.5|5\.6A?|II)`),
		regexp.MustCompile(`(?i)i-mobile (IQ[^/;]*) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9\- ]+) Build`),
		regexp.MustCompile(`(?i)i-mobile(?: )?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)[ _]Build|iBall[_ ]Slide|(?:Snap[_ ]4G2|3G 1026-Q18|6351-Q400i|iT-KSA0003|iT-KSA0012|iT-KSA0066|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Brisk 4G2|Slide[_ ](?:Dazzle[_ ]3500|Skye_03)|Blaze_V4|Wondro 10|Q27 4G|Andi (?:Wink|5G Blink) 4G|Co-Mate|Nova_4G|Brace-X1|DD-1GB|Elan 4G2|Spirit_X2|Cuddle A4)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Snap[_ ]4G2|Avid|Twinkle_i5|Gorgeo[_ ]4GL|Blaze_V4|Wondro 10|Q27 4G|Brisk 4G2|Co-Mate|Nova_4G|Elan 4G2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)6351-Q400i(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)DD-1GB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Slide[_ ]Dazzle[_ ]3500(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)1026-Q18(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Brace-X1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0003(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0066(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iT-KSA0012(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBall[ _]([^;/)]+)(?:[ _]Build|[;)])`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS (Core[^/;]+) Build`),
		regexp.MustCompile(`(?i)AUXUS ([^/;]+) Build`),
		regexp.MustCompile(`(?i)IBRIT_|(?:SI5[12]|i5Plus|POWER_X|Z2Lite|Diamond Pro Max)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IBRIT_I([57])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_POWER6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_Speed Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SI52(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)POWER_X(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iBRIT_AF51(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iData[ _](K1|50|i3AL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NOTEBOOK6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:APACHE G6|iDroid Royal V5|BALR_?X7(?:_PAK)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)BALR_?X7`),
		regexp.MustCompile(`(?i)IFT1018(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iGET SMART|(?:SMART[_ ](?:L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|L11|L3[12]|W[12]0X|W101|W3[12]|W8X|W20[23]|L206)(?:_eea)?|Android 5(?:[\d.]*);(?: [\w-]+;)? (?:S100))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:SMART[_ ])?S100(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART[_ ](L20X|G10[12]|S7[02]|G71|G81[H]?|L10[234]|L11|W[12]0X|W101|W8X|W3[12]|W20[23]|L206|L3[12])`),
		regexp.MustCompile(`(?i)HLQ MAX(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iHunt|One_ Love_|TIT?AN[_ ]P\d+|Like_(3|4U|3_Pro)|X300 Elite|S10_Tank_2019|S10 Tank PRO 2020|S60 Discovery Plus|S60_Discovery_2019|AlienXLite2020|Alien X (?:Lite|Pro)|Alien_X|(?:Titan ?P6000|S[23]0 Ultra ApeX 2021|S21 Ultra 4G 2021|P11000 Pro|Strong Tablet P15000 Pro|Like 11 Panda Pro|Like_Hi10_2021|Like Hi5|S21 Plus 2021|Like_[78]|Cyber DOG 4G|S10 Tank 2020|(?:S100|S90_)Apex|Tablet PC 10 PRO)(?:_EEA)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Strong Tablet (P15000|X) Pro`),
		regexp.MustCompile(`(?i)S10[_ ]Tank[_ ]20(19|20)`),
		regexp.MustCompile(`(?i)Tian[ _]P3000`),
		regexp.MustCompile(`(?i)TITAN_P11000_PRO|P11000 Pro`),
		regexp.MustCompile(`(?i)Titan ?P6000`),
		regexp.MustCompile(`(?i)Like_([378])`),
		regexp.MustCompile(`(?i)S(90|100)_?Apex`),
		regexp.MustCompile(`(?i)S([23]0) Ultra ApeX 2021`),
		regexp.MustCompile(`(?i)S(2[234]) ULTRA`),
		regexp.MustCompile(`(?i)(?:iHunt_)?S(2[234])[ _]PLUS`),
		regexp.MustCompile(`(?i)iHunt ([^;)/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iKoMo ([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(IK-102[58]|IK-1106|IK-7108|IK-787)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Jarvis7_85)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iLA[-_ ](?:Silk|X2?|R1)|R1 Lite)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(R1) Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iLA[-_ ](Silk|X2?|R1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ILEPO[ _](MXQ-4K)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?\d{3}|(ITELL[_ ](?:K3300|K3500N?|K4700)|K3102 WIFI|FIVO (?:PLUS|Lite)|Zed Book G)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)WTAB[ _]?(\d{3}(?:[^;/)]*))(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(ITELL[_ ](?:K3300|K3500N?|K4700))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO PLUS(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIVO Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Vin 5|Vin3 S|Vin3(?: Lite)?|Messi No\.1|Messi 3)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vin ?(3|5)`),
		regexp.MustCompile(`(?i)Messi (No\.1|3)`),
		regexp.MustCompile(`(?i)(i5800C|i6800|Victor(?:_S)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:IMARS VEGA X7|VIVI_8|MILKY_WAY_M2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Revolution A8|muPAD[_ ][KT]10|muPAD10[24]|muPADT7|muPAD 7S)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Revolution A8|muPAD[_ ][KT]10)`),
		regexp.MustCompile(`(?i)muPAD[ _]?(10[24]|T7|7S)`),
		regexp.MustCompile(`(?i)(EX1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(ITP-XD80L)(?: Build|[);])`),
		regexp.MustCompile(`(?i)iNew|(?:V7A|V3 Plus|V3-?E|V3C|FIRE_Tab_6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3C(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3-?E(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V3 Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)V7A(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FIRE_Tab_6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iNew[ -_]([^;/]+) Build`),
		regexp.MustCompile(`(?i)(?:iNO SCOUT 2|SGINO6|iNO S9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iOCEAN|M6752|W180|X7[ _]?S|X8 mini`),
		regexp.MustCompile(`(?i)X7[ _]?S`),
		regexp.MustCompile(`(?i)(M6752|W180) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _-]?([^/;]+) Build`),
		regexp.MustCompile(`(?i)iOCEAN[ _-]?([^);/ ]+)`),
		regexp.MustCompile(`(?i)iOutdoor (X)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iPEGTOP[ _](Z26)`),
		regexp.MustCompile(`(?i)(?:IPRO_K2_3G|Kylin[ _]5\.[05]S?|KYLIN(?:40|50i)|Jade[78]s|Amber[678]S?|Amber[58]S[ _]Pro|Benny10|Phonenix50S|Ruby5S|Zafiro|I9355A|Opal 4S|Perla|S[45]01A|S200M|WAVE 4\.0 II|WAVE 5\.0|MEGA7|SAMBA65S|S501APlus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Kylin_5\.0S`),
		regexp.MustCompile(`(?i)Kylin (5\.[05])`),
		regexp.MustCompile(`(?i)Jade([78])s`),
		regexp.MustCompile(`(?i)WAVE 4\.0 II`),
		regexp.MustCompile(`(?i)WAVE 5\.0`),
		regexp.MustCompile(`(?i)(I9355A|S[45]01A|S200M|Perla)`),
		regexp.MustCompile(`(?i)iQ&T|iQ&amp;T|(?:IFoo (?:U200|H55|S50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:iQ&T|iQ&amp;T) (N8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IFoo (?:U200|H55|S50))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Frog ?One(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(PALADIN EVO)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build|(DX758|DX752|DX752|DX758[ _]?Pro) Build`),
		regexp.MustCompile(`(?i)DX758[ _]?Pro`),
		regexp.MustCompile(`(?i)(DX758|DX752)`),
		regexp.MustCompile(`(?i)iRola ([^/;]+) Build`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|U2|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _-](X11|V[34]|AL101)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iRULU[ _](U2)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)ISWAG[ _]`),
		regexp.MustCompile(`(?i)iSWAG[_ ]ACTIV`),
		regexp.MustCompile(`(?i)iSWAG[_ ]KRONOS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]Lynx`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MEGA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]MANTRA`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEMESIS`),
		regexp.MustCompile(`(?i)iSWAG[_ ]NEO`),
		regexp.MustCompile(`(?i)ISWAG[_ ]VIPER`),
		regexp.MustCompile(`(?i)(?:IS655|IS[35]30)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(IS[35]30)`),
		regexp.MustCompile(`(?i)(IS655)`),
		regexp.MustCompile(`(?i)(I-T60)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel|iNote|GP10X2019(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S665LN?`),
		regexp.MustCompile(`(?i)W6002E?`),
		regexp.MustCompile(`(?i)S663L[NC]`),
		regexp.MustCompile(`(?i)S662LCN?`),
		regexp.MustCompile(`(?i)W5005P?`),
		regexp.MustCompile(`(?i)A509WM?`),
		regexp.MustCompile(`(?i)[LW]6503`),
		regexp.MustCompile(`(?i)L5006[CS]`),
		regexp.MustCompile(`(?i)[LW]6004`),
		regexp.MustCompile(`(?i)itel[ _]A15R`),
		regexp.MustCompile(`(?i)P662LN?`),
		regexp.MustCompile(`(?i)P682LPN?`),
		regexp.MustCompile(`(?i)iNote ([^/;]*)Build`),
		regexp.MustCompile(`(?i)iNote_([a-z0-9\-_]+)`),
		regexp.MustCompile(`(?i)itel-it(1410|1512|1520)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel-it1553(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)S11Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)itel[- ](A14S?|A16 Plus|A44 Power|A23S|A52 Lite)`),
		regexp.MustCompile(`(?i)itel it170([23])`),
		regexp.MustCompile(`(?i)itel A(\d{1,2}) ?Plus`),
		regexp.MustCompile(`(?i)iTel ([^/;)]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)iTel[_ ]([a-z0-9\-_]*)`),
		regexp.MustCompile(`(?i)iTRUCK 7 3G(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(LAMCY (?:L3[05]0|C100|L400)|IVA S6)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)LAMCY (L3[05]0|C100|L400)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)IVA S6(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:(?:733|730|766|930)TPC|769TPC(?:II)?|744TPC plus)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)((?:733|730|766|930)TPC|769TPC(?:II)?)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:Innelo_1|iV 505|Me 1\+|Me 3S|Me [2345]|Android 8(?:[\d.]*);(?: [\w-]+;)? (?:i2_Lite|i2))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)i2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Me 1\+`),
		regexp.MustCompile(`(?i)Me ([2345]S?)`),
		regexp.MustCompile(`(?i)(?:MC401_GWL)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(MC401)_GWL`),
		regexp.MustCompile(`(?i)(IX701)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)iYOU[_ ](M1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(Mi7_HERO_(?:BETA|TAB))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]BETA(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Mi7[_ ]HERO[_ ]TAB(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M10ES11)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(I 618 APP plus\+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)I 618 APP plus\+`),
		regexp.MustCompile(`(?i)ivvi[ _]`),
		regexp.MustCompile(`(?i)ivvi[ _](P60)[_ ](\w\d+)`),
		regexp.MustCompile(`(?i)ivvi[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)mPhone ?([68]|7 Plus|7s)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]|(?:meanIT[ _](?:C[12]|X10|X[126]|MG430|Q[145]|C[18]0C[18]1)|Smartphone_X5)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _]Q1 plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](C[12]|X[126]|MG430|Q[145])(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)meanIT[ _](X[12]0|C[18]0C[18]1)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)mipo[ _]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(Fundroid MB(?:18|216))(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(?:myPhone|myTab)_?[^;/)]+( Build|[);])|(?:FUN|Pocket|Prime)_18x9|Prime3Lite|Prime_4_Lite|Q-Smart_Plus|Q-Smart_III_Plus|Q_Smart_BE|(?:HAMMER_)?AXE[_ ]M[_ ]LTE|Hammer[_ ](?:Axe)|Cube_LTE|C-Smart_pix|SmartView_9\.6_3G|SmartView_(?:[78]|9_6)_(?:LTE|[34]G)|Android 6(?:[\d.]*);(?: [\w-]+;)? Pocket|Pocket_2|LUNA_II`),
		regexp.MustCompile(`(?i)Cube_LTE|Cube 16GB`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?Lite`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun[_ ]?(\d)[_ ]?LTE`),
		regexp.MustCompile(`(?i)(?:myPhone_)?Fun_?([48]|18x9)`),
		regexp.MustCompile(`(?i)(?:HAMMER_)?AXE[_ ]M[_ ]LTE`),
		regexp.MustCompile(`(?i)INFINITY (LTE|3G)`),
		regexp.MustCompile(`(?i)Pocket_2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Pocket(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)myPhone[_ ]Pocket[_ ]Pro`),
		regexp.MustCompile(`(?i)Prime3Lite(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Prime_18x9(_LTE)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q_Smart_BE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Q-Smart_Plus(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SmartView_9[_.]6_3G`),
		regexp.MustCompile(`(?i)myPhone[ _]([^;/)]+)( Build|[;)])`),
		regexp.MustCompile(`(?i)myTab[ _]?([^;/]+)(?: Build|[;)])`),
		regexp.MustCompile(`(?i)(?:nJoy[_ ])?(Deimos 7|Kali_8|Turnus_8|Tityos_10|Arcas_7|Theia_10|Chronos_10)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore_?`),
		regexp.MustCompile(`(?i)neocore_N1G1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore E1-2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)neocore_E1R1(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NEOCORE_E2(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]`),
		regexp.MustCompile(`(?i)NODROPOUT[_ ]([^/;)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)(?:AFTWI001|OK Google TV)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)phoneOne[ -]?([a-z0-9]+)`),
		regexp.MustCompile(`(?i)(?:2000_000170_00)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(43SFSW4M)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Texet|(NaviPad [^/;]*) Build|TM-(?:1046|1058|1057|1067|3000|3200R|3500|400[34]|4071|450[34]|451[30]|4377|4082R|508[34]|550[358]|5010|5017|507[4-7]|5[23]77|6003|6906|702[13]|7055HD|709[69]|9747BT|9758|9751HD|9767|5513|520[410]|507[13]|558[134]|570[23]|7859|8044|9748[ _]3G|9720|7047HD[ _]3G|9757|9740|4982|4515|4083|500[3567]|5571|3204R|5016|8043|7047HD[ _]3G|8041HD|8066|705[23]|7041|8041HD|8051|8048|974[96]|973[78]W|974[170]|9743W|9750HD|7043XD|7049|7887|7037W|702[46])|TB-(771A|711A)|X Point|X-Force[\(-]?TM-5009\)?|X-Plus[\(-]?TM-5577\)?|TM_5011|X-pad (?:AIR 8|iX 7|NAVI 7\.[35]|NAVI 10|SKY 8\.1|STYLE 8|STYLE 10\.1|HIT|LITE 7\.[12]|QUAD (?:7\.2|10|7)|SHINE 8\.1)(?: 3G)?`),
		regexp.MustCompile(`(?i)(NaviPad [^/;]*) Build`),
		regexp.MustCompile(`(?i)X-pad SHINE 8\.1 3G`),
		regexp.MustCompile(`(?i)X-pad QUAD 7\.2 3G`),
		regexp.MustCompile(`(?i)X-pad LITE (7\.[12])`),
		regexp.MustCompile(`(?i)X-pad STYLE 10\.1 3G`),
		regexp.MustCompile(`(?i)(X-pad (?:AIR 8|iX 7) 3G)`),
		regexp.MustCompile(`(?i)TM-7096|X-pad NAVI 7\.3 3G`),
		regexp.MustCompile(`(?i)X-pad NAVI 7\.5 3G`),
		regexp.MustCompile(`(?i)X-pad SKY 8\.1 3G`),
		regexp.MustCompile(`(?i)TM-1046|X-pad NAVI 10 3G`),
		regexp.MustCompile(`(?i)(TM-(?:1057|1067|6906|8043|9748[_ ]3G|9740|9757(?:[_ ]3G)?|7047HD[ _]3G|9747BT|9751HD|702[13]|705[23]|7041|9720|7047HD[_ ]3G|8044|8041HD|973[78]W|9743W|974[710]|9750HD|7043XD|7037W|702[46])|TB-(?:771A|711A|8041HD))`),
		regexp.MustCompile(`(?i)(TM-(?:3000|3200R|400[34]|4083|4377|4504|451[30]|500[35]|5[23]77|5571|3204R|520[04]|5581|5505|5017|507[13-7]|5081|6003|5513))`),
		regexp.MustCompile(`(?i)TM-508(3|4)`),
		regexp.MustCompile(`(?i)TM-558(3|4)`),
		regexp.MustCompile(`(?i)TM-(5016|3500)`),
		regexp.MustCompile(`(?i)TEXET[_ ]IX-MINI`),
		regexp.MustCompile(`(?i)X-Force[\(-]?TM-5009\)?`),
		regexp.MustCompile(`(?i)X-Plus[\(-]?TM-5577\)?`),
		regexp.MustCompile(`(?i)teXet[_ ]X-medium[_ ]plus`),
		regexp.MustCompile(`(?i)Vmobile[ _]`),
		regexp.MustCompile(`(?i)Vmobile[ _](J7)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Vmobile XS Pro(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)OWN[ _]|(?:S4035[ _][34]G|Smart8|SMART PLUS LTE|FUN VALUE (?:4G|Lite)|FUN_VALUE)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FUN ([67])`),
		regexp.MustCompile(`(?i)FUN 5\(4G\)`),
		regexp.MustCompile(`(?i)(?:OWN[ _])?(S3000D|S3010|S3020D|S4010|S4025|S4035[ _][34]G)`),
		regexp.MustCompile(`(?i)FUN[_ ]VALUE(?: 4G)?`),
		regexp.MustCompile(`(?i)Smart ?(8|9)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)SMART PLUS LTE(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FBMD/(?:Aspire E5-421G|Z5WAL|One S1003);`),
		regexp.MustCompile(`(?i)FBMD/Aspire E5-421G;`),
		regexp.MustCompile(`(?i)FBMD/Z5WAL;`),
		regexp.MustCompile(`(?i)FBMD/One S1003;`),
		regexp.MustCompile(`(?i)FBMD/(?:Alienware [0-9]{2,3}R[0-9]{1,2}|Area-51m|R3|R4|Alienware Aurora R[0-9]+(:? [0-9]+)?);`),
		regexp.MustCompile(`(?i)Alienware 15R3;`),
		regexp.MustCompile(`(?i)Alienware 17R4;`),
		regexp.MustCompile(`(?i)Area-51m;`),
		regexp.MustCompile(`(?i)Aurora (R[0-9]+)`),
		regexp.MustCompile(`(?i)FBMD/(?:K50IN|K54L|T100HAN|T103HAF|UX360CAK|X550LB|X553MA|X555LN|X556UQK);`),
		regexp.MustCompile(`(?i)FBMD/K50IN;`),
		regexp.MustCompile(`(?i)FBMD/K54L;`),
		regexp.MustCompile(`(?i)FBMD/T100HAN;`),
		regexp.MustCompile(`(?i)FBMD/T103HAF;`),
		regexp.MustCompile(`(?i)FBMD/UX360CAK;`),
		regexp.MustCompile(`(?i)FBMD/X550LB;`),
		regexp.MustCompile(`(?i)FBMD/X553MA;`),
		regexp.MustCompile(`(?i)FBMD/X555LN;`),
		regexp.MustCompile(`(?i)FBMD/X556UQK;`),
		regexp.MustCompile(`(?i)FBMD/(?:Latitude E4300|Inspiron 3541|XPS 15 95[35]0);`),
		regexp.MustCompile(`(?i)FBMD/((?:Compaq|HP) |23-f364)`),
		regexp.MustCompile(`(?i)HP EliteBook (25[67]0p)`),
		regexp.MustCompile(`(?i)HP ProBook (440 G5|6[35]60b)`),
		regexp.MustCompile(`(?i)FBMD/(?:37021C5|80E5|80SM|80VR);`),
		regexp.MustCompile(`(?i)FBMD/37021C5;`),
		regexp.MustCompile(`(?i)FBMD/80E5;`),
		regexp.MustCompile(`(?i)FBMD/80SM;`),
		regexp.MustCompile(`(?i)FBMD/80VR;`),
		regexp.MustCompile(`(?i)FBMD/SCL141CTP;`),
		regexp.MustCompile(`(?i)FBMD/TH360R12\.32CTW;`),
		regexp.MustCompile(`(?i)Satellite (A[25]00|C650|C855|L650|S855)`),
		regexp.MustCompile(`(?i)Satellite ([^;\)]+);`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod1[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod2[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod3[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod4[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod5[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod7[C,_]?1`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod9[C,_]?1|iPodTouch7`),
		regexp.MustCompile(`(?i)(?:Apple-)?iPod`),
		regexp.MustCompile(`(?i)COWON ([^;/]+) Build`),
		regexp.MustCompile(`(?i)Diofox[ _](M8)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)FiiO M(11S|1[157]|6)`),
		regexp.MustCompile(`(?i)KuGou[_ -](P5)`),
		regexp.MustCompile(`(?i)MECHEN[- _]([^;/)]+)[- _]Pro(?: Build|[);])`),
		regexp.MustCompile(`(?i)MECHEN[- _]([^;/)]+)(?: Build|[);])`),
		regexp.MustCompile(`(?i)Oilsky (M501|M303)(?:-Pro)?(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(M501|M303)`),
		regexp.MustCompile(`(?i)(SV-MV100)`),
		regexp.MustCompile(`(?i)YP-(G[SIPB]?1|G[57]0|GB70D)`),
		regexp.MustCompile(`(?i)YP-G[B]?1`),
		regexp.MustCompile(`(?i)Shanling (M6\(21\))`),
		regexp.MustCompile(`(?i)(Y57A)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)(SLTDVD102[34])`),
		regexp.MustCompile(`(?i)(DV-PTB1080)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Erisson[_ ]Shell`),
		regexp.MustCompile(`(?i)ALDINORD[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ALDISUED[;,)]`),
		regexp.MustCompile(`(?i)ALDISUED, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(LE(?:32|43)S5970(?:s)?-(?:20|28|30)|LE55U7970-30|LE43S5977-20|U60856|S50856)`),
		regexp.MustCompile(`(?i)AOC;([a-z0-9_ \-/]+);`),
		regexp.MustCompile(`(?i)ARRIS[;,)]`),
		regexp.MustCompile(`(?i)LGE/XianYou/AWOX; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)LGE/ATMACA/AXEN; ([a-z0-9]+)-`),
		regexp.MustCompile(`(?i)AYA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Airties; ?([^);/]+)`),
		regexp.MustCompile(`(?i)LGE/SQY/RCA; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)Altech UEC; ?([^);/]+)`),
		regexp.MustCompile(`(?i)ALTIMO[;,]`),
		regexp.MustCompile(`(?i)Altus[;,)]`),
		regexp.MustCompile(`(?i)Amazon.+AMZ`),
		regexp.MustCompile(`(?i)Amazon.+AMZ-([a-z0-9_ -]+)_Build_`),
		regexp.MustCompile(`(?i)ATLANTIC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Beko[;,)]`),
		regexp.MustCompile(`(?i)Blaupunkt_UMC[;,)]`),
		regexp.MustCompile(`(?i)Botech[;,)]`),
		regexp.MustCompile(`(?i)(ATV R[12])`),
		regexp.MustCompile(`(?i)BUSH[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CLAYTON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CECOTEC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CELCUS[;,)]`),
		regexp.MustCompile(`(?i)Changhong; ?([^);/]+)`),
		regexp.MustCompile(`(?i)CONTINENTAL_EDI[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)CROWN[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Cultraview690[;,]`),
		regexp.MustCompile(`(?i)LaTivu_(?:\d+[.\d]+)_([0-9]{4})`),
		regexp.MustCompile(`(?i)LGE/SILICONPLAYER/DIJITSU; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)DIKOM[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)DIORA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Daewoo[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)DIGIHOME[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)EAS_ELECTRIC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)EGL[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ELECTRONIA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ENDURO[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)EDENWOOD[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ELEKTROLAND[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)ESSENTIELB[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Expressluck[;,)]`),
		regexp.MustCompile(`(?i)([24]K)TV`),
		regexp.MustCompile(`(?i)FU[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FINIX[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FITCO, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)FUJICOM[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FINLUX[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FUEGO[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)FUNAI[;,)]`),
		regexp.MustCompile(`(?i)GN_ELECTRONICS[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)GOGEN[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)GRAETZ[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(OWB|(?:Amazon.+)?Grundig)`),
		regexp.MustCompile(`(?i)Amazon.+Grundig-([a-z0-9_ -]+)_Build_`),
		regexp.MustCompile(`(?i)HIGH_ONE[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HOFER[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HUMELAB[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:HHW_)?HAIER`),
		regexp.MustCompile(`(?i)HANSEATIC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HI-LEVEL[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Hisense|Eurofins_Digital_Testing`),
		regexp.MustCompile(`(?i)(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)`),
		regexp.MustCompile(`(?i)(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})`),
		regexp.MustCompile(`(?i)SmartTV_([0-9]{4})_`),
		regexp.MustCompile(`(?i)Hitachi[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HORIZON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)HOTEL[;,)]`),
		regexp.MustCompile(`(?i)Humax|hdr1000s`),
		regexp.MustCompile(`(?i)(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)`),
		regexp.MustCompile(`(?i)Humax; ([^);/]+)`),
		regexp.MustCompile(`(?i)HYUNDAI[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(Vantage|VT-100|VT-1)`),
		regexp.MustCompile(`(?i)inverto; ([^);/]+)`),
		regexp.MustCompile(`(?i)(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)`),
		regexp.MustCompile(`(?i)AFTSO001|JVC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)KUBO[;,)]`),
		regexp.MustCompile(`(?i)KALLEY[;,)]`),
		regexp.MustCompile(`(?i)KENDO[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)KYDOS[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE ?;`),
		regexp.MustCompile(`(?i)KEY000000(2E|2F|3B|3F)`),
		regexp.MustCompile(`(?i)(NetCast [0-9]{1}\.[0-9]{1}|GLOBAL_PLAT3)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z][0-9][A-Z](?:-Z)?)`),
		regexp.MustCompile(`(?i)(OLED[0-9]{2}[A-Z0-9]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}[A-Z]{2}[0-9]{4}[A-Z0-9]{1}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)([0-9]{2}NANO[0-9]{2})`),
		regexp.MustCompile(`(?i)LGE;? (?:HOTEL\-TV; )?([0-9]{2}[a-z0-9]{4,9}(?:\-[a-z]{2,3})?)`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)`),
		regexp.MustCompile(`(?i)LGE;? ?([0-9]{2}QNED[0-9]{3}[A-Z]{2})`),
		regexp.MustCompile(`(?i)LAURUS[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LENCO[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Lifemaxx[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LINSAR[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Loewe[^$]`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{3})`),
		regexp.MustCompile(`(?i)DIXONS-LOGIK[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LUXOR[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)MEGA_VISION[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)MStar[;,)]`),
		regexp.MustCompile(`(?i)([24])KTV18`),
		regexp.MustCompile(`(?i)MTC[;,)]`),
		regexp.MustCompile(`(?i)([24])K_Android_TV_V01`),
		regexp.MustCompile(`(?i)MEDION, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Metz; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)MITCHELL_BROWN[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)MYROS[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NABO[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NEXON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NEXT[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NILAIT[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NORMANDE[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NAVON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NEO, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)NOKIA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)NORDMENDE[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)OCEANIC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:SILICONPLAYER|XianYou)/ONVO`),
		regexp.MustCompile(`(?i)(?:SILICONPLAYER|XianYou)/ONVO; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)ORAVA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Philips.+([0-9]{2}H[FHOU][HKLST][0-9]{4}[^),;]+)`),
		regexp.MustCompile(`(?i)PROFILO[;,)]`),
		regexp.MustCompile(`(?i)Profilo[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)PROSONIC[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VIERA (201[1-9])`),
		regexp.MustCompile(`(?i)(DIGA [A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)DIGA Webkit ([A-Z]{1}[0-9]{4})`),
		regexp.MustCompile(`(?i)SmartTV(201[89]|202[0-2])`),
		regexp.MustCompile(`(?i)Panasonic\..+\.([0-9]{4})(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Panasonic;Viera([0-9]{4});`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9_]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:Philips|TPVision)|NETTV/`),
		regexp.MustCompile(`(?i)(?:Philips|TPVision)[,;](?: |Philips;)?([^),;]+)`),
		regexp.MustCompile(`(?i)NETTV/[0-9.]{5}`),
		regexp.MustCompile(`(?i)POLAROID[;,)]`),
		regexp.MustCompile(`(?i)QILIVE[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)RCA;`),
		regexp.MustCompile(`(?i)RCA; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)REGAL[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SCHAUB_LORENZ[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SCHONTECH[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SEG[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SEHMAX[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)SULPICE_TV[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Saba[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Salora(?:_cx)?[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)Samsung.*Smart\s*TV|Tizen.*TV|Maple_2011`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-4]):([^);/]+)`),
		regexp.MustCompile(`(?i)SmartTV(201[2-9]|202[0-4])`),
		regexp.MustCompile(`(?i)Selevision; (?:Selevision )?([^);/]+)`),
		regexp.MustCompile(`(?i)(EMC1000i)`),
		regexp.MustCompile(`(?i)(?:UMC-)?Sharp`),
		regexp.MustCompile(`(?i)SHARP, ([a-z0-9_ -]+), (?:wired|wireless)`),
		regexp.MustCompile(`(?i)Sharp-([^);/]+)`),
		regexp.MustCompile(`(?i)Sharp[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)(LE[0-9]{3}[A-Z]{0,3})`),
		regexp.MustCompile(`(?i)LC-([^);/,]+)`),
		regexp.MustCompile(`(?i)SILVA_SCHNEIDER[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE/WALTON/SKYTECH; ([a-z0-9-]+);`),
		regexp.MustCompile(`(?i)Sky_?worth|SKW690|SWTV[;,)]`),
		regexp.MustCompile(`(?i)Sky_worth;([^);/]+)`),
		regexp.MustCompile(`(?i)LaTivu_(?:\d+[.\d]+)_([0-9]{4})`),
		regexp.MustCompile(`(?i)Smart[;,)]`),
		regexp.MustCompile(`(?i)Smart; ([^);/]+)`),
		regexp.MustCompile(`(?i)([A-Z]{2}[0-9]{2}|ZAPPIX)`),
		regexp.MustCompile(`(?i)SOLAS[;,]`),
		regexp.MustCompile(`(?i)(KDL-GR[12])`),
		regexp.MustCompile(`(?i)KDL-GN([56])`),
		regexp.MustCompile(`(?i)(?:BRAVIA )(2K GB ATV3|[48]K UR[123]|4K GB ATV3|4K GB|4K VH2|4K 2015|2015|VH1|VU1)(?:[);/ ]|VH1|4K VH2|$)`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1}[0-9]{4}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1}[0-9]{3}[A-Z]{1})`),
		regexp.MustCompile(`(?i)(K[DM]L?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})`),
		regexp.MustCompile(`(?i)STAR LIGHT[;,)]`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY; ([a-z0-9]+)-`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY.+(2018)\)`),
		regexp.MustCompile(`(?i)(?:ATMACA|XianYou)/SUNNY;`),
		regexp.MustCompile(`(?i)TALBERG[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:Amazon.+)?TCL`),
		regexp.MustCompile(`(?i)(32D1820|(?:39|55)D2900|32D2930|(?:32|43)S4900)`),
		regexp.MustCompile(`(?i)TCL[,;] ?([^),;/]+)`),
		regexp.MustCompile(`(?i)Amazon.+TCL-([a-z0-9_ -]+)_Build_`),
		regexp.MustCompile(`(?i)SCBC[;,)]|_TV_[A-Z0-9_]+_TCL_SCBC`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_TCL_SCBC_Tbrowser_2k20`),
		regexp.MustCompile(`(?i)TDSystems[;,)]`),
		regexp.MustCompile(`(?i)SmartTV(2019|2020)`),
		regexp.MustCompile(`(?i)TOKYO[;,)]`),
		regexp.MustCompile(`(?i)TUCSON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)TECHNIKA[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)([A-Z]{1}-[0-9]{3})`),
		regexp.MustCompile(`(?i)Techwood[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)THOMSON[,]?|THOM`),
		regexp.MustCompile(`(?i)(TB28D19DHS-01|T28D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T32RTM5040|T32D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T43FSL5031|T43D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T40D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T49D18SFS-01B)`),
		regexp.MustCompile(`(?i)(T55D18[SD]FS-01B)`),
		regexp.MustCompile(`(?i)Toptech690[;,]`),
		regexp.MustCompile(`(?i)LaTivu_(?:\d+[.\d]+)_([0-9]{4})`),
		regexp.MustCompile(`(?i)(?:Amazon.+)?Toshiba`),
		regexp.MustCompile(`(?i)(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})`),
		regexp.MustCompile(`(?i)Amazon.+Toshiba-([a-z0-9_ -]+)_Build_`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)THTF_CVTE[;,)]`),
		regexp.MustCompile(`(?i)TURBO-?X[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)UNITED[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)OEM, ([a-z0-9_ -]+), (?:wired|wireless)|_TV_[A-Z0-9]+_([0-9]{4});|LaTivu_(?:\d+[.\d]+)_([0-9]{4})`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LaTivu_(?:\d+[.\d]+)_([0-9]{4})`),
		regexp.MustCompile(`(?i)VANGUARD[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VORTEX[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)VOX[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)(?:Vestel.+VESTEL|(?:BBC_CUSTOMERS|VESTEL)[;,)])`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)videoweb|tv2n`),
		regexp.MustCompile(`(?i)(tv2n)`),
		regexp.MustCompile(`(?i)(videowebtv)`),
		regexp.MustCompile(`(?i)VISITECH[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WELLINGTON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WONDER[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WALKER[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WALTHAM[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)WeByLoewe[;,)]`),
		regexp.MustCompile(`(?i)X-VISION[;,)]`),
		regexp.MustCompile(`(?i)XGEM[;,)]`),
		regexp.MustCompile(`(?i)XGEM[;,)] ?([a-z0-9]+)(?:[);/ ]|$)`),
		regexp.MustCompile(`(?i)Amazon.+Xiaomi`),
		regexp.MustCompile(`(?i)Amazon.+Xiaomi-([a-z0-9_ -]+)_Build_`),
		regexp.MustCompile(`(?i)ANDERSSON[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)coocaa[;,)]`),
		regexp.MustCompile(`(?i)coocaa; ([a-z0-9]+);`),
		regexp.MustCompile(`(?i)ELIT[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)OK[;,)]`),
		regexp.MustCompile(`(?i)_TV_[A-Z0-9]+_([0-9]{4});`),
		regexp.MustCompile(`(?i)LGE/WALTON/SIMFER; ([a-z0-9]+);`),
	}
	__dr_buf = []byte{
		0x4e, 0x69, 0x6b, 0x6f, 0x6e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x70,
		0x69, 0x78, 0x20, 0x53, 0x38, 0x30, 0x30, 0x63, 0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67, 0x45,
		0x4b, 0x2d, 0x47, 0x4e, 0x31, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x58,
		0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x31, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20,
		0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x4b, 0x2d, 0x47, 0x43, 0x32, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x24, 0x31, 0x42, 0x4d, 0x57, 0x63, 0x61,
		0x72, 0x20, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x4a, 0x65, 0x65, 0x70, 0x57, 0x61, 0x67, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4d,
		0x41, 0x43, 0x20, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x4d, 0x61, 0x63, 0x20, 0x41, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x70, 0x72, 0x6f, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x65, 0x73, 0x6c, 0x61, 0x51, 0x74, 0x43, 0x61, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
		0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x53, 0x54, 0x6f, 0x70, 0x77, 0x61, 0x79, 0x73, 0x70, 0x39,
		0x38, 0x35, 0x33, 0x69, 0x5f, 0x31, 0x68, 0x31, 0x30, 0x5f, 0x76, 0x6d, 0x6d, 0x54, 0x53, 0x39,
		0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x47, 0x61, 0x6d,
		0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x58, 0x44, 0x4a, 0x58, 0x44, 0x5f, 0x53, 0x36,
		0x30, 0x31, 0x57, 0x49, 0x46, 0x49, 0x53, 0x36, 0x30, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x58, 0x62, 0x6f, 0x78, 0x58, 0x62, 0x6f, 0x78,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x58, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x58, 0x42, 0x4f, 0x58, 0x5f,
		0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x58, 0x62, 0x6f, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53,
		0x58, 0x62, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x4e, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x6f,
		0x24, 0x31, 0x4f, 0x55, 0x59, 0x41, 0x52, 0x65, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x50, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x74, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x61, 0x6e, 0x79, 0x6f, 0x41, 0x70, 0x6c, 0x69, 0x78, 0x5f, 0x53,
		0x41, 0x4e, 0x59, 0x4f, 0x33, 0x44, 0x4f, 0x20, 0x54, 0x52, 0x59, 0x53, 0x65, 0x67, 0x61, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x41, 0x70, 0x6c, 0x69, 0x78, 0x5f, 0x53, 0x45,
		0x47, 0x41, 0x53, 0x41, 0x54, 0x55, 0x52, 0x4e, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x6f,
		0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x50,
		0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x20, 0x50, 0x52, 0x4f,
		0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x50, 0x6c,
		0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x31, 0x30, 0x6d, 0x6f,
		0x6f, 0x6e, 0x73, 0x74, 0x76, 0x32, 0x45, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x45, 0x35, 0x30, 0x30, 0x41, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x34, 0x35,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x33, 0x36, 0x30, 0x4e, 0x37, 0x4e, 0x37, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x36, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4e, 0x36, 0x4e, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x34, 0x4e, 0x35, 0x4e, 0x34, 0x41, 0x4e, 0x35, 0x53, 0x4e, 0x34, 0x53, 0x33, 0x47, 0x4e,
		0x45, 0x54, 0x54, 0x39, 0x30, 0x30, 0x33, 0x47, 0x4f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41,
		0x70, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x33, 0x51, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x50, 0x2d,
		0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x51, 0x2d, 0x50, 0x61, 0x64, 0x51, 0x6f, 0x6f,
		0x21, 0x20, 0x53, 0x75, 0x72, 0x66, 0x54, 0x53, 0x39, 0x37, 0x30, 0x38, 0x42, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x54, 0x53, 0x31, 0x30, 0x30, 0x39, 0x42, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x51, 0x6f, 0x6f, 0x21, 0x20,
		0x51, 0x2d, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x6f, 0x6f, 0x21, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x34, 0x47, 0x6f, 0x6f, 0x64, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x50, 0x65, 0x6f, 0x70, 0x6c,
		0x65, 0x4b, 0x49, 0x44, 0x53, 0x20, 0x53, 0x34, 0x35, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x53, 0x34,
		0x35, 0x34, 0x69, 0x66, 0x65, 0x35, 0x49, 0x56, 0x45, 0x54, 0x61, 0x72, 0x7a, 0x61, 0x6e, 0x20,
		0x46, 0x31, 0x37, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x77, 0x65, 0x67, 0x75, 0x65,
		0x44, 0x52, 0x45, 0x4e, 0x41, 0x44, 0x72, 0x65, 0x6e, 0x61, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x5f,
		0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x20, 0x32, 0x4b, 0x61, 0x6d, 0x62, 0x61, 0x38, 0x38, 0x34,
		0x38, 0x41, 0x26, 0x4b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x41, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x30, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x32, 0x31,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x45, 0x63, 0x6f, 0x41, 0x31, 0x20, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x41, 0x39, 0x35, 0x58, 0x41, 0x39, 0x35, 0x58, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46, 0x33, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x46, 0x33, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x61, 0x78, 0x2b, 0x41, 0x39,
		0x35, 0x58, 0x5f, 0x46, 0x33, 0x41, 0x69, 0x72, 0x5f, 0x49, 0x49, 0x46, 0x33, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x49, 0x49, 0x41, 0x39, 0x35, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78, 0x41,
		0x39, 0x35, 0x58, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x35, 0x58, 0x20, 0x46,
		0x33, 0x20, 0x41, 0x69, 0x72, 0x46, 0x33, 0x20, 0x41, 0x69, 0x72, 0x5a, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x41, 0x55, 0x57, 0x4d, 0x35, 0x30, 0x41, 0x45, 0x45, 0x5a, 0x4f, 0x41, 0x46,
		0x46, 0x49, 0x58, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75,
		0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x41,
		0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x47, 0x4d, 0x47, 0x6f, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x24, 0x31, 0x41, 0x39, 0x41, 0x47, 0x4d, 0x5f,
		0x48, 0x5f, 0x4d, 0x41, 0x58, 0x48, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x33, 0x48, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x50, 0x24, 0x31, 0x41, 0x49, 0x44, 0x41, 0x54, 0x41, 0x41,
		0x44, 0x54, 0x20, 0x31, 0x30, 0x36, 0x31, 0x41, 0x44, 0x54, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x41,
		0x44, 0x54, 0x20, 0x31, 0x30, 0x31, 0x32, 0x4c, 0x45, 0x4c, 0x44, 0x45, 0x20, 0x31, 0x30, 0x41,
		0x49, 0x52, 0x4f, 0x4e, 0x41, 0x69, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x38, 0x53, 0x41, 0x49, 0x53, 0x69, 0x72, 0x69, 0x73, 0x37, 0x30, 0x38, 0x4c, 0x41, 0x56, 0x41,
		0x20, 0x50, 0x52, 0x4f, 0x20, 0x34, 0x2e, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6d, 0x6d,
		0x20, 0x43, 0x35, 0x30, 0x30, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x33, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x4e, 0x4f, 0x52,
		0x44, 0x41, 0x4c, 0x44, 0x49, 0x20, 0x53, 0xc3, 0x9c, 0x44, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x6d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x41, 0x4d, 0x41, 0x41, 0x4d, 0x43,
		0x56, 0x41, 0x4d, 0x47, 0x4f, 0x4f, 0x41, 0x4d, 0x33, 0x35, 0x30, 0x4a, 0x61, 0x63, 0x6b, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x69, 0x67, 0x6f, 0x41, 0x4d, 0x34, 0x30, 0x32, 0x50, 0x72, 0x6f, 0x6e,
		0x74, 0x6f, 0x41, 0x4d, 0x34, 0x31, 0x30, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x41, 0x4d, 0x34, 0x35,
		0x30, 0x53, 0x77, 0x69, 0x66, 0x74, 0x41, 0x4d, 0x35, 0x30, 0x38, 0x46, 0x75, 0x65, 0x67, 0x6f,
		0x41, 0x4d, 0x35, 0x30, 0x39, 0x55, 0x6e, 0x6f, 0x41, 0x4d, 0x35, 0x31, 0x35, 0x44, 0x31, 0x41,
		0x4d, 0x35, 0x31, 0x38, 0x43, 0x31, 0x41, 0x4d, 0x35, 0x32, 0x30, 0x41, 0x4d, 0x35, 0x32, 0x33,
		0x41, 0x4d, 0x35, 0x32, 0x37, 0x47, 0x65, 0x6f, 0x41, 0x4d, 0x35, 0x33, 0x30, 0x41, 0x4d, 0x35,
		0x33, 0x35, 0x50, 0x31, 0x41, 0x4d, 0x24, 0x31, 0x41, 0x4e, 0x42, 0x45, 0x52, 0x4e, 0x49, 0x43,
		0x41, 0x4e, 0x43, 0x45, 0x4c, 0x41, 0x4e, 0x53, 0x55, 0x4c, 0x34, 0x30, 0x41, 0x4e, 0x53, 0x2f,
		0x4c, 0x35, 0x31, 0x4c, 0x35, 0x31, 0x41, 0x43, 0x4b, 0x32, 0x33, 0x32, 0x36, 0x41, 0x72, 0x74,
		0x69, 0x61, 0x41, 0x4e, 0x58, 0x4f, 0x4e, 0x49, 0x54, 0x41, 0x4f, 0x43, 0x41, 0x4f, 0x59, 0x4f,
		0x44, 0x4b, 0x47, 0x41, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x64, 0x69,
		0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x54, 0x49, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x41, 0x52, 0x52,
		0x49, 0x53, 0x41, 0x53, 0x53, 0x45, 0x41, 0x54, 0x26, 0x54, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c,
		0x61, 0x72, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20,
		0x46, 0x6c, 0x65, 0x78, 0x20, 0x32, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x20, 0x49, 0x56, 0x45, 0x41, 0x32, 0x31, 0x31, 0x30, 0x30, 0x35, 0x46, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x47, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x41,
		0x32, 0x31, 0x31, 0x30, 0x30, 0x31, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x35, 0x47, 0x41, 0x78, 0x69, 0x61, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x43,
		0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20, 0x32, 0x43, 0x61, 0x6c, 0x79, 0x70, 0x73, 0x6f, 0x20,
		0x33, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x4d, 0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x61, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x33, 0x45, 0x41, 0x32, 0x31, 0x31, 0x30, 0x30, 0x32,
		0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61,
		0x74, 0x65, 0x20, 0x33, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x34, 0x4d, 0x6f,
		0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x69, 0x73, 0x74, 0x61, 0x50,
		0x72, 0x6f, 0x70, 0x65, 0x6c, 0x20, 0x35, 0x47, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x5a,
		0x41, 0x54, 0x4d, 0x41, 0x4e, 0x41, 0x54, 0x4d, 0x50, 0x43, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x41,
		0x54, 0x4f, 0x4c, 0x70, 0x65, 0x72, 0x69, 0x70, 0x68, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x53, 0x6c, 0x69, 0x6d, 0x5f, 0x70, 0x6c,
		0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x55, 0x50, 0x4f, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x55, 0x52, 0x49, 0x53, 0x41, 0x55, 0x58, 0x41, 0x56, 0x48, 0x45, 0x78, 0x63, 0x65, 0x72,
		0x20, 0x47, 0x35, 0x2e, 0x24, 0x31, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20, 0x47, 0x35, 0x45, 0x78,
		0x63, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x72, 0x20,
		0x38, 0x41, 0x57, 0x4f, 0x58, 0x41, 0x58, 0x45, 0x4e, 0x41, 0x58, 0x58, 0x41, 0x41, 0x59, 0x59,
		0x41, 0x41, 0x79, 0x61, 0x74, 0x31, 0x30, 0x31, 0x41, 0x79, 0x61, 0x74, 0x20, 0x31, 0x30, 0x31,
		0x41, 0x5a, 0x4f, 0x4d, 0x52, 0x69, 0x76, 0x65, 0x72, 0x20, 0x31, 0x41, 0x63, 0x63, 0x65, 0x6e,
		0x74, 0x4e, 0x65, 0x6f, 0x6e, 0x4e, 0x75, 0x62, 0x69, 0x61, 0x20, 0x24, 0x31, 0x43, 0x61, 0x6d,
		0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x43, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x20, 0x24, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x50, 0x65,
		0x61, 0x72, 0x6c, 0x20, 0x41, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x65, 0x61, 0x72, 0x6c,
		0x20, 0x41, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20, 0x41, 0x24,
		0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x50, 0x35, 0x35, 0x46, 0x41, 0x53, 0x54, 0x37, 0x20, 0x33,
		0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x31, 0x30, 0x30, 0x30, 0x4b, 0x69, 0x64, 0x7a, 0x79, 0x20,
		0x37, 0x30, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x41, 0x63, 0x65, 0x42,
		0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x42, 0x75, 0x7a, 0x7a,
		0x20, 0x24, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x42, 0x55, 0x5a, 0x5a, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x42,
		0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24,
		0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x55, 0x5a, 0x5a, 0x20, 0x34, 0x53, 0x42, 0x75, 0x7a, 0x7a, 0x20, 0x34, 0x53,
		0x42, 0x75, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20, 0x24, 0x31,
		0x55, 0x52, 0x42, 0x41, 0x4e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e,
		0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x41, 0x63,
		0x65, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x65, 0x70, 0x61, 0x64, 0x41, 0x31, 0x33, 0x30, 0x20,
		0x28, 0x24, 0x31, 0x29, 0x41, 0x63, 0x65, 0x72, 0x44, 0x41, 0x32, 0x32, 0x30, 0x48, 0x51, 0x4c,
		0x44, 0x41, 0x32, 0x34, 0x31, 0x48, 0x4c, 0x41, 0x34, 0x31, 0x30, 0x5f, 0x34, 0x47, 0x41, 0x34,
		0x31, 0x30, 0x20, 0x34, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x41, 0x54, 0x41, 0x42, 0x24,
		0x31, 0x45, 0x41, 0x43, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x41, 0x43, 0x54, 0x41, 0x42,
		0x24, 0x31, 0x45, 0x54, 0x2d, 0x31, 0x30, 0x38, 0x2d, 0x31, 0x31, 0x41, 0x45, 0x6e, 0x64, 0x75,
		0x72, 0x6f, 0x20, 0x54, 0x31, 0x54, 0x50, 0x41, 0x36, 0x30, 0x57, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x41, 0x31, 0x2d, 0x38, 0x33, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x41, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x53, 0x41,
		0x33, 0x2d, 0x41, 0x32, 0x30, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41,
		0x33, 0x20, 0x46, 0x48, 0x44, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x41, 0x33, 0x49, 0x63,
		0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x49, 0x63, 0x6f, 0x6e, 0x69,
		0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x42, 0x31,
		0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x49, 0x63, 0x6f,
		0x6e, 0x69, 0x61, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20,
		0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41, 0x31, 0x30, 0x31, 0x56, 0x61, 0x6e, 0x67, 0x6f, 0x67,
		0x68, 0x41, 0x32, 0x30, 0x30, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x45, 0x50, 0x69,
		0x63, 0x61, 0x73, 0x73, 0x6f, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20,
		0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x34, 0x47, 0x41, 0x63, 0x65, 0x72, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x37, 0x47, 0x54, 0x2d, 0x38, 0x31, 0x30, 0x50,
		0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x63, 0x65, 0x72, 0x5f, 0x6f, 0x6e,
		0x65, 0x5f, 0x38, 0x5f, 0x54, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x54, 0x32, 0x4f, 0x6e,
		0x65, 0x20, 0x38, 0x20, 0x54, 0x34, 0x2d, 0x38, 0x32, 0x4c, 0x45, 0x4e, 0x44, 0x55, 0x52, 0x4f,
		0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x20, 0x54, 0x24, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x45, 0x37, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
		0x71, 0x75, 0x69, 0x64, 0x20, 0x45, 0x31, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x45, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x45,
		0x33, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x53, 0x31, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
		0x20, 0x53, 0x32, 0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x34, 0x30, 0x30,
		0x6e, 0x65, 0x6f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x33, 0x30, 0x30, 0x6e, 0x65, 0x6f,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x53, 0x32, 0x30, 0x30, 0x62, 0x65, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x45, 0x31, 0x30, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x24, 0x31,
		0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x31, 0x31, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69,
		0x64, 0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x34, 0x20, 0x44, 0x75, 0x6f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65,
		0x20, 0x5a, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x35, 0x33, 0x30, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x36, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a,
		0x36, 0x33, 0x30, 0x53, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x4c,
		0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x69, 0x71,
		0x75, 0x69, 0x64, 0x20, 0x4d, 0x33, 0x33, 0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4d,
		0x32, 0x32, 0x30, 0x41, 0x63, 0x65, 0x72, 0x54, 0x44, 0x36, 0x30, 0x30, 0x54, 0x44, 0x36, 0x30,
		0x30, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x4c, 0x69, 0x71, 0x75,
		0x69, 0x64, 0x20, 0x58, 0x32, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x76,
		0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x72,
		0x61, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x41, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x24, 0x31, 0x41, 0x63, 0x74, 0x65, 0x63, 0x6b, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x41, 0x69,
		0x6b, 0x75, 0x6e, 0x20, 0x41, 0x54, 0x37, 0x32, 0x33, 0x43, 0x42, 0x4c, 0x45, 0x43, 0x4b, 0x42,
		0x6c, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x4c, 0x65, 0x6f, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x64,
		0x72, 0x6f, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20,
		0x33, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x4d, 0x34, 0x4d,
		0x34, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x20, 0x53, 0x34, 0x30, 0x53, 0x34, 0x30, 0x69, 0x37, 0x55,
		0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x69, 0x37, 0x55, 0x53, 0x35, 0x45, 0x20, 0x4e, 0x58,
		0x54, 0x49, 0x24, 0x31, 0x69, 0x34, 0x55, 0x49, 0x34, 0x55, 0x4e, 0x41, 0x53, 0x41, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x41, 0x53, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x41, 0x53, 0x41, 0x47,
		0x35, 0x47, 0x35, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x35, 0x30, 0x20, 0x34, 0x47, 0x47,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x31, 0x43, 0x20, 0x33,
		0x47, 0x45, 0x31, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6b, 0x65, 0x74, 0x73, 0x61, 0x20, 0x32,
		0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x54, 0x52, 0x37, 0x39,
		0x38, 0x39, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x53, 0x50, 0x24, 0x31, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x52, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72,
		0x61, 0x6d, 0x20, 0x48, 0x4c, 0x24, 0x31, 0x48, 0x6f, 0x6c, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d,
		0x20, 0x24, 0x31, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x41, 0x69, 0x72,
		0x41, 0x66, 0x72, 0x69, 0x4f, 0x6e, 0x65, 0x70, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x43, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x43, 0x79, 0x67, 0x6e, 0x75, 0x73, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x5a, 0x32, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x69, 0x6e, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41,
		0x58, 0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x31, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x53, 0x77, 0x6f, 0x72,
		0x64, 0x4e, 0x4f, 0x56, 0x4f, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x76,
		0x6f, 0x20, 0x31, 0x30, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x41, 0x58, 0x31, 0x30, 0x50, 0x52,
		0x4f, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x75,
		0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x41, 0x58, 0x33, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x41, 0x58,
		0x33, 0x20, 0x53, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x79, 0x33, 0x47, 0x54, 0x61, 0x6c,
		0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x4e,
		0x75, 0x6d, 0x79, 0x5f, 0x33, 0x47, 0x5f, 0x42, 0x57, 0x31, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33,
		0x47, 0x20, 0x54, 0x61, 0x6c, 0x6f, 0x73, 0x20, 0x32, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x58, 0x39, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x33, 0x47, 0x20, 0x41, 0x58, 0x31, 0x30,
		0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49, 0x49, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79,
		0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x2d, 0x49, 0x49, 0x52, 0x61, 0x69, 0x6e, 0x62,
		0x6f, 0x77, 0x20, 0x33, 0x47, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f,
		0x77, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x2d, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x6f, 0x37, 0x46,
		0x69, 0x72, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4e, 0x6f,
		0x76, 0x6f, 0x20, 0x37, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37,
		0x20, 0x45, 0x6c, 0x66, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x37, 0x4e, 0x75, 0x6d, 0x79, 0x20, 0x24,
		0x31, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x41, 0x69, 0x72, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x41, 0x69, 0x72, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x45, 0x52, 0x46,
		0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e,
		0x43, 0x45, 0x20, 0x31, 0x30, 0x78, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x31, 0x30, 0x78, 0x41, 0x69, 0x72, 0x69, 0x73, 0x54, 0x4d, 0x35, 0x30, 0x51, 0x5a,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x41, 0x44, 0x20, 0x38, 0x33, 0x47, 0x41, 0x69, 0x72, 0x6e,
		0x65, 0x73, 0x73, 0x41, 0x69, 0x72, 0x70, 0x68, 0x61, 0x48, 0x61, 0x6c, 0x6f, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x69, 0x72, 0x74, 0x65, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x61, 0x64, 0x20,
		0x37, 0x2d, 0x73, 0x41, 0x69, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x53, 0x49, 0x6d, 0x61, 0x67,
		0x69, 0x6e, 0x65, 0x41, 0x69, 0x75, 0x74, 0x6f, 0x41, 0x69, 0x77, 0x61, 0x41, 0x57, 0x37, 0x39,
		0x30, 0x5a, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x57, 0x35, 0x30, 0x30, 0x41, 0x57, 0x4d, 0x24, 0x31, 0x4d, 0x33, 0x30, 0x30, 0x41, 0x49, 0x57,
		0x41, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x41, 0x6a, 0x69, 0x62, 0x61, 0x6a, 0x69, 0x62, 0x20,
		0x58, 0x31, 0x4c, 0x31, 0x41, 0x6b, 0x61, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x41, 0x4b,
		0x54, 0x42, 0x2d, 0x37, 0x30, 0x33, 0x4d, 0x5a, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x24,
		0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x58, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x58, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x69, 0x4c,
		0x69, 0x6b, 0x65, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x4c, 0x69, 0x6b, 0x65, 0x20,
		0x55, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31, 0x45, 0x63,
		0x6f, 0x20, 0x45, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x24, 0x31,
		0x29, 0x53, 0x69, 0x32, 0x31, 0x35, 0x37, 0x4c, 0x47, 0x33, 0x32, 0x41, 0x6c, 0x62, 0x61, 0x41,
		0x6c, 0x62, 0x61, 0x20, 0x35, 0x37, 0x35, 0x2e, 0x37, 0x31, 0x30, 0x20, 0x54, 0x41, 0x42, 0x4c,
		0x45, 0x54, 0x31, 0x30, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x41, 0x6c, 0x63, 0x61, 0x74,
		0x65, 0x6c, 0x33, 0x30, 0x38, 0x38, 0x58, 0x33, 0x30, 0x38, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x46, 0x6c, 0x69, 0x70, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47, 0x6f, 0x20,
		0x46, 0x6c, 0x69, 0x70, 0x20, 0x34, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x56, 0x41,
		0x34, 0x30, 0x35, 0x44, 0x4c, 0x4d, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x41, 0x34, 0x30, 0x36, 0x44,
		0x4c, 0x4d, 0x79, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x32, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x20, 0x49, 0x49, 0x34, 0x30, 0x38, 0x37, 0x55, 0x31, 0x53, 0x45, 0x20, 0x4c, 0x69, 0x67, 0x68,
		0x74, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x36, 0x30, 0x34, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x55, 0x70, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43,
		0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43,
		0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x35, 0x30, 0x33, 0x36, 0x44, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x35, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x43, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44,
		0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44,
		0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x44,
		0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70,
		0x20, 0x32, 0x20, 0x34, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x34, 0x2e,
		0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x35,
		0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x35, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35,
		0x22, 0x35, 0x30, 0x31, 0x35, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x35, 0x30, 0x35,
		0x31, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20,
		0x34, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x2b, 0x37, 0x30, 0x37, 0x30, 0x58, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x36,
		0x22, 0x35, 0x30, 0x35, 0x37, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x33, 0x37, 0x30, 0x34, 0x35, 0x59, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x37, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x35,
		0x30, 0x34, 0x32, 0x54, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x41, 0x73,
		0x74, 0x72, 0x6f, 0x49, 0x64, 0x6f, 0x6c, 0x58, 0x20, 0x36, 0x30, 0x34, 0x30, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x35, 0x30, 0x32,
		0x37, 0x42, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x44, 0x61, 0x77, 0x6e,
		0x41, 0x37, 0x20, 0x58, 0x4c, 0x31, 0x42, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x42,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4f, 0x6e, 0x79, 0x78, 0x56, 0x6f, 0x6c, 0x74, 0x61,
		0x34, 0x30, 0x33, 0x34, 0x54, 0x31, 0x45, 0x35, 0x30, 0x30, 0x32, 0x46, 0x31, 0x41, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x34, 0x30, 0x36, 0x33, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x34, 0x30, 0x36, 0x35, 0x46, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x33, 0x4c, 0x41, 0x35,
		0x37, 0x36, 0x43, 0x43, 0x4b, 0x6f, 0x72, 0x61, 0x20, 0x41, 0x35, 0x37, 0x36, 0x43, 0x43, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20,
		0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63,
		0x65, 0x20, 0x34, 0x35, 0x30, 0x35, 0x34, 0x4e, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x46, 0x69, 0x65, 0x72, 0x63, 0x65, 0x20, 0x58, 0x4c, 0x36, 0x30, 0x34, 0x32, 0x44,
		0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64,
		0x6f, 0x6c, 0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c,
		0x20, 0x32, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x32, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x33, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64, 0x6f, 0x6c, 0x20, 0x34, 0x36,
		0x30, 0x37, 0x30, 0x4b, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49, 0x64,
		0x6f, 0x6c, 0x20, 0x34, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x49,
		0x64, 0x6f, 0x6c, 0x20, 0x35, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x49, 0x64, 0x6f, 0x6c, 0x20, 0x58, 0x2b, 0x38, 0x30, 0x33, 0x30, 0x59, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x30, 0x35, 0x35,
		0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20,
		0x32, 0x43, 0x37, 0x30, 0x35, 0x33, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x58, 0x31, 0x35, 0x30, 0x36, 0x35, 0x4e, 0x54, 0x52, 0x55, 0x41, 0x35, 0x37, 0x34, 0x42,
		0x4c, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x41, 0x35, 0x37, 0x37, 0x56, 0x4c, 0x5a, 0x69, 0x70, 0x41,
		0x34, 0x36, 0x36, 0x42, 0x47, 0x50, 0x69, 0x78, 0x69, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x35,
		0x30, 0x35, 0x36, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4f, 0x70,
		0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x35, 0x37, 0x30, 0x42,
		0x4c, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20,
		0x41, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x35, 0x37, 0x31, 0x56, 0x4c, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x41, 0x76,
		0x69, 0x6f, 0x6e, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x34,
		0x36, 0x34, 0x42, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x47, 0x6c, 0x69, 0x74, 0x7a, 0x41, 0x36, 0x32, 0x31, 0x42, 0x4c, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x47, 0x6c, 0x6f,
		0x72, 0x79, 0x34, 0x30, 0x31, 0x34, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x33, 0x2e, 0x35,
		0x22, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x22, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x34, 0x2e,
		0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x33, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x39, 0x30, 0x30, 0x32, 0x58, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20,
		0x37, 0x22, 0x39, 0x30, 0x30, 0x37, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x31, 0x54, 0x31,
		0x54, 0x20, 0x31, 0x30, 0x31, 0x54, 0x20, 0x31, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x31,
		0x54, 0x20, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x45, 0x4b, 0x45, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78,
		0x69, 0x20, 0x33, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x30, 0x30, 0x39, 0x41,
		0x31, 0x54, 0x20, 0x37, 0x39, 0x30, 0x30, 0x39, 0x46, 0x31, 0x54, 0x20, 0x37, 0x22, 0x20, 0x33,
		0x47, 0x39, 0x33, 0x30, 0x39, 0x58, 0x31, 0x54, 0x20, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x31, 0x54, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x39, 0x30, 0x32, 0x32, 0x58, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x38,
		0x22, 0x39, 0x30, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20,
		0x50, 0x69, 0x78, 0x69, 0x20, 0x33, 0x20, 0x31, 0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x33, 0x2e, 0x35, 0x22, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x34, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x33, 0x47, 0x35, 0x30, 0x34, 0x31, 0x44, 0x4f, 0x6e, 0x65,
		0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x2e,
		0x30, 0x22, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69,
		0x20, 0x34, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x35, 0x22, 0x20, 0x34, 0x47,
		0x35, 0x30, 0x39, 0x38, 0x4f, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x41, 0x35, 0x30, 0x31, 0x44,
		0x4c, 0x41, 0x35, 0x30, 0x33, 0x44, 0x4c, 0x41, 0x31, 0x58, 0x41, 0x78, 0x65, 0x6c, 0x41, 0x33,
		0x41, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x58, 0x4c, 0x39, 0x32, 0x30, 0x33,
		0x41, 0x41, 0x33, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x33, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x39, 0x30, 0x32, 0x36, 0x58, 0x41, 0x33, 0x20, 0x31, 0x30, 0x22, 0x41, 0x35, 0x41, 0x35, 0x20,
		0x4c, 0x45, 0x44, 0x35, 0x30, 0x38, 0x35, 0x4e, 0x41, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c,
		0x45, 0x44, 0x41, 0x37, 0x41, 0x33, 0x30, 0x35, 0x30, 0x34, 0x39, 0x53, 0x41, 0x33, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x35, 0x30, 0x34, 0x39, 0x5a, 0x41, 0x33, 0x30, 0x20, 0x46, 0x69, 0x65,
		0x72, 0x63, 0x65, 0x41, 0x35, 0x30, 0x33, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x35,
		0x30, 0x34, 0x39, 0x57, 0x52, 0x65, 0x76, 0x76, 0x6c, 0x39, 0x30, 0x30, 0x36, 0x57, 0x4f, 0x6e,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x32, 0x20, 0x37,
		0x22, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x33, 0x47,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x36, 0x22, 0x20, 0x34, 0x47, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20,
		0x37, 0x22, 0x20, 0x33, 0x47, 0x39, 0x30, 0x31, 0x35, 0x42, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47,
		0x38, 0x30, 0x36, 0x33, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69,
		0x78, 0x69, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x35, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x69, 0x78, 0x69, 0x20, 0x37, 0x49, 0x32, 0x31, 0x33,
		0x39, 0x30, 0x30, 0x35, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x69, 0x78, 0x69, 0x20, 0x38, 0x39, 0x30, 0x32, 0x35, 0x51, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x50,
		0x33, 0x32, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f,
		0x50, 0x20, 0x38, 0x50, 0x33, 0x31, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x50, 0x33, 0x33, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x37, 0x53, 0x39, 0x30, 0x32, 0x30,
		0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x65, 0x6b, 0x20,
		0x48, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x57, 0x61, 0x76, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f,
		0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x37, 0x36, 0x38, 0x54, 0x49, 0x73, 0x6c,
		0x61, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x72, 0x69,
		0x62, 0x65, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f,
		0x75, 0x63, 0x68, 0x5f, 0x35, 0x38, 0x35, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x35, 0x38, 0x35, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
		0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x38, 0x33, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x20, 0x38, 0x33, 0x38, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45, 0x4c, 0x5f, 0x6f, 0x6e,
		0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x64, 0x4f, 0x6e, 0x65, 0x20,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x44, 0x41, 0x4c, 0x43, 0x41, 0x54, 0x45,
		0x4c, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x38, 0x31, 0x33, 0x4f,
		0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x31, 0x33, 0x4f, 0x54, 0x38, 0x37,
		0x31, 0x41, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x38, 0x37, 0x31, 0x41,
		0x50, 0x33, 0x36, 0x30, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50,
		0x6f, 0x70, 0x20, 0x31, 0x30, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x24,
		0x31, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x53, 0x68, 0x69, 0x6e,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x49, 0x4d, 0x58, 0x4c, 0x54, 0x49, 0x4d, 0x20, 0x58,
		0x4c, 0x35, 0x30, 0x38, 0x35, 0x43, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4d, 0x69, 0x78, 0x55, 0x33,
		0x55, 0x35, 0x55, 0x35, 0x20, 0x33, 0x47, 0x55, 0x35, 0x20, 0x48, 0x44, 0x34, 0x30, 0x34, 0x37,
		0x47, 0x55, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x34, 0x30, 0x34, 0x37, 0x41, 0x55, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x34, 0x30, 0x34, 0x34, 0x4f, 0x43, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61,
		0x72, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x32, 0x47, 0x6f, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x55,
		0x35, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x31, 0x31, 0x43, 0x31, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x58, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31,
		0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x36, 0x30, 0x30, 0x32, 0x4a, 0x31, 0x56, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x33, 0x43, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x31,
		0x53, 0x31, 0x53, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x30, 0x33, 0x30, 0x45, 0x31,
		0x53, 0x50, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x31, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x31, 0x56, 0x31, 0x58, 0x35, 0x30, 0x35, 0x39, 0x53, 0x41, 0x76, 0x61, 0x6c,
		0x6f, 0x6e, 0x20, 0x56, 0x35, 0x56, 0x33, 0x35, 0x30, 0x32, 0x39, 0x45, 0x33, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x33, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x33, 0x56, 0x33,
		0x43, 0x36, 0x30, 0x32, 0x37, 0x41, 0x33, 0x48, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x58, 0x33,
		0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x35, 0x36, 0x30, 0x36, 0x35, 0x41, 0x35, 0x48,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x36, 0x30, 0x36, 0x32, 0x57, 0x37, 0x33, 0x54, 0x20, 0x31, 0x30,
		0x22, 0x33, 0x54, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x4a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x41, 0x6c, 0x63, 0x61, 0x74, 0x65, 0x6c,
		0x20, 0x55, 0x50, 0x42, 0x69, 0x67, 0x20, 0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x35, 0x30, 0x34, 0x31, 0x43, 0x54, 0x45, 0x54, 0x52, 0x41, 0x41, 0x6c, 0x63, 0x6f, 0x72, 0x41,
		0x6c, 0x66, 0x61, 0x77, 0x69, 0x73, 0x65, 0x5a, 0x32, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c,
		0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x58, 0x38, 0x35, 0x30, 0x52, 0x58, 0x38, 0x35, 0x30,
		0x20, 0x65, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x41, 0x6c, 0x6c, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31, 0x32, 0x54,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x54, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x52, 0x4f, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x20, 0x31, 0x32, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x31,
		0x32, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x5f, 0x58, 0x53, 0x31, 0x20,
		0x58, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x31, 0x53, 0x31, 0x41, 0x6c, 0x6c,
		0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x53, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x41,
		0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x52, 0x69,
		0x6f, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x5f, 0x52, 0x49, 0x4f,
		0x52, 0x69, 0x6f, 0x48, 0x65, 0x61, 0x74, 0x20, 0x24, 0x31, 0x52, 0x69, 0x6f, 0x20, 0x58, 0x48,
		0x6f, 0x74, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x53, 0x6d,
		0x69, 0x6c, 0x65, 0x20, 0x58, 0x4b, 0x69, 0x64, 0x7a, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x35, 0x58, 0x53, 0x6b, 0x50, 0x61, 0x64, 0x4d, 0x35, 0x53, 0x4d, 0x35, 0x4d, 0x35,
		0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x33, 0x55, 0x36, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x58, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x35, 0x30,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x58, 0x20, 0x47, 0x61, 0x6d, 0x65,
		0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x34, 0x59, 0x6f, 0x75, 0x41, 0x34, 0x20, 0x59,
		0x6f, 0x75, 0x41, 0x58, 0x32, 0x5f, 0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x32, 0x20,
		0x46, 0x72, 0x65, 0x6e, 0x7a, 0x79, 0x41, 0x58, 0x35, 0x4e, 0x61, 0x6e, 0x6f, 0x51, 0x41, 0x58,
		0x35, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x51, 0x43, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x43, 0x36,
		0x20, 0x44, 0x75, 0x6f, 0x45, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x24,
		0x31, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x33, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x45, 0x33, 0x20,
		0x53, 0x69, 0x67, 0x6e, 0x45, 0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x34, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x39, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x39, 0x20, 0x43,
		0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x34, 0x33, 0x5f, 0x45, 0x61, 0x73, 0x79, 0x50, 0x34,
		0x33, 0x20, 0x45, 0x61, 0x73, 0x79, 0x50, 0x24, 0x31, 0x20, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x36, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x50,
		0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x5f, 0x51, 0x6d, 0x61, 0x78, 0x50, 0x36, 0x20,
		0x51, 0x6d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x5f, 0x51, 0x75,
		0x61, 0x64, 0x50, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x37, 0x50, 0x39, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x50, 0x39, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x53, 0x50, 0x39, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x38, 0x5f, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f,
		0x50, 0x52, 0x4f, 0x50, 0x38, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50,
		0x24, 0x31, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x50, 0x37, 0x5f, 0x53, 0x65, 0x6f, 0x6e,
		0x50, 0x37, 0x20, 0x53, 0x65, 0x6f, 0x6e, 0x50, 0x37, 0x5f, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65,
		0x50, 0x37, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x50, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x66,
		0x65, 0x50, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x66, 0x65, 0x50, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x66,
		0x65, 0x50, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50,
		0x31, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x31, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x49, 0x20, 0x34, 0x47, 0x56,
		0x31, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x56, 0x31, 0x20, 0x56, 0x69, 0x70, 0x65,
		0x72, 0x20, 0x49, 0x56, 0x34, 0x5f, 0x56, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x50, 0x52, 0x4f, 0x56,
		0x34, 0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x5f, 0x56, 0x69,
		0x70, 0x65, 0x72, 0x5f, 0x58, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70,
		0x65, 0x72, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x32, 0x20, 0x56, 0x69, 0x70, 0x65,
		0x72, 0x20, 0x24, 0x31, 0x58, 0x34, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x58, 0x37, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x37, 0x20,
		0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x38, 0x5f, 0x53, 0x6f, 0x75,
		0x6c, 0x5f, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x50, 0x72, 0x6f,
		0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58,
		0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x24, 0x31, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x58, 0x34, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58,
		0x33, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x58, 0x33, 0x20, 0x53, 0x6f,
		0x75, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x32, 0x5f, 0x53, 0x6f, 0x75, 0x6c, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65,
		0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x32, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x24, 0x31, 0x20, 0x53, 0x6f, 0x75, 0x6c, 0x56, 0x24, 0x31,
		0x20, 0x56, 0x69, 0x70, 0x65, 0x72, 0x58, 0x32, 0x5f, 0x54, 0x77, 0x69, 0x6e, 0x58, 0x32, 0x20,
		0x54, 0x77, 0x69, 0x6e, 0x41, 0x35, 0x20, 0x45, 0x61, 0x73, 0x79, 0x41, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x35, 0x20, 0x52, 0x65, 0x61, 0x64, 0x79, 0x41, 0x35, 0x53, 0x6d, 0x69,
		0x6c, 0x65, 0x79, 0x41, 0x35, 0x20, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x41, 0x35, 0x5f, 0x51,
		0x75, 0x61, 0x64, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x54, 0x4d, 0x41, 0x35, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x5f, 0x51, 0x75, 0x61, 0x64, 0x41, 0x35,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x41, 0x36, 0x5f, 0x44, 0x75, 0x6f, 0x41, 0x36, 0x20, 0x44, 0x75,
		0x6f, 0x41, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x41, 0x31,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x31, 0x30,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x32, 0x47, 0x42, 0x41, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x30, 0x5f, 0x4d, 0x61, 0x78,
		0x41, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x20, 0x53, 0x41,
		0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x20, 0x50, 0x34, 0x69, 0x41, 0x6c, 0x6c, 0x44, 0x72, 0x6f,
		0x20, 0x50, 0x34, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x50, 0x32, 0x41, 0x6c, 0x6c,
		0x44, 0x72, 0x6f, 0x56, 0x69, 0x76, 0x61, 0x20, 0x24, 0x31, 0x56, 0x69, 0x76, 0x61, 0x5f, 0x48,
		0x6f, 0x6d, 0x65, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x76,
		0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x69, 0x74, 0x79, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x43,
		0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x41, 0x58, 0x32, 0x46, 0x72, 0x65,
		0x6e, 0x7a, 0x79, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x32, 0x20, 0x53, 0x70, 0x65, 0x65,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x33, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x51, 0x75, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x64, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x53,
		0x70, 0x65, 0x65, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31,
		0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x48, 0x31,
		0x30, 0x30, 0x33, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x76, 0x61, 0x20,
		0x48, 0x31, 0x30, 0x30, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x76,
		0x61, 0x5f, 0x31, 0x30, 0x30, 0x33, 0x47, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x76, 0x61,
		0x20, 0x31, 0x30, 0x30, 0x33, 0x47, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x31, 0x30, 0x30, 0x34,
		0x5f, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x31, 0x30, 0x30, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x56, 0x69, 0x76, 0x61, 0x20, 0x48, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x70,
		0x65, 0x65, 0x64, 0x20, 0x49, 0x53, 0x70, 0x65, 0x65, 0x64, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45,
		0x57, 0x53, 0x50, 0x45, 0x45, 0x44, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x41, 0x58, 0x34, 0x4e, 0x61, 0x6e, 0x6f, 0x41, 0x58, 0x34, 0x20, 0x4e, 0x61,
		0x6e, 0x6f, 0x41, 0x4c, 0x4c, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x58, 0x31, 0x5f, 0x51, 0x75,
		0x61, 0x73, 0x61, 0x72, 0x54, 0x58, 0x31, 0x20, 0x51, 0x75, 0x61, 0x73, 0x61, 0x72, 0x41, 0x58,
		0x24, 0x31, 0x41, 0x6c, 0x6c, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x36, 0x34, 0x20, 0x70, 0x33, 0x41, 0x36, 0x34, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x70, 0x33, 0x51, 0x55, 0x41, 0x44, 0x2d,
		0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20, 0x79, 0x33, 0x41, 0x33, 0x33, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x79, 0x33, 0x5a, 0x59, 0x2d, 0x30, 0x37,
		0x42, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4f, 0x63, 0x74, 0x61, 0x2d, 0x54, 0x38, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x38, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43,
		0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x6f, 0x51, 0x55, 0x41,
		0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x32, 0x30, 0x30, 0x31, 0x4f,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x4b, 0x24, 0x31,
		0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x33, 0x20, 0x50, 0x24, 0x31,
		0x4f, 0x43, 0x54, 0x41, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x4f, 0x43, 0x54, 0x4f,
		0x50, 0x55, 0x53, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x54, 0x38, 0x51, 0x75, 0x61, 0x64, 0x43,
		0x6f, 0x72, 0x65, 0x2d, 0x52, 0x31, 0x36, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45,
		0x20, 0x52, 0x31, 0x36, 0x41, 0x6c, 0x70, 0x73, 0x41, 0x6c, 0x74, 0x69, 0x62, 0x6f, 0x78, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x41, 0x6c, 0x74, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x74,
		0x75, 0x73, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x28, 0x47, 0x65,
		0x6e, 0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e,
		0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x2d, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54,
		0x56, 0x20, 0x34, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x32, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20,
		0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53,
		0x74, 0x69, 0x63, 0x6b, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x31,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x4f, 0x6d, 0x6e, 0x69, 0x20, 0x51, 0x4c,
		0x45, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x4f, 0x6d, 0x6e, 0x69, 0x20, 0x51, 0x4c, 0x45, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56,
		0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x22, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20,
		0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b,
		0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e,
		0x39, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c,
		0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x37, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x58, 0x20, 0x37, 0x22, 0x20, 0x34, 0x47, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20,
		0x38, 0x2e, 0x39, 0x22, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x31, 0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x36, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x48, 0x44, 0x20, 0x37, 0x46, 0x69, 0x72, 0x65, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x48, 0x44, 0x58, 0x20, 0x38, 0x2e, 0x39, 0x20, 0x34, 0x47, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31, 0x30,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20,
		0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48, 0x44,
		0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x48,
		0x44, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x53, 0x44, 0x34, 0x39, 0x33, 0x30, 0x55, 0x52, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x4b, 0x69, 0x6e,
		0x64, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72,
		0x45, 0x63, 0x68, 0x6f, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x44, 0x6f, 0x74, 0x45, 0x63, 0x68, 0x6f,
		0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x24, 0x31, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f,
		0x77, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68,
		0x6f, 0x77, 0x20, 0x35, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x38, 0x45,
		0x63, 0x68, 0x6f, 0x20, 0x53, 0x68, 0x6f, 0x77, 0x20, 0x31, 0x35, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79,
		0x65, 0x72, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x42, 0x61,
		0x73, 0x69, 0x63, 0x73, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x6f, 0x41, 0x6d, 0x69, 0x6e, 0x6f, 0x41, 0x6d,
		0x69, 0x67, 0x6f, 0x37, 0x78, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x78, 0x41, 0x6d, 0x69,
		0x67, 0x6f, 0x37, 0x41, 0x6d, 0x69, 0x67, 0x6f, 0x20, 0x37, 0x41, 0x6d, 0x6f, 0x69, 0x43, 0x6c,
		0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x41, 0x38, 0x36, 0x32, 0x57,
		0x43, 0x4c, 0x45, 0x56, 0x45, 0x52, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x53, 0x34, 0x30, 0x43, 0x6c,
		0x65, 0x76, 0x65, 0x72, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x53, 0x34, 0x30, 0x41, 0x6e, 0x64, 0x6f,
		0x77, 0x6c, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x54, 0x65, 0x63, 0x68, 0x50, 0x38, 0x30, 0x41, 0x6e,
		0x67, 0x65, 0x6c, 0x63, 0x61, 0x72, 0x65, 0x46, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6e,
		0x6b, 0x65, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x62,
		0x61, 0x72, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x4e,
		0x65, 0x62, 0x75, 0x6c, 0x61, 0x20, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x4d, 0x61, 0x78,
		0x41, 0x6e, 0x72, 0x79, 0x41, 0x6f, 0x63, 0x6f, 0x73, 0x41, 0x6f, 0x63, 0x77, 0x65, 0x69, 0x58,
		0x24, 0x31, 0x41, 0x6f, 0x72, 0x6f, 0x41, 0x6f, 0x73, 0x6f, 0x6e, 0x52, 0x31, 0x30, 0x24, 0x31,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x53, 0x37, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x64, 0x41,
		0x69, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x31, 0x77, 0x65,
		0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x38, 0x6d, 0x6d,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x31, 0x2c, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x36, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x31, 0x20, 0x33, 0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74,
		0x63, 0x68, 0x32, 0x2c, 0x37, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x31, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x33,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x33,
		0x38, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x32, 0x2c, 0x34, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20, 0x33, 0x38, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x33, 0x20,
		0x34, 0x32, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x30, 0x6d,
		0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x20, 0x34,
		0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x45, 0x20, 0x28, 0x47, 0x65, 0x6e,
		0x20, 0x32, 0x29, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x38, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x38, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x36, 0x2c, 0x31, 0x38, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x57, 0x61, 0x74, 0x63, 0x68, 0x37, 0x2c, 0x35, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72,
		0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x24, 0x31, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x57,
		0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37, 0x20, 0x34, 0x31,
		0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x37,
		0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x39, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65,
		0x72, 0x69, 0x65, 0x73, 0x20, 0x39, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61,
		0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x36, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x69, 0x4d, 0x61,
		0x63, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x31, 0x2e, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x37, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x32, 0x34, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x33, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x37, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x2d, 0x32, 0x30, 0x30, 0x37, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69,
		0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30,
		0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61,
		0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20,
		0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x37, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x30, 0x38, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x30, 0x38, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x30, 0x39, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x30,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x32, 0x30, 0x31, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33,
		0x2d, 0x32, 0x30, 0x31, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x34,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39,
		0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4d, 0x61, 0x63,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d,
		0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x36, 0x22, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x36, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x32, 0x30, 0x32, 0x34, 0x29,
		0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x61, 0x63, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x61, 0x63, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x33, 0x2d, 0x32, 0x30, 0x32, 0x34, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x36, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28,
		0x32, 0x30, 0x30, 0x37, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x39, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x30, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x31, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32,
		0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x34, 0x29,
		0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d,
		0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x61,
		0x63, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x33, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x63, 0x69,
		0x6e, 0x74, 0x6f, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30, 0x34, 0x2d, 0x32,
		0x30, 0x30, 0x35, 0x29, 0x69, 0x4d, 0x61, 0x63, 0x20, 0x47, 0x35, 0x20, 0x28, 0x32, 0x30, 0x30,
		0x35, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x47, 0x34, 0x20, 0x28, 0x32,
		0x30, 0x30, 0x35, 0x29, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34,
		0x20, 0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x34, 0x20,
		0x28, 0x32, 0x30, 0x30, 0x35, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x63, 0x20, 0x53, 0x74, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47,
		0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x34, 0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x35, 0x43, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x53, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x36, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x36, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53,
		0x45, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58,
		0x53, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x52, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x58, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x53, 0x45, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x32, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x31, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x31, 0x33, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x45, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x34, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x31, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x36, 0x69, 0x50, 0x61, 0x64, 0x69, 0x50, 0x61, 0x64, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x39, 0x2e, 0x37,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x35, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33,
		0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x33, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x39,
		0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x39, 0x20, 0x31, 0x30, 0x2e, 0x32, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x35, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x35, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x34, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x37, 0x20, 0x31, 0x33, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x37, 0x20, 0x31, 0x33, 0x22, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x36, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x31, 0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x22,
		0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x36, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x36, 0x20, 0x31, 0x31,
		0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x31,
		0x31, 0x22, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x31, 0x33, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x37, 0x20,
		0x31, 0x33, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x41, 0x70, 0x70,
		0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20,
		0x34, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x41, 0x70, 0x70, 0x6c,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x70,
		0x70, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x69, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x69, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x41, 0x71,
		0x75, 0x61, 0x72, 0x69, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x2c, 0x20, 0x53, 0x74, 0x64, 0x2c,
		0x20, 0x45, 0x6c, 0x74, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x74, 0x64, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x43,
		0x4d, 0x50, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x35, 0x35, 0x20, 0x64,
		0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35, 0x35, 0x20,
		0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x35, 0x30,
		0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x34, 0x30, 0x43, 0x20,
		0x54, 0x49, 0x76, 0x32, 0x34, 0x30, 0x63, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
		0x20, 0x76, 0x32, 0x34, 0x35, 0x42, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x34,
		0x35, 0x62, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x41, 0x43, 0x34, 0x35, 0x42,
		0x48, 0x45, 0x34, 0x35, 0x62, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x34, 0x35, 0x20, 0x4e,
		0x65, 0x6f, 0x6e, 0x58, 0x36, 0x37, 0x20, 0x35, 0x47, 0x31, 0x30, 0x31, 0x42, 0x20, 0x48, 0x65,
		0x6c, 0x69, 0x75, 0x6d, 0x20, 0x34, 0x47, 0x54, 0x39, 0x36, 0x20, 0x57, 0x49, 0x46, 0x49, 0x54,
		0x39, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x35, 0x30, 0x42, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x75,
		0x6d, 0x20, 0x34, 0x47, 0x38, 0x30, 0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x31, 0x30, 0x31,
		0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x34, 0x47, 0x37, 0x30, 0x20, 0x41, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x41, 0x72, 0x63, 0x68, 0x6f, 0x73, 0x20, 0x41, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30, 0x31,
		0x20, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x41, 0x43, 0x31,
		0x30, 0x31, 0x50, 0x4c, 0x33, 0x47, 0x56, 0x32, 0x31, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x31, 0x30, 0x31, 0x73, 0x20, 0x4f,
		0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x41, 0x72, 0x64, 0x6f, 0x69, 0x7a, 0x31, 0x30, 0x31, 0x73,
		0x20, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x54, 0x24, 0x31, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x72, 0x63,
		0x68, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x67, 0x20, 0x76, 0x34, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x33, 0x47, 0x20, 0x56, 0x34, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x39, 0x2e, 0x34,
		0x22, 0x20, 0x46, 0x46, 0x46, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x31, 0x30, 0x31, 0x20, 0x58,
		0x54, 0x69, 0x6b, 0x65, 0x61, 0x73, 0x79, 0x20, 0x31, 0x30, 0x64, 0x54, 0x31, 0x30, 0x31, 0x20,
		0x48, 0x44, 0x20, 0x34, 0x47, 0x54, 0x31, 0x30, 0x31, 0x20, 0x46, 0x48, 0x44, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x41, 0x72, 0x69, 0x61, 0x6e, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x31, 0x30, 0x30,
		0x20, 0x53, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x31, 0x30, 0x30, 0x38, 0x30, 0x20, 0x53,
		0x53, 0x38, 0x30, 0x30, 0x33, 0x50, 0x47, 0x38, 0x30, 0x37, 0x31, 0x20, 0x53, 0x54, 0x37, 0x30,
		0x30, 0x32, 0x50, 0x47, 0x37, 0x31, 0x37, 0x30, 0x20, 0x53, 0x54, 0x37, 0x30, 0x30, 0x31, 0x52,
		0x57, 0x37, 0x30, 0x41, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x42, 0x69, 0x6f, 0x6e, 0x69, 0x71, 0x20,
		0x50, 0x31, 0x31, 0x36, 0x41, 0x72, 0x6b, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x20, 0x24,
		0x31, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24,
		0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x24,
		0x31, 0x45, 0x6c, 0x66, 0x20, 0x53, 0x38, 0x55, 0x6b, 0x6f, 0x7a, 0x69, 0x20, 0x55, 0x24, 0x31,
		0x48, 0x65, 0x72, 0x63, 0x6c, 0x73, 0x20, 0x4c, 0x39, 0x32, 0x35, 0x41, 0x72, 0x6d, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x41, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x41, 0x52, 0x43, 0x48, 0x4d, 0x39, 0x30,
		0x31, 0x4d, 0x39, 0x30, 0x31, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x32, 0x37, 0x63, 0x20, 0x47, 0x32,
		0x37, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x37, 0x47, 0x33, 0x37, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37,
		0x49, 0x47, 0x33, 0x37, 0x69, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x42, 0x47, 0x33, 0x37, 0x62,
		0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x43, 0x47, 0x33, 0x37, 0x63, 0x20, 0x47, 0x33, 0x41, 0x4e,
		0x37, 0x44, 0x47, 0x33, 0x2d, 0x43, 0x50, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x70, 0x61, 0x64, 0x41,
		0x4e, 0x37, 0x44, 0x47, 0x33, 0x37, 0x64, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x46, 0x47, 0x33,
		0x37, 0x66, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x37, 0x48, 0x47, 0x33, 0x37, 0x68, 0x20, 0x47, 0x33,
		0x41, 0x38, 0x30, 0x4b, 0x53, 0x43, 0x38, 0x41, 0x4e, 0x38, 0x47, 0x32, 0x38, 0x20, 0x47, 0x32,
		0x41, 0x4e, 0x38, 0x47, 0x33, 0x38, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x42, 0x47, 0x33, 0x38,
		0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x38, 0x43, 0x47, 0x33, 0x38, 0x63, 0x20, 0x47, 0x33, 0x41,
		0x4e, 0x39, 0x47, 0x32, 0x49, 0x39, 0x69, 0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x32, 0x39,
		0x20, 0x47, 0x32, 0x41, 0x4e, 0x39, 0x47, 0x33, 0x39, 0x20, 0x47, 0x33, 0x31, 0x30, 0x20, 0x47,
		0x32, 0x41, 0x31, 0x30, 0x31, 0x42, 0x31, 0x30, 0x31, 0x30, 0x62, 0x20, 0x47, 0x32, 0x31, 0x30,
		0x62, 0x20, 0x47, 0x33, 0x41, 0x4e, 0x31, 0x30, 0x43, 0x47, 0x33, 0x31, 0x30, 0x63, 0x20, 0x47,
		0x33, 0x41, 0x4e, 0x31, 0x30, 0x44, 0x47, 0x33, 0x31, 0x30, 0x64, 0x20, 0x47, 0x33, 0x41, 0x52,
		0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x47, 0x33, 0x39, 0x30, 0x20, 0x47, 0x33, 0x41, 0x52,
		0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x30, 0x20, 0x47, 0x34, 0x39, 0x30, 0x20, 0x47, 0x34, 0x41,
		0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x39, 0x37, 0x47, 0x34, 0x39, 0x37, 0x20, 0x47, 0x34, 0x41,
		0x52, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x31, 0x30, 0x31, 0x20, 0x47, 0x34, 0x31, 0x30, 0x31, 0x20,
		0x47, 0x34, 0x41, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x74, 0x65, 0x6c, 0x52, 0x33,
		0x20, 0x47, 0x54, 0x56, 0x47, 0x61, 0x70, 0x20, 0x59, 0x6f, 0x20, 0x51, 0x55, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x55, 0x33, 0x20, 0x34, 0x47, 0x55, 0x24, 0x31, 0x41, 0x6c, 0x6c, 0x6f, 0x4b,
		0x6f, 0x6d, 0x69, 0x20, 0x33, 0x51, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x31, 0x41,
		0x72, 0x74, 0x69, 0x7a, 0x6c, 0x65, 0x65, 0x41, 0x54, 0x4c, 0x2d, 0x32, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x39, 0x41, 0x72, 0xc3, 0xa7, 0x65, 0x6c, 0x69, 0x6b, 0x41, 0x72, 0x63, 0x65,
		0x6c, 0x69, 0x6b, 0x41, 0x73, 0x61, 0x6e, 0x6f, 0x24, 0x31, 0x24, 0x32, 0x20, 0x24, 0x31, 0x2e,
		0x30, 0x22, 0x41, 0x73, 0x61, 0x6e, 0x7a, 0x6f, 0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x73, 0x6b, 0x37, 0x39, 0x31, 0x53, 0x50, 0x20, 0x33, 0x47, 0x41, 0x73, 0x70, 0x65, 0x72, 0x61,
		0x57, 0x72, 0x65, 0x6e, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x32, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
		0x61, 0x6e, 0x74, 0x41, 0x73, 0x70, 0x65, 0x72, 0x41, 0x67, 0x69, 0x6f, 0x43, 0x6c, 0x75, 0x62,
		0x41, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x4c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x78,
		0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x75, 0x72, 0x66, 0x55, 0x6e, 0x61, 0x6d, 0x69,
		0x50, 0x72, 0x69, 0x6d, 0x61, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x69, 0x64, 0x52, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x78,
		0x20, 0x52, 0x69, 0x74, 0x6d, 0x41, 0x53, 0x2d, 0x35, 0x34, 0x31, 0x32, 0x20, 0x4d, 0x61, 0x78,
		0x41, 0x50, 0x2d, 0x37, 0x32, 0x31, 0x4e, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x50, 0x2d,
		0x39, 0x34, 0x31, 0x43, 0x65, 0x74, 0x75, 0x73, 0x41, 0x50, 0x2d, 0x31, 0x30, 0x36, 0x20, 0x46,
		0x6f, 0x72, 0x63, 0x65, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x28, 0x55, 0x41, 0x29, 0x41, 0x73,
		0x75, 0x73, 0x58, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x65, 0x65,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x31, 0x37, 0x31, 0x5a, 0x39, 0x30,
		0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x45, 0x31, 0x37, 0x32, 0x56, 0x4d, 0x65, 0x4d,
		0x4f, 0x20, 0x50, 0x61, 0x64, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48,
		0x44, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30, 0x5a, 0x31, 0x30, 0x31, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x5a, 0x31, 0x30, 0x31, 0x58, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x45, 0x31, 0x30, 0x33, 0x4b, 0x4d, 0x65,
		0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x4d, 0x65, 0x4d, 0x4f, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x39, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x48, 0x44, 0x20, 0x37, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4d, 0x65, 0x4d, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x46, 0x37, 0x30, 0x31, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
		0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x31, 0x30, 0x33, 0x43, 0x54, 0x72,
		0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46,
		0x31, 0x30, 0x33, 0x43, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x30, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73,
		0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x54, 0x46, 0x33, 0x30, 0x33,
		0x4b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x54, 0x72, 0x69, 0x6f, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x20, 0x53, 0x4c, 0x31,
		0x30, 0x31, 0x45, 0x65, 0x65, 0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72,
		0x20, 0x53, 0x4c, 0x31, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x43, 0x20, 0x37,
		0x2e, 0x30, 0x50, 0x30, 0x30, 0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5a, 0x65, 0x6e, 0x50,
		0x61, 0x64, 0x20, 0x5a, 0x38, 0x50, 0x30, 0x30, 0x31, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x5a, 0x31, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x5a, 0x38, 0x73, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e,
		0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x30, 0x50, 0x30, 0x32,
		0x37, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x33, 0x53, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e,
		0x50, 0x61, 0x64, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x5a, 0x65, 0x6e, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x31,
		0x38, 0x30, 0x31, 0x2d, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72,
		0x20, 0x41, 0x69, 0x4f, 0x20, 0x50, 0x31, 0x38, 0x30, 0x31, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22,
		0x41, 0x53, 0x55, 0x53, 0x20, 0x54, 0x41, 0x42, 0x20, 0x41, 0x38, 0x54, 0x41, 0x42, 0x20, 0x41,
		0x38, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x36, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x46,
		0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49,
		0x4d, 0x46, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x64, 0x20, 0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x53, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50,
		0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x64,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x38, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x45, 0x50, 0x61, 0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x54, 0x30, 0x30, 0x34, 0x50, 0x61,
		0x64, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x52, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x38, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x38, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x39, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x31, 0x30, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x56, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x56, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x43, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x31,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4d, 0x32,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x32, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x31, 0x47, 0x35,
		0x35, 0x33, 0x4b, 0x4c, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x4c, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x61, 0x73,
		0x65, 0x72, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x5a, 0x65, 0x6e, 0x46, 0x6f,
		0x6e, 0x65, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x36, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x37, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4d, 0x31, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x32, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x47, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47,
		0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x54, 0x56, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30, 0x30,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x65,
		0x67, 0x61, 0x73, 0x75, 0x73, 0x20, 0x33, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46,
		0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x20, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x20, 0x33, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x33, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x5a,
		0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x65,
		0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x5a, 0x65, 0x6e, 0x46, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x6e,
		0x46, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x52, 0x4f, 0x47,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x35, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x52, 0x4f,
		0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x44, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x37, 0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x38,
		0x52, 0x4f, 0x47, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x39, 0x52, 0x4f, 0x47, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x64, 0x72, 0x61,
		0x67, 0x6f, 0x6e, 0x20, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x73, 0x5a, 0x4e, 0x32, 0x32,
		0x30, 0x49, 0x43, 0x5a, 0x65, 0x6e, 0x20, 0x41, 0x69, 0x4f, 0x20, 0x5a, 0x4e, 0x32, 0x32, 0x30,
		0x49, 0x43, 0x54, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x24, 0x31,
		0x61, 0x73, 0x75, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x63, 0x75, 0x62, 0x65,
		0x43, 0x75, 0x62, 0x65, 0x5a, 0x65, 0x6e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x24, 0x31, 0x54, 0x72,
		0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f,
		0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x24, 0x31, 0x41, 0x74,
		0x68, 0x65, 0x73, 0x69, 0x41, 0x74, 0x6d, 0x61, 0x63, 0x61, 0x20, 0x45, 0x6c, 0x65, 0x6b, 0x74,
		0x72, 0x6f, 0x6e, 0x69, 0x6b, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x5f, 0x41, 0x74, 0x6f, 0x6d,
		0x41, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x2d, 0x54, 0x61, 0x62, 0x24, 0x31, 0x41, 0x74, 0x6f,
		0x7a, 0x65, 0x65, 0x43, 0x50, 0x32, 0x30, 0x5f, 0x47, 0x6f, 0x6c, 0x64, 0x43, 0x50, 0x32, 0x30,
		0x20, 0x47, 0x6f, 0x6c, 0x64, 0x59, 0x51, 0x31, 0x30, 0x53, 0x5f, 0x4d, 0x41, 0x58, 0x59, 0x51,
		0x31, 0x30, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x51, 0x31, 0x30, 0x53, 0x5f, 0x47, 0x6f, 0x6c,
		0x64, 0x59, 0x51, 0x31, 0x30, 0x53, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x41, 0x74, 0x74, 0x69, 0x6c,
		0x61, 0x41, 0x74, 0x76, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x76, 0x6f, 0x78, 0x43, 0x44,
		0x4d, 0x2d, 0x24, 0x31, 0x41, 0x75, 0x74, 0x61, 0x6e, 0x41, 0x76, 0x61, 0x79, 0x61, 0x56, 0x61,
		0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x4b, 0x31, 0x37, 0x35, 0x41, 0x76, 0x65, 0x6e, 0x7a, 0x6f,
		0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x62, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x34, 0x47, 0x41, 0x76, 0x76, 0x69, 0x6f, 0x43, 0x48, 0x49, 0x56, 0x41, 0x53, 0x5f,
		0x35, 0x35, 0x43, 0x68, 0x69, 0x76, 0x61, 0x73, 0x20, 0x35, 0x35, 0x4d, 0x69, 0x6e, 0x74, 0x5f,
		0x4d, 0x33, 0x35, 0x33, 0x4d, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x33, 0x35, 0x33, 0x43, 0x6f, 0x6c,
		0x6f, 0x6d, 0x62, 0x69, 0x61, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62,
		0x69, 0x61, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x50, 0x41, 0x44, 0x41, 0x77, 0x6f, 0x77,
		0x41, 0x78, 0x69, 0x6f, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x50, 0x49, 0x43, 0x4f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x4d, 0x32, 0x50, 0x69, 0x63,
		0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4d, 0x32, 0x20, 0x4d, 0x50, 0x69, 0x63, 0x6f, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x41, 0x78, 0x78, 0x69, 0x6f, 0x6e, 0x41, 0x54,
		0x41, 0x42, 0x2d, 0x24, 0x31, 0x41, 0x7a, 0x65, 0x79, 0x6f, 0x75, 0x41, 0x7a, 0x75, 0x6d, 0x69,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x6b, 0x61, 0x6e, 0x65, 0x41, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x50, 0x45, 0x45, 0x44, 0x35, 0x35, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x35, 0x2e, 0x35, 0x22, 0x41, 0x35, 0x30, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x35, 0x30, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x49, 0x52, 0x4f, 0x20, 0x41, 0x35, 0x35, 0x20, 0x51, 0x4c, 0x54, 0x35, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4b, 0x49, 0x52, 0x45, 0x49, 0x20, 0x41, 0x35, 0x51, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x4b, 0x69, 0x72, 0x65, 0x69, 0x20, 0x41, 0x35, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f,
		0x62, 0x75, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x7a, 0x75, 0x70, 0x69, 0x6b,
		0x42, 0x41, 0x46, 0x46, 0x24, 0x31, 0x59, 0x20, 0x46, 0x48, 0x44, 0x24, 0x31, 0x59, 0x20, 0x24,
		0x32, 0x42, 0x41, 0x52, 0x54, 0x45, 0x43, 0x50, 0x69, 0x78, 0x61, 0x76, 0x69, 0x50, 0x69, 0x78,
		0x61, 0x76, 0x69, 0x20, 0x24, 0x31, 0x42, 0x41, 0x53, 0x45, 0x42, 0x41, 0x55, 0x48, 0x4e, 0x41,
		0x54, 0x56, 0x38, 0x35, 0x55, 0x48, 0x44, 0x57, 0x2d, 0x30, 0x31, 0x32, 0x32, 0x42, 0x42, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x53, 0x37,
		0x30, 0x30, 0x42, 0x46, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x51, 0x30, 0x36, 0x30, 0x58, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x6f, 0x70, 0x6c, 0x61, 0x72, 0x20, 0x4c, 0x54,
		0x45, 0x20, 0x54, 0x51, 0x38, 0x36, 0x33, 0x51, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x49, 0x37, 0x30,
		0x30, 0x41, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20,
		0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x49, 0x37, 0x38, 0x35, 0x41, 0x50, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x6f, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x7a, 0x67, 0x20, 0x58, 0x38, 0x30, 0x30,
		0x42, 0x4a, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d,
		0x6f, 0x7a, 0x67, 0x20, 0x49, 0x31, 0x30, 0x31, 0x42, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4b, 0x61, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x54, 0x51, 0x37, 0x36, 0x33, 0x49, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x24, 0x31,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x33, 0x47, 0x20, 0x58, 0x35, 0x39, 0x35, 0x42, 0x54, 0x42, 0x42, 0x4b, 0x24, 0x31, 0x4c,
		0x45, 0x58, 0x2d, 0x24, 0x32, 0x2f, 0x24, 0x33, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32,
		0x2f, 0x54, 0x53, 0x32, 0x43, 0x24, 0x31, 0x4c, 0x45, 0x58, 0x2d, 0x24, 0x32, 0x42, 0x44, 0x46,
		0x4d, 0x31, 0x30, 0x37, 0x5a, 0x4c, 0x38, 0x30, 0x42, 0x4b, 0x39, 0x36, 0x30, 0x4e, 0x20, 0x4d,
		0x54, 0x24, 0x31, 0x42, 0x44, 0x51, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x31, 0x39, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x31, 0x39, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x79, 0x42,
		0x44, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x44, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x47, 0x48, 0x59, 0x24, 0x31, 0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x49, 0x44, 0x53,
		0x59, 0x37, 0x31, 0x30, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4a, 0x4f, 0x59, 0x20, 0x58, 0x32, 0x4a,
		0x6f, 0x79, 0x20, 0x58, 0x32, 0x42, 0x49, 0x48, 0x45, 0x45, 0x42, 0x4c, 0x49, 0x53, 0x53, 0x42,
		0x4c, 0x49, 0x53, 0x53, 0x2d, 0x54, 0x36, 0x54, 0x36, 0x42, 0x4d, 0x41, 0x58, 0x4d, 0x61, 0x78,
		0x50, 0x61, 0x64, 0x20, 0x49, 0x31, 0x30, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64,
		0x20, 0x49, 0x31, 0x31, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20, 0x49, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x4d, 0x58, 0x43, 0x42, 0x52, 0x41, 0x56, 0x45, 0x42, 0x52, 0x4f, 0x52,
		0x42, 0x53, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x42, 0x59, 0x44, 0x46, 0x6f, 0x72, 0x20, 0x42, 0x59, 0x44, 0x20, 0x41, 0x55, 0x54, 0x4f, 0x43,
		0x61, 0x72, 0x50, 0x61, 0x64, 0x42, 0x59, 0x4a, 0x55, 0x27, 0x53, 0x42, 0x59, 0x59, 0x42, 0x55,
		0x4f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x42, 0x61, 0x63, 0x6b,
		0x63, 0x65, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x20, 0x26, 0x20, 0x4e, 0x6f, 0x62,
		0x6c, 0x65, 0x4e, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x65, 0x61, 0x66, 0x6f, 0x6e, 0x54,
		0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x42, 0x65, 0x63, 0x6b, 0x65, 0x72,
		0x42, 0x65, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x45, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x46, 0x61, 0x73, 0x74, 0x20,
		0x32, 0x46, 0x61, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x41, 0x32, 0x33,
		0x39, 0x73, 0x42, 0x65, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x42, 0x65, 0x65, 0x6c, 0x69,
		0x6e, 0x6b, 0x47, 0x54, 0x31, 0x47, 0x54, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x54, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x54, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x49, 0x49, 0x47, 0x54, 0x20, 0x4b,
		0x69, 0x6e, 0x67, 0x52, 0x36, 0x38, 0x20, 0x49, 0x49, 0x42, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x42,
		0x65, 0x69, 0x73, 0x74, 0x61, 0x42, 0x65, 0x6b, 0x6f, 0x42, 0x65, 0x6c, 0x6c, 0x46, 0x69, 0x62,
		0x65, 0x54, 0x56, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x42, 0x65, 0x6c, 0x6c, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x42, 0x50, 0x20, 0x31, 0x30, 0x30, 0x20, 0x58, 0x2d, 0x50, 0x6c, 0x75,
		0x73, 0x42, 0x65, 0x6e, 0x51, 0x51, 0x53, 0x30, 0x32, 0x42, 0x65, 0x6e, 0x51, 0x2d, 0x53, 0x69,
		0x65, 0x6d, 0x65, 0x6e, 0x73, 0x42, 0x65, 0x6e, 0x57, 0x65, 0x65, 0x57, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x41, 0x45, 0x39, 0x39, 0x35, 0x30, 0x56, 0x36, 0x30, 0x41,
		0x45, 0x39, 0x31, 0x35, 0x30, 0x56, 0x36, 0x32, 0x41, 0x45, 0x39, 0x32, 0x32, 0x30, 0x56, 0x37,
		0x30, 0x41, 0x45, 0x39, 0x30, 0x31, 0x30, 0x56, 0x38, 0x30, 0x41, 0x45, 0x39, 0x31, 0x32, 0x30,
		0x56, 0x39, 0x30, 0x41, 0x45, 0x39, 0x33, 0x31, 0x30, 0x56, 0x39, 0x31, 0x41, 0x45, 0x4f, 0x50,
		0x35, 0x32, 0x30, 0x56, 0x39, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x48, 0x39, 0x31, 0x31,
		0x30, 0x59, 0x31, 0x31, 0x41, 0x45, 0x39, 0x32, 0x34, 0x30, 0x41, 0x45, 0x39, 0x32, 0x36, 0x30,
		0x53, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x45, 0x39, 0x32, 0x33, 0x30, 0x59, 0x33, 0x32, 0x42,
		0x65, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x42, 0x65, 0x6e, 0x7a, 0x6f, 0x47, 0x2d, 0x50, 0x41, 0x44,
		0x4c, 0x49, 0x54, 0x45, 0x47, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x79,
		0x6f, 0x6e, 0x64, 0x53, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x75, 0x72, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x65, 0x39, 0x48, 0x6f, 0x6d, 0x65,
		0x20, 0x39, 0x42, 0x65, 0x7a, 0x6b, 0x61, 0x6d, 0x42, 0x69, 0x65, 0x67, 0x65, 0x64, 0x79, 0x42,
		0x24, 0x31, 0x42, 0x69, 0x67, 0x62, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x2d,
		0x4f, 0x6e, 0x65, 0x42, 0x69, 0x6c, 0x69, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x69,
		0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6f,
		0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x69, 0x6c,
		0x6c, 0x6f, 0x77, 0x42, 0x69, 0x6f, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x42, 0x69, 0x6f, 0x57,
		0x6f, 0x6c, 0x66, 0x20, 0x38, 0x2d, 0x46, 0x33, 0x30, 0x52, 0x75, 0x67, 0x67, 0x62, 0x6f, 0x20,
		0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x42, 0x69, 0x74, 0x65, 0x6c,
		0x42, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x74, 0x6d, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x43, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x31, 0x30, 0x31, 0x31, 0x51, 0x20, 0x49, 0x49,
		0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x42, 0x69, 0x74, 0x74, 0x69,
		0x75, 0x6d, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x32,
		0x42, 0x6b, 0x61, 0x76, 0x42, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x42, 0x65, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x42, 0x6f, 0x78,
		0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x46, 0x6f, 0x78, 0x42,
		0x4d, 0x4d, 0x34, 0x34, 0x33, 0x44, 0x42, 0x37, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x38, 0x20,
		0x46, 0x6f, 0x78, 0x42, 0x38, 0x20, 0x46, 0x6f, 0x78, 0x2b, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x31,
		0x57, 0x42, 0x38, 0x4d, 0x42, 0x4d, 0x4d, 0x34, 0x34, 0x32, 0x44, 0x42, 0x37, 0x42, 0x4d, 0x4d,
		0x35, 0x33, 0x31, 0x44, 0x42, 0x36, 0x42, 0x4d, 0x4d, 0x35, 0x33, 0x31, 0x41, 0x42, 0x35, 0x42,
		0x4d, 0x4d, 0x35, 0x34, 0x31, 0x41, 0x42, 0x35, 0x2b, 0x42, 0x34, 0x42, 0x4d, 0x4d, 0x34, 0x34,
		0x31, 0x44, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x42,
		0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4e, 0x46, 0x43, 0x42, 0x4d, 0x4d, 0x35, 0x33,
		0x31, 0x42, 0x42, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x42, 0x4d, 0x4d, 0x35, 0x34, 0x32, 0x44, 0x42, 0x33, 0x2b, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31,
		0x44, 0x42, 0x33, 0x42, 0x4d, 0x4d, 0x35, 0x34, 0x31, 0x57, 0x42, 0x37, 0x52, 0x20, 0x46, 0x6f,
		0x78, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33, 0x32, 0x20, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x35, 0x33,
		0x32, 0x53, 0x42, 0x4d, 0x4d, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x63, 0x73,
		0x24, 0x31, 0x2d, 0x42, 0x4c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4b,
		0x33, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x74, 0x6f, 0x6e, 0x42, 0x74, 0x20, 0x24, 0x31,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x24, 0x31, 0x41, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x38, 0x30, 0x53, 0x41, 0x33, 0x30,
		0x2d, 0x52, 0x55, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30,
		0x50, 0x72, 0x6f, 0x2d, 0x46, 0x42, 0x56, 0x39, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x36, 0x30, 0x30, 0x30, 0x20, 0x53, 0x45, 0x45, 0x37, 0x73,
		0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x20, 0x38, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x68,
		0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x57, 0x41, 0x56, 0x45, 0x20, 0x36, 0x43, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x36, 0x43, 0x57, 0x41, 0x56, 0x45, 0x20, 0x38, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38,
		0x48, 0x45, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x53, 0x4f,
		0x4c, 0x49, 0x44, 0x5f, 0x34, 0x47, 0x31, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x34, 0x20, 0x47,
		0x31, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x20, 0x34, 0x20, 0x47, 0x32, 0x53, 0x6f, 0x6c, 0x69, 0x64,
		0x2d, 0x34, 0x20, 0x47, 0x32, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x4d, 0x45, 0x47, 0x41, 0x20, 0x31, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31,
		0x20, 0x53, 0x45, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x75,
		0x70, 0x75, 0x6e, 0x6b, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x24,
		0x31, 0x43, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x41, 0x31, 0x30, 0x2e,
		0x33, 0x30, 0x32, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30,
		0x31, 0x41, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x31, 0x30, 0x30, 0x31,
		0x53, 0x6f, 0x75, 0x6e, 0x64, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x53, 0x32, 0x45, 0x6e, 0x64,
		0x65, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73,
		0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x5f, 0x41, 0x31, 0x30, 0x5f,
		0x47, 0x34, 0x30, 0x33, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x41, 0x31, 0x30,
		0x2e, 0x47, 0x34, 0x30, 0x33, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x73, 0x20, 0x24, 0x31,
		0x53, 0x4c, 0x70, 0x6c, 0x75, 0x73, 0x30, 0x32, 0x53, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x30, 0x32, 0x42, 0x50, 0x20, 0x24, 0x31, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x31,
		0x39, 0x53, 0x4d, 0x20, 0x30, 0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x2d, 0x53,
		0x54, 0x52, 0x45, 0x41, 0x4d, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x35,
		0x35, 0x55, 0x57, 0x35, 0x30, 0x30, 0x30, 0x54, 0x42, 0x45, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x2d,
		0x39, 0x31, 0x39, 0x38, 0x34, 0x35, 0x42, 0x45, 0x20, 0x63, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x42, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x73,
		0x65, 0x72, 0x54, 0x41, 0x42, 0x31, 0x30, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41, 0x42, 0x31, 0x31,
		0x5f, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x31, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41, 0x42,
		0x38, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x38, 0x20, 0x34, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x54, 0x41, 0x42,
		0x31, 0x30, 0x56, 0x32, 0x32, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x56, 0x32, 0x32, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x54, 0x61, 0x62, 0x37, 0x5f, 0x33, 0x47, 0x5f, 0x56, 0x32, 0x42, 0x6c, 0x61, 0x63,
		0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x20, 0x56, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x54, 0x41, 0x42, 0x37, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47,
		0x42, 0x6c, 0x75, 0x46, 0x39, 0x32, 0x20, 0x45, 0x20, 0x35, 0x47, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x64, 0x76,
		0x61, 0x6e, 0x63, 0x65, 0x20, 0x41, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x64, 0x76, 0x61, 0x6e,
		0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x54,
		0x55, 0x44, 0x49, 0x4f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64, 0x69,
		0x6f, 0x20, 0x58, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58,
		0x31, 0x30, 0x20, 0x32, 0x30, 0x32, 0x32, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x58, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x32, 0x30, 0x32, 0x33, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f,
		0x20, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x47, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x47, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x75, 0x64,
		0x69, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x20,
		0x4b, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20,
		0x4c, 0x54, 0x45, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x4f, 0x4e, 0x45, 0x53, 0x74, 0x75,
		0x64, 0x69, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x45, 0x4e,
		0x45, 0x52, 0x47, 0x59, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x24,
		0x31, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x20, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x53, 0x74,
		0x75, 0x64, 0x69, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4e, 0x65, 0x6f, 0x20, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x4e, 0x45,
		0x52, 0x47, 0x59, 0x20, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x44, 0x49, 0x41, 0x4d, 0x4f, 0x4e, 0x44,
		0x20, 0x4d, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4d, 0x47, 0x72, 0x61, 0x6e, 0x64,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x4c,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x58, 0x20, 0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53,
		0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x32, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x33, 0x30, 0x30, 0x56,
		0x46, 0x6c, 0x65, 0x78, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x4c, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x58, 0x4c, 0x44, 0x61, 0x73, 0x68, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x44, 0x41, 0x53, 0x48, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x61, 0x73, 0x68,
		0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x61, 0x73, 0x68, 0x20, 0x34, 0x2e, 0x35, 0x44,
		0x61, 0x73, 0x68, 0x20, 0x58, 0x4c, 0x50, 0x75, 0x72, 0x65, 0x20, 0x24, 0x31, 0x50, 0x55, 0x52,
		0x45, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42,
		0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58,
		0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x58, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x58, 0x38, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x58, 0x38, 0x4c, 0x49, 0x46, 0x45, 0x20, 0x4d, 0x41, 0x52, 0x4b, 0x4c, 0x69, 0x66, 0x65,
		0x20, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e,
		0x65, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x47,
		0x35, 0x30, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x48, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d,
		0x32, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x33, 0x42, 0x31, 0x31, 0x30, 0x44, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x42, 0x31, 0x35, 0x35, 0x30, 0x56, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x35, 0x47, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x32, 0x42, 0x31, 0x33, 0x35, 0x44, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x42, 0x31, 0x36,
		0x30, 0x56, 0x56, 0x69, 0x65, 0x77, 0x20, 0x35, 0x42, 0x31, 0x34, 0x30, 0x44, 0x4c, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x33, 0x56, 0x49, 0x45, 0x57, 0x20, 0x31, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31,
		0x52, 0x31, 0x20, 0x48, 0x44, 0x52, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x52, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x43, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x54, 0x61, 0x6e,
		0x6b, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d,
		0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x58, 0x74, 0x72, 0x65, 0x6d,
		0x65, 0x56, 0x49, 0x56, 0x4f, 0x20, 0x41, 0x49, 0x52, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x76,
		0x6f, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x47, 0x37, 0x43, 0x35, 0x20, 0x24, 0x31, 0x43, 0x36, 0x4c, 0x20, 0x4d, 0x61,
		0x78, 0x43, 0x24, 0x31, 0x4c, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x43, 0x35, 0x4c, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x43, 0x35, 0x4c, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x4c, 0x56,
		0x69, 0x76, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x35,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x32, 0x30, 0x31, 0x39, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x56, 0x69, 0x76, 0x6f, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x69,
		0x76, 0x6f, 0x20, 0x47, 0x6f, 0x5a, 0x6f, 0x65, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4d, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x24, 0x31, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x4c, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x38, 0x4c, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x49, 0x49, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x41, 0x37,
		0x44, 0x61, 0x73, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x45,
		0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x62, 0x6f, 0x6f, 0x4d, 0x61, 0x79, 0x61, 0x20, 0x42,
		0x75, 0x69, 0x6c, 0x64, 0x4d, 0x61, 0x79, 0x61, 0x58, 0x66, 0x69, 0x72, 0x65, 0x32, 0x58, 0x66,
		0x69, 0x72, 0x65, 0x20, 0x32, 0x50, 0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x34, 0x47, 0x58,
		0x66, 0x69, 0x72, 0x65, 0x44, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x38, 0x5f, 0x70, 0x6c,
		0x75, 0x73, 0x5f, 0x61, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x38, 0x61, 0x44, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x6b, 0x79, 0x42, 0x53,
		0x53, 0x24, 0x31, 0x42, 0x6c, 0x75, 0x65, 0x62, 0x69, 0x72, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x64,
		0x6f, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x4c, 0x55, 0x45, 0x47, 0x4f,
		0x4f, 0x44, 0x56, 0x36, 0x42, 0x6c, 0x75, 0x65, 0x77, 0x61, 0x76, 0x65, 0x33, 0x33, 0x47, 0x54,
		0x20, 0x48, 0x44, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x48, 0x44, 0x2b, 0x57, 0x56, 0x38,
		0x52, 0x2d, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61,
		0x72, 0x73, 0x68, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x56, 0x38, 0x2d, 0x4d, 0x57, 0x56,
		0x38, 0x2d, 0x4c, 0x57, 0x61, 0x76, 0x65, 0x20, 0x38, 0x20, 0x52, 0x65, 0x64, 0x20, 0x4e, 0x6f,
		0x75, 0x67, 0x61, 0x74, 0x42, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x58, 0x37, 0x4f, 0x4f,
		0x41, 0x58, 0x37, 0x30, 0x30, 0x46, 0x55, 0x4e, 0x20, 0x34, 0x20, 0x32, 0x30, 0x31, 0x38, 0x46,
		0x75, 0x6e, 0x20, 0x34, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x42, 0x36, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x4c, 0x34, 0x30, 0x42, 0x4c, 0x36, 0x30, 0x42, 0x4c, 0x36, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x36, 0x30, 0x4d, 0x5f, 0x4d, 0x56, 0x30, 0x35,
		0x42, 0x4c, 0x36, 0x30, 0x4d, 0x42, 0x35, 0x30, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x4c, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x24, 0x31, 0x42, 0x4c,
		0x35, 0x31, 0x42, 0x4c, 0x35, 0x33, 0x42, 0x4c, 0x35, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c,
		0x36, 0x24, 0x31, 0x42, 0x6f, 0x62, 0x61, 0x72, 0x72, 0x79, 0x4b, 0x31, 0x30, 0x20, 0x53, 0x45,
		0x42, 0x6f, 0x6c, 0x76, 0x61, 0x42, 0x2d, 0x54, 0x41, 0x42, 0x31, 0x30, 0x32, 0x31, 0x42, 0x6f,
		0x6f, 0x6b, 0x65, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x61,
		0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x61, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x42,
		0x6f, 0x74, 0x65, 0x63, 0x68, 0x35, 0x38, 0x42, 0x53, 0x45, 0x39, 0x35, 0x30, 0x33, 0x57, 0x5a,
		0x4f, 0x4e, 0x45, 0x57, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x77, 0x61, 0x79, 0x42, 0x72, 0x61,
		0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x31, 0x66, 0x2d, 0x70, 0x6c, 0x75, 0x73, 0x73, 0x4c,
		0x31, 0x66, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x63, 0x6f, 0x64, 0x65,
		0x20, 0x42, 0x36, 0x53, 0x42, 0x36, 0x53, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x74, 0x42, 0x52, 0x41,
		0x4e, 0x44, 0x54, 0x20, 0x46, 0x48, 0x44, 0x20, 0x54, 0x56, 0x46, 0x48, 0x44, 0x20, 0x54, 0x56,
		0x42, 0x72, 0x61, 0x76, 0x69, 0x73, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48,
		0x54, 0x41, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x75, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x72, 0x65,
		0x6e, 0x64, 0x42, 0x35, 0x30, 0x31, 0x45, 0x61, 0x73, 0x79, 0x4e, 0x31, 0x2d, 0x35, 0x37, 0x30,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x35, 0x35, 0x34, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x53,
		0x35, 0x30, 0x30, 0x20, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x41, 0x35, 0x30, 0x35, 0x20,
		0x4a, 0x4f, 0x59, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x30, 0x35, 0x20, 0x4a, 0x6f, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x4f, 0x59, 0x20, 0x4d, 0x61,
		0x78, 0x41, 0x35, 0x35, 0x32, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x6c,
		0x61, 0x73, 0x20, 0x41, 0x35, 0x35, 0x31, 0x41, 0x35, 0x35, 0x31, 0x20, 0x41, 0x74, 0x6c, 0x61,
		0x73, 0x41, 0x35, 0x30, 0x33, 0x20, 0x4a, 0x6f, 0x79, 0x41, 0x35, 0x30, 0x34, 0x20, 0x54, 0x72,
		0x61, 0x63, 0x65, 0x41, 0x35, 0x31, 0x32, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x31, 0x20, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x41,
		0x35, 0x31, 0x30, 0x5f, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x5f, 0x34, 0x47, 0x41, 0x35, 0x31, 0x30,
		0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41, 0x35, 0x30, 0x39, 0x5f, 0x4a, 0x65,
		0x61, 0x6e, 0x73, 0x41, 0x35, 0x30, 0x39, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x52, 0x41,
		0x56, 0x49, 0x53, 0x20, 0x4e, 0x45, 0x4f, 0x41, 0x34, 0x30, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x4e,
		0x31, 0x5f, 0x35, 0x35, 0x30, 0x5f, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x2d,
		0x35, 0x35, 0x30, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x4e, 0x31, 0x5f, 0x35, 0x35,
		0x31, 0x20, 0x47, 0x6c, 0x6f, 0x73, 0x73, 0x4e, 0x31, 0x2d, 0x35, 0x35, 0x31, 0x20, 0x47, 0x6c,
		0x6f, 0x73, 0x73, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x42, 0x49, 0x5a, 0x42, 0x69,
		0x7a, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x47, 0x4e, 0x50,
		0x20, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x4e, 0x50, 0x31, 0x30, 0x34, 0x20, 0x33, 0x47, 0x42,
		0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x31, 0x30, 0x33, 0x4e, 0x50, 0x31, 0x30,
		0x33, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20, 0x4e, 0x50, 0x20, 0x37, 0x34, 0x37, 0x20, 0x53,
		0x44, 0x4e, 0x50, 0x37, 0x34, 0x37, 0x20, 0x53, 0x44, 0x42, 0x52, 0x41, 0x56, 0x49, 0x53, 0x20,
		0x4e, 0x50, 0x20, 0x38, 0x34, 0x34, 0x4e, 0x50, 0x38, 0x34, 0x34, 0x42, 0x72, 0x69, 0x67, 0x68,
		0x74, 0x53, 0x69, 0x67, 0x6e, 0x42, 0x72, 0x69, 0x67, 0x6d, 0x74, 0x6f, 0x6e, 0x42, 0x54, 0x50,
		0x43, 0x2d, 0x42, 0x54, 0x50, 0x43, 0x2d, 0x31, 0x30, 0x32, 0x32, 0x51, 0x43, 0x33, 0x47, 0x2d,
		0x54, 0x56, 0x42, 0x72, 0x6f, 0x6e, 0x64, 0x69, 0x43, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x49, 0x4f,
		0x4e, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x41, 0x44, 0x49, 0x41, 0x54, 0x4f, 0x52, 0x20, 0x24, 0x31,
		0x47, 0x4c, 0x4f, 0x52, 0x59, 0x20, 0x24, 0x31, 0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x53, 0x6b, 0x79, 0x53, 0x45, 0x4e,
		0x53, 0x55, 0x45, 0x4c, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59,
		0x20, 0x24, 0x31, 0x41, 0x4d, 0x49, 0x43, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x50, 0x48,
		0x4f, 0x4e, 0x45, 0x5f, 0x34, 0x47, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x41, 0x6d, 0x69, 0x63, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x53, 0x55, 0x52, 0x46,
		0x49, 0x4e, 0x47, 0x20, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65,
		0x67, 0x75, 0x6d, 0x42, 0x75, 0x6e, 0x64, 0x79, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x77, 0x65, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x37, 0x5f,
		0x50, 0x4c, 0x55, 0x53, 0x42, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x75, 0x73, 0x68, 0x42, 0x75, 0x73, 0x68, 0x31, 0x30, 0x4e, 0x6f, 0x75, 0x31,
		0x30, 0x4e, 0x6f, 0x75, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x31, 0x20, 0x24, 0x31, 0x22,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x42, 0x55, 0x53, 0x48, 0x20, 0x53, 0x70, 0x69,
		0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f,
		0x6e, 0x65, 0x53, 0x70, 0x69, 0x72, 0x61, 0x20, 0x42, 0x32, 0x20, 0x35, 0x22, 0x42, 0x75, 0x7a,
		0x7a, 0x54, 0x56, 0x43, 0x20, 0x49, 0x64, 0x65, 0x61, 0x43, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x43, 0x35, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x6e, 0x6f, 0x61,
		0x20, 0x58, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x6e, 0x6f, 0x61, 0x5f, 0x47, 0x31, 0x4e, 0x6f, 0x61, 0x20, 0x47, 0x31, 0x6e,
		0x6f, 0x61, 0x58, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x6f, 0x61, 0x20, 0x58, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4e, 0x4f, 0x41, 0x54, 0x41, 0x42, 0x4e, 0x6f, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x43, 0x41, 0x44, 0x45, 0x4e, 0x41, 0x43, 0x41, 0x47, 0x49, 0x43, 0x41, 0x47, 0x49, 0x2d, 0x43,
		0x41, 0x47, 0x49, 0x2d, 0x4f, 0x4d, 0x45, 0x47, 0x41, 0x43, 0x43, 0x49, 0x54, 0x58, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x67, 0x75, 0x65, 0x20, 0x34, 0x30, 0x35, 0x4b,
		0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x4b, 0x43, 0x54, 0x2d,
		0x24, 0x31, 0x43, 0x45, 0x50, 0x54, 0x45, 0x52, 0x43, 0x47, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36,
		0x45, 0x4f, 0x4e, 0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4f, 0x4e,
		0x20, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x42, 0x6c, 0x61, 0x7a, 0x65,
		0x20, 0x24, 0x31, 0x43, 0x47, 0x56, 0x43, 0x48, 0x43, 0x4e, 0x41, 0x56, 0x43, 0x4b, 0x4b, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x55, 0x4b, 0x45, 0x20, 0x24, 0x31, 0x44, 0x55, 0x4b,
		0x45, 0x20, 0x32, 0x43, 0x4d, 0x46, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x43, 0x4f, 0x4c,
		0x4f, 0x52, 0x52, 0x4f, 0x4f, 0x4d, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x4d, 0x41, 0x58, 0x42, 0x6c,
		0x75, 0x65, 0x53, 0x31, 0x30, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x53, 0x31, 0x30, 0x43, 0x4f, 0x4e,
		0x53, 0x55, 0x4e, 0x47, 0x43, 0x4f, 0x4f, 0x44, 0x2d, 0x45, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78,
		0x20, 0x34, 0x4b, 0x43, 0x4f, 0x52, 0x4e, 0x43, 0x6f, 0x63, 0x6f, 0x31, 0x30, 0x5f, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x5f, 0x34, 0x47, 0x43, 0x6f, 0x63, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x38, 0x20, 0x33, 0x47,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x52, 0x24, 0x31, 0x30, 0x54, 0x72, 0x6f, 0x6e, 0x69, 0x6b,
		0x20, 0x24, 0x31, 0x43, 0x24, 0x31, 0x43, 0x4f, 0x59, 0x4f, 0x54, 0x45, 0x31, 0x30, 0x39, 0x30,
		0x20, 0x44, 0x56, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x50, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x54, 0x41, 0x42, 0x20, 0x4b, 0x49,
		0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x43, 0x68, 0x65, 0x65, 0x74, 0x61, 0x68, 0x24, 0x31, 0x52, 0x41, 0x49, 0x4e, 0x42,
		0x4f, 0x57, 0x20, 0x32, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x32, 0x52, 0x41, 0x49,
		0x4e, 0x42, 0x4f, 0x57, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x44, 0x49, 0x4e, 0x4f, 0x53,
		0x41, 0x55, 0x52, 0x44, 0x69, 0x6e, 0x6f, 0x73, 0x61, 0x75, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x4b, 0x69, 0x6e,
		0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x41, 0x58, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x41, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x32, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x4d,
		0x49, 0x4e, 0x49, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e,
		0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x4e,
		0x47, 0x4b, 0x4f, 0x4e, 0x47, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b,
		0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x49, 0x4e, 0x47, 0x4b, 0x4f, 0x4e, 0x47,
		0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x24,
		0x31, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f, 0x4e, 0x47, 0x20, 0x43, 0x53, 0x4b, 0x69, 0x6e,
		0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x43, 0x53, 0x4b, 0x49, 0x4e, 0x47, 0x20, 0x4b, 0x4f,
		0x4e, 0x47, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x51, 0x55, 0x45, 0x53, 0x54,
		0x20, 0x4c, 0x49, 0x54, 0x45, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51,
		0x55, 0x45, 0x53, 0x54, 0x51, 0x75, 0x65, 0x73, 0x74, 0x58, 0x32, 0x30, 0x20, 0x50, 0x52, 0x4f,
		0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x4f, 0x52, 0x52, 0x4f, 0x20, 0x30, 0x30, 0x31,
		0x5a, 0x6f, 0x72, 0x72, 0x6f, 0x20, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x6e, 0x69, 0x74, 0x6f, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x4f, 0x54, 0x45,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x53, 0x43,
		0x55, 0x42, 0x4f, 0x54, 0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x55, 0x42,
		0x4f, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x43, 0x55, 0x42, 0x4f, 0x54, 0x5f, 0x58, 0x31,
		0x38, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x31, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61,
		0x66, 0x75, 0x72, 0x79, 0x20, 0x56, 0x31, 0x43, 0x55, 0x44, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32,
		0x29, 0x43, 0x56, 0x54, 0x45, 0x43, 0x58, 0x43, 0x58, 0x39, 0x30, 0x30, 0x36, 0x43, 0x61, 0x6d,
		0x66, 0x6f, 0x6e, 0x65, 0x46, 0x75, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x61, 0x6e, 0x61, 0x69, 0x6d, 0x61, 0x43, 0x61, 0x6e, 0x61, 0x6c, 0x20, 0x44, 0x69,
		0x67, 0x69, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6e,
		0x61, 0x6c, 0x2b, 0x43, 0x41, 0x4e, 0x41, 0x4c, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x56, 0x20,
		0x42, 0x6f, 0x78, 0x43, 0x61, 0x6e, 0x67, 0x75, 0x72, 0x6f, 0x43, 0x61, 0x70, 0x69, 0x74, 0x65,
		0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x76, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x61,
		0x72, 0x62, 0x6f, 0x6e, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x62, 0x6f,
		0x6e, 0x20, 0x31, 0x20, 0x4d, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x4f, 0x6e, 0x65, 0x20, 0x4d,
		0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x43, 0x61, 0x72, 0x72, 0x65, 0x66, 0x6f, 0x75, 0x72, 0x43,
		0x54, 0x38, 0x32, 0x30, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x4e, 0x65, 0x6f, 0x32, 0x43, 0x54, 0x24, 0x31, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x47, 0x27,
		0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x61, 0x76, 0x69, 0x6e, 0x65, 0x47, 0x27, 0x7a, 0x4f, 0x6e,
		0x65, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x47, 0x27, 0x7a, 0x4f, 0x6e, 0x65,
		0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45,
		0x43, 0x61, 0x73, 0x70, 0x65, 0x72, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x43, 0x41, 0x53, 0x50, 0x45, 0x52, 0x5f, 0x56, 0x49,
		0x41, 0x5f, 0x45, 0x31, 0x63, 0x56, 0x49, 0x41, 0x20, 0x45, 0x31, 0x43, 0x4c, 0x31, 0x30, 0x20,
		0x34, 0x2e, 0x35, 0x47, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x43, 0x61, 0x74,
		0x42, 0x31, 0x35, 0x51, 0x43, 0x41, 0x54, 0x20, 0x42, 0x33, 0x35, 0x42, 0x33, 0x35, 0x53, 0x36,
		0x31, 0x53, 0x36, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x32, 0x32, 0x20, 0x46, 0x4c, 0x49, 0x50,
		0x53, 0x32, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
		0x6c, 0x69, 0x64, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x61, 0x73, 0x65, 0x20, 0x35, 0x2e, 0x30,
		0x22, 0x43, 0x41, 0x56, 0x49, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x33, 0x47, 0x52, 0x51, 0x42,
		0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x52, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42,
		0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x31, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x42, 0x61, 0x73,
		0x65, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x61, 0x76, 0x69, 0x6f,
		0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30, 0x42, 0x61, 0x73, 0x65, 0x20, 0x31, 0x30,
		0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x43, 0x61, 0x76, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x42, 0x61, 0x73, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x20, 0x53, 0x69,
		0x6c, 0x76, 0x65, 0x72, 0x43, 0x65, 0x69, 0x62, 0x61, 0x6c, 0x41, 0x43, 0x52, 0x55, 0x58, 0xc3,
		0x81, 0x63, 0x72, 0x75, 0x78, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x52, 0x49, 0x58, 0x42, 0x65,
		0x6c, 0x6c, 0x61, 0x74, 0x72, 0x69, 0x78, 0x42, 0x45, 0x54, 0x45, 0x4c, 0x47, 0x45, 0x55, 0x53,
		0x45, 0x42, 0x65, 0x74, 0x65, 0x6c, 0x67, 0x65, 0x75, 0x73, 0x65, 0x47, 0x41, 0x43, 0x52, 0x55,
		0x58, 0x47, 0x61, 0x63, 0x72, 0x75, 0x78, 0x4b, 0x69, 0x6c, 0x2d, 0x38, 0x32, 0x57, 0x46, 0x44,
		0x43, 0x4b, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x20, 0x54, 0x38, 0x43, 0x65, 0x6c, 0x63, 0x75, 0x73,
		0x43, 0x65, 0x6c, 0x6b, 0x6f, 0x6e, 0x34, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x4d, 0x69,
		0x6c, 0x6c, 0x65, 0x6e, 0x6e, 0x69, 0x61, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x32, 0x47, 0x42, 0x53,
		0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x20, 0x53, 0x74, 0x61, 0x72, 0x32, 0x47, 0x42, 0x58, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x32, 0x47, 0x42, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c,
		0x69, 0x51, 0x20, 0x32, 0x51, 0x34, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6e, 0x69, 0x51,
		0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x43, 0x53, 0x75, 0x6d, 0x6d, 0x69, 0x74, 0x46, 0x61, 0x6e, 0x74,
		0x61, 0x73, 0x79, 0x43, 0x45, 0x4c, 0x4c, 0x43, 0x5f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x45,
		0x76, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x46,
		0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x32, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x73, 0x68, 0x69,
		0x6f, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x48, 0x49, 0x43, 0x5f, 0x58, 0x31,
		0x43, 0x68, 0x69, 0x63, 0x20, 0x58, 0x31, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x63, 0x6f, 0x6d, 0x53,
		0x36, 0x32, 0x53, 0x35, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x31, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73,
		0x6d, 0x61, 0x73, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x73, 0x6d, 0x61, 0x73, 0x50, 0x41, 0x44, 0x55,
		0x41, 0x50, 0x61, 0x64, 0x75, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x50, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4c, 0x33, 0x47, 0x31, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x77, 0x61, 0x79,
		0x43, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x6f, 0x6e, 0x67, 0x48, 0x4f, 0x4e, 0x20, 0x48, 0x30, 0x31,
		0x48, 0x4f, 0x4e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x48, 0x30, 0x31, 0x47, 0x48, 0x4f, 0x4e,
		0x47, 0x56, 0x31, 0x32, 0x56, 0x31, 0x32, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x5f, 0x48, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x48, 0x44, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x4c, 0x41, 0x52, 0x45, 0x20, 0x4c, 0x49, 0x54,
		0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x53, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x46,
		0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x24, 0x31, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20,
		0x58, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x41, 0x35, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x20,
		0x56, 0x24, 0x31, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x58, 0x4c, 0x20, 0x32, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x5f,
		0x4a, 0x32, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x4a, 0x32, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x34, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4d,
		0x61, 0x78, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x53, 0x35, 0x4c, 0x69, 0x74, 0x65, 0x44, 0x54, 0x56,
		0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x44, 0x54,
		0x56, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x53, 0x32, 0x20, 0x44, 0x54, 0x56, 0x46, 0x6c, 0x61,
		0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x72, 0x65,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x33, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x4c,
		0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x4f, 0x6d, 0x65,
		0x67, 0x61, 0x5f, 0x48, 0x44, 0x5f, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x48,
		0x44, 0x20, 0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e,
		0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x4f,
		0x6d, 0x65, 0x67, 0x61, 0x20, 0x58, 0x53, 0x70, 0x69, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x5f, 0x54, 0x77, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x20, 0x54, 0x77, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x24, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36, 0x20, 0x70, 0x6c, 0x75,
		0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52,
		0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x52, 0x24,
		0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x45, 0x79, 0x65, 0x43, 0x4f, 0x53, 0x4d, 0x4f,
		0x53, 0x20, 0x54, 0x48, 0x52, 0x45, 0x45, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20, 0x33, 0x43,
		0x55, 0x42, 0x49, 0x58, 0x20, 0x43, 0x55, 0x42, 0x45, 0x20, 0x33, 0x43, 0x75, 0x62, 0x69, 0x78,
		0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x33, 0x52, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x52,
		0x61, 0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70,
		0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x64, 0x61, 0x72, 0x20, 0x44, 0x65, 0x6c, 0x75,
		0x78, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x32, 0x5f,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x54, 0x56, 0x53, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x56, 0x24, 0x31, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x41, 0x75, 0x72, 0x61, 0x20, 0x33, 0x73, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x33, 0x53, 0x4d, 0x41, 0x49, 0x41, 0x20, 0x50, 0x41, 0x44, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x4d, 0x61, 0x69, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43,
		0x68, 0x69, 0x63, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x4c, 0x54, 0x4f, 0x20,
		0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x42, 0x6f, 0x6d, 0x62, 0x6f, 0x41,
		0x4c, 0x54, 0x4f, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x74, 0x6f, 0x20,
		0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x20, 0x63, 0x6c,
		0x61, 0x73, 0x73, 0x69, 0x63, 0x41, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x43, 0x6c, 0x61, 0x73,
		0x73, 0x69, 0x63, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61,
		0x41, 0x6c, 0x74, 0x6f, 0x20, 0x45, 0x73, 0x74, 0x72, 0x65, 0x6c, 0x6c, 0x61, 0x41, 0x4c, 0x54,
		0x4f, 0x20, 0x4a, 0x55, 0x45, 0x47, 0x4f, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x4a, 0x75, 0x65, 0x67,
		0x6f, 0x41, 0x4c, 0x54, 0x4f, 0x20, 0x53, 0x55, 0x42, 0x49, 0x52, 0x41, 0x6c, 0x74, 0x6f, 0x20,
		0x53, 0x75, 0x62, 0x69, 0x72, 0x41, 0x6c, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x6a, 0x6f, 0x73,
		0x20, 0x24, 0x31, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x4e, 0x55, 0x42, 0x45, 0x4f, 0x6a, 0x6f, 0x73,
		0x20, 0x4e, 0x75, 0x62, 0x65, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x43, 0x41, 0x4d, 0x42, 0x49, 0x4f,
		0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x4f, 0x52, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4f, 0x72, 0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20,
		0x4c, 0x55, 0x4e, 0x41, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x4f, 0x4a, 0x4f,
		0x53, 0x20, 0x43, 0x49, 0x45, 0x4c, 0x4f, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x43, 0x69, 0x65, 0x6c,
		0x6f, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x56, 0x49, 0x56, 0x49, 0x52, 0x4f, 0x6a, 0x6f,
		0x73, 0x20, 0x56, 0x69, 0x76, 0x69, 0x72, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f, 0x53, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4f, 0x4a, 0x4f, 0x53, 0x20, 0x44, 0x4f, 0x53, 0x4f, 0x6a, 0x6f, 0x73, 0x20, 0x44, 0x4f,
		0x53, 0x46, 0x55, 0x45, 0x47, 0x4f, 0x20, 0x4d, 0x41, 0x58, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20,
		0x4d, 0x61, 0x78, 0x43, 0x68, 0x69, 0x6c, 0x69, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x2d, 0x42,
		0x6f, 0x61, 0x72, 0x64, 0x20, 0x24, 0x31, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x4d, 0x36, 0x35, 0x31, 0x43, 0x59, 0x43, 0x4d, 0x43, 0x43, 0x2d, 0x4d, 0x38,
		0x36, 0x30, 0x4e, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x36, 0x35, 0x33, 0x41, 0x33, 0x73, 0x4d,
		0x37, 0x36, 0x32, 0x47, 0x43, 0x68, 0x69, 0x6e, 0x61, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f,
		0x6d, 0x54, 0x59, 0x48, 0x36, 0x32, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20,
		0x31, 0x31, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x31, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d,
		0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36,
		0x31, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47,
		0x54, 0x59, 0x48, 0x36, 0x33, 0x32, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x41,
		0x32, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x36, 0x33, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d,
		0x61, 0x6e, 0x67, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x54, 0x59, 0x48, 0x32, 0x31, 0x31, 0x55,
		0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x54, 0x59, 0x48, 0x32, 0x30, 0x31, 0x48, 0x54, 0x69, 0x61, 0x6e, 0x79, 0x69, 0x20, 0x4f,
		0x6e, 0x65, 0x43, 0x68, 0x75, 0x77, 0x69, 0x48, 0x69, 0x38, 0x24, 0x31, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x24, 0x31, 0x20, 0x24, 0x32, 0x48, 0x69, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x41, 0x69,
		0x72, 0x48, 0x69, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x69, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x61, 0x78, 0x48, 0x69, 0x24, 0x31, 0x20, 0x41, 0x69, 0x72, 0x48, 0x69, 0x38, 0x20,
		0x53, 0x45, 0x48, 0x69, 0x31, 0x30, 0x5f, 0x58, 0x50, 0x72, 0x6f, 0x5f, 0x50, 0x61, 0x64, 0x48,
		0x69, 0x31, 0x30, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x61, 0x64, 0x48, 0x69, 0x31, 0x30,
		0x20, 0x58, 0x50, 0x72, 0x6f, 0x48, 0x69, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69,
		0x31, 0x30, 0x53, 0x75, 0x72, 0x50, 0x61, 0x64, 0x48, 0x69, 0x42, 0x6f, 0x78, 0x20, 0x48, 0x65,
		0x72, 0x6f, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x43, 0x69, 0x74, 0x79, 0x63,
		0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x74, 0x61, 0x41, 0x69, 0x72, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x42, 0x38, 0x4c,
		0x69, 0x74, 0x65, 0x42, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x38, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x35, 0x50, 0x72, 0x6f, 0x42, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x43, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x6f, 0x6e, 0x69, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x28, 0x24,
		0x31, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61,
		0x64, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x4d, 0x46, 0x43, 0x5f, 0x38, 0x43, 0x6c, 0x65,
		0x6d, 0x70, 0x61, 0x64, 0x20, 0x38, 0x43, 0x4c, 0x45, 0x4d, 0x50, 0x41, 0x44, 0x5f, 0x37, 0x5f,
		0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x61, 0x64, 0x20, 0x37, 0x53, 0x43, 0x6c, 0x65, 0x6d, 0x70,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x43, 0x6c, 0x65, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x43, 0x35,
		0x5f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x43, 0x35,
		0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x6e, 0x65, 0x54,
		0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24,
		0x31, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x54, 0x68, 0x72,
		0x69, 0x6c, 0x6c, 0x20, 0x53, 0x6e, 0x61, 0x70, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x31, 0x36, 0x47, 0x42, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x41, 0x63, 0x63, 0x65, 0x73,
		0x73, 0x54, 0x68, 0x72, 0x69, 0x6c, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x68, 0x72, 0x69,
		0x6c, 0x6c, 0x20, 0x48, 0x44, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x20, 0x32, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x43, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x43,
		0x4e, 0x42, 0x41, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x61, 0x64,
		0x2b, 0x56, 0x54, 0x24, 0x31, 0x2b, 0x56, 0x54, 0x51, 0x24, 0x31, 0x43, 0x6c, 0x6f, 0x75, 0x74,
		0x48, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x31, 0x58, 0x34, 0x31, 0x37, 0x20, 0x41, 0x6d, 0x61,
		0x7a, 0x65, 0x58, 0x34, 0x31, 0x38, 0x20, 0x5a, 0x65, 0x73, 0x74, 0x58, 0x34, 0x32, 0x31, 0x20,
		0x4e, 0x6f, 0x76, 0x61, 0x58, 0x34, 0x32, 0x32, 0x20, 0x45, 0x78, 0x6f, 0x74, 0x69, 0x63, 0x58,
		0x34, 0x32, 0x35, 0x20, 0x53, 0x68, 0x61, 0x76, 0x69, 0x74, 0x58, 0x34, 0x32, 0x38, 0x20, 0x41,
		0x73, 0x74, 0x75, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x43, 0x6e,
		0x4d, 0x43, 0x6e, 0x4d, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x43, 0x6f, 0x62, 0x61, 0x6c, 0x74, 0x53, 0x4d, 0x24, 0x31, 0x54, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x54, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x6f, 0x62, 0x79, 0x20, 0x4b, 0x79, 0x72,
		0x6f, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x41,
		0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x45,
		0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x43, 0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x35, 0x58,
		0x50, 0x72, 0x69, 0x64, 0x65, 0x20, 0x31, 0x58, 0x43, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65,
		0x20, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x76, 0x6f, 0x20, 0x35, 0x2e, 0x30, 0x49, 0x6d, 0x70,
		0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x2e, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x2e, 0x24, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24,
		0x31, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x37, 0x38,
		0x35, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x54, 0x54, 0x48, 0x37, 0x48, 0x37, 0x54, 0x54, 0x4c, 0x37,
		0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4c, 0x37, 0x5f, 0x33, 0x47, 0x4c, 0x37, 0x20, 0x33, 0x47, 0x54,
		0x54, 0x4c, 0x37, 0x31, 0x33, 0x47, 0x4c, 0x37, 0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x54, 0x4c,
		0x38, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x5f, 0x54,
		0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x4d, 0x37, 0x4d, 0x37, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x5f,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x4d, 0x38, 0x4d, 0x38, 0x54, 0x45, 0x53, 0x4c, 0x41,
		0x20, 0x58, 0x54, 0x35, 0x35, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x6f, 0x78, 0x20, 0x58,
		0x54, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x69, 0x6f, 0x47, 0x54, 0x31, 0x30, 0x30, 0x43, 0x54,
		0x37, 0x30, 0x31, 0x57, 0x43, 0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x43,
		0x54, 0x37, 0x30, 0x31, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x53, 0x63,
		0x6f, 0x70, 0x65, 0x56, 0x49, 0x50, 0x37, 0x38, 0x30, 0x32, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6c,
		0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x43, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x64, 0x65, 0x52, 0x65,
		0x61, 0x64, 0x4d, 0x61, 0x6e, 0x20, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x75,
		0x6d, 0x43, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x36,
		0x43, 0x2d, 0x37, 0x32, 0x31, 0x46, 0x6c, 0x79, 0x66, 0x69, 0x78, 0x20, 0x51, 0x50, 0x6c, 0x75,
		0x73, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x2d, 0x37, 0x35, 0x34, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x2d, 0x37, 0x35, 0x34, 0x43, 0x6f, 0x6e,
		0x63, 0x6f, 0x72, 0x64, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x48, 0x53, 0x52, 0x61, 0x6e,
		0x67, 0x65, 0x20, 0x48, 0x53, 0x43, 0x6f, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x54, 0x41, 0x42, 0x20,
		0x24, 0x31, 0x4e, 0x4f, 0x56, 0x41, 0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x30, 0x50,
		0x48, 0x53, 0x2d, 0x36, 0x30, 0x31, 0x43, 0x38, 0x47, 0x54, 0x36, 0x30, 0x20, 0x50, 0x52, 0x4f,
		0x47, 0x54, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x34, 0x2b, 0x20, 0x4e, 0x6f, 0x69, 0x72,
		0x43, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x43,
		0x32, 0x43, 0x35, 0x43, 0x38, 0x53, 0x43, 0x37, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41,
		0x39, 0x43, 0x36, 0x2b, 0x43, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x32, 0x53, 0x47, 0x72, 0x69, 0x66, 0x66,
		0x65, 0x20, 0x47, 0x34, 0x53, 0x50, 0x34, 0x31, 0x33, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x54, 0x31, 0x50, 0x4b, 0x54, 0x34, 0x31, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47,
		0x32, 0x50, 0x48, 0x51, 0x35, 0x31, 0x39, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34,
		0x53, 0x50, 0x48, 0x51, 0x35, 0x32, 0x30, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x35,
		0x50, 0x41, 0x4d, 0x35, 0x32, 0x34, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x50, 0x48, 0x51, 0x35, 0x32, 0x35, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65,
		0x20, 0x47, 0x36, 0x50, 0x48, 0x51, 0x35, 0x32, 0x36, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20,
		0x47, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x37, 0x50, 0x6c,
		0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20,
		0x50, 0x35, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69,
		0x74, 0x79, 0x20, 0x61, 0x34, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x41, 0x34,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x65, 0x35, 0x20, 0x70, 0x72, 0x6f, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x35, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x49, 0x24, 0x31, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x47, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x72, 0x69, 0x66, 0x66, 0x65, 0x20, 0x54, 0x24, 0x31, 0x50, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x50, 0x38, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x41,
		0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x31, 0x30, 0x30, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65,
		0x20, 0x41, 0x35, 0x35, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20,
		0x41, 0x31, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x41,
		0x6c, 0x6c, 0x75, 0x72, 0x65, 0x20, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x6c,
		0x75, 0x72, 0x65, 0x20, 0x41, 0x35, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6c, 0x75, 0x6d,
		0x65, 0x20, 0x48, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x6c, 0x75, 0x6d, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x75,
		0x6d, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x50, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x47, 0x4e, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x63,
		0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x36, 0x43,
		0x6f, 0x6e, 0x6e, 0x65, 0x78, 0x53, 0x45, 0x4e, 0x5f, 0x31, 0x30, 0x35, 0x35, 0x5f, 0x41, 0x52,
		0x4d, 0x53, 0x65, 0x72, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x31, 0x30, 0x35, 0x35, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x43, 0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x24, 0x31, 0x43,
		0x6f, 0x6e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x46, 0x32, 0x46, 0x32, 0x43, 0x6f, 0x6e, 0x74,
		0x69, 0x78, 0x6f, 0x43, 0x58, 0x2d, 0x31, 0x30, 0x34, 0x35, 0x20, 0x33, 0x47, 0x43, 0x58, 0x2d,
		0x31, 0x30, 0x36, 0x35, 0x20, 0x33, 0x47, 0x47, 0x58, 0x2d, 0x31, 0x30, 0x33, 0x35, 0x20, 0x34,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x31, 0x31, 0x36, 0x30, 0x20, 0x34, 0x47,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x35, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x42, 0x31, 0x30, 0x38, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4b, 0x54, 0x31, 0x30, 0x37, 0x20, 0x33, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54,
		0x31, 0x30, 0x39, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x37, 0x31,
		0x35, 0x20, 0x33, 0x47, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x54, 0x39, 0x39, 0x35, 0x20, 0x33,
		0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4b, 0x54, 0x31, 0x31, 0x30, 0x30, 0x47, 0x54, 0x43,
		0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x64, 0x43, 0x50, 0x32, 0x33, 0x4e, 0x56, 0x33, 0x59, 0x36, 0x30,
		0x20, 0x35, 0x47, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x6f,
		0x6f, 0x6c, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x43, 0x37, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x37, 0x4e, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56,
		0x4c, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x43, 0x33, 0x37, 0x30, 0x31, 0x41, 0x52, 0x45, 0x56, 0x56,
		0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50, 0x33, 0x36, 0x36, 0x37, 0x41, 0x54, 0x54, 0x61,
		0x73, 0x6b, 0x65, 0x72, 0x38, 0x31, 0x39, 0x30, 0x51, 0x31, 0x38, 0x32, 0x35, 0x2d, 0x45, 0x30,
		0x4e, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x35, 0x43, 0x42, 0x65, 0x6c, 0x6c, 0x61, 0x7a,
		0x61, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x67,
		0x61, 0x63, 0x79, 0x20, 0x53, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x53, 0x20, 0x53, 0x52,
		0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x42, 0x72, 0x69, 0x73, 0x61, 0x53, 0x75, 0x76, 0x61,
		0x4e, 0x32, 0x4d, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x43,
		0x6f, 0x6f, 0x6c, 0x20, 0x53, 0x31, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x33, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x39, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x39, 0x53, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32,
		0x30, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c,
		0x20, 0x33, 0x30, 0x69, 0x43, 0x50, 0x31, 0x32, 0x50, 0x43, 0x50, 0x31, 0x32, 0x73, 0x32, 0x36,
		0x41, 0x72, 0x69, 0x73, 0x65, 0x31, 0x30, 0x41, 0x45, 0x35, 0x30, 0x31, 0x4d, 0x6f, 0x64, 0x65,
		0x6e, 0x61, 0x45, 0x35, 0x30, 0x32, 0x4d, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x20, 0x32, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x33, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x36, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x4d, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x54, 0x61,
		0x62, 0x4d, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x54, 0x61, 0x62, 0x43, 0x6f, 0x76, 0x69,
		0x61, 0x43, 0x72, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x74, 0x57, 0x49, 0x4e, 0x47, 0x20, 0x35, 0x57,
		0x69, 0x6e, 0x67, 0x20, 0x35, 0x57, 0x49, 0x4e, 0x47, 0x39, 0x57, 0x69, 0x6e, 0x67, 0x20, 0x39,
		0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x24, 0x31, 0x43, 0x72, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x6e,
		0x43, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x46, 0x6c, 0x69,
		0x70, 0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x53, 0x4c, 0x31, 0x30, 0x31,
		0x41, 0x45, 0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x55, 0x36, 0x30,
		0x38, 0x30, 0x41, 0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47, 0x55, 0x36, 0x35, 0x35,
		0x41, 0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x32, 0x20, 0x35, 0x47, 0x55, 0x33, 0x38, 0x30,
		0x41, 0x43, 0x44, 0x65, 0x62, 0x75, 0x74, 0x20, 0x53, 0x32, 0x55, 0x36, 0x38, 0x30, 0x41, 0x43,
		0x4f, 0x75, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x31, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x35, 0x47, 0x55, 0x33, 0x30, 0x34, 0x41, 0x43, 0x49, 0x63, 0x6f,
		0x6e, 0x55, 0x33, 0x32, 0x35, 0x41, 0x43, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x43, 0x32,
		0x31, 0x31, 0x30, 0x30, 0x32, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x33, 0x57, 0x54, 0x43, 0x4b, 0x54,
		0x30, 0x31, 0x49, 0x63, 0x6f, 0x6e, 0x20, 0x34, 0x53, 0x4c, 0x31, 0x31, 0x32, 0x43, 0x49, 0x63,
		0x6f, 0x6e, 0x20, 0x35, 0x56, 0x33, 0x35, 0x30, 0x43, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e,
		0x63, 0x65, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x34, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x53, 0x4e, 0x33, 0x30, 0x34, 0x41, 0x45, 0x49, 0x6e, 0x6e, 0x6f,
		0x76, 0x61, 0x74, 0x65, 0x20, 0x45, 0x20, 0x35, 0x47, 0x55, 0x37, 0x30, 0x35, 0x41, 0x43, 0x4f,
		0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x43, 0x31, 0x30, 0x30, 0x32, 0x4f, 0x76, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x20, 0x32, 0x55, 0x36, 0x36, 0x38, 0x41, 0x43, 0x4f, 0x76, 0x61, 0x74, 0x69,
		0x6f, 0x6e, 0x20, 0x33, 0x45, 0x43, 0x32, 0x31, 0x31, 0x30, 0x30, 0x33, 0x53, 0x70, 0x6c, 0x65,
		0x6e, 0x64, 0x6f, 0x72, 0x53, 0x4c, 0x31, 0x30, 0x30, 0x45, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f,
		0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x72, 0x69, 0x75, 0x73, 0x20, 0x4d, 0x65, 0x61, 0x43,
		0x72, 0x6f, 0x6e, 0x79, 0x37, 0x30, 0x32, 0x31, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x63, 0x61, 0x6c,
		0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x58, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x53, 0x34, 0x43,
		0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x2d, 0x24, 0x31,
		0x4f, 0x44, 0x59, 0x53, 0x53, 0x45, 0x59, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x44, 0x59, 0x53,
		0x53, 0x45, 0x59, 0x2b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x31, 0x4f, 0x44,
		0x59, 0x53, 0x53, 0x45, 0x59, 0x20, 0x53, 0x31, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d,
		0x24, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x65, 0x6b, 0x6b, 0x65, 0x72, 0x2d, 0x24,
		0x31, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2d, 0x24, 0x31, 0x43, 0x6f, 0x72, 0x65, 0x2d,
		0x54, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x42,
		0x39, 0x30, 0x32, 0x42, 0x6c, 0x6f, 0x73, 0x73, 0x6f, 0x6d, 0x20, 0x42, 0x39, 0x30, 0x32, 0x43,
		0x74, 0x72, 0x6f, 0x6e, 0x69, 0x71, 0x53, 0x4e, 0x4f, 0x4f, 0x4b, 0x2d, 0x58, 0x31, 0x30, 0x53,
		0x6e, 0x6f, 0x6f, 0x6b, 0x20, 0x58, 0x31, 0x30, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x38, 0x58, 0x55,
		0x32, 0x35, 0x47, 0x54, 0x55, 0x33, 0x30, 0x47, 0x54, 0x32, 0x55, 0x32, 0x37, 0x47, 0x54, 0x54,
		0x61, 0x6c, 0x6b, 0x20, 0x38, 0x55, 0x35, 0x35, 0x47, 0x54, 0x5f, 0x43, 0x38, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x37, 0x39, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x37, 0x58, 0x55, 0x33, 0x31, 0x47, 0x54,
		0x54, 0x61, 0x6c, 0x6b, 0x20, 0x31, 0x30, 0x54, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61,
		0x74, 0x65, 0x55, 0x35, 0x35, 0x47, 0x54, 0x54, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x36, 0x35, 0x47, 0x54, 0x54, 0x61, 0x6c, 0x6b,
		0x20, 0x39, 0x58, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x41, 0x69, 0x72, 0x69, 0x57,
		0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20, 0x33, 0x47, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x38, 0x20,
		0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30,
		0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31,
		0x30, 0x69, 0x57, 0x6f, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x57, 0x6f,
		0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x68, 0x69, 0x70, 0x54, 0x39,
		0x37, 0x30, 0x20, 0x34, 0x47, 0x43, 0x75, 0x69, 0x75, 0x64, 0x63, 0x75, 0x69, 0x75, 0x64, 0x43,
		0x75, 0x69, 0x75, 0x64, 0x20, 0x46, 0x37, 0x46, 0x37, 0x43, 0x55, 0x49, 0x55, 0x44, 0x20, 0x41,
		0x39, 0x31, 0x41, 0x39, 0x31, 0x43, 0x77, 0x6f, 0x77, 0x64, 0x65, 0x66, 0x75, 0x43, 0x79, 0x72,
		0x75, 0x73, 0x43, 0x4d, 0x31, 0x37, 0x58, 0x41, 0x43, 0x53, 0x24, 0x31, 0x20, 0x58, 0x41, 0x44,
		0x2d, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x44, 0x54, 0x30, 0x37, 0x2d,
		0x54, 0x41, 0x42, 0x34, 0x47, 0x44, 0x54, 0x30, 0x37, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47,
		0x44, 0x41, 0x53, 0x53, 0x44, 0x45, 0x41, 0x4c, 0x44, 0x49, 0x47, 0x44, 0x45, 0x58, 0x50, 0x49,
		0x78, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32,
		0x35, 0x30, 0x20, 0x52, 0x61, 0x67, 0x65, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x4c, 0x20,
		0x34, 0x2e, 0x37, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x49,
		0x78, 0x69, 0x6f, 0x6e, 0x20, 0x45, 0x53, 0x32, 0x20, 0x35, 0x22, 0x49, 0x78, 0x69, 0x6f, 0x6e,
		0x20, 0x4d, 0x31, 0x35, 0x30, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x49, 0x78, 0x69, 0x6f, 0x6e,
		0x20, 0x4d, 0x34, 0x34, 0x35, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x32, 0x34, 0x2e, 0x35, 0x22,
		0x20, 0x41, 0x4c, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x41, 0x4c, 0x33, 0x35, 0x30,
		0x35, 0x2e, 0x34, 0x35, 0x22, 0x20, 0x41, 0x53, 0x31, 0x35, 0x35, 0x35, 0x2e, 0x38, 0x35, 0x22,
		0x20, 0x41, 0x53, 0x32, 0x36, 0x30, 0x36, 0x2e, 0x32, 0x32, 0x22, 0x20, 0x41, 0x53, 0x33, 0x36,
		0x30, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20,
		0x33, 0x47, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x39, 0x45, 0x56, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x47, 0x55, 0x72, 0x73, 0x75, 0x73, 0x20, 0x24, 0x31, 0x53, 0x65, 0x6e, 0x69, 0x6f,
		0x72, 0x4c, 0x61, 0x72, 0x75, 0x73, 0x5f, 0x54, 0x56, 0x31, 0x46, 0x72, 0x65, 0x79, 0x61, 0x41,
		0x74, 0x6c, 0x61, 0x73, 0x44, 0x45, 0x59, 0x49, 0x44, 0x46, 0x4a, 0x41, 0x47, 0x55, 0x41, 0x52,
		0x2d, 0x30, 0x31, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x30, 0x31, 0x53, 0x61, 0x74, 0x75,
		0x72, 0x6e, 0x20, 0x24, 0x31, 0x54, 0x49, 0x47, 0x45, 0x52, 0x2d, 0x30, 0x31, 0x54, 0x69, 0x67,
		0x65, 0x72, 0x20, 0x30, 0x31, 0x50, 0x55, 0x4d, 0x41, 0x2d, 0x30, 0x31, 0x50, 0x75, 0x6d, 0x61,
		0x20, 0x30, 0x31, 0x44, 0x47, 0x54, 0x45, 0x43, 0x44, 0x47, 0x31, 0x30, 0x31, 0x54, 0x42, 0x49,
		0x50, 0x53, 0x44, 0x49, 0x41, 0x4c, 0x4e, 0x58, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44,
		0x49, 0x47, 0x49, 0x43, 0x4f, 0x4d, 0x44, 0x54, 0x6f, 0x6b, 0x44, 0x49, 0x47, 0x49, 0x46, 0x4f,
		0x52, 0x53, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55, 0x44, 0x43, 0x54, 0x20, 0x39, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x41, 0x31, 0x31, 0x73, 0x44, 0x49, 0x4d, 0x4f, 0x44, 0x49, 0x4e,
		0x47, 0x20, 0x44, 0x49, 0x4e, 0x47, 0x44, 0x49, 0x53, 0x48, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x2b, 0x53, 0x4e, 0x33, 0x33, 0x39, 0x44, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x20, 0x53, 0x43, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x35,
		0x47, 0x2b, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x33, 0x20, 0x35, 0x47, 0x43, 0x65, 0x6c, 0x65,
		0x72, 0x6f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x43, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x44, 0x49, 0x58, 0x4f, 0x4e, 0x48, 0x4b, 0x37, 0x2d, 0x33, 0x35, 0x30, 0x32, 0x53, 0x6f, 0x6c,
		0x69, 0x73, 0x44, 0x4e, 0x36, 0x30, 0x31, 0x35, 0x41, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x54, 0x53,
		0x2d, 0x24, 0x31, 0x2d, 0x31, 0x54, 0x53, 0x5f, 0x4d, 0x31, 0x30, 0x33, 0x41, 0x54, 0x53, 0x2d,
		0x4d, 0x31, 0x30, 0x33, 0x41, 0x58, 0x4b, 0x31, 0x20, 0x33, 0x47, 0x44, 0x4c, 0x59, 0x5a, 0x55,
		0x20, 0x44, 0x53, 0x35, 0x33, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x48, 0x38, 0x44,
		0x4c, 0x5f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x5f, 0x44, 0x4c, 0x5f, 0x33, 0x39, 0x31, 0x30, 0x69, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x44, 0x4d, 0x4f, 0x41, 0x4f, 0x44, 0x4e, 0x53,
		0x53, 0x33, 0x35, 0x30, 0x34, 0x20, 0x4d, 0x65, 0x74, 0x65, 0x6f, 0x72, 0x20, 0x33, 0x2e, 0x35,
		0x22, 0x53, 0x34, 0x30, 0x30, 0x33, 0x41, 0x69, 0x72, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44,
		0x4f, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x44, 0x50, 0x41, 0x44, 0x50, 0x41, 0x5f, 0x5a, 0x45, 0x54,
		0x41, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x44, 0x53, 0x44, 0x65, 0x76,
		0x69, 0x63, 0x65, 0x73, 0x44, 0x53, 0x49, 0x43, 0x44, 0x55, 0x44, 0x55, 0x20, 0x41, 0x55, 0x54,
		0x4f, 0x44, 0x55, 0x44, 0x55, 0x24, 0x31, 0x44, 0x55, 0x4e, 0x4e, 0x53, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x44, 0x61, 0x65, 0x77, 0x6f, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
		0x20, 0x37, 0x50, 0x44, 0x61, 0x6e, 0x65, 0x77, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20,
		0x24, 0x31, 0x47, 0x45, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5f, 0x41, 0x35, 0x47, 0x65, 0x6f,
		0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x41, 0x35, 0x44, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31,
		0x44, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x44, 0x61, 0x6e, 0x67, 0x63, 0x61, 0x70,
		0x48, 0x44, 0x44, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x61, 0x6e, 0x79, 0x4d, 0x6f, 0x6e, 0x73,
		0x74, 0x65, 0x72, 0x20, 0x34, 0x47, 0x58, 0x58, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x20,
		0x34, 0x47, 0x41, 0x4d, 0x41, 0x5a, 0x45, 0x20, 0x41, 0x58, 0x2d, 0x35, 0x30, 0x20, 0x41, 0x64,
		0x76, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x20, 0x41, 0x58, 0x2d, 0x35, 0x30,
		0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x72, 0x69, 0x61, 0x44, 0x61, 0x74,
		0x61, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x44, 0x61,
		0x74, 0x61, 0x6d, 0x69, 0x6e, 0x69, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x67, 0x44, 0x41, 0x54, 0x41,
		0x4e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x77, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x33, 0x47, 0x35, 0x44, 0x57, 0x2d, 0x55, 0x42,
		0x54, 0x37, 0x57, 0x55, 0x62, 0x69, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x37, 0x57, 0x44, 0x61,
		0x74, 0x73, 0x75, 0x6e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x54, 0x53, 0x55, 0x4e,
		0x5f, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x35, 0x35, 0x30, 0x30, 0x44, 0x61, 0x74, 0x73, 0x75,
		0x6e, 0x5f, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x35, 0x30, 0x30, 0x31, 0x44, 0x61, 0x7a, 0x65,
		0x6e, 0x64, 0x61, 0x7a, 0x65, 0x6e, 0x36, 0x41, 0x44, 0x62, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44,
		0x42, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x44, 0x42, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x62,
		0x74, 0x65, 0x6c, 0x44, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x53, 0x2d, 0x43, 0x52, 0x31, 0x43, 0x79,
		0x70, 0x68, 0x65, 0x72, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43,
		0x79, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x24, 0x31, 0x44, 0x53, 0x2d, 0x42, 0x44, 0x31, 0x42, 0x6f,
		0x6c, 0x64, 0x44, 0x53, 0x2d, 0x43, 0x4c, 0x31, 0x43, 0x79, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x53,
		0x2d, 0x42, 0x44, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x44, 0x65, 0x57, 0x61, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x6c, 0x58, 0x43, 0x44, 0x33,
		0x35, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x56, 0x65,
		0x6e, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x6f, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x56, 0x65, 0x6e,
		0x75, 0x65, 0x20, 0x37, 0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x61, 0x6c, 0x69, 0x45, 0x2d, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x65, 0x6e, 0x76, 0x65, 0x72, 0x54, 0x41, 0x51, 0x2d, 0x24,
		0x31, 0x53, 0x44, 0x51, 0x2d, 0x24, 0x31, 0x44, 0x65, 0x73, 0x61, 0x79, 0x44, 0x69, 0x61, 0x6c,
		0x6f, 0x67, 0x44, 0x69, 0x63, 0x61, 0x6d, 0x44, 0x69, 0x67, 0x69, 0x44, 0x69, 0x67, 0x69, 0x63,
		0x65, 0x6c, 0x44, 0x4c, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x4c, 0x33, 0x44, 0x4c, 0x24, 0x31, 0x44,
		0x4c, 0x38, 0x31, 0x30, 0x44, 0x49, 0x47, 0x49, 0x43, 0x45, 0x4c, 0x44, 0x4c, 0x31, 0x70, 0x6c,
		0x75, 0x73, 0x44, 0x4c, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x69, 0x67, 0x69, 0x64, 0x72,
		0x61, 0x67, 0x6f, 0x6e, 0x44, 0x69, 0x67, 0x69, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x67, 0x69,
		0x6c, 0x61, 0x6e, 0x64, 0x44, 0x4c, 0x31, 0x30, 0x30, 0x38, 0x4d, 0x44, 0x69, 0x67, 0x69, 0x74,
		0x34, 0x47, 0x50, 0x6c, 0x61, 0x79, 0x31, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x4d, 0x61, 0x78, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x45, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x48, 0x49,
		0x54, 0x20, 0x33, 0x47, 0x44, 0x41, 0x36, 0x42, 0x38, 0x50, 0x30, 0x31, 0x51, 0x38, 0x20, 0x44,
		0x41, 0x36, 0x42, 0x38, 0x50, 0x30, 0x31, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20,
		0x24, 0x31, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x50, 0x72,
		0x6f, 0x20, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x69, 0x44, 0x78,
		0x35, 0x48, 0x54, 0x35, 0x30, 0x33, 0x35, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20, 0x51, 0x35, 0x30,
		0x30, 0x20, 0x33, 0x47, 0x48, 0x54, 0x34, 0x30, 0x33, 0x39, 0x50, 0x47, 0x48, 0x49, 0x54, 0x20,
		0x51, 0x34, 0x30, 0x31, 0x20, 0x33, 0x47, 0x56, 0x53, 0x35, 0x30, 0x33, 0x37, 0x50, 0x4c, 0x56,
		0x4f, 0x58, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x47, 0x50, 0x53, 0x36, 0x30, 0x34, 0x4d,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x36, 0x2e, 0x30, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x39, 0x50, 0x47,
		0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x33, 0x47, 0x4c, 0x54, 0x35, 0x30,
		0x34, 0x38, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x4a, 0x6f, 0x79, 0x20, 0x33, 0x47, 0x4c,
		0x54, 0x35, 0x30, 0x35, 0x32, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x42, 0x61, 0x73, 0x65,
		0x20, 0x34, 0x47, 0x4c, 0x54, 0x34, 0x30, 0x34, 0x37, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20,
		0x41, 0x6c, 0x66, 0x61, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x30, 0x4d, 0x47, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x53, 0x34, 0x30, 0x35, 0x31, 0x4d,
		0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x58, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x4c,
		0x54, 0x34, 0x30, 0x35, 0x34, 0x4d, 0x47, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x41, 0x72, 0x67, 0x6f,
		0x20, 0x33, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34, 0x31, 0x50, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20,
		0x54, 0x72, 0x69, 0x78, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x34, 0x30, 0x50, 0x4c, 0x4c,
		0x69, 0x6e, 0x78, 0x20, 0x52, 0x61, 0x67, 0x65, 0x20, 0x34, 0x47, 0x4c, 0x53, 0x35, 0x30, 0x35,
		0x33, 0x4d, 0x4c, 0x4c, 0x69, 0x6e, 0x78, 0x20, 0x50, 0x61, 0x79, 0x20, 0x34, 0x47, 0x4c, 0x69,
		0x6e, 0x78, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x54, 0x34, 0x35, 0x32, 0x45, 0x4c, 0x69,
		0x6e, 0x78, 0x20, 0x34, 0x2e, 0x35, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41, 0x54, 0x4c, 0x20, 0x34,
		0x47, 0x20, 0x43, 0x53, 0x35, 0x30, 0x32, 0x39, 0x4d, 0x4c, 0x43, 0x49, 0x54, 0x49, 0x20, 0x41,
		0x54, 0x4c, 0x20, 0x34, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31,
		0x38, 0x20, 0x31, 0x31, 0x22, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20,
		0x31, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x31, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x37, 0x50,
		0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x30, 0x36, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x39, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69,
		0x74, 0x20, 0x31, 0x30, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x72, 0x6f, 0x20, 0x53,
		0x74, 0x61, 0x72, 0x20, 0x31, 0x34, 0x54, 0x53, 0x37, 0x38, 0x35, 0x34, 0x4d, 0x50, 0x6c, 0x61,
		0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x53, 0x31, 0x32, 0x34, 0x39,
		0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x38, 0x30, 0x30, 0x46, 0x20, 0x34, 0x47, 0x48, 0x53,
		0x31, 0x30, 0x30, 0x32, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x36,
		0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x38, 0x50, 0x4c, 0x48, 0x69,
		0x74, 0x20, 0x31, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x34,
		0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x48, 0x69, 0x74, 0x20, 0x31, 0x30, 0x38, 0x45, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x48, 0x53, 0x31, 0x30, 0x30, 0x36, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20,
		0x48, 0x69, 0x74, 0x20, 0x31, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x48, 0x53, 0x31, 0x30,
		0x30, 0x35, 0x50, 0x4c, 0x50, 0x53, 0x31, 0x30, 0x34, 0x33, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x6e,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x53, 0x31, 0x30, 0x31, 0x32,
		0x45, 0x20, 0x33, 0x47, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x33, 0x47, 0x69, 0x44, 0x78, 0x38, 0x4d, 0x56, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x5a, 0x69,
		0x44, 0x78, 0x39, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x20, 0x48, 0x54, 0x37, 0x30, 0x37, 0x34,
		0x4d, 0x4c, 0x48, 0x49, 0x54, 0x20, 0x34, 0x47, 0x49, 0x44, 0x73, 0x44, 0x20, 0x31, 0x30, 0x20,
		0x33, 0x47, 0x43, 0x49, 0x54, 0x49, 0x20, 0x24, 0x31, 0x57, 0x53, 0x31, 0x32, 0x36, 0x32, 0x52,
		0x57, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x31, 0x32, 0x31, 0x30, 0x42, 0x57, 0x53, 0x38, 0x32, 0x35,
		0x33, 0x50, 0x4c, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x38, 0x32, 0x36, 0x30, 0x43, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x38, 0x32, 0x38, 0x30, 0x43, 0x69, 0x44, 0x78, 0x44, 0x38, 0x20, 0x33, 0x47, 0x44,
		0x2d, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x32, 0x20, 0x38, 0x4e, 0x53, 0x36, 0x39, 0x30, 0x32, 0x51,
		0x4c, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x4e,
		0x53, 0x39, 0x37, 0x39, 0x37, 0x4d, 0x47, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x37,
		0x2e, 0x32, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30, 0x30, 0x34, 0x50, 0x47, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x31, 0x30,
		0x30, 0x32, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x44, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x35, 0x4d, 0x47, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32,
		0x36, 0x4d, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x36, 0x22, 0x20, 0x33,
		0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20,
		0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x54, 0x37, 0x30, 0x32, 0x34, 0x4d, 0x47, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x37, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x53, 0x38, 0x32, 0x38, 0x39,
		0x50, 0x4c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x38, 0x33, 0x30, 0x35, 0x43, 0x20, 0x34,
		0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24,
		0x31, 0x51, 0x24, 0x32, 0x20, 0x33, 0x47, 0x69, 0x44, 0x24, 0x31, 0x51, 0x24, 0x32, 0x54, 0x53,
		0x37, 0x32, 0x30, 0x33, 0x52, 0x57, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x37, 0x54, 0x54, 0x37, 0x30, 0x30, 0x30, 0x4d, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x38, 0x34, 0x30, 0x32, 0x44, 0x20,
		0x34, 0x47, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x20, 0x57, 0x53, 0x31, 0x32, 0x35,
		0x30, 0x50, 0x4c, 0x31, 0x34, 0x30, 0x32, 0x44, 0x20, 0x34, 0x47, 0x57, 0x53, 0x31, 0x32, 0x35,
		0x31, 0x50, 0x4c, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x31, 0x32, 0x34, 0x37, 0x43, 0x52, 0x53, 0x31,
		0x32, 0x36, 0x37, 0x50, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x34, 0x38, 0x30, 0x45, 0x20, 0x34,
		0x47, 0x44, 0x69, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x43, 0x75, 0x62, 0x65, 0x20, 0x24, 0x31,
		0x56, 0x52, 0x20, 0x4c, 0x34, 0x32, 0x44, 0x4d, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x44, 0x69,
		0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x79, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69,
		0x6e, 0x61, 0x78, 0x44, 0x58, 0x20, 0x54, 0x41, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x6e, 0x65,
		0x79, 0x54, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x4f, 0x59, 0x20, 0x53, 0x54,
		0x4f, 0x52, 0x59, 0x44, 0x69, 0x74, 0x65, 0x63, 0x6d, 0x61, 0x44, 0x69, 0x76, 0x61, 0x44, 0x69,
		0x76, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42, 0x6f, 0x78, 0x20, 0x33,
		0x44, 0x69, 0x76, 0x69, 0x73, 0x61, 0x74, 0x4a, 0x2d, 0x4c, 0x49, 0x4e, 0x4b, 0x20, 0x49, 0x49,
		0x4a, 0x2d, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x49, 0x49, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x20, 0x54, 0x2d, 0x49, 0x49, 0x44, 0x6f, 0x43, 0x6f, 0x4d,
		0x6f, 0x44, 0x6f, 0x66, 0x66, 0x6c, 0x65, 0x72, 0x44, 0x6f, 0x6c, 0x61, 0x6d, 0x65, 0x65, 0x44,
		0x6f, 0x6d, 0x2e, 0x72, 0x75, 0x44, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x54, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x24, 0x31, 0x54, 0x24, 0x31, 0x53, 0x54, 0x31, 0x30, 0x45, 0x54, 0x32, 0x30,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4b, 0x69, 0x64, 0x54, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x54, 0x32, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x32,
		0x30, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x32, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x47, 0x54, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x36, 0x56, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x20, 0x70, 0x75, 0x6e,
		0x6b, 0x53, 0x20, 0x50, 0x75, 0x6e, 0x6b, 0x53, 0x20, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x20,
		0x43, 0x79, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x32, 0x20, 0x59,
		0x31, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61,
		0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63,
		0x69, 0x61, 0x32, 0x20, 0x59, 0x31, 0x30, 0x30, 0x4c, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x72,
		0x6f, 0x6e, 0x20, 0x42, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x35, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x24, 0x31, 0x53, 0x42, 0x4c, 0x31, 0x32, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x44, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x35, 0x35, 0x30, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x42, 0x4c, 0x31, 0x32, 0x30, 0x30, 0x30, 0x56, 0x32, 0x30, 0x50, 0x72, 0x6f,
		0x56, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x34, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x39, 0x36, 0x47, 0x54, 0x53, 0x39, 0x36, 0x20, 0x47, 0x54,
		0x4b, 0x49, 0x53, 0x53, 0x4d, 0x45, 0x2d, 0x44, 0x47, 0x35, 0x38, 0x30, 0x4b, 0x69, 0x73, 0x73,
		0x6d, 0x65, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x5f, 0x44,
		0x47, 0x38, 0x35, 0x30, 0x48, 0x69, 0x74, 0x6d, 0x61, 0x6e, 0x20, 0x44, 0x47, 0x35, 0x38, 0x30,
		0x58, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x78, 0x35, 0x5f, 0x64, 0x6f, 0x6f, 0x67, 0x65, 0x65, 0x58, 0x35, 0x54, 0x35, 0x5f,
		0x4c, 0x69, 0x74, 0x65, 0x54, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x6d, 0x61, 0x78, 0x5f, 0x53, 0x58, 0x35, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x53, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x49, 0x62, 0x69, 0x7a,
		0x61, 0x5f, 0x46, 0x32, 0x49, 0x62, 0x69, 0x7a, 0x61, 0x20, 0x46, 0x32, 0x59, 0x36, 0x5f, 0x50,
		0x69, 0x61, 0x6e, 0x6f, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x20, 0x50, 0x69, 0x61,
		0x6e, 0x6f, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x59, 0x36, 0x5f, 0x50, 0x69, 0x61, 0x6e, 0x6f,
		0x59, 0x36, 0x20, 0x50, 0x69, 0x61, 0x6e, 0x6f, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33,
		0x44, 0x59, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x59, 0x37, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x36, 0x70, 0x72, 0x6f, 0x54, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x44,
		0x47, 0x35, 0x35, 0x30, 0x44, 0x47, 0x35, 0x35, 0x30, 0x20, 0x44, 0x61, 0x67, 0x67, 0x65, 0x72,
		0x59, 0x31, 0x30, 0x30, 0x58, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x31, 0x30, 0x30, 0x58, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x46, 0x31, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x46, 0x31, 0x59, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x44, 0x6f, 0x6f, 0x70, 0x72, 0x6f, 0x50, 0x33, 0x44, 0x6f,
		0x6f, 0x76, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x44, 0x6f, 0x70, 0x6f, 0x64, 0x44, 0x6f, 0x70, 0x70, 0x69, 0x6f, 0x44,
		0x50, 0x33, 0x35, 0x35, 0x54, 0x65, 0x78, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x72, 0x61, 0x44, 0x6f,
		0x72, 0x6f, 0x38, 0x30, 0x35, 0x30, 0x38, 0x30, 0x32, 0x30, 0x58, 0x38, 0x30, 0x38, 0x30, 0x44,
		0x72, 0x61, 0x67, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x41, 0x58, 0x20, 0x31,
		0x30, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x30, 0x54, 0x31, 0x32, 0x4d, 0x59, 0x38, 0x38, 0x58, 0x5f,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x59, 0x38, 0x38, 0x58, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f,
		0x74, 0x65, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
		0x72, 0x44, 0x52, 0x45, 0x41, 0x4d, 0x53, 0x54, 0x41, 0x52, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x54,
		0x61, 0x62, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x20,
		0x35, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x44, 0x72, 0x6f, 0x78, 0x69,
		0x6f, 0x44, 0x74, 0x61, 0x63, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x44, 0x75, 0x6e,
		0x65, 0x20, 0x48, 0x44, 0x53, 0x6f, 0x6c, 0x6f, 0x20, 0x34, 0x6b, 0x44, 0x75, 0x72, 0x61, 0x62,
		0x6f, 0x6f, 0x6b, 0x44, 0x75, 0x75, 0x62, 0x65, 0x65, 0x44, 0x79, 0x6b, 0x65, 0x6d, 0x61, 0x6e,
		0x6e, 0x53, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x69, 0x6e, 0x20, 0x24,
		0x31, 0x44, 0x79, 0x6f, 0x6e, 0x32, 0x4b, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54,
		0x56, 0x32, 0x4b, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x2d, 0x42, 0x6f,
		0x64, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x20, 0x52, 0x37, 0x37, 0x20, 0x47, 0x50, 0x53, 0x45, 0x63,
		0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x24, 0x31, 0x45, 0x2d, 0x43, 0x65, 0x72, 0x6f, 0x73, 0x52,
		0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x75, 0x74,
		0x69, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x45, 0x2d, 0x54, 0x41, 0x43, 0x48, 0x49, 0x41, 0x35, 0x20,
		0x53, 0x6c, 0x69, 0x6d, 0x45, 0x2d, 0x74, 0x65, 0x6c, 0x69, 0x24, 0x31, 0x4e, 0x24, 0x31, 0x43,
		0x75, 0x72, 0x69, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x20, 0x4f, 0x39, 0x51, 0x34, 0x45, 0x42, 0x45,
		0x4e, 0x45, 0x42, 0x45, 0x53, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x45, 0x43, 0x4f, 0x4f, 0x41, 0x75,
		0x72, 0x6f, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x45,
		0x43, 0x53, 0x54, 0x41, 0x31, 0x30, 0x43, 0x41, 0x33, 0x54, 0x4d, 0x31, 0x30, 0x35, 0x41, 0x54,
		0x4d, 0x31, 0x30, 0x35, 0x45, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x45, 0x46, 0x54, 0x45, 0x47, 0x4c,
		0x45, 0x47, 0x4c, 0x31, 0x31, 0x51, 0x46, 0x36, 0x31, 0x31, 0x51, 0x46, 0x36, 0x45, 0x47, 0x4f,
		0x54, 0x45, 0x4b, 0x45, 0x4b, 0x49, 0x4e, 0x4f, 0x58, 0x45, 0x38, 0x5f, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x45, 0x38, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x4b, 0x4f, 0x45, 0x4b, 0x4f, 0x20,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b, 0x32, 0x4b, 0x20,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x74, 0x61, 0x72, 0x20, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x45, 0x4b, 0x54, 0x45, 0x4b, 0x2d, 0x24, 0x31, 0x45, 0x4c, 0x41, 0x52,
		0x49, 0x45, 0x4c, 0x41, 0x52, 0x49, 0x20, 0x34, 0x47, 0x20, 0x57, 0x69, 0x6e, 0x6b, 0x34, 0x47,
		0x20, 0x57, 0x69, 0x6e, 0x6b, 0x4b, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x34, 0x47, 0x4b,
		0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x47, 0x45, 0x4c, 0x45, 0x2d, 0x47, 0x41,
		0x54, 0x45, 0x45, 0x4e, 0x41, 0x43, 0x4f, 0x4d, 0x45, 0x4e, 0x49, 0x45, 0x45, 0x34, 0x50, 0x72,
		0x6f, 0x45, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x54, 0x4f, 0x45, 0x44, 0x31, 0x32, 0x32, 0x31,
		0x45, 0x55, 0x52, 0x4f, 0x4c, 0x55, 0x58, 0x45, 0x56, 0x50, 0x41, 0x44, 0x45, 0x56, 0x42, 0x6f,
		0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x56, 0x50, 0x41, 0x44, 0x2d, 0x50, 0x52, 0x4f, 0x2d,
		0x4d, 0x41, 0x58, 0x45, 0x56, 0x42, 0x6f, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78,
		0x45, 0x57, 0x49, 0x53, 0x4f, 0x43, 0x54, 0x41, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x63,
		0x74, 0x61, 0x20, 0x54, 0x37, 0x32, 0x30, 0x51, 0x4f, 0x43, 0x54, 0x41, 0x2d, 0x54, 0x37, 0x30,
		0x30, 0x4d, 0x2d, 0x54, 0x32, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x54, 0x37, 0x30, 0x30, 0x4d, 0x20,
		0x54, 0x32, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x58, 0x4f, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x69, 0x30, 0x30, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x45, 0x59, 0x55, 0x45, 0x61, 0x67, 0x6c,
		0x65, 0x45, 0x61, 0x67, 0x6c, 0x65, 0x53, 0x6f, 0x61, 0x72, 0x45, 0x61, 0x73, 0x79, 0x70, 0x69,
		0x78, 0x45, 0x61, 0x73, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x45, 0x63, 0x68, 0x6f, 0x20,
		0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x43, 0x48, 0x4f, 0x5f, 0x48, 0x4f, 0x52, 0x49,
		0x5a, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x24, 0x31, 0x47, 0x45,
		0x43, 0x48, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x34, 0x47, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x20, 0x34, 0x47, 0x45, 0x64, 0x65, 0x6e, 0x77, 0x6f, 0x6f, 0x64, 0x45, 0x68, 0x6c, 0x65,
		0x6c, 0x45, 0x68, 0x6c, 0x65, 0x6c, 0x20, 0x43, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x4d, 0x6f, 0x64,
		0x75, 0x6e, 0x20, 0x43, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x69,
		0x6e, 0x45, 0x6b, 0x73, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x58, 0x34, 0x55,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x34, 0x55, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x63,
		0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x45, 0x6c,
		0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x65, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x61, 0x24,
		0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x56, 0x35, 0x35, 0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65,
		0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x24, 0x31,
		0x22, 0x20, 0x55, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x56, 0x24, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x56, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x45, 0x6c, 0x65,
		0x6e, 0x62, 0x65, 0x72, 0x67, 0x45, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x72, 0x75,
		0x6e, 0x6b, 0x56, 0x6f, 0x77, 0x6e, 0x65, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x77,
		0x6e, 0x65, 0x79, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x20, 0x30, 0x32, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x30, 0x31, 0x50, 0x36, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x41, 0x36, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x50, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x33, 0x48, 0x43, 0x31,
		0x20, 0x4d, 0x61, 0x78, 0x50, 0x58, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x45, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x45, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x45, 0x6c, 0x74, 0x65, 0x78, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x61, 0x63,
		0x4e, 0x56, 0x2d, 0x24, 0x31, 0x4e, 0x56, 0x2d, 0x24, 0x31, 0x2d, 0x57, 0x42, 0x45, 0x6d, 0x61,
		0x74, 0x69, 0x63, 0x45, 0x6d, 0x70, 0x6f, 0x72, 0x69, 0x61, 0x53, 0x33, 0x6d, 0x69, 0x6e, 0x69,
		0x53, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x35, 0x6d, 0x69, 0x6e, 0x69, 0x45, 0x35, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x69, 0x7a, 0x65, 0x72, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x30, 0x30,
		0x53, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x20, 0x34, 0x30, 0x30, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x24, 0x31, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x20, 0x24, 0x31, 0x48, 0x61, 0x72, 0x64, 0x20, 0x43, 0x61, 0x73, 0x65,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x35, 0x47, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x65, 0x72, 0x67,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x45, 0x4e, 0x45, 0x52, 0x47,
		0x59, 0x20, 0x69, 0x31, 0x30, 0x20, 0x44, 0x55, 0x41, 0x4c, 0x69, 0x31, 0x30, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x45, 0x6e, 0x67, 0x65, 0x6c, 0x45, 0x6e, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
		0x79, 0x45, 0x4e, 0x54, 0x31, 0x31, 0x51, 0x46, 0x31, 0x32, 0x45, 0x6e, 0x76, 0x69, 0x7a, 0x65,
		0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x44, 0x53, 0x48, 0x31, 0x38, 0x45,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x45, 0x50, 0x31, 0x39, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x45, 0x50,
		0x31, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x45, 0x50, 0x31, 0x39, 0x45, 0x70, 0x69, 0x63, 0x45,
		0x70, 0x69, 0x6b, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x35, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x53, 0x35, 0x35, 0x30, 0x4b, 0x35, 0x30,
		0x31, 0x4c, 0x65, 0x6f, 0x4b, 0x35, 0x30, 0x30, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4b, 0x35, 0x30, 0x32, 0x4b, 0x35, 0x30, 0x33, 0x54, 0x4c, 0x65, 0x6f, 0x20, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x30, 0x33, 0x53, 0x4c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x4b, 0x35, 0x30, 0x33, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x20, 0x48, 0x44, 0x4b, 0x35, 0x30, 0x33,
		0x4c, 0x65, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x35, 0x30, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x20, 0x33, 0x47, 0x58, 0x35, 0x30, 0x37, 0x54, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x49, 0x49,
		0x4b, 0x35, 0x31, 0x30, 0x42, 0x6f, 0x6c, 0x74, 0x4b, 0x35, 0x31, 0x31, 0x42, 0x6f, 0x6c, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x4b, 0x35, 0x33, 0x34, 0x48, 0x61, 0x64, 0x61, 0x4b, 0x35, 0x33, 0x35,
		0x48, 0x61, 0x64, 0x61, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x35, 0x34, 0x35, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x4b, 0x35, 0x33, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x4b, 0x35, 0x34,
		0x30, 0x45, 0x78, 0x63, 0x61, 0x6c, 0x69, 0x62, 0x75, 0x72, 0x58, 0x34, 0x30, 0x30, 0x50, 0x65,
		0x62, 0x62, 0x6c, 0x65, 0x20, 0x58, 0x34, 0x30, 0x30, 0x4b, 0x35, 0x37, 0x33, 0x50, 0x61, 0x6e,
		0x74, 0x68, 0x65, 0x72, 0x4b, 0x36, 0x30, 0x30, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4b,
		0x36, 0x30, 0x31, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x4b, 0x34,
		0x30, 0x36, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x34, 0x30,
		0x35, 0x50, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x20, 0x49, 0x49, 0x54, 0x37, 0x30, 0x30, 0x50, 0x61,
		0x6c, 0x65, 0x74, 0x74, 0x65, 0x45, 0x70, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
		0x74, 0x6f, 0x72, 0x48, 0x41, 0x31, 0x34, 0x41, 0x20, 0x4c, 0x43, 0x44, 0x20, 0x50, 0x72, 0x6f,
		0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x54, 0x49, 0x36, 0x31, 0x31, 0x30, 0x45, 0x46, 0x2d,
		0x31, 0x30, 0x30, 0x45, 0x71, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x78, 0x69, 0x73, 0x45, 0x72,
		0x67, 0x6f, 0x46, 0x35, 0x30, 0x31, 0x5f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x46, 0x35, 0x30, 0x31,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x35, 0x30, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63,
		0x41, 0x35, 0x30, 0x33, 0x2d, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x41, 0x35, 0x30, 0x33, 0x20,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x42, 0x35, 0x30, 0x36, 0x20, 0x49, 0x6e, 0x74, 0x72, 0x6f,
		0x56, 0x35, 0x35, 0x30, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x30, 0x34, 0x20,
		0x55, 0x6e, 0x69, 0x74, 0x42, 0x35, 0x30, 0x35, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x5f, 0x34, 0x47,
		0x42, 0x35, 0x30, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x47, 0x56, 0x35, 0x35, 0x31,
		0x20, 0x41, 0x75, 0x72, 0x61, 0x56, 0x35, 0x34, 0x30, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56,
		0x35, 0x34, 0x30, 0x20, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x35, 0x37, 0x30, 0x5f, 0x42, 0x49,
		0x47, 0x5f, 0x42, 0x45, 0x4e, 0x56, 0x35, 0x37, 0x30, 0x20, 0x42, 0x69, 0x67, 0x20, 0x42, 0x65,
		0x6e, 0x45, 0x72, 0x67, 0x6f, 0x20, 0x46, 0x35, 0x30, 0x32, 0x46, 0x35, 0x30, 0x32, 0x20, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x41, 0x35, 0x30, 0x30, 0x20, 0x42, 0x65, 0x73, 0x74,
		0x41, 0x35, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x42,
		0x34, 0x30, 0x30, 0x41, 0x35, 0x30, 0x32, 0x20, 0x41, 0x75, 0x72, 0x75, 0x6d, 0x41, 0x35, 0x35,
		0x31, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x34, 0x47, 0x41, 0x35, 0x35, 0x33, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x41, 0x35, 0x35, 0x35, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x41,
		0x35, 0x35, 0x36, 0x46, 0x35, 0x30, 0x30, 0x46, 0x35, 0x30, 0x31, 0x42, 0x35, 0x30, 0x30, 0x20,
		0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x46, 0x35, 0x30, 0x30, 0x47,
		0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x42, 0x54, 0x39, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47,
		0x74, 0x69, 0x38, 0x47, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x47, 0x54, 0x69, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x45, 0x52, 0x47, 0x4f, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x58, 0x45, 0x52, 0x47, 0x4f, 0x47, 0x53, 0x47, 0x48, 0x53, 0x35, 0x35, 0x45, 0x72,
		0x69, 0x63, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x33, 0x38, 0x30, 0x45, 0x72, 0x69, 0x63, 0x79, 0x45,
		0x72, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50,
		0x48, 0x2d, 0x31, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x65, 0x6c, 0x62, 0x48, 0x45, 0x59,
		0x6f, 0x75, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x45, 0x59, 0x6f, 0x75, 0x20,
		0x24, 0x31, 0x57, 0x6f, 0x6f, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x45, 0x74, 0x6f, 0x6e, 0x45, 0x74,
		0x75, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x75, 0x64, 0x6f, 0x72, 0x61, 0x45, 0x36, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x45, 0x75, 0x72, 0x6f, 0x63, 0x61, 0x73, 0x65, 0x45, 0x55, 0x54, 0x42, 0x5f, 0x37,
		0x35, 0x38, 0x47, 0x5f, 0x54, 0x41, 0x42, 0x49, 0x5f, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x5f, 0x4b,
		0x49, 0x44, 0x53, 0x54, 0x41, 0x42, 0x49, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x73, 0x20, 0x4b, 0x69,
		0x64, 0x73, 0x20, 0x37, 0x35, 0x38, 0x47, 0x45, 0x75, 0x72, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x4f,
		0x6e, 0x79, 0x78, 0x20, 0x24, 0x31, 0x45, 0x54, 0x37, 0x30, 0x30, 0x32, 0x43, 0x2d, 0x48, 0x31,
		0x32, 0x65, 0x50, 0x61, 0x64, 0x20, 0x34, 0x53, 0x45, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x73, 0x73,
		0x41, 0x37, 0x35, 0x41, 0x20, 0x53, 0x74, 0x61, 0x72, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x55,
		0x35, 0x30, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x35, 0x30, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x4d, 0x35, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x36, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x55,
		0x36, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45, 0x76,
		0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x44, 0x43, 0x2d, 0x24, 0x31, 0x45, 0x76, 0x65, 0x72, 0x65,
		0x78, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x37, 0x42, 0x45, 0x76, 0x65, 0x72, 0x66, 0x69, 0x6e, 0x65,
		0x45, 0x76, 0x65, 0x72, 0x69, 0x73, 0x45, 0x76, 0x65, 0x72, 0x74, 0x65, 0x6b, 0x45, 0x76, 0x65,
		0x72, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x4d, 0x31,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x76, 0x65, 0x72,
		0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x34, 0x47, 0x45, 0x76, 0x65, 0x72, 0x24, 0x31, 0x20,
		0x49, 0x49, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x34, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x4d,
		0x34, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x76, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x4d, 0x35,
		0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6f,
		0x45, 0x56, 0x4f, 0x4c, 0x56, 0x45, 0x4f, 0x20, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x34, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56,
		0x20, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b,
		0x20, 0x51, 0x34, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x51, 0x34, 0x53, 0x74, 0x72, 0x6f, 0x6e,
		0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x24, 0x31, 0x53, 0x74, 0x72,
		0x6f, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x24, 0x31, 0x24, 0x32, 0x45, 0x76,
		0x6f, 0x6f, 0x45, 0x76, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x70,
		0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x4f, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x33, 0x47, 0x20, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x33, 0x47, 0x20, 0x32, 0x47, 0x6f, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x52, 0x4f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x4c, 0x41, 0x59, 0x5f, 0x50, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x58, 0x4c, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x6c,
		0x61, 0x79, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x54, 0x61, 0x62, 0x20, 0x58, 0x4c,
		0x33, 0x47, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x58, 0x4c, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x33, 0x47, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x58, 0x4c, 0x45, 0x78, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x45, 0x58, 0x20, 0x24, 0x31, 0x69, 0x45, 0x78, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c,
		0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x37, 0x2e, 0x34, 0x20, 0x33, 0x47,
		0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x33, 0x47, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f,
		0x20, 0x38, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x20, 0x38, 0x2e, 0x32, 0x20, 0x33, 0x47, 0x43, 0x69,
		0x6e, 0x65, 0x6d, 0x61, 0x54, 0x56, 0x20, 0x33, 0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x49, 0x49, 0x6e,
		0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x65, 0x72, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x73, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31,
		0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x49,
		0x6e, 0x64, 0x69, 0x67, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x54, 0x6f, 0x72, 0x6e, 0x61,
		0x64, 0x6f, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x79, 0x54, 0x56, 0x46,
		0x69, 0x6e, 0x4c, 0x61, 0x67, 0x6f, 0x6f, 0x6e, 0x41, 0x33, 0x35, 0x30, 0x54, 0x56, 0x50, 0x61,
		0x72, 0x74, 0x79, 0x52, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65,
		0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x45, 0x53, 0x50, 0x2d, 0x33, 0x30, 0x30, 0x45, 0x78, 0x74, 0x72,
		0x65, 0x6d, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x24, 0x31, 0x2b, 0x52, 0x4f, 0x43, 0x4b, 0x5f,
		0x58, 0x31, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x20, 0x58, 0x31, 0x31, 0x45, 0x79, 0x65, 0x6d, 0x6f,
		0x6f, 0x4e, 0x58, 0x54, 0x45, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2d, 0x53, 0x31, 0x4e, 0x58, 0x54,
		0x20, 0x45, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x53, 0x31, 0x45, 0x7a, 0x69, 0x6f, 0x45, 0x7a,
		0x7a, 0x65, 0x45, 0x5a, 0x24, 0x31, 0x46, 0x2b, 0x53, 0x41, 0x35, 0x35, 0x20, 0x32, 0x47, 0x42,
		0x53, 0x41, 0x35, 0x35, 0x53, 0x48, 0x24, 0x31, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x61, 0x62, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x31, 0x35, 0x30, 0x42, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x61, 0x70, 0x74,
		0x6f, 0x72, 0x20, 0x4c, 0x54, 0x44, 0x42, 0x32, 0x30, 0x32, 0x31, 0x46, 0x32, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x5a, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x5a, 0x38, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x69, 0x38, 0x5f, 0x52, 0x4f, 0x4b, 0x52, 0x69, 0x38, 0x20, 0x52, 0x6f, 0x6b, 0x72, 0x5a,
		0x38, 0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5a, 0x38, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x46, 0x38, 0x30, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x38, 0x30, 0x73, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x46, 0x38, 0x30, 0x20, 0x50, 0x49, 0x41, 0x42, 0x45, 0x4c, 0x4c, 0x41, 0x46, 0x38,
		0x30, 0x20, 0x50, 0x69, 0x61, 0x62, 0x65, 0x6c, 0x6c, 0x61, 0x43, 0x38, 0x46, 0x69, 0x6e, 0x67,
		0x65, 0x72, 0x43, 0x38, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x46, 0x45, 0x4f, 0x4e, 0x41,
		0x4c, 0x46, 0x46, 0x46, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x41,
		0x42, 0x2d, 0x31, 0x30, 0x41, 0x34, 0x46, 0x49, 0x4c, 0x49, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x4d, 0x20, 0x46, 0x58, 0x34, 0x34, 0x32, 0x33, 0x46, 0x49, 0x53, 0x45, 0x46, 0x69, 0x73,
		0x65, 0x5f, 0x4d, 0x33, 0x32, 0x34, 0x33, 0x33, 0x20, 0x33, 0x47, 0x46, 0x4c, 0x59, 0x43, 0x41,
		0x54, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x63, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x46, 0x4c, 0x59, 0x43, 0x4f, 0x41, 0x59, 0x46, 0x4d, 0x54, 0x31, 0x36,
		0x4d, 0x34, 0x48, 0x49, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34, 0x4e, 0x65, 0x74, 0x73, 0x75, 0x72,
		0x66, 0x65, 0x72, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x33,
		0x20, 0x42, 0x30, 0x31, 0x46, 0x4d, 0x54, 0x2d, 0x4e, 0x4d, 0x37, 0x30, 0x35, 0x38, 0x2d, 0x30,
		0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x35,
		0x33, 0x31, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x31, 0x37, 0x36, 0x48, 0x53, 0x31, 0x30, 0x35,
		0x30, 0x32, 0x33, 0x32, 0x42, 0x35, 0x32, 0x31, 0x37, 0x35, 0x57, 0x54, 0x31, 0x30, 0x35, 0x30,
		0x32, 0x33, 0x31, 0x31, 0x37, 0x35, 0x48, 0x53, 0x31, 0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x54,
		0x6f, 0x6d, 0x63, 0x61, 0x74, 0x31, 0x37, 0x35, 0x46, 0x54, 0x31, 0x30, 0x35, 0x30, 0x32, 0x34,
		0x31, 0x56, 0x69, 0x70, 0x65, 0x72, 0x46, 0x4e, 0x42, 0x53, 0x50, 0x35, 0x30, 0x34, 0x35, 0x56,
		0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x41, 0x31, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69,
		0x73, 0x20, 0x41, 0x32, 0x43, 0x6f, 0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x31, 0x43, 0x6f,
		0x6e, 0x65, 0x58, 0x69, 0x73, 0x20, 0x58, 0x32, 0x46, 0x4e, 0x46, 0x69, 0x46, 0x69, 0x76, 0x65,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x24, 0x31,
		0x69, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20, 0x41, 0x69, 0x72, 0x69,
		0x66, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x69, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x46, 0x4f, 0x4e, 0x54, 0x45, 0x4c, 0x46, 0x4f, 0x4f, 0x44, 0x4f,
		0x46, 0x4f, 0x52, 0x4d, 0x45, 0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x46, 0x4f, 0x53, 0x53,
		0x69, 0x42, 0x4f, 0x54, 0x44, 0x54, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x31, 0x30, 0x31, 0x20, 0x50, 0x46, 0x24, 0x31, 0x46, 0x50, 0x54, 0x46,
		0x61, 0x52, 0x61, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
		0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x54, 0x56, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20, 0x54,
		0x56, 0x46, 0x61, 0x63, 0x65, 0x74, 0x65, 0x6c, 0x51, 0x33, 0x51, 0x31, 0x30, 0x51, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x61, 0x63, 0x69, 0x6d, 0x65, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x20, 0x37,
		0x46, 0x61, 0x69, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x46, 0x61, 0x6d, 0x6f, 0x63, 0x6f, 0x46,
		0x61, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x64, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x65, 0x64, 0x20, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x35, 0x50, 0x6c, 0x75, 0x73, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x61, 0x6d, 0x6f, 0x75,
		0x73, 0x20, 0x35, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x46, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x4d,
		0x33, 0x30, 0x30, 0x48, 0x46, 0x61, 0x72, 0x45, 0x61, 0x73, 0x54, 0x6f, 0x6e, 0x65, 0x46, 0x61,
		0x72, 0x61, 0x73, 0x73, 0x6f, 0x6f, 0x46, 0x65, 0x6e, 0x67, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x46,
		0x65, 0x6e, 0x6f, 0x74, 0x69, 0x46, 0x65, 0x72, 0x6f, 0x46, 0x65, 0x72, 0x6f, 0x5f, 0x59, 0x31,
		0x59, 0x31, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x59, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x52, 0x6f, 0x79, 0x61, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x46, 0x45, 0x52, 0x4f, 0x20, 0x50, 0x41,
		0x43, 0x45, 0x50, 0x61, 0x63, 0x65, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x32, 0x30, 0x31, 0x39, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x34, 0x30, 0x30, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x69, 0x47, 0x4f, 0x41, 0x54, 0x52, 0x49, 0x55, 0x4d, 0x20, 0x49, 0x49, 0x20, 0x46, 0x35,
		0x35, 0x4c, 0x32, 0x41, 0x74, 0x72, 0x69, 0x75, 0x6d, 0x20, 0x49, 0x49, 0x54, 0x52, 0x49, 0x4f,
		0x20, 0x46, 0x34, 0x30, 0x4c, 0x54, 0x54, 0x72, 0x69, 0x6f, 0x20, 0x46, 0x34, 0x30, 0x4c, 0x54,
		0x45, 0x50, 0x49, 0x43, 0x20, 0x46, 0x35, 0x30, 0x47, 0x45, 0x70, 0x69, 0x63, 0x20, 0x46, 0x35,
		0x30, 0x47, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x4d, 0x35, 0x30, 0x47, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x5f, 0x38, 0x47, 0x42, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65,
		0x20, 0x49, 0x49, 0x20, 0x38, 0x47, 0x42, 0x4d, 0x34, 0x30, 0x35, 0x42, 0x56, 0x69, 0x72, 0x74,
		0x75, 0x65, 0x20, 0x49, 0x49, 0x56, 0x49, 0x52, 0x54, 0x55, 0x45, 0x33, 0x56, 0x69, 0x72, 0x74,
		0x75, 0x65, 0x20, 0x49, 0x49, 0x49, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x49, 0x43, 0x20, 0x53, 0x35,
		0x30, 0x47, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x20, 0x53, 0x35, 0x30, 0x47, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x4a, 0x38, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x4a, 0x38, 0x4f, 0x72, 0x62,
		0x69, 0x74, 0x5f, 0x6c, 0x6c, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x20, 0x49, 0x49, 0x46, 0x34, 0x30,
		0x47, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x34, 0x30,
		0x47, 0x32, 0x46, 0x69, 0x47, 0x69, 0x4e, 0x6f, 0x70, 0x61, 0x6c, 0x50, 0x34, 0x30, 0x20, 0x4d,
		0x61, 0x78, 0x50, 0x34, 0x30, 0x48, 0x6f, 0x6c, 0x61, 0x24, 0x31, 0x74, 0x77, 0x6f, 0x46, 0x6a,
		0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x31, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x43, 0x4e, 0x6f,
		0x74, 0x65, 0x5f, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x46, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x69, 0x6d, 0x6f, 0x46, 0x42,
		0x2d, 0x31, 0x30, 0x31, 0x46, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x6e,
		0x6c, 0x75, 0x78, 0x46, 0x49, 0x4e, 0x4c, 0x55, 0x58, 0x46, 0x69, 0x72, 0x65, 0x46, 0x6c, 0x79,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x41, 0x75, 0x72,
		0x69, 0x69, 0x20, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x52, 0x61, 0x7a, 0x6f, 0x72, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x52, 0x61, 0x7a, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x65, 0x6c, 0x69, 0x67,
		0x68, 0x74, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x72, 0x69,
		0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x20, 0x34, 0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x38, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4f, 0x6e, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x41, 0x6d, 0x75, 0x73, 0x65,
		0x20, 0x33, 0x47, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x41,
		0x75, 0x72, 0x69, 0x69, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x41, 0x75, 0x72, 0x69, 0x69,
		0x20, 0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20,
		0x56, 0x69, 0x76, 0x69, 0x64, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x75, 0x72,
		0x69, 0x69, 0x20, 0x78, 0x43, 0x69, 0x74, 0x65, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x53, 0x65,
		0x63, 0x72, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72, 0x69, 0x69, 0x20, 0x24, 0x31, 0x49,
		0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x58, 0x54, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x34, 0x47, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x53, 0x77, 0x65, 0x65, 0x74,
		0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x5f, 0x34, 0x47, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x34, 0x47, 0x49, 0x6e,
		0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x75, 0x6f, 0x53, 0x35, 0x35, 0x34,
		0x30, 0x32, 0x30, 0x4c, 0x46, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x6c, 0x79, 0x50, 0x61, 0x6e, 0x6f, 0x72, 0x61, 0x6d, 0x61, 0x56, 0x69, 0x63, 0x74, 0x6f,
		0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x6c, 0x69, 0x6d, 0x6c, 0x69,
		0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x30, 0x30,
		0x30, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x41,
		0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x53,
		0x6b, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x47, 0x65, 0x6f, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x5a,
		0x65, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x42, 0x75, 0x7a, 0x7a, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74,
		0x20, 0x34, 0x47, 0x46, 0x53, 0x35, 0x30, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x33,
		0x46, 0x53, 0x34, 0x30, 0x33, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x43, 0x69,
		0x72, 0x72, 0x75, 0x73, 0x20, 0x36, 0x46, 0x53, 0x35, 0x31, 0x31, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x37, 0x46, 0x53, 0x35, 0x30, 0x39, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x39,
		0x46, 0x53, 0x34, 0x30, 0x36, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x35, 0x46, 0x53,
		0x34, 0x30, 0x34, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x33, 0x43, 0x69, 0x72, 0x72,
		0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x34, 0x30, 0x37, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73,
		0x20, 0x36, 0x46, 0x53, 0x34, 0x30, 0x31, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x31,
		0x46, 0x53, 0x34, 0x30, 0x32, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53,
		0x35, 0x30, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x30, 0x32,
		0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x35, 0x30, 0x37, 0x43, 0x69, 0x72,
		0x72, 0x75, 0x73, 0x20, 0x34, 0x46, 0x53, 0x35, 0x30, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73,
		0x20, 0x37, 0x46, 0x53, 0x35, 0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x34, 0x46,
		0x53, 0x35, 0x31, 0x34, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x35, 0x35,
		0x33, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x35, 0x35, 0x34, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x48, 0x44, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x46, 0x53, 0x35, 0x31, 0x37, 0x43, 0x69, 0x72,
		0x72, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x35, 0x31, 0x36, 0x43, 0x69, 0x72, 0x72, 0x75,
		0x73, 0x20, 0x31, 0x32, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x33, 0x46, 0x53, 0x35,
		0x32, 0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x31, 0x46, 0x53, 0x35, 0x32, 0x31, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x46, 0x53, 0x35, 0x32, 0x32,
		0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x35, 0x32, 0x33, 0x43, 0x69,
		0x72, 0x72, 0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x35, 0x32, 0x34, 0x4b, 0x6e, 0x6f, 0x63,
		0x6b, 0x6f, 0x75, 0x74, 0x46, 0x53, 0x35, 0x32, 0x36, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x32, 0x37, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73,
		0x20, 0x31, 0x37, 0x46, 0x53, 0x35, 0x32, 0x38, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x53, 0x35, 0x32, 0x39, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x46, 0x53, 0x35,
		0x33, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x58, 0x58, 0x4c,
		0x46, 0x53, 0x34, 0x35, 0x34, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x38, 0x46, 0x53, 0x34,
		0x35, 0x32, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x32, 0x46, 0x53, 0x35, 0x31, 0x32, 0x4e,
		0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x30, 0x46, 0x53, 0x35, 0x31, 0x30, 0x4e, 0x69, 0x6d,
		0x62, 0x75, 0x73, 0x20, 0x31, 0x32, 0x46, 0x53, 0x34, 0x35, 0x31, 0x4e, 0x69, 0x6d, 0x62, 0x75,
		0x73, 0x20, 0x31, 0x46, 0x53, 0x34, 0x30, 0x35, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20,
		0x34, 0x46, 0x53, 0x34, 0x30, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x38, 0x46,
		0x53, 0x34, 0x30, 0x39, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x73, 0x20, 0x39, 0x46, 0x53, 0x34,
		0x35, 0x35, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x31, 0x46, 0x53, 0x34, 0x35, 0x36,
		0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x34, 0x46, 0x53, 0x34, 0x35, 0x37, 0x4e, 0x69,
		0x6d, 0x62, 0x75, 0x73, 0x20, 0x31, 0x35, 0x46, 0x53, 0x34, 0x35, 0x39, 0x4e, 0x69, 0x6d, 0x62,
		0x75, 0x73, 0x20, 0x31, 0x36, 0x46, 0x53, 0x34, 0x35, 0x38, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75,
		0x73, 0x20, 0x37, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a, 0x61, 0x7a, 0x7a, 0x57, 0x68,
		0x69, 0x7a, 0x7a, 0x50, 0x72, 0x69, 0x64, 0x65, 0x46, 0x69, 0x72, 0x65, 0x62, 0x69, 0x72, 0x64,
		0x4d, 0x61, 0x72, 0x61, 0x74, 0x68, 0x6f, 0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x45, 0x76, 0x6f,
		0x6b, 0x65, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20,
		0x31, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x4e,
		0x61, 0x6e, 0x6f, 0x20, 0x34, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x35, 0x45,
		0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x36, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e,
		0x6f, 0x20, 0x39, 0x45, 0x72, 0x61, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x45, 0x6e,
		0x65, 0x72, 0x67, 0x79, 0x45, 0x72, 0x61, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32,
		0x52, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x20,
		0x32, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20,
		0x32, 0x47, 0x65, 0x6e, 0x69, 0x75, 0x73, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x31, 0x45, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x32, 0x45, 0x72, 0x61, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x34, 0x43, 0x68, 0x69, 0x63, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
		0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x67, 0x6f, 0x20, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x31, 0x45, 0x76, 0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x31, 0x45,
		0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x50, 0x68,
		0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x32, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x43,
		0x6f, 0x72, 0x61, 0x6c, 0x45, 0x76, 0x6f, 0x20, 0x43, 0x68, 0x69, 0x63, 0x20, 0x33, 0x45, 0x76,
		0x6f, 0x20, 0x54, 0x65, 0x63, 0x68, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x33, 0x45, 0x72, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x45, 0x76,
		0x6f, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x35, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64,
		0x6f, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x49, 0x51, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x24, 0x31, 0x46, 0x6f, 0x62, 0x65, 0x6d, 0x46, 0x6f, 0x62, 0x65, 0x6d, 0x20, 0x34,
		0x4b, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x46, 0x6f, 0x6e, 0x64, 0x69, 0x46,
		0x6f, 0x6e, 0x6f, 0x73, 0x4f, 0x33, 0x46, 0x6f, 0x72, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x58, 0x6d,
		0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x20, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x6f, 0x72, 0x73, 0x74, 0x61, 0x72, 0x41, 0x6d, 0x6f,
		0x73, 0x74, 0x61, 0x20, 0x33, 0x47, 0x35, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x46, 0x6f, 0x72,
		0x74, 0x75, 0x6e, 0x65, 0x53, 0x68, 0x69, 0x70, 0x45, 0x6e, 0x69, 0x65, 0x20, 0x45, 0x32, 0x46,
		0x6f, 0x75, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x31, 0x38, 0x35, 0x20, 0x53,
		0x6b, 0x79, 0x20, 0x32, 0x53, 0x31, 0x38, 0x36, 0x5f, 0x53, 0x6b, 0x79, 0x5f, 0x33, 0x53, 0x31,
		0x38, 0x36, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x53, 0x36, 0x31, 0x20, 0x45, 0x63, 0x6f, 0x20,
		0x32, 0x53, 0x36, 0x32, 0x5f, 0x45, 0x63, 0x6f, 0x5f, 0x33, 0x53, 0x36, 0x32, 0x20, 0x45, 0x63,
		0x6f, 0x20, 0x33, 0x53, 0x37, 0x31, 0x30, 0x20, 0x52, 0x75, 0x62, 0x79, 0x46, 0x6f, 0x75, 0x72,
		0x65, 0x6c, 0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x24, 0x31,
		0x46, 0x6f, 0x78, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x4d,
		0x24, 0x31, 0x46, 0x6f, 0x78, 0x78, 0x44, 0x46, 0x72, 0x65, 0x65, 0x59, 0x6f, 0x6e, 0x64, 0x32,
		0x33, 0x30, 0x35, 0x30, 0x30, 0x33, 0x4d, 0x4d, 0x35, 0x41, 0x32, 0x33, 0x30, 0x38, 0x30, 0x30,
		0x35, 0x4d, 0x4d, 0x36, 0x32, 0x33, 0x30, 0x38, 0x30, 0x31, 0x31, 0x4d, 0x32, 0x33, 0x30, 0x36,
		0x30, 0x30, 0x34, 0x4d, 0x46, 0x39, 0x53, 0x46, 0x72, 0x65, 0x65, 0x74, 0x65, 0x6c, 0x46, 0x75,
		0x6e, 0x20, 0x2b, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x43, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61,
		0x69, 0x20, 0x4d, 0x69, 0x79, 0x61, 0x62, 0x69, 0x52, 0x65, 0x69, 0x20, 0x32, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x35, 0x43, 0x72, 0x69, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x57, 0x61, 0x76, 0x65, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x31, 0x41, 0x4d, 0x75, 0x73,
		0x61, 0x73, 0x68, 0x69, 0x46, 0x54, 0x45, 0x31, 0x37, 0x31, 0x41, 0x49, 0x63, 0x65, 0x20, 0x33,
		0x49, 0x63, 0x65, 0x20, 0x32, 0x46, 0x54, 0x45, 0x31, 0x36, 0x31, 0x47, 0x49, 0x63, 0x65, 0x20,
		0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x45, 0x52, 0x61, 0x69,
		0x6a, 0x69, 0x6e, 0x46, 0x54, 0x31, 0x34, 0x31, 0x42, 0x4e, 0x69, 0x63, 0x6f, 0x58, 0x4d, 0x50,
		0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x32, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x41, 0x50, 0x72,
		0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x34, 0x46, 0x54,
		0x4a, 0x31, 0x35, 0x32, 0x42, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x20, 0x33, 0x53, 0x20, 0x4c,
		0x54, 0x45, 0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x44, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69,
		0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x46, 0x54, 0x4a, 0x31, 0x36, 0x32, 0x42, 0x53, 0x61,
		0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x4b, 0x69, 0x77, 0x61, 0x6d, 0x69, 0x20, 0x32, 0x46, 0x54,
		0x4a, 0x31, 0x36, 0x31, 0x42, 0x53, 0x61, 0x6d, 0x75, 0x72, 0x61, 0x69, 0x20, 0x52, 0x65, 0x69,
		0x46, 0x54, 0x4a, 0x31, 0x35, 0x32, 0x45, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x61, 0x20, 0x31, 0x53,
		0x41, 0x4b, 0x55, 0x52, 0x41, 0x5f, 0x46, 0x54, 0x45, 0x31, 0x53, 0x61, 0x6b, 0x75, 0x72, 0x61,
		0x20, 0x46, 0x54, 0x45, 0x31, 0x46, 0x55, 0x4e, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x46, 0x75, 0x6e,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x72, 0x75, 0x6e, 0x73, 0x69, 0x32, 0x4b, 0x20, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x54, 0x56, 0x46, 0x75, 0x6a, 0x69, 0x74, 0x73, 0x75, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x35, 0x47, 0x20, 0x46, 0x2d, 0x35, 0x31, 0x41, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x46, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x33, 0x4c, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20,
		0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x46,
		0x69, 0x74, 0x20, 0x46, 0x2d, 0x30, 0x31, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58,
		0x20, 0x46, 0x2d, 0x30, 0x32, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20,
		0x46, 0x2d, 0x30, 0x32, 0x47, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x45, 0x46, 0x20, 0x46,
		0x4a, 0x4c, 0x32, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x5a, 0x20, 0x46, 0x4a, 0x4c,
		0x32, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x32,
		0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x39, 0x20, 0x46, 0x2d, 0x35, 0x32,
		0x41, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d, 0x30,
		0x33, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x69, 0x73, 0x73, 0x20, 0x46, 0x2d,
		0x30, 0x33, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x20, 0x46, 0x2d, 0x30, 0x33, 0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x53, 0x56, 0x20,
		0x46, 0x2d, 0x30, 0x33, 0x48, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4a, 0x20, 0x39, 0x30,
		0x31, 0x46, 0x4a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x56, 0x20, 0x46, 0x2d, 0x30, 0x34,
		0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x47,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x46, 0x2d, 0x30,
		0x35, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30, 0x35,
		0x46, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x35, 0x4a,
		0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x34, 0x4b, 0x41, 0x72, 0x72, 0x6f, 0x77,
		0x73, 0x20, 0x42, 0x65, 0x20, 0x33, 0x20, 0x46, 0x2d, 0x30, 0x32, 0x4c, 0x41, 0x72, 0x72, 0x6f,
		0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x46, 0x2d, 0x34, 0x31, 0x41, 0x41, 0x72, 0x72,
		0x6f, 0x77, 0x73, 0x20, 0x42, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x2d,
		0x34, 0x31, 0x42, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x58, 0x20, 0x46, 0x2d, 0x30,
		0x36, 0x45, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0xce, 0xbc, 0x20, 0x46, 0x2d, 0x30, 0x37,
		0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x57, 0x65, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x55, 0x20, 0x38, 0x30, 0x31, 0x46, 0x4a, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x37, 0x45, 0x44, 0x69, 0x73, 0x6e, 0x65,
		0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x46, 0x2d, 0x30, 0x38, 0x44, 0x41, 0x4e,
		0x54, 0x45, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x44, 0x52, 0x61, 0x6b,
		0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x2d, 0x30, 0x39, 0x45, 0x52,
		0x61, 0x6b, 0x75, 0x2d, 0x52, 0x61, 0x6b, 0x75, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x46, 0x2d, 0x24, 0x31, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x58,
		0x20, 0x46, 0x2d, 0x31, 0x30, 0x44, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x65, 0x20,
		0x46, 0x2d, 0x31, 0x31, 0x44, 0x46, 0x2d, 0x31, 0x32, 0x43, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x4d, 0x30, 0x33, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x52, 0x4d, 0x30, 0x32, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x42, 0x5a, 0x30, 0x32, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73,
		0x20, 0x52, 0x58, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x30, 0x34, 0x20, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x4d, 0x24, 0x31, 0x41,
		0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x41, 0x52, 0x54,
		0x4d, 0x39, 0x33, 0x33, 0x4b, 0x5a, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x35, 0x30, 0x34, 0x2f, 0x48, 0x41, 0x34, 0x53, 0x74, 0x79, 0x6c, 0x69, 0x73, 0x74,
		0x69, 0x63, 0x4c, 0x49, 0x46, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x41, 0x48, 0x35, 0x33, 0x32,
		0x4c, 0x69, 0x66, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x48, 0x35, 0x33, 0x32, 0x46, 0x75,
		0x6e, 0x61, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x32, 0x29, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x35, 0x24, 0x31, 0x76, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x24, 0x31, 0x76, 0x32, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x20,
		0x50, 0x72, 0x6f, 0x46, 0x31, 0x30, 0x34, 0x45, 0x56, 0x49, 0x49, 0x46, 0x75, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c,
		0x6f, 0x67, 0x79, 0x46, 0x78, 0x74, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x31, 0x20, 0x58, 0x47, 0x2d,
		0x47, 0x75, 0x61, 0x72, 0x64, 0x47, 0x20, 0x47, 0x75, 0x61, 0x72, 0x64, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x20, 0x54, 0x56, 0x47, 0x2d, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x4e, 0x45, 0x2d, 0x4e, 0x30,
		0x30, 0x31, 0x53, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67,
		0x37, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x37, 0x47, 0x2d, 0x54, 0x69, 0x44, 0x45,
		0x20, 0x56, 0x36, 0x45, 0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x20, 0x58, 0x39, 0x45, 0x78, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x58, 0x39, 0x45, 0x58, 0x31, 0x30, 0x47, 0x2d, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x24, 0x31, 0x53, 0x74, 0x65, 0x6c, 0x6c,
		0x61, 0x47, 0x44, 0x4c, 0x47, 0x45, 0x4f, 0x46, 0x4f, 0x58, 0x4d, 0x49, 0x44, 0x24, 0x31, 0x47,
		0x45, 0x4f, 0x5a, 0x4f, 0x4e, 0x47, 0x46, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64,
		0x65, 0x6e, 0x74, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69,
		0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50, 0x72, 0x65,
		0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x31, 0x50,
		0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x58, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65,
		0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x24,
		0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x36, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x47, 0x31, 0x30, 0x20,
		0x46, 0x61, 0x73, 0x68, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
		0x20, 0x47, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x61,
		0x6e, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x70, 0x65,
		0x65, 0x64, 0x6f, 0x5f, 0x31, 0x53, 0x70, 0x65, 0x65, 0x64, 0x6f, 0x20, 0x31, 0x47, 0x50, 0x61,
		0x64, 0x24, 0x31, 0x47, 0x49, 0x52, 0x41, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x35, 0x47,
		0x4c, 0x4f, 0x4e, 0x59, 0x58, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x20, 0x24, 0x31, 0x47, 0x4c,
		0x58, 0x47, 0x4c, 0x58, 0x20, 0x41, 0x53, 0x41, 0x41, 0x73, 0x61, 0x53, 0x48, 0x41, 0x48, 0x49,
		0x4e, 0x20, 0x49, 0x49, 0x49, 0x53, 0x68, 0x61, 0x68, 0x69, 0x6e, 0x20, 0x49, 0x49, 0x49, 0x4d,
		0x61, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x61, 0x64, 0x47, 0x4f, 0x43, 0x4c,
		0x45, 0x56, 0x45, 0x52, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x24, 0x31, 0x49, 0x4e,
		0x53, 0x49, 0x47, 0x4e, 0x49, 0x41, 0x20, 0x24, 0x31, 0x54, 0x51, 0x37, 0x30, 0x30, 0x4e, 0x51,
		0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x20, 0x37, 0x30, 0x30, 0x4e, 0x4f, 0x52, 0x49, 0x4f, 0x4e,
		0x37, 0x6f, 0x4c, 0x4f, 0x52, 0x49, 0x4f, 0x4e, 0x20, 0x37, 0x30, 0x4c, 0x51, 0x55, 0x41, 0x4e,
		0x54, 0x55, 0x4d, 0x20, 0x37, 0x30, 0x30, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x31,
		0x30, 0x31, 0x30, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20,
		0x31, 0x30, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d,
		0x20, 0x32, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64,
		0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x52, 0x75, 0x67, 0x67, 0x65,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x55, 0x4d, 0x5f, 0x49,
		0x49, 0x5f, 0x35, 0x30, 0x30, 0x5f, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x32,
		0x20, 0x35, 0x30, 0x30, 0x20, 0x4e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x4e, 0x45, 0x54, 0x42, 0x4f, 0x4f, 0x4b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x4e, 0x65,
		0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x52, 0x31, 0x30, 0x33, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20,
		0x24, 0x31, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x39, 0x37, 0x47, 0x4f, 0x4c, 0x44, 0x42, 0x45,
		0x52, 0x47, 0x45, 0x56, 0x4f, 0x2d, 0x56, 0x58, 0x31, 0x45, 0x56, 0x4f, 0x20, 0x56, 0x58, 0x31,
		0x47, 0x4f, 0x4f, 0x44, 0x54, 0x45, 0x4c, 0x47, 0x24, 0x31, 0x43, 0x4e, 0x4f, 0x54, 0x45, 0x20,
		0x35, 0x30, 0x47, 0x4f, 0x74, 0x76, 0x47, 0x54, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x47, 0x54, 0x58,
		0x4a, 0x61, 0x63, 0x75, 0x6c, 0x75, 0x73, 0x47, 0x56, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x63, 0x74, 0x69, 0x63, 0x47, 0x61, 0x6c, 0x61, 0x74, 0x65, 0x63, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47,
		0x49, 0x20, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x69, 0x54, 0x56, 0x39, 0x31, 0x32, 0x47, 0x69,
		0x2d, 0x39, 0x38, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x39, 0x38, 0x20, 0x51, 0x75, 0x69, 0x63, 0x6b,
		0x47, 0x49, 0x20, 0x55, 0x4e, 0x49, 0x32, 0x55, 0x6e, 0x69, 0x20, 0x32, 0x47, 0x49, 0x20, 0x46,
		0x6c, 0x79, 0x20, 0x54, 0x32, 0x46, 0x6c, 0x79, 0x20, 0x54, 0x32, 0x47, 0x61, 0x6d, 0x6d, 0x61,
		0x47, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x2d, 0x41, 0x73, 0x75, 0x73, 0x47, 0x61, 0x72, 0x6d, 0x69,
		0x6e, 0x66, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x22, 0x47, 0x61, 0x7a, 0x61, 0x6c, 0x47, 0x61,
		0x7a, 0x65, 0x72, 0x47, 0x61, 0x7a, 0x65, 0x72, 0x5f, 0x54, 0x56, 0x47, 0x65, 0x61, 0x6e, 0x65,
		0x65, 0x47, 0x65, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47, 0x4d, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33,
		0x30, 0x30, 0x47, 0x4d, 0x20, 0x31, 0x30, 0x47, 0x33, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31,
		0x47, 0x35, 0x31, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x33,
		0x31, 0x32, 0x47, 0x4d, 0x20, 0x32, 0x32, 0x47, 0x33, 0x31, 0x36, 0x47, 0x4d, 0x20, 0x32, 0x33,
		0x47, 0x33, 0x31, 0x34, 0x47, 0x4d, 0x20, 0x32, 0x33, 0x20, 0x53, 0x45, 0x47, 0x35, 0x31, 0x32,
		0x47, 0x4d, 0x20, 0x32, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x37, 0x30, 0x32, 0x47, 0x4d,
		0x20, 0x32, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x37, 0x30, 0x30, 0x47, 0x4d, 0x20, 0x32, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x33, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x47, 0x35, 0x30,
		0x31, 0x47, 0x4d, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x35, 0x31, 0x34, 0x47, 0x4d,
		0x20, 0x32, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4d, 0x20, 0x24, 0x31, 0x44, 0x47, 0x4d, 0x20,
		0x36, 0x47, 0x4d, 0x20, 0x24, 0x31, 0x47, 0x4d, 0x38, 0x20, 0x67, 0x6f, 0x47, 0x4d, 0x20, 0x38,
		0x20, 0x47, 0x6f, 0x47, 0x30, 0x30, 0x38, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x47, 0x6f, 0x47, 0x4d,
		0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x39, 0x30, 0x31, 0x47, 0x4d, 0x20, 0x50, 0x68, 0x6f,
		0x65, 0x6e, 0x69, 0x78, 0x20, 0x35, 0x47, 0x47, 0x4d, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x31, 0x30, 0x30, 0x47, 0x4d, 0x20, 0x36, 0x20, 0x44, 0x53, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x20, 0x24, 0x31, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x49, 0x49, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x20, 0x49, 0x49, 0x47, 0x4d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x79, 0x20, 0x74, 0x61, 0x62, 0x20, 0x38, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x38, 0x34, 0x47, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x47,
		0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x34, 0x47,
		0x34, 0x47, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x47, 0x65, 0x6f, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x54, 0x31, 0x39, 0x69, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x6d, 0x69, 0x67, 0x6f, 0x47, 0x65, 0x6f, 0x74, 0x65, 0x78, 0x47, 0x65, 0x74, 0x6e, 0x6f,
		0x72, 0x64, 0x47, 0x66, 0x6f, 0x6e, 0x65, 0x47, 0x68, 0x69, 0x61, 0x53, 0x76, 0x65, 0x67, 0x6c,
		0x69, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x53, 0x37, 0x30, 0x32, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x5a,
		0x45, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x33, 0x47, 0x56, 0x45, 0x43,
		0x54, 0x4f, 0x52, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x53,
		0x6c, 0x69, 0x6d, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x50, 0x41, 0x78,
		0x69, 0x73, 0x20, 0x37, 0x50, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x53, 0x4c, 0x49, 0x4d, 0x41,
		0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f,
		0x4c, 0x45, 0x44, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37, 0x20, 0x4c, 0x45, 0x44, 0x47, 0x48, 0x49,
		0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x5f, 0x33, 0x47, 0x41, 0x78, 0x69, 0x73, 0x20, 0x37,
		0x20, 0x33, 0x47, 0x47, 0x48, 0x49, 0x41, 0x5f, 0x41, 0x58, 0x49, 0x53, 0x37, 0x41, 0x78, 0x69,
		0x73, 0x20, 0x37, 0x41, 0x37, 0x5f, 0x57, 0x46, 0x41, 0x37, 0x20, 0x57, 0x69, 0x46, 0x69, 0x56,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x54, 0x41, 0x37, 0x57,
		0x46, 0x41, 0x37, 0x20, 0x52, 0x4f, 0x4a, 0x41, 0x47, 0x54, 0x41, 0x37, 0x50, 0x4c, 0x55, 0x53,
		0x41, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x38,
		0x47, 0x54, 0x52, 0x45, 0x4f, 0x20, 0x54, 0x41, 0x42, 0x38, 0x47, 0x47, 0x54, 0x20, 0x4b, 0x49,
		0x44, 0x53, 0x20, 0x37, 0x47, 0x54, 0x56, 0x52, 0x31, 0x30, 0x53, 0x56, 0x65, 0x63, 0x74, 0x6f,
		0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x47, 0x54, 0x41, 0x42,
		0x50, 0x4e, 0x44, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x56, 0x45, 0x4e,
		0x55, 0x53, 0x37, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x20, 0x37, 0x34, 0x31, 0x30, 0x34, 0x31, 0x31,
		0x36, 0x4e, 0x41, 0x6e, 0x79, 0x20, 0x44, 0x69, 0x65, 0x7a, 0x2e, 0x31, 0x47, 0x68, 0x6f, 0x6e,
		0x67, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x30, 0x33, 0x47, 0x69, 0x67, 0x61, 0x62, 0x79, 0x74,
		0x65, 0x52, 0x6f, 0x6d, 0x61, 0x20, 0x52, 0x32, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52,
		0x6f, 0x6d, 0x61, 0x20, 0x52, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x20, 0x53, 0x58, 0x31, 0x47,
		0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x47, 0x69, 0x67, 0x61, 0x73, 0x65, 0x74, 0x20, 0x51, 0x56,
		0x24, 0x31, 0x47, 0x53, 0x24, 0x31, 0x47, 0x53, 0x35, 0x37, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x53, 0x35, 0x35, 0x2d, 0x36, 0x4d, 0x45, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32,
		0x37, 0x39, 0x37, 0x2d, 0x30, 0x30, 0x47, 0x58, 0x34, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x37,
		0x39, 0x37, 0x2d, 0x30, 0x31, 0x47, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x39, 0x34, 0x30,
		0x2d, 0x32, 0x37, 0x36, 0x36, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x33, 0x45, 0x39, 0x34, 0x30, 0x2d,
		0x32, 0x37, 0x39, 0x35, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x34, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32,
		0x38, 0x34, 0x39, 0x2d, 0x30, 0x30, 0x47, 0x58, 0x36, 0x45, 0x39, 0x34, 0x30, 0x2d, 0x32, 0x38,
		0x34, 0x39, 0x2d, 0x30, 0x31, 0x47, 0x58, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x39, 0x34, 0x30,
		0x2d, 0x32, 0x37, 0x39, 0x36, 0x2d, 0x30, 0x30, 0x47, 0x53, 0x35, 0x45, 0x39, 0x34, 0x30, 0x2d,
		0x32, 0x38, 0x37, 0x38, 0x2d, 0x30, 0x33, 0x47, 0x53, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47,
		0x53, 0x35, 0x33, 0x2d, 0x36, 0x4d, 0x45, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x69, 0x6e, 0x69,
		0x57, 0x24, 0x31, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x57, 0x31, 0x37, 0x57, 0x30, 0x38,
		0x53, 0x35, 0x47, 0x69, 0x6e, 0x7a, 0x7a, 0x75, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d,
		0x61, 0x74, 0x65, 0x47, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x47, 0x4e, 0x50, 0x32, 0x31, 0x4d, 0x30,
		0x32, 0x4d, 0x31, 0x32, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x38, 0x31,
		0x30, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x4c, 0x4d, 0x36, 0x4c, 0x57, 0x42, 0x4c, 0x37, 0x35,
		0x31, 0x39, 0x53, 0x36, 0x73, 0x57, 0x42, 0x4c, 0x37, 0x33, 0x36, 0x31, 0x4d, 0x36, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x36,
		0x31, 0x39, 0x47, 0x4b, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x30, 0x31, 0x39, 0x30, 0x34, 0x31,
		0x38, 0x51, 0x4b, 0x36, 0x47, 0x4e, 0x38, 0x30, 0x30, 0x33, 0x47, 0x41, 0x55, 0x30, 0x38, 0x32,
		0x30, 0x4b, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x4e, 0x53, 0x32, 0x31, 0x36, 0x31, 0x42, 0x4d,
		0x31, 0x38, 0x47, 0x4e, 0x24, 0x31, 0x4d, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x31, 0x31,
		0x50, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x35, 0x20, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x43,
		0x44, 0x4d, 0x41, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x43, 0x44, 0x4d, 0x41, 0x50,
		0x37, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x36, 0x20, 0x4d, 0x69,
		0x72, 0x72, 0x6f, 0x72, 0x47, 0x4c, 0x59, 0x31, 0x36, 0x32, 0x30, 0x4d, 0x35, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x46, 0x31, 0x30, 0x33, 0x24, 0x31, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x44, 0x31, 0x47, 0x6c,
		0x6f, 0x62, 0x65, 0x78, 0x58, 0x38, 0x47, 0x55, 0x36, 0x30, 0x31, 0x32, 0x42, 0x47, 0x6c, 0x6f,
		0x62, 0x6d, 0x61, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x53, 0x32, 0x30,
		0x69, 0x47, 0x6c, 0x6f, 0x66, 0x69, 0x69, 0x73, 0x68, 0x47, 0x70, 0x61, 0x64, 0x5f, 0x55, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x55, 0x47, 0x70, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x41, 0x69, 0x72, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x53, 0x47, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x47,
		0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x20, 0x4f, 0x6e,
		0x79, 0x78, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x6f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x6f, 0x20,
		0x4f, 0x6e, 0x79, 0x78, 0x20, 0x48, 0x44, 0x47, 0x4f, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f,
		0x20, 0x4f, 0x6e, 0x79, 0x78, 0x47, 0x6f, 0x24, 0x31, 0x47, 0x6f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
		0x48, 0x31, 0x2d, 0x43, 0x2d, 0x41, 0x4c, 0x41, 0x44, 0x45, 0x4e, 0x47, 0x57, 0x35, 0x47, 0x6f,
		0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x46, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x49, 0x4d,
		0x45, 0x46, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x33, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x46, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x46, 0x39, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x54, 0x45, 0x41, 0x4d, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x37, 0x2e,
		0x30, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65,
		0x74, 0x74, 0x61, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x2d, 0x24, 0x31, 0x4e, 0x65, 0x74,
		0x74, 0x61, 0x20, 0x33, 0x42, 0x45, 0x4e, 0x47, 0x41, 0x4c, 0x5f, 0x36, 0x42, 0x65, 0x6e, 0x67,
		0x61, 0x6c, 0x20, 0x36, 0x44, 0x45, 0x54, 0x52, 0x4f, 0x49, 0x54, 0x20, 0x33, 0x44, 0x65, 0x74,
		0x72, 0x6f, 0x69, 0x74, 0x20, 0x33, 0x47, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x47, 0x6f,
		0x6c, 0x79, 0x47, 0x6f, 0x6d, 0x65, 0x43, 0x37, 0x32, 0x43, 0x37, 0x31, 0x43, 0x35, 0x31, 0x4b,
		0x31, 0x55, 0x31, 0x55, 0x37, 0x55, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55, 0x39, 0x47, 0x6f,
		0x6f, 0x67, 0x6c, 0x65, 0x47, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x35,
		0x41, 0x4f, 0x53, 0x50, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x4e, 0x65, 0x78,
		0x75, 0x73, 0x20, 0x31, 0x30, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65,
		0x46, 0x69, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61,
		0x73, 0x74, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x43,
		0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x32, 0x29, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x63, 0x61, 0x73, 0x74, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x56, 0x50, 0x69, 0x78, 0x65,
		0x6c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x33, 0x20, 0x58, 0x4c,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x32, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20,
		0x33, 0x61, 0x20, 0x58, 0x4c, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x4c, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x50, 0x49, 0x58, 0x45, 0x4c, 0x34, 0x58, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x34, 0x20, 0x58, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x50, 0x69,
		0x78, 0x65, 0x6c, 0x20, 0x34, 0x61, 0x20, 0x28, 0x35, 0x47, 0x29, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x24, 0x31, 0x61, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x35, 0x61, 0x20, 0x35, 0x47, 0x47,
		0x30, 0x31, 0x31, 0x41, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x32, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x37, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x35, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x20, 0x38, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x38, 0x61, 0x47, 0x50,
		0x4a, 0x34, 0x31, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x37, 0x61, 0x47, 0x38, 0x56, 0x4f, 0x55,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c,
		0x20, 0x39, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x50, 0x69, 0x78,
		0x65, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x24,
		0x31, 0x50, 0x69, 0x70, 0x69, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x46, 0x6f, 0x6c, 0x64,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x43, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x47, 0x6f, 0x50,
		0x69, 0x78, 0x65, 0x6c, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x44, 0x54, 0x2d, 0x32, 0x4e, 0x65, 0x78,
		0x75, 0x73, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x49, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x36, 0x49, 0x36, 0x53, 0x49, 0x36, 0x53,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x37, 0x49, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x34,
		0x20, 0x4d, 0x65, 0x67, 0x61, 0x47, 0x6f, 0x6f, 0x77, 0x65, 0x65, 0x6c, 0x47, 0x70, 0x6c, 0x75,
		0x73, 0x47, 0x4d, 0x43, 0x2d, 0x37, 0x31, 0x32, 0x37, 0x4d, 0x58, 0x32, 0x30, 0x47, 0x4d, 0x43,
		0x2d, 0x36, 0x36, 0x38, 0x4e, 0x51, 0x32, 0x30, 0x53, 0x47, 0x4d, 0x43, 0x2d, 0x36, 0x36, 0x38,
		0x4d, 0x51, 0x32, 0x30, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x65, 0x47, 0x52, 0x41,
		0x44, 0x49, 0x45, 0x4e, 0x54, 0x45, 0x47, 0x72, 0x61, 0x65, 0x74, 0x7a, 0x47, 0x72, 0x61, 0x70,
		0x65, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x24, 0x31, 0x47, 0x72, 0x65, 0x61, 0x74, 0x20, 0x41, 0x73,
		0x69, 0x61, 0x47, 0x72, 0x65, 0x65, 0x47, 0x30, 0x35, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f,
		0x74, 0x20, 0x35, 0x47, 0x47, 0x30, 0x36, 0x31, 0x35, 0x44, 0x54, 0x6f, 0x73, 0x6f, 0x74, 0x20,
		0x37, 0x47, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x47, 0x2d, 0x24, 0x31,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x2d, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72,
		0x65, 0x65, 0x6e, 0x20, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x4f, 0x20, 0x35, 0x35, 0x33,
		0x30, 0x33, 0x43, 0x35, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x58,
		0x31, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x72, 0x65, 0x73, 0x73,
		0x6f, 0x52, 0x45, 0x47, 0x41, 0x4c, 0x20, 0x52, 0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x20, 0x52,
		0x32, 0x52, 0x65, 0x67, 0x61, 0x6c, 0x47, 0x72, 0x65, 0x74, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x42,
		0x65, 0x72, 0x77, 0x65, 0x72, 0x74, 0x47, 0x72, 0x75, 0x6e, 0x64, 0x69, 0x67, 0x41, 0x46, 0x54,
		0x45, 0x55, 0x30, 0x31, 0x34, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x34, 0x4b,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41, 0x46, 0x54, 0x45, 0x55, 0x46, 0x46, 0x30, 0x31,
		0x34, 0x4f, 0x4c, 0x45, 0x44, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x41,
		0x46, 0x54, 0x45, 0x55, 0x30, 0x31, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x36, 0x20,
		0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x72, 0xc3, 0xbc, 0x6e, 0x62, 0x65,
		0x72, 0x67, 0x47, 0x74, 0x65, 0x6c, 0x41, 0x37, 0x32, 0x37, 0x5f, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x37, 0x32, 0x37, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x38, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x39, 0x58, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x75, 0x6f,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x48, 0x31, 0x33, 0x33, 0x42, 0x65, 0x74, 0x61, 0x63, 0x72, 0x75,
		0x78, 0x48, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x20, 0x52, 0x4b, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x20,
		0x58, 0x32, 0x4d, 0x61, 0x78, 0x20, 0x56, 0x31, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x48, 0x38,
		0x50, 0x72, 0x6f, 0x2b, 0x48, 0x41, 0x4f, 0x51, 0x49, 0x4e, 0x48, 0x41, 0x4f, 0x56, 0x4d, 0x48,
		0x41, 0x56, 0x49, 0x54, 0x50, 0x4a, 0x32, 0x30, 0x39, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x4a, 0x32,
		0x30, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x44, 0x43, 0x48, 0x31, 0x30, 0x5f, 0x4f, 0x4e, 0x45,
		0x48, 0x31, 0x30, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x45, 0x43, 0x35, 0x30, 0x53, 0x53, 0x44, 0x2d,
		0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x56, 0x2d, 0x52, 0x31, 0x52, 0x31, 0x20, 0x35, 0x30,
		0x53, 0x20, 0x34, 0x4b, 0x48, 0x45, 0x52, 0x4f, 0x53, 0x50, 0x2d, 0x30, 0x30, 0x31, 0x48, 0x49,
		0x50, 0x45, 0x52, 0x24, 0x31, 0x2d, 0x50, 0x61, 0x64, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x20, 0x53,
		0x54, 0x49, 0x43, 0x4b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x54, 0x56, 0x20, 0x24, 0x31,
		0x48, 0x4b, 0x43, 0x48, 0x4b, 0x43, 0x20, 0x34, 0x4b, 0x20, 0x41, 0x49, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x56, 0x48, 0x4b, 0x50, 0x72, 0x6f, 0x48, 0x4c, 0x4c, 0x4f, 0x48, 0x4d,
		0x44, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x75, 0x6c, 0x73, 0x65,
		0x2b, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x31, 0x35, 0x39,
		0x56, 0x56, 0x69, 0x62, 0x65, 0x48, 0x4f, 0x4c, 0x4c, 0x45, 0x42, 0x45, 0x52, 0x47, 0x48, 0x47,
		0x54, 0x56, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x48, 0x4f, 0x4e, 0x4b, 0x55, 0x41, 0x48, 0x47,
		0x48, 0x4f, 0x54, 0x52, 0x45, 0x41, 0x4c, 0x53, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50,
		0x43, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x50, 0x48, 0x50, 0x20, 0x53, 0x6c, 0x61, 0x74,
		0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x54, 0x61, 0x62, 0x53, 0x6c, 0x61,
		0x74, 0x65, 0x20, 0x36, 0x20, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x48, 0x50, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6c,
		0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x31, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x20, 0x48, 0x44, 0x63, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x6f,
		0x69, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x38, 0x32, 0x30, 0x30, 0x20, 0x45, 0x6c, 0x69,
		0x74, 0x65, 0x20, 0x53, 0x46, 0x46, 0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20,
		0x24, 0x31, 0x48, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38,
		0x50, 0x72, 0x6f, 0x20, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x38, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x50, 0x61, 0x64, 0x69, 0x50, 0x41, 0x51, 0x20, 0x24, 0x31, 0x56, 0x65, 0x65, 0x72, 0x50, 0x72,
		0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x20, 0x4f,
		0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x41, 0x49, 0x4f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x42,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x5a, 0x32, 0x34, 0x30, 0x20, 0x54, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x54, 0x43, 0x55,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x55, 0x31, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x55, 0x31, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x55, 0x31, 0x32, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x55, 0x31, 0x31, 0x20,
		0x45, 0x79, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6f, 0x45, 0x76, 0x6f, 0x20, 0x33, 0x47,
		0x45, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x38,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x55, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x4f,
		0x6e, 0x65, 0x20, 0x58, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f, 0x6e, 0x65, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x32, 0x4f, 0x6e, 0x65, 0x20,
		0x58, 0x31, 0x30, 0x4a, 0x4a, 0x20, 0x4f, 0x6e, 0x65, 0x55, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x4a, 0x20, 0x42, 0x75, 0x74, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x65,
		0x72, 0x66, 0x6c, 0x79, 0x20, 0x53, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x5f, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f,
		0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x43, 0x61,
		0x6d, 0x65, 0x72, 0x61, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20,
		0x4d, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x39, 0x4f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4f, 0x6e,
		0x65, 0x20, 0x4d, 0x37, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x38,
		0x20, 0x45, 0x79, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x38, 0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39,
		0x4f, 0x6e, 0x65, 0x20, 0x45, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x53,
		0x39, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x2b,
		0x4f, 0x6e, 0x65, 0x20, 0x41, 0x39, 0x41, 0x44, 0x52, 0x36, 0x33, 0x30, 0x30, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x54, 0x43,
		0x36, 0x34, 0x33, 0x35, 0x4c, 0x56, 0x57, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x44, 0x4e, 0x41,
		0x41, 0x44, 0x52, 0x36, 0x34, 0x30, 0x30, 0x4c, 0x54, 0x68, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x42,
		0x6f, 0x6c, 0x74, 0x41, 0x44, 0x52, 0x36, 0x34, 0x31, 0x30, 0x4c, 0x52, 0x41, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x33, 0x53,
		0x50, 0x56, 0x20, 0x45, 0x36, 0x30, 0x30, 0x53, 0x50, 0x56, 0x20, 0x45, 0x36, 0x35, 0x30, 0x56,
		0x6f, 0x78, 0x32, 0x50, 0x59, 0x42, 0x32, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x53, 0x44, 0x65, 0x73, 0x69, 0x72,
		0x65, 0x20, 0x35, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x33, 0x30, 0x44,
		0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x33, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20,
		0x33, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x30, 0x38, 0x74, 0x44, 0x65,
		0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x31, 0x30, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36,
		0x30, 0x31, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x44, 0x65, 0x73, 0x69,
		0x72, 0x65, 0x20, 0x36, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x38, 0x31, 0x36,
		0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x35, 0x32, 0x36, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
		0x20, 0x31, 0x39, 0x73, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x36, 0x32, 0x30, 0x47, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x45, 0x78, 0x6f, 0x64, 0x75, 0x73, 0x20, 0x31,
		0x55, 0x31, 0x39, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x31, 0x30, 0x20, 0x45, 0x76, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x66, 0x65, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x48, 0x44,
		0x32, 0x48, 0x44, 0x32, 0x54, 0x61, 0x74, 0x74, 0x6f, 0x6f, 0x20, 0x41, 0x33, 0x32, 0x38, 0x38,
		0x50, 0x37, 0x31, 0x35, 0x61, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x46, 0x6c, 0x79, 0x65, 0x72, 0x20,
		0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x20, 0x28, 0x53, 0x70, 0x72,
		0x69, 0x6e, 0x74, 0x29, 0x57, 0x69, 0x6c, 0x64, 0x66, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x57, 0x69, 0x6c, 0x64, 0x66, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x66, 0x75, 0x72, 0x79, 0x47, 0x54, 0x32, 0x30, 0x48, 0x61,
		0x69, 0x65, 0x72, 0x41, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x5f, 0x4e, 0x46, 0x43, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4e, 0x46, 0x43, 0x41,
		0x34, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x41, 0x34, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x35, 0x2d, 0x46, 0x4c, 0x49, 0x38, 0x53,
		0x35, 0x20, 0x53, 0x69, 0x6c, 0x6b, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45,
		0x31, 0x33, 0x48, 0x4d, 0x2d, 0x4e, 0x37, 0x30, 0x30, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e,
		0x37, 0x30, 0x31, 0x2d, 0x46, 0x4c, 0x48, 0x4d, 0x2d, 0x4e, 0x35, 0x30, 0x31, 0x2d, 0x46, 0x4c,
		0x4c, 0x35, 0x36, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x35, 0x39, 0x2d, 0x46, 0x4c, 0x4c, 0x35, 0x35,
		0x73, 0x48, 0x4d, 0x2d, 0x49, 0x35, 0x36, 0x30, 0x2d, 0x46, 0x4c, 0x47, 0x37, 0x73, 0x48, 0x4d,
		0x2d, 0x47, 0x35, 0x35, 0x33, 0x2d, 0x46, 0x4c, 0x47, 0x35, 0x31, 0x50, 0x32, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x43, 0x34, 0x36, 0x42, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x20, 0x45, 0x43, 0x4d, 0x69, 0x6e, 0x74, 0x61, 0x6b, 0x61, 0x68, 0x61,
		0x69, 0x65, 0x72, 0x41, 0x54, 0x56, 0x6e, 0x69, 0x70, 0x70, 0x6f, 0x72, 0x69, 0x68, 0x61, 0x69,
		0x65, 0x72, 0x41, 0x54, 0x56, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4f,
		0x4c, 0x45, 0x44, 0x20, 0x54, 0x56, 0x20, 0x53, 0x39, 0x68, 0x61, 0x69, 0x65, 0x72, 0x20, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x44, 0x56, 0x42, 0x32, 0x4b, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x46, 0x46, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x61, 0x69, 0x70, 0x61, 0x69, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x36, 0x48, 0x61,
		0x69, 0x78, 0x75, 0x48, 0x61, 0x6d, 0x6c, 0x65, 0x74, 0x5a, 0x65, 0x6c, 0x69, 0x67, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74,
		0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x32, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x32, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x72, 0x6f, 0x6e, 0x20, 0x24, 0x31,
		0x49, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x20, 0x35, 0x47,
		0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x35, 0x47, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x35, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x68,
		0x65, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x6e, 0x53, 0x70, 0x72, 0x65, 0x65, 0x53, 0x4e, 0x31, 0x41,
		0x54, 0x37, 0x31, 0x57, 0x28, 0x42, 0x29, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x33, 0x31, 0x53, 0x4e,
		0x37, 0x30, 0x54, 0x33, 0x53, 0x4e, 0x37, 0x30, 0x54, 0x35, 0x31, 0x41, 0x53, 0x4e, 0x39, 0x37,
		0x54, 0x34, 0x31, 0x57, 0x54, 0x37, 0x2d, 0x51, 0x43, 0x53, 0x4e, 0x41, 0x54, 0x37, 0x31, 0x42,
		0x55, 0x45, 0x48, 0x61, 0x6e, 0x73, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x72, 0x6e,
		0x65, 0x6c, 0x4f, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x48, 0x61, 0x72, 0x70, 0x65,
		0x72, 0x48, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x73, 0x48, 0x54, 0x56, 0x2d, 0x34, 0x33, 0x46, 0x30,
		0x31, 0x2d, 0x54, 0x32, 0x43, 0x48, 0x54, 0x24, 0x31, 0x2d, 0x24, 0x32, 0x48, 0x61, 0x73, 0x65,
		0x65, 0x48, 0x61, 0x74, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x57, 0x6f, 0x6c, 0x66,
		0x48, 0x50, 0x61, 0x64, 0x24, 0x31, 0x57, 0x50, 0x61, 0x64, 0x24, 0x31, 0x46, 0x50, 0x61, 0x64,
		0x33, 0x48, 0x65, 0x69, 0x6d, 0x61, 0x74, 0x48, 0x65, 0x6c, 0x69, 0x6f, 0x48, 0x65, 0x6d, 0x69,
		0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x30, 0x30,
		0x48, 0x65, 0x78, 0x61, 0x42, 0x79, 0x74, 0x65, 0x58, 0x37, 0x48, 0x65, 0x7a, 0x69, 0x72, 0x65,
		0x48, 0x69, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x24, 0x31, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20,
		0x47, 0x6f, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d, 0x53, 0x59,
		0x62, 0x56, 0x48, 0x49, 0x58, 0x2d, 0x34, 0x30, 0x46, 0x31, 0x35, 0x32, 0x4d, 0x53, 0x59, 0x56,
		0x48, 0x49, 0x58, 0x2d, 0x24, 0x31, 0x48, 0x69, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x46, 0x49, 0x4f,
		0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x4e, 0x54, 0x2d, 0x42, 0x44, 0x30,
		0x30, 0x39, 0x7a, 0x20, 0x35, 0x47, 0x48, 0x65, 0x62, 0x65, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x48, 0x65, 0x72, 0x61, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x39, 0x41, 0x4c,
		0x48, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x4d, 0x47, 0x5a, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x31, 0x31, 0x53, 0x55, 0x50, 0x2d, 0x42, 0x44, 0x30, 0x30, 0x31, 0x32,
		0x20, 0x53, 0x45, 0x48, 0x69, 0x2d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x4c, 0x56, 0x2d, 0x54,
		0x24, 0x31, 0x48, 0x69, 0x42, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6d,
		0x65, 0x64, 0x69, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x36, 0x20, 0x47, 0x65,
		0x6e, 0x20, 0x49, 0x49, 0x49, 0x48, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x48, 0x69, 0x48, 0x69,
		0x48, 0x49, 0x48, 0x49, 0x2d, 0x24, 0x31, 0x4b, 0x48, 0x2d, 0x54, 0x41, 0x42, 0x2d, 0x30, 0x31,
		0x48, 0x69, 0x4b, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x35, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x48,
		0x69, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x24, 0x31, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x33, 0x53, 0x50, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x49, 0x49, 0x50, 0x75, 0x72, 0x65,
		0x20, 0x33, 0x48, 0x69, 0x62, 0x65, 0x72, 0x67, 0x51, 0x4c, 0x45, 0x44, 0x20, 0x24, 0x31, 0x24,
		0x31, 0x59, 0x20, 0x55, 0x48, 0x44, 0x2d, 0x52, 0x24, 0x31, 0x59, 0x20, 0x55, 0x48, 0x44, 0x48,
		0x69, 0x67, 0x68, 0x20, 0x51, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x45, 0x76, 0x6f, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x46, 0x69, 0x76, 0x65, 0x53, 0x70, 0x61, 0x64, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x32, 0x46, 0x65, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73,
		0x74, 0x20, 0x58, 0x4c, 0x46, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x65, 0x73, 0x74,
		0x42, 0x61, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x75, 0x72, 0x65, 0x20, 0x46, 0x52, 0x61, 0x7a,
		0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x61, 0x7a, 0x61, 0x72, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20, 0x24, 0x31, 0x45, 0x61, 0x73,
		0x79, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x61, 0x73, 0x79, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
		0x6f, 0x73, 0x74, 0x20, 0x32, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x32, 0x20, 0x53, 0x45, 0x42,
		0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x45, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x33, 0x5a, 0x65,
		0x72, 0x61, 0x20, 0x53, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x61, 0x73, 0x74, 0x79, 0x56,
		0x65, 0x72, 0x67, 0x65, 0x20, 0x4d, 0x57, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61,
		0x6e, 0x73, 0x65, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x54, 0x68, 0x75, 0x6e, 0x64,
		0x65, 0x72, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x52, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6d,
		0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x45, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x24,
		0x31, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x44, 0x55, 0x4f, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20,
		0x44, 0x75, 0x6f, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x51, 0x48, 0x69, 0x70, 0x73, 0x74, 0x72,
		0x65, 0x65, 0x74, 0x48, 0x69, 0x72, 0x65, 0x6d, 0x63, 0x6f, 0x4d, 0x61, 0x74, 0x61, 0x64, 0x6f,
		0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x41, 0x69, 0x72, 0x58, 0x36, 0x2d, 0x50, 0x52, 0x4f, 0x58,
		0x36, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x72, 0x48, 0x69, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x32,
		0x37, 0x30, 0x42, 0x53, 0x41, 0x53, 0x65, 0x72, 0x6f, 0x20, 0x37, 0x45, 0x32, 0x32, 0x53, 0x65,
		0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x32, 0x32, 0x38, 0x31, 0x53, 0x65, 0x72,
		0x6f, 0x20, 0x38, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x30, 0x32, 0x4e, 0x48, 0x4c, 0x54, 0x45, 0x32,
		0x30, 0x33, 0x54, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x43, 0x48, 0x4c, 0x54, 0x45,
		0x37, 0x30, 0x30, 0x54, 0x41, 0x36, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x33, 0x30, 0x54, 0x41, 0x36,
		0x4c, 0x48, 0x4e, 0x52, 0x33, 0x32, 0x30, 0x54, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x35, 0x36, 0x4e,
		0x4d, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x30, 0x32, 0x31, 0x4d, 0x35, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x35, 0x30, 0x73,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x41, 0x58, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x20, 0x4d, 0x61,
		0x78, 0x48, 0x4c, 0x54, 0x45, 0x35, 0x30, 0x31, 0x4e, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b,
		0x53, 0x39, 0x30, 0x37, 0x56, 0x33, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32, 0x33, 0x45, 0x48, 0x33,
		0x30, 0x48, 0x4c, 0x54, 0x45, 0x37, 0x32, 0x30, 0x45, 0x55, 0x33, 0x30, 0x49, 0x34, 0x36, 0x44,
		0x31, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x20, 0x52, 0x45, 0x47, 0x36, 0x38, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x5a, 0x45,
		0x47, 0x39, 0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x55, 0x32, 0x46, 0x32, 0x36, 0x46, 0x32, 0x38, 0x46, 0x32,
		0x39, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x4b, 0x69, 0x6e, 0x67,
		0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x69, 0x6e, 0x67, 0x20,
		0x4b, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x4b, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x6f, 0x6e, 0x67, 0x20,
		0x36, 0x46, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x33, 0x30, 0x53, 0x46, 0x34, 0x30, 0x46,
		0x35, 0x30, 0x46, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x31, 0x38, 0x48, 0x32, 0x30,
		0x48, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x33, 0x45, 0x45, 0x32, 0x30, 0x48, 0x69, 0x73, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x45, 0x35, 0x30, 0x20, 0x31, 0x32, 0x38, 0x47, 0x45, 0x35, 0x30, 0x48, 0x69,
		0x73, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x45, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x36,
		0x34, 0x47, 0x45, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4c, 0x54, 0x45, 0x32, 0x32,
		0x39, 0x54, 0x52, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x31, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x48, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x4c, 0x54, 0x45,
		0x4d, 0x38, 0x30, 0x30, 0x58, 0x69, 0x61, 0x6f, 0x68, 0x61, 0x69, 0x74, 0x75, 0x6e, 0x20, 0x32,
		0x55, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x39, 0x4e, 0x61, 0x6e, 0x61, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x48, 0x24, 0x31, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x33, 0x30, 0x20, 0x53, 0x45, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x55, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x55, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x31, 0x29, 0x48, 0x69, 0x74, 0x61, 0x63, 0x68, 0x69, 0x48, 0x69, 0x74, 0x65,
		0x63, 0x68, 0x48, 0x6f, 0x66, 0x66, 0x6d, 0x61, 0x6e, 0x6e, 0x58, 0x20, 0x24, 0x31, 0x48, 0x6f,
		0x6d, 0x61, 0x74, 0x69, 0x63, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x63, 0x68, 0x41, 0x4c,
		0x46, 0x41, 0x20, 0x24, 0x31, 0x37, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x5f, 0x50,
		0x52, 0x4f, 0x37, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x49,
		0x64, 0x65, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x49, 0x50, 0x53, 0x24, 0x31,
		0x48, 0x54, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6d, 0x74, 0x6f, 0x6d, 0x50, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x31, 0x37, 0x48, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x54, 0x24,
		0x31, 0x48, 0x6f, 0x6e, 0x65, 0x79, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x61,
		0x6c, 0x20, 0x24, 0x31, 0x45, 0x44, 0x41, 0x37, 0x31, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x61, 0x6c,
		0x20, 0x45, 0x44, 0x41, 0x37, 0x31, 0x44, 0x6f, 0x6c, 0x70, 0x68, 0x69, 0x6e, 0x20, 0x24, 0x31,
		0x48, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x48, 0x6f, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x5f, 0x50,
		0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x4f, 0x4e, 0x47, 0x54, 0x4f, 0x50, 0x5f,
		0x62, 0x6f, 0x78, 0x48, 0x6f, 0x6f, 0x7a, 0x6f, 0x46, 0x31, 0x33, 0x48, 0x6f, 0x70, 0x65, 0x6c,
		0x61, 0x6e, 0x64, 0x48, 0x59, 0x24, 0x31, 0x48, 0x6f, 0x72, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x72,
		0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x69, 0x6e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x65,
		0x70, 0x70, 0x65, 0x72, 0x48, 0x50, 0x50, 0x2d, 0x47, 0x53, 0x31, 0x48, 0x50, 0x50, 0x4c, 0x36,
		0x30, 0x41, 0x43, 0x68, 0x69, 0x6c, 0x61, 0x63, 0x61, 0x48, 0x50, 0x50, 0x4c, 0x36, 0x33, 0x41,
		0x50, 0x61, 0x6e, 0x63, 0x61, 0x56, 0x4c, 0x45, 0x35, 0x50, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x6f,
		0x50, 0x75, 0x79, 0x61, 0x48, 0x50, 0x50, 0x2d, 0x4c, 0x35, 0x35, 0x42, 0x53, 0x65, 0x72, 0x72,
		0x61, 0x6e, 0x6f, 0x48, 0x6f, 0x74, 0x77, 0x61, 0x76, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x20,
		0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x52, 0x38, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x52,
		0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x31, 0x36, 0x43,
		0x79, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x62, 0x65, 0x72,
		0x20, 0x58, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x24, 0x31, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x79, 0x6d, 0x62, 0x6f,
		0x6c, 0x20, 0x24, 0x31, 0x57, 0x31, 0x30, 0x4d, 0x35, 0x69, 0x50, 0x65, 0x61, 0x72, 0x6c, 0x20,
		0x4b, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x52,
		0x36, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x45, 0x46, 0x54, 0x41, 0x42, 0x20,
		0x52, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x52, 0x36, 0x20, 0x52, 0x72, 0x6f,
		0x54, 0x41, 0x42, 0x20, 0x52, 0x36, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x52, 0x36, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x52, 0x24, 0x31, 0x53,
		0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48,
		0x6f, 0x77, 0x48, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x31, 0x47, 0x20, 0x47, 0x6f, 0x20, 0x4b, 0x69,
		0x64, 0x73, 0x48, 0x54, 0x2d, 0x24, 0x31, 0x48, 0x75, 0x61, 0x64, 0x6f, 0x6f, 0x48, 0x47, 0x31,
		0x31, 0x48, 0x75, 0x61, 0x67, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x76, 0x69, 0x4b, 0x48, 0x41, 0x54,
		0x41, 0x52, 0x20, 0x48, 0x2d, 0x31, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x48, 0x41, 0x54,
		0x41, 0x52, 0x20, 0x48, 0x2d, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x75, 0x61, 0x77, 0x65,
		0x69, 0x50, 0x75, 0x72, 0x61, 0x20, 0x37, 0x30, 0x50, 0x75, 0x72, 0x61, 0x20, 0x37, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x42, 0x4e, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x50, 0x75, 0x72,
		0x61, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x72, 0x61, 0x20, 0x37, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x2b, 0x56, 0x43, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x20, 0x50, 0x75, 0x72, 0x73, 0x65, 0x47, 0x41, 0x52, 0x2d, 0x41, 0x4e, 0x36,
		0x30, 0x48, 0x69, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x73, 0x20, 0x35, 0x47,
		0x47, 0x41, 0x52, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x69, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x36, 0x30, 0x20, 0x35, 0x47, 0x42, 0x41, 0x4c, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x69,
		0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x47, 0x46, 0x59, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30,
		0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x39, 0x30, 0x4d, 0x41, 0x47, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x39, 0x30, 0x20, 0x47, 0x54, 0x52, 0x45, 0x50, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x41, 0x2d, 0x41,
		0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x41, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30,
		0x30, 0x46, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x30, 0x46, 0x4e, 0x45, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30,
		0x20, 0x35, 0x47, 0x53, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x42, 0x4e, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x4e, 0x50, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41,
		0x47, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20,
		0x47, 0x54, 0x41, 0x4e, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x4e, 0x4e, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x35, 0x47, 0x47, 0x49,
		0x41, 0x2d, 0x41, 0x4e, 0x38, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x30, 0x20, 0x53,
		0x45, 0x48, 0x50, 0x42, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x39, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44,
		0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x44, 0x33, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64,
		0x20, 0x59, 0x35, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x32, 0x30,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x33, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x59, 0x35, 0x43, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x33, 0x30, 0x30,
		0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x35, 0x32, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x47, 0x36, 0x32, 0x30, 0x53, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36,
		0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x50, 0x37, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x36, 0x41, 0x73, 0x63,
		0x65, 0x6e, 0x64, 0x20, 0x47, 0x37, 0x33, 0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x50,
		0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x58, 0x54, 0x32, 0x41, 0x73, 0x63, 0x65, 0x6e,
		0x64, 0x20, 0x59, 0x32, 0x32, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x35,
		0x30, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x59, 0x35, 0x36, 0x30, 0x41, 0x73, 0x63, 0x65,
		0x6e, 0x64, 0x20, 0x47, 0x37, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f,
		0x79, 0x20, 0x31, 0x30, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x53, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x35, 0x53, 0x4d, 0x47, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x45, 0x56, 0x45, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e,
		0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x7a, 0x4d, 0x47, 0x41, 0x2d, 0x41, 0x4c, 0x34, 0x30, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x4d, 0x41, 0x4f, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x43, 0x54,
		0x52, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x54, 0x47, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x36, 0x30, 0x58, 0x43, 0x54, 0x52, 0x2d, 0x41, 0x4c, 0x32, 0x30, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x47, 0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x30, 0x47, 0x52, 0x33, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20,
		0x36, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x36, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x53, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x38, 0x65, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x65, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x5a, 0x20, 0x35, 0x47,
		0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x53, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79,
		0x20, 0x32, 0x30, 0x65, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x59, 0x36, 0x70, 0x47,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x36, 0x32, 0x31, 0x47, 0x52, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x52,
		0x35, 0x47, 0x52, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x58, 0x38, 0x47, 0x38,
		0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36,
		0x30, 0x50, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x35, 0x30, 0x50, 0x35, 0x30, 0x45, 0x50,
		0x35, 0x30, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x41, 0x4c, 0x2d, 0x41, 0x4c, 0x36,
		0x30, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x4c, 0x45, 0x4d, 0x2d, 0x41, 0x4c, 0x30,
		0x30, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x53, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x33, 0x30, 0x49, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x33, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x43, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x33, 0x58, 0x48, 0x4e, 0x33, 0x2d, 0x55, 0x30, 0x31, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x43, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x34, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x34, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x43, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53,
		0x49, 0x4d, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x53, 0x45,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x53, 0x41, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x47, 0x49, 0x41, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x30, 0x20, 0x53, 0x45, 0x20,
		0x35, 0x47, 0x54, 0x4e, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x41, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x36, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x43, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x37, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x41, 0x20, 0x50, 0x72, 0x6f,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x69,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x37, 0x58,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x38, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x41, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x53, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x38, 0x58, 0x20,
		0x4d, 0x61, 0x78, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x69, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x39, 0x53, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x39, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x39, 0x58, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x20,
		0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x6c, 0x6c, 0x79, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x32, 0x20, 0x33, 0x44, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x56, 0x32, 0x4c, 0x52, 0x41, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x56,
		0x45, 0x52, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x56, 0x73, 0x32, 0x46, 0x52, 0x49, 0x2d, 0x4e, 0x58, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x73, 0x46, 0x52, 0x49, 0x2d, 0x41,
		0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56,
		0x73, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x46, 0x52, 0x49, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x73,
		0x20, 0x35, 0x47, 0x46, 0x4c, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x56, 0x73, 0x33, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x45,
		0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67,
		0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x4c, 0x5a, 0x2d, 0x41, 0x4e, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x4c, 0x47, 0x45, 0x2d, 0x41, 0x4e, 0x32, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x2b, 0x41, 0x4e, 0x59, 0x2d, 0x4c, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x4d, 0x4f, 0x2d, 0x4e,
		0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x35, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x47, 0x54, 0x2d, 0x41, 0x4e, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x36, 0x20, 0x52, 0x53, 0x52, 0x42, 0x56, 0x4c, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x56, 0x4c, 0x2d, 0x41, 0x4c,
		0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x45,
		0x44, 0x49, 0x2d, 0x41, 0x4c, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x56, 0x4b, 0x59, 0x2d, 0x54, 0x4c, 0x30, 0x30, 0x50, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x4f, 0x47, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x50, 0x34, 0x30, 0x20, 0x35,
		0x47, 0x41, 0x4e, 0x41, 0x2d, 0x4e, 0x58, 0x39, 0x50, 0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x4d, 0x41, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x30, 0x4a, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x30, 0x20, 0x35,
		0x47, 0x56, 0x4e, 0x45, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x36, 0x43, 0x41, 0x4c, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x45, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x35,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x43, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x54, 0x52, 0x4b, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x4b, 0x59, 0x2d, 0x41, 0x4e, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x37, 0x54, 0x20, 0x35, 0x47, 0x57, 0x44, 0x59, 0x2d, 0x41, 0x4e, 0x30,
		0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x34, 0x30, 0x43, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37,
		0x62, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x63, 0x41, 0x4c, 0x54, 0x2d, 0x4e, 0x58,
		0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x63, 0x20, 0x35, 0x47, 0x43, 0x4c, 0x4b,
		0x2d, 0x4e, 0x58, 0x32, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x62, 0x20, 0x35, 0x47,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x4e, 0x45, 0x57,
		0x2d, 0x41, 0x4e, 0x39, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x35, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x32,
		0x30, 0x20, 0x53, 0x45, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x37,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x35, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x20, 0x32, 0x30, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x38, 0x41, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x39, 0x41, 0x43, 0x4c, 0x4b, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x54, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x38, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x56, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x32, 0x30, 0x56, 0x4e, 0x41, 0x2d, 0x4c, 0x32, 0x39, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x59, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x59, 0x36, 0x20, 0x49, 0x49, 0x20, 0x43, 0x6f,
		0x6d, 0x70, 0x61, 0x63, 0x74, 0x59, 0x36, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x58, 0x32, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20,
		0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x37, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x61, 0x52, 0x42, 0x4e, 0x2d, 0x4e, 0x58, 0x33, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x61, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x38, 0x62, 0x4c, 0x4c, 0x59, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x32, 0x30, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x4e, 0x45, 0x2d, 0x4e, 0x34, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x38, 0x20, 0x35,
		0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x36, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x62, 0x41, 0x4c, 0x54, 0x2d, 0x4e,
		0x58, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x62, 0x20, 0x35, 0x47, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x47, 0x2d, 0x41,
		0x4e, 0x37, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78,
		0x41, 0x4e, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x33,
		0x30, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x33, 0x30, 0x69, 0x54, 0x46, 0x59, 0x2d, 0x41, 0x4e, 0x34, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x49, 0x4f, 0x2d,
		0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x69, 0x41, 0x44,
		0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x34, 0x30, 0x20,
		0x47, 0x54, 0x52, 0x4d, 0x4f, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x34, 0x30, 0x52, 0x4d, 0x4f, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x39, 0x61, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x39, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x39, 0x42, 0x52, 0x50, 0x2d, 0x4e, 0x58, 0x31, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x39, 0x63, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x47, 0x46, 0x59, 0x2d,
		0x4c, 0x58, 0x32, 0x50, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x62, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x43, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x58, 0x35, 0x30, 0x69, 0x4c, 0x4c, 0x59, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x58, 0x35, 0x30, 0x69, 0x2b, 0x20, 0x35, 0x47, 0x41, 0x4c, 0x49, 0x2d, 0x41, 0x4e,
		0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x41, 0x4c, 0x50, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x4c, 0x59, 0x4e, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
		0x20, 0x58, 0x36, 0x30, 0x69, 0x20, 0x35, 0x47, 0x42, 0x52, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x36, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x58, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x56, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58,
		0x33, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58, 0x35, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x20, 0x58,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x35, 0x52, 0x49,
		0x4f, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x34, 0x4d,
		0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x38, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20,
		0x39, 0x54, 0x59, 0x48, 0x36, 0x30, 0x31, 0x4d, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20,
		0x39, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x69, 0x6d, 0x61, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x58, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x53, 0x20, 0x32, 0x54, 0x41,
		0x48, 0x2d, 0x41, 0x4e, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x58, 0x33, 0x41, 0x4c, 0x54, 0x2d, 0x41, 0x4c, 0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x58, 0x35, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x54, 0x45, 0x54, 0x2d, 0x41, 0x4e, 0x35,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x58, 0x32, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x52,
		0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x58, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33,
		0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x52, 0x53, 0x20, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65,
		0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30,
		0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x4f, 0x48, 0x2d, 0x41, 0x4e, 0x38, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x34, 0x30, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x52, 0x53,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x34, 0x30, 0x45, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35,
		0x30, 0x43, 0x45, 0x54, 0x2d, 0x41, 0x4c, 0x36, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x35, 0x30,
		0x45, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x4c, 0x4e, 0x2d,
		0x41, 0x4c, 0x31, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x42, 0x52, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x36, 0x30, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x20,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x53, 0x20, 0x50,
		0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x61, 0x74,
		0x65, 0x20, 0x53, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x2b, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x49, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x32, 0x53, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x33, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x69, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x35, 0x54, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x35, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x35, 0x47, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x37, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47,
		0x4d, 0x41, 0x4f, 0x2d, 0x4c, 0x58, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x69, 0x47,
		0x4f, 0x41, 0x2d, 0x41, 0x4c, 0x38, 0x30, 0x55, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x32, 0x20, 0x56,
		0x69, 0x74, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
		0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x31, 0x20, 0x53,
		0x45, 0x41, 0x44, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x55, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31,
		0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x41, 0x44, 0x41, 0x2d, 0x41, 0x4c, 0x31, 0x30, 0x55,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x32, 0x43, 0x54, 0x52, 0x2d, 0x4c, 0x38, 0x31, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x31, 0x32, 0x69, 0x41, 0x44, 0x41, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4c, 0x4b, 0x2d, 0x41, 0x4c, 0x30,
		0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x37, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x69, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x35, 0x47, 0x4a, 0x53, 0x43, 0x2d, 0x41, 0x4e, 0x30, 0x30,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x34, 0x47, 0x43, 0x48, 0x4c, 0x2d, 0x41, 0x4c, 0x36, 0x30,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x53, 0x45, 0x20, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x69,
		0x74, 0x79, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x4e,
		0x6f, 0x76, 0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x38, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x76, 0x61, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x43, 0x48, 0x41, 0x2d, 0x41, 0x4c,
		0x38, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x31, 0x30, 0x7a, 0x4d, 0x41, 0x4f, 0x2d, 0x4c, 0x58,
		0x39, 0x4e, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x32, 0x30, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x36,
		0x31, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x37, 0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x39,
		0x30, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x59, 0x39, 0x31, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x50, 0x20,
		0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x50, 0x20, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x5a, 0x50, 0x20, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x50, 0x31, 0x30, 0x50,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x50, 0x32, 0x30, 0x50, 0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x33, 0x30, 0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x61,
		0x72, 0x69, 0x65, 0x2d, 0x4c, 0x32, 0x31, 0x42, 0x58, 0x50, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x4e, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x34, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x20, 0x45, 0x50, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x45,
		0x20, 0x4e, 0x46, 0x43, 0x50, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x34, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x38, 0x50, 0x38, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x50, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50,
		0x39, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x50, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x39,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x74, 0x58, 0x59, 0x20, 0x4d, 0x61, 0x78, 0x59,
		0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x59, 0x33, 0x49, 0x49, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x35, 0x70, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x37, 0x29, 0x59, 0x35, 0x49, 0x49, 0x59, 0x36, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36,
		0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x36, 0x20, 0x50, 0x72,
		0x6f, 0x59, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x36,
		0x32, 0x35, 0x59, 0x36, 0x33, 0x35, 0x59, 0x36, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x53, 0x49, 0x4d, 0x59, 0x36, 0x49, 0x49, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x59, 0x37, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x39, 0x59, 0x37, 0x61,
		0x59, 0x37, 0x70, 0x59, 0x38, 0x70, 0x59, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x59,
		0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x59, 0x39, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x53, 0x47, 0x54, 0x33, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x20, 0x33,
		0x55, 0x6c, 0x74, 0x79, 0x6d, 0x20, 0x35, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x47, 0x36,
		0x4e, 0x65, 0x78, 0x75, 0x73, 0x20, 0x36, 0x50, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x4d, 0x61,
		0x67, 0x69, 0x63, 0x20, 0x56, 0x33, 0x47, 0x52, 0x4c, 0x2d, 0x41, 0x4c, 0x31, 0x30, 0x4d, 0x61,
		0x74, 0x65, 0x20, 0x58, 0x54, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x44,
		0x65, 0x73, 0x69, 0x67, 0x6e, 0x47, 0x44, 0x49, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x50, 0x61, 0x64, 0x20, 0x31, 0x33, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x52, 0x4f, 0x44, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x4d, 0x61, 0x67, 0x69, 0x63, 0x50, 0x61, 0x64, 0x20, 0x32, 0x20, 0x57, 0x69, 0x46, 0x69, 0x51,
		0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34,
		0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41,
		0x47, 0x53, 0x36, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x53,
		0x45, 0x20, 0x31, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x53, 0x36, 0x2d, 0x4c, 0x30,
		0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x20, 0x31, 0x31, 0x4d, 0x61,
		0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x31, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x30, 0x2e, 0x38, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53,
		0x45, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x57, 0x69, 0x46, 0x69, 0x44, 0x42, 0x59, 0x32, 0x2d, 0x4c, 0x30, 0x39, 0x4d,
		0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x69, 0x72,
		0x42, 0x54, 0x4b, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x42, 0x54, 0x4b, 0x2d, 0x57, 0x30, 0x39,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x54, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x53, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x53, 0x45, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20,
		0x31, 0x30, 0x2e, 0x33, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x38, 0x2e, 0x30, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x52, 0x4f, 0x44, 0x2d, 0x57, 0x30, 0x39,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d,
		0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4b, 0x52, 0x4a, 0x32, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x42, 0x52, 0x54, 0x2d, 0x57, 0x30, 0x39, 0x48,
		0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x52, 0x54, 0x2d, 0x41, 0x4e, 0x30, 0x39,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x31, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x6e, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x56, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x4b, 0x4f, 0x42, 0x32, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x37, 0x20, 0x38, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4b, 0x4f, 0x42, 0x32, 0x4b, 0x2d, 0x4c, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x38, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x4f, 0x42, 0x32, 0x2d,
		0x41, 0x4c, 0x30, 0x30, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x37, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52, 0x2d, 0x57, 0x30, 0x39,
		0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x36, 0x41, 0x47,
		0x4d, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x58, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x44, 0x4c,
		0x2d, 0x57, 0x30, 0x39, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x38,
		0x61, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x44, 0x4c, 0x2d, 0x4c, 0x30, 0x39, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x38, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47,
		0x52, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x58, 0x36, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x45, 0x4c, 0x4e, 0x2d, 0x57, 0x30, 0x39,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x39, 0x20, 0x31, 0x31, 0x2e,
		0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x58, 0x39, 0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x20,
		0x31, 0x32, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x39, 0x20, 0x31, 0x32, 0x2e, 0x31,
		0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38,
		0x43, 0x33, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x43, 0x33, 0x20, 0x39,
		0x2e, 0x36, 0x22, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x43, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x43, 0x35, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x35, 0x20,
		0x31, 0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x4d, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38,
		0x22, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x4d, 0x52, 0x4f, 0x2d, 0x57, 0x30, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x34, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x20, 0x35, 0x47, 0x4d, 0x61, 0x74, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x57, 0x47, 0x52, 0x2d, 0x41, 0x4e, 0x31, 0x39, 0x4d, 0x61, 0x74, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x36, 0x22, 0x4d, 0x61, 0x74, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x33, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x31, 0x30, 0x2e,
		0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x2e, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36,
		0x20, 0x31, 0x30, 0x2e, 0x38, 0x22, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58,
		0x32, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x35, 0x20, 0x38, 0x2e, 0x34,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x38, 0x2e, 0x34, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x38, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33,
		0x20, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x42, 0x54, 0x56, 0x2d, 0x44, 0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x33, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x35, 0x41, 0x47, 0x4d, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f, 0x6e,
		0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x41, 0x47, 0x4d, 0x33, 0x2d, 0x41, 0x4c, 0x30, 0x39, 0x48, 0x4e, 0x48, 0x6f,
		0x6e, 0x6f, 0x72, 0x20, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x35, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64,
		0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x33, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20,
		0x54, 0x33, 0x20, 0x38, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x33, 0x20,
		0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x37, 0x2e, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x32, 0x20, 0x38,
		0x2e, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x32, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x20, 0x31, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
		0x64, 0x20, 0x54, 0x31, 0x20, 0x37, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54,
		0x31, 0x20, 0x38, 0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d, 0x57, 0x32, 0x30, 0x4d, 0x65, 0x64, 0x69,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x53, 0x33, 0x4b, 0x2d,
		0x4c, 0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x73,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x47, 0x52, 0x4b, 0x2d, 0x57,
		0x30, 0x39, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20, 0x39,
		0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x41, 0x47, 0x52, 0x4b, 0x2d, 0x4c, 0x30, 0x39,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x54, 0x31, 0x30, 0x20, 0x39, 0x2e, 0x37,
		0x22, 0x20, 0x4c, 0x54, 0x45, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x4f, 0x4e, 0x2d, 0x41, 0x4c, 0x31, 0x39, 0x42, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x35, 0x20, 0x38, 0x22, 0x42, 0x5a, 0x49, 0x2d,
		0x41, 0x4c, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x5a, 0x49,
		0x2d, 0x57, 0x30, 0x30, 0x43, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x57, 0x30, 0x39, 0x42, 0x5a, 0x54, 0x33, 0x2d, 0x41,
		0x4c, 0x30, 0x30, 0x43, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x42, 0x5a, 0x44, 0x2d, 0x57,
		0x30, 0x30, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x42, 0x5a, 0x44, 0x2d, 0x41, 0x4c, 0x30, 0x30, 0x4d,
		0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x64, 0x20, 0x43, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x44,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x64, 0x74, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20, 0x53, 0x70,
		0x6f, 0x72, 0x74, 0x47, 0x4c, 0x4c, 0x2d, 0x41, 0x4c, 0x30, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x41, 0x52, 0x43, 0x2d,
		0x41, 0x4c, 0x30, 0x30, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x42, 0x4c, 0x4d, 0x2d, 0x30,
		0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x43, 0x36,
		0x31, 0x30, 0x38, 0x56, 0x24, 0x31, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x39, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33,
		0x35, 0x39, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35, 0x22, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x35, 0x35, 0x22,
		0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53,
		0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x35, 0x22, 0x4b,
		0x41, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63,
		0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41,
		0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65,
		0x65, 0x6e, 0x20, 0x53, 0x20, 0x36, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30,
		0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x37, 0x35, 0x22, 0x4b, 0x41, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x53, 0x20, 0x37, 0x35,
		0x22, 0x49, 0x64, 0x65, 0x6f, 0x73, 0x24, 0x31, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x20, 0x4d,
		0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x48, 0x75, 0x67, 0x65, 0x72, 0x6f, 0x63, 0x6b, 0x54, 0x31,
		0x30, 0x31, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x54, 0x31, 0x30, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x77, 0x61, 0x72, 0x65, 0x42, 0x72, 0x61, 0x69, 0x6c,
		0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x72, 0x61, 0x69, 0x6c, 0x6c, 0x65, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x69,
		0x6c, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x48, 0x75, 0x6d,
		0x61, 0x78, 0x48, 0x75, 0x72, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x65, 0x49, 0x67, 0x6e, 0x69, 0x74,
		0x65, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x47, 0x69, 0x67, 0x61, 0x47, 0x6c, 0x61, 0x7a, 0x65,
		0x43, 0x6f, 0x62, 0x72, 0x61, 0x44, 0x5a, 0x49, 0x52, 0x45, 0x44, 0x7a, 0x69, 0x72, 0x65, 0x53,
		0x41, 0x47, 0x45, 0x53, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x53, 0x6c, 0x61, 0x6d, 0x56,
		0x75, 0x6c, 0x63, 0x61, 0x6e, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46,
		0x6c, 0x61, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x75, 0x73, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x72, 0x69, 0x73,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45,
		0x78, 0x63, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x6e, 0x74, 0x48, 0x75, 0x73, 0x6b, 0x65, 0x65,
		0x56, 0x55, 0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x6f, 0x48, 0x79,
		0x61, 0x74, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6b, 0x6b,
		0x65, 0x72, 0x48, 0x79, 0x6b, 0x6b, 0x65, 0x72, 0x5f, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30,
		0x4d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x48, 0x79, 0x74, 0x65, 0x72, 0x61, 0x48, 0x79, 0x75,
		0x6e, 0x64, 0x61, 0x69, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x53, 0x65, 0x6f,
		0x75, 0x6c, 0x20, 0x53, 0x38, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x49, 0x58, 0x53, 0x65,
		0x6f, 0x75, 0x6c, 0x20, 0x4d, 0x69, 0x78, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x45, 0x43, 0x4f,
		0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35,
		0x35, 0x32, 0x33, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x33,
		0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x32, 0x35, 0x35, 0x32,
		0x34, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32, 0x34, 0x47, 0x32,
		0x34, 0x30, 0x32, 0x37, 0x4b, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x47, 0x32,
		0x37, 0x57, 0x32, 0x35, 0x30, 0x34, 0x32, 0x4c, 0x45, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x74, 0x79,
		0x20, 0x57, 0x34, 0x32, 0x48, 0x50, 0x35, 0x35, 0x34, 0x4f, 0x4c, 0x35, 0x30, 0x33, 0x46, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x59, 0x4d, 0x49, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x79, 0x6d, 0x69, 0x20, 0x35, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x34, 0x36, 0x35,
		0x47, 0x4f, 0x45, 0x34, 0x36, 0x35, 0x20, 0x47, 0x6f, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x20, 0x52,
		0x4f, 0x43, 0x4b, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x4c, 0x24, 0x31,
		0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x48, 0x54, 0x30, 0x37, 0x30, 0x31, 0x4c,
		0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x58, 0x4c, 0x48, 0x54, 0x30, 0x37, 0x30,
		0x31, 0x57, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x34, 0x58, 0x48, 0x54,
		0x30, 0x37, 0x30, 0x33, 0x57, 0x30, 0x38, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x57, 0x33,
		0x31, 0x30, 0x4c, 0x42, 0x31, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x4c, 0x42, 0x31,
		0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x49, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x31, 0x30, 0x58, 0x4c, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x5f, 0x38, 0x57, 0x32, 0x4b, 0x6f, 0x72,
		0x61, 0x6c, 0x20, 0x38, 0x57, 0x32, 0x48, 0x54, 0x31, 0x30, 0x30, 0x34, 0x4c, 0x31, 0x36, 0x48,
		0x54, 0x31, 0x30, 0x30, 0x33, 0x58, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x31, 0x30,
		0x58, 0x48, 0x54, 0x31, 0x30, 0x30, 0x32, 0x57, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x31, 0x30, 0x57, 0x48, 0x54, 0x30, 0x37, 0x30, 0x33, 0x4b, 0x31, 0x36, 0x4b, 0x6f, 0x72, 0x61,
		0x6c, 0x20, 0x37, 0x4d, 0x33, 0x58, 0x48, 0x54, 0x30, 0x37, 0x30, 0x34, 0x4b, 0x30, 0x38, 0x4b,
		0x6f, 0x72, 0x61, 0x6c, 0x20, 0x37, 0x4d, 0x34, 0x31, 0x30, 0x57, 0x42, 0x31, 0x4b, 0x6f, 0x72,
		0x61, 0x6c, 0x20, 0x31, 0x30, 0x57, 0x42, 0x31, 0x31, 0x30, 0x57, 0x42, 0x32, 0x48, 0x79, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x31, 0x30, 0x57, 0x42, 0x32, 0x31, 0x30, 0x4c,
		0x41, 0x31, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x4c, 0x41,
		0x31, 0x48, 0x54, 0x31, 0x30, 0x30, 0x32, 0x57, 0x33, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x6c, 0x20,
		0x31, 0x30, 0x58, 0x33, 0x20, 0x57, 0x69, 0x46, 0x69, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x47, 0x42, 0x31, 0x48, 0x79, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x57,
		0x44, 0x31, 0x48, 0x79, 0x76, 0x65, 0x50, 0x72, 0x79, 0x6d, 0x65, 0x20, 0x30, 0x31, 0x53, 0x54,
		0x30, 0x31, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x54, 0x30, 0x31, 0x49, 0x20, 0x4b, 0x41,
		0x4c, 0x4c, 0x49, 0x4b, 0x41, 0x4c, 0x4c, 0x49, 0x2d, 0x49, 0x4e, 0x4e, 0x43, 0x6f, 0x6d, 0x6d,
		0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x33, 0x47,
		0x49, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x33, 0x49, 0x44,
		0x43, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x20, 0x32, 0x30, 0x49, 0x4b, 0x49, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x47, 0x4f, 0x35, 0x5f, 0x35, 0x35, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22,
		0x47, 0x6f, 0x20, 0x34, 0x2e, 0x35, 0x22, 0x42, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x47, 0x4f, 0x35,
		0x35, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x47, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x42, 0x4c,
		0x45, 0x53, 0x53, 0x50, 0x4c, 0x55, 0x53, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x4b, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x20, 0x4d, 0x61, 0x78,
		0x49, 0x4d, 0x4f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x51, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x51, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x32, 0x53, 0x32, 0x46, 0x65, 0x65,
		0x6c, 0x20, 0x41, 0x32, 0x53, 0x35, 0x30, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x38, 0x30,
		0x20, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x38, 0x39, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
		0x53, 0x38, 0x38, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x39, 0x39,
		0x20, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x53, 0x39, 0x38, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
		0x6f, 0x6e, 0x53, 0x38, 0x37, 0x20, 0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x36, 0x37, 0x20,
		0x42, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x37, 0x38, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79, 0x51, 0x38,
		0x20, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
		0x79, 0x20, 0x49, 0x49, 0x51, 0x51, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x58, 0x39, 0x49, 0x4e,
		0x43, 0x41, 0x52, 0x49, 0x4e, 0x51, 0x49, 0x4e, 0x53, 0x59, 0x53, 0x48, 0x4b, 0x39, 0x2d, 0x34,
		0x30, 0x31, 0x30, 0x41, 0x43, 0x37, 0x5f, 0x44, 0x4a, 0x31, 0x37, 0x41, 0x43, 0x37, 0x2d, 0x44,
		0x4a, 0x31, 0x37, 0x49, 0x48, 0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34, 0x4d, 0x58, 0x20, 0x49, 0x48,
		0x39, 0x2d, 0x4c, 0x36, 0x31, 0x34, 0x49, 0x4f, 0x54, 0x57, 0x45, 0x54, 0x39, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x51, 0x4d, 0x56, 0x69, 0x76, 0x61, 0x6c, 0x64, 0x69, 0x4e, 0x65, 0x77, 0x74,
		0x6f, 0x6e, 0x49, 0x52, 0x41, 0x49, 0x52, 0x41, 0x5f, 0x44, 0x55, 0x4f, 0x44, 0x75, 0x6f, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x54, 0x49, 0x54, 0x2d, 0x31, 0x31, 0x30, 0x31, 0x2d,
		0x51, 0x55, 0x41, 0x44, 0x31, 0x31, 0x30, 0x31, 0x20, 0x51, 0x75, 0x61, 0x64, 0x49, 0x55, 0x4e,
		0x49, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x49, 0x54, 0x4e, 0x54, 0x2d, 0x33, 0x35, 0x30, 0x36, 0x4d,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x46, 0x48, 0x44, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30, 0x34, 0x53, 0x4e,
		0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x30,
		0x39, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20,
		0x49, 0x5a, 0x4e, 0x54, 0x2d, 0x31, 0x30, 0x30, 0x39, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42,
		0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x49, 0x49, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x4c, 0x45, 0x4e, 0x54, 0x2d, 0x31, 0x30,
		0x31, 0x37, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x33,
		0x47, 0x20, 0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x31, 0x50, 0x2f, 0x33,
		0x36, 0x30, 0x32, 0x50, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x36, 0x30, 0x33, 0x50, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x33, 0x47, 0x20, 0x53, 0x6c, 0x69,
		0x6d, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20,
		0x53, 0x6b, 0x79, 0x20, 0x48, 0x44, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33, 0x38, 0x30, 0x35,
		0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20, 0x33, 0x47, 0x20,
		0x71, 0x75, 0x61, 0x64, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65, 0x74, 0x54,
		0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d,
		0x33, 0x39, 0x30, 0x35, 0x54, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x5a, 0x58, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x30, 0x37, 0x30, 0x31, 0x53, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x79, 0x20, 0x6e, 0x65, 0x74, 0x4e, 0x54, 0x2d, 0x30,
		0x38, 0x30, 0x35, 0x43, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x53, 0x6b, 0x61, 0x74, 0x20,
		0x4d, 0x58, 0x4e, 0x54, 0x2d, 0x30, 0x39, 0x30, 0x32, 0x53, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42,
		0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x71, 0x75, 0x61, 0x64, 0x20, 0x52, 0x58, 0x4e, 0x65,
		0x74, 0x54, 0x41, 0x42, 0x5f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x33, 0x47, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47, 0x4e, 0x54, 0x2d, 0x33,
		0x37, 0x30, 0x32, 0x4d, 0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69,
		0x78, 0x20, 0x33, 0x47, 0x20, 0x64, 0x75, 0x6f, 0x4e, 0x54, 0x2d, 0x33, 0x37, 0x30, 0x33, 0x4d,
		0x4e, 0x65, 0x74, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x33, 0x47,
		0x54, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x4e, 0x65, 0x74,
		0x54, 0x41, 0x42, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x4e, 0x54, 0x2d, 0x31, 0x35, 0x30, 0x31, 0x43, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f,
		0x20, 0x31, 0x30, 0x30, 0x58, 0x4c, 0x52, 0x33, 0x30, 0x38, 0x39, 0x4d, 0x6f, 0x76, 0x69, 0x65,
		0x20, 0x32, 0x31, 0x30, 0x30, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x4e, 0x41, 0x4e, 0x4f,
		0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x34,
		0x4b, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x44,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x33, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4f, 0x55, 0x43, 0x41, 0x4e, 0x20,
		0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x54, 0x6f, 0x75, 0x63, 0x61, 0x6e, 0x20, 0x53,
		0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x49, 0x63, 0x6f, 0x6e, 0x65, 0x20, 0x47, 0x6f, 0x6c,
		0x64, 0x49, 0x6d, 0x61, 0x71, 0x49, 0x4d, 0x41, 0x51, 0x54, 0x65, 0x74, 0x72, 0x61, 0x49, 0x6d,
		0x6f, 0x73, 0x65, 0x42, 0x41, 0x4d, 0x2d, 0x49, 0x49, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x50,
		0x61, 0x64, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x49, 0x46, 0x39, 0x30,
		0x30, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x49, 0x46, 0x39, 0x30, 0x30, 0x37, 0x49,
		0x46, 0x39, 0x30, 0x32, 0x31, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x49, 0x46, 0x39, 0x30, 0x33, 0x35, 0x41, 0x32, 0x49, 0x46, 0x39, 0x30, 0x30, 0x32, 0x4d,
		0x35, 0x73, 0x49, 0x46, 0x39, 0x30, 0x30, 0x33, 0x4d, 0x36, 0x73, 0x49, 0x46, 0x39, 0x30, 0x33,
		0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x49, 0x46, 0x39, 0x30, 0x32, 0x39, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x69, 0x67, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x49, 0x46, 0x24, 0x31, 0x61, 0x4d, 0x24, 0x31, 0x49, 0x6e, 0x46, 0x6f, 0x6e,
		0x65, 0x47, 0x4f, 0x52, 0x49, 0x4c, 0x4c, 0x41, 0x20, 0x39, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x47,
		0x6f, 0x72, 0x69, 0x6c, 0x6c, 0x61, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x5f, 0x52,
		0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x58, 0x20, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x49,
		0x6e, 0x63, 0x68, 0x24, 0x31, 0x22, 0x49, 0x6e, 0x63, 0x6f, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x20,
		0x34, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x32, 0x20, 0x53, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x32,
		0x53, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x65, 0x63, 0x6f,
		0x5f, 0x73, 0x45, 0x63, 0x6f, 0x20, 0x53, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x24, 0x31, 0x53, 0x70,
		0x68, 0x65, 0x72, 0x65, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x6f, 0x6e, 0x54,
		0x35, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x45, 0x41, 0x52, 0x54,
		0x48, 0x31, 0x30, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33,
		0x47, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x47, 0x54, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x54, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x75, 0x7a, 0x7a, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x4d, 0x61, 0x72, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33,
		0x47, 0x53, 0x75, 0x72, 0x66, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53, 0x75, 0x72,
		0x66, 0x20, 0x53, 0x70, 0x69, 0x63, 0x65, 0x53, 0x75, 0x72, 0x66, 0x20, 0x42, 0x72, 0x61, 0x76,
		0x6f, 0x53, 0x75, 0x72, 0x66, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x61, 0x63, 0x65, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74,
		0x52, 0x61, 0x63, 0x65, 0x20, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x32, 0x52, 0x61, 0x63, 0x65, 0x20, 0x45, 0x61, 0x67, 0x6c, 0x65,
		0x52, 0x61, 0x63, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x33, 0x30, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x65, 0x72,
		0x6f, 0x20, 0x32, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x33,
		0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34,
		0x30, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x34, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x69, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x38, 0x5a,
		0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x5a, 0x65, 0x72, 0x6f,
		0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x58, 0x20, 0x4e, 0x65, 0x6f,
		0x5a, 0x65, 0x72, 0x6f, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x48, 0x6f, 0x74, 0x48, 0x6f, 0x74,
		0x20, 0x32, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x69, 0x48, 0x6f,
		0x74, 0x20, 0x33, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48,
		0x6f, 0x74, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x30, 0x69, 0x48,
		0x6f, 0x74, 0x20, 0x34, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x53, 0x33, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x53,
		0x32, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x48, 0x6f, 0x74, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x35, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x30,
		0x69, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x58, 0x48, 0x6f, 0x74, 0x20, 0x36, 0x20,
		0x50, 0x72, 0x6f, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x48, 0x6f, 0x74, 0x20, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x48, 0x6f, 0x74, 0x20, 0x38, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x30, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x54, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x49,
		0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58, 0x36, 0x38, 0x39, 0x44, 0x48, 0x6f, 0x74, 0x20,
		0x31, 0x30, 0x73, 0x20, 0x4e, 0x46, 0x43, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x78, 0x20, 0x58,
		0x36, 0x38, 0x39, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30, 0x73, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x30,
		0x69, 0x48, 0x6f, 0x74, 0x20, 0x53, 0x33, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x31, 0x53, 0x48, 0x6f,
		0x74, 0x20, 0x31, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x48, 0x6f, 0x74, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4e, 0x46, 0x43, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x48,
		0x6f, 0x74, 0x20, 0x32, 0x30, 0x69, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x48, 0x6f, 0x74, 0x20,
		0x32, 0x30, 0x20, 0x35, 0x47, 0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x48, 0x6f, 0x74, 0x20, 0x32, 0x30, 0x53, 0x48, 0x6f, 0x74, 0x20, 0x31, 0x32, 0x69, 0x48, 0x6f,
		0x74, 0x20, 0x31, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x39, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x36, 0x20,
		0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x37, 0x20, 0x48, 0x44, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x38, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x58, 0x20, 0x35,
		0x47, 0x48, 0x6f, 0x74, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x34, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x37, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x38, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x32, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x4e, 0x46, 0x43, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33,
		0x29, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x69,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x56, 0x49, 0x50, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x35, 0x47,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x53, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20,
		0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34,
		0x30, 0x58, 0x50, 0x61, 0x64, 0x48, 0x6f, 0x74, 0x20, 0x24, 0x31, 0x24, 0x32, 0x49, 0x6e, 0x66,
		0x6f, 0x4b, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x6d, 0x69, 0x72, 0x49, 0x6e, 0x68, 0x6f, 0x6e,
		0x49, 0x6e, 0x6b, 0x61, 0x58, 0x39, 0x36, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x49, 0x6e, 0x6b, 0x74,
		0x69, 0x49, 0x6e, 0x6e, 0x4a, 0x6f, 0x6f, 0x56, 0x4f, 0x4f, 0x4d, 0x20, 0x54, 0x41, 0x42, 0x20,
		0x32, 0x56, 0x6f, 0x6f, 0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x58, 0x33, 0x48, 0x61, 0x6c,
		0x6f, 0x20, 0x58, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x48, 0x61, 0x6c, 0x6f, 0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x61, 0x6c, 0x6f, 0x20, 0x34, 0x48, 0x61, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x48,
		0x61, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x4f, 0x6e,
		0x65, 0x20, 0x33, 0x47, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f,
		0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46,
		0x69, 0x72, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x69, 0x72, 0x65, 0x33, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x46, 0x69, 0x72, 0x65, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x53, 0x75, 0x70, 0x65, 0x72, 0x62, 0x5f,
		0x50, 0x4c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x62, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x56, 0x49, 0x53, 0x49, 0x4f,
		0x4e, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x4c, 0x54, 0x45, 0x49,
		0x6e, 0x6e, 0x6f, 0x73, 0x49, 0x6e, 0x6e, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x4e,
		0x4e, 0x4f, 0x24, 0x31, 0x49, 0x6e, 0x6f, 0x69, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64, 0x20, 0x32, 0x2b, 0x33, 0x32, 0x50, 0x61, 0x64,
		0x20, 0x34, 0x2b, 0x31, 0x32, 0x38, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31,
		0x2b, 0x31, 0x36, 0x20, 0x57, 0x69, 0x46, 0x69, 0x69, 0x6e, 0x6f, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x49, 0x4e, 0x4f, 0x49, 0x20, 0x65, 0x61, 0x73, 0x79, 0x70, 0x68, 0x6f, 0x6e, 0x65,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x28, 0x24, 0x32, 0x29, 0x41, 0x31, 0x37, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x37, 0x32, 0x41, 0x31, 0x38, 0x31, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x38, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x31, 0x38, 0x30, 0x41, 0x36, 0x32, 0x49, 0x6e, 0x73, 0x69, 0x67,
		0x6e, 0x69, 0x61, 0x4e, 0x53, 0x2d, 0x50, 0x31, 0x31, 0x41, 0x38, 0x31, 0x30, 0x30, 0x31, 0x31,
		0x2e, 0x36, 0x22, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4e, 0x53, 0x2d,
		0x50, 0x31, 0x36, 0x41, 0x54, 0x30, 0x38, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x38, 0x22, 0x4e, 0x53,
		0x2d, 0x50, 0x30, 0x38, 0x41, 0x37, 0x31, 0x30, 0x30, 0x38, 0x22, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x4e, 0x53, 0x2d, 0x50, 0x31, 0x36, 0x41, 0x54, 0x37, 0x38, 0x35, 0x48, 0x44, 0x46, 0x6c, 0x65,
		0x78, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x41, 0x46, 0x54,
		0x45, 0x41, 0x4d, 0x52, 0x33, 0x31, 0x31, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x41, 0x46, 0x54, 0x4a, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x38, 0x29, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x4e, 0x55, 0x43, 0x31, 0x30, 0x69, 0x33, 0x46, 0x4e,
		0x48, 0x4e, 0x55, 0x43, 0x20, 0x31, 0x30, 0x49, 0x6e, 0x74, 0x65, 0x78, 0x49, 0x4d, 0x30, 0x33,
		0x31, 0x38, 0x4e, 0x44, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x33,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x24, 0x31, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x54, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x46, 0x75, 0x6c, 0x76, 0x75, 0x20,
		0x45, 0x35, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x20, 0x32, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x49, 0x49, 0x49, 0x41, 0x71, 0x75, 0x61, 0x20,
		0x34, 0x2e, 0x30, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x34, 0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x4c, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x34, 0x47, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x41, 0x71, 0x75, 0x61,
		0x20, 0x5a, 0x65, 0x6e, 0x69, 0x74, 0x68, 0x41, 0x71, 0x75, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x49, 0x56, 0x41, 0x71, 0x75, 0x61, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x34,
		0x47, 0x41, 0x71, 0x75, 0x61, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x41, 0x6d, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x61, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x71, 0x75, 0x61, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75,
		0x61, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x41, 0x71, 0x75, 0x61, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x79,
		0x74, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x79, 0x74, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x45, 0x6c, 0x79, 0x74, 0x20, 0x24, 0x31, 0x49, 0x56, 0x30, 0x33, 0x31,
		0x38, 0x4e, 0x44, 0x49, 0x6e, 0x64, 0x69, 0x65, 0x20, 0x31, 0x31, 0x4c, 0x69, 0x6f, 0x6e, 0x73,
		0x20, 0x36, 0x49, 0x6e, 0x66, 0x69, 0x65, 0x20, 0x37, 0x37, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20,
		0x54, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x6e,
		0x4b, 0x4d, 0x35, 0x50, 0x52, 0x4f, 0x4b, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x72, 0x62,
		0x69, 0x73, 0x49, 0x72, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x24, 0x31, 0x53, 0x4e, 0x33, 0x30,
		0x56, 0x6f, 0x78, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x73, 0x56, 0x6f, 0x78, 0x20, 0x56, 0x65,
		0x72, 0x6f, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f,
		0x58, 0x20, 0x53, 0x54, 0x45, 0x45, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20,
		0x53, 0x74, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x56, 0x6f, 0x78, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x56, 0x4f, 0x58, 0x20,
		0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x6f, 0x78, 0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
		0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x56, 0x6f, 0x78, 0x20,
		0x50, 0x6f, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x4f, 0x58, 0x20, 0x50, 0x4f, 0x50, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65,
		0x78, 0x74, 0x5f, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x50, 0x20, 0x50,
		0x72, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x24, 0x31, 0x49, 0x53, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x52, 0x53, 0x30, 0x30, 0x32, 0x2d, 0x31, 0x36, 0x49, 0x2d, 0x53, 0x36, 0x49,
		0x53, 0x32, 0x53, 0x58, 0x31, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x31, 0x20, 0x4d, 0x69, 0x6e,
		0x69, 0x4a, 0x41, 0x59, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x50, 0x43, 0x20, 0x50, 0x41, 0x31, 0x30, 0x2e, 0x31, 0x4d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x50, 0x43, 0x20, 0x24, 0x31, 0x54, 0x50, 0x43, 0x2d, 0x47, 0x31, 0x30, 0x31, 0x31, 0x4c,
		0x54, 0x45, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x47, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4a, 0x46, 0x6f, 0x6e, 0x65, 0x4a, 0x4b, 0x4c,
		0x4a, 0x50, 0x61, 0x79, 0x4a, 0x52, 0x45, 0x4e, 0x4a, 0x56, 0x43, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x32, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4a, 0x61,
		0x6d, 0x62, 0x6f, 0x4a, 0x61, 0x6d, 0x62, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4a, 0x65, 0x64,
		0x69, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6d, 0x69, 0x78, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x4a, 0x65, 0x6b, 0x61, 0x4a, 0x4b, 0x20, 0x24, 0x31, 0x20, 0x33, 0x47,
		0x4a, 0x4b, 0x20, 0x24, 0x31, 0x4a, 0x65, 0x73, 0x79, 0x4a, 0x39, 0x53, 0x5f, 0x50, 0x52, 0x4f,
		0x4a, 0x39, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x69, 0x61, 0x6b, 0x65, 0x4a, 0x4b, 0x2d, 0x24,
		0x31, 0x4a, 0x69, 0x61, 0x79, 0x75, 0x47, 0x34, 0x2f, 0x47, 0x35, 0x4a, 0x59, 0x2d, 0x24, 0x31,
		0x4a, 0x69, 0x6e, 0x20, 0x54, 0x75, 0x4a, 0x69, 0x6e, 0x67, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x20, 0x34, 0x47, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x74, 0x7a, 0x20,
		0x4d, 0x31, 0x48, 0x69, 0x74, 0x20, 0x34, 0x47, 0x50, 0x61, 0x73, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x61, 0x73, 0x73, 0x20, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x33,
		0x47, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
		0x69, 0x63, 0x61, 0x73, 0x73, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x47, 0x4f, 0x20, 0x4c,
		0x33, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x4e, 0x65, 0x6f, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20,
		0x4d, 0x35, 0x30, 0x30, 0x20, 0x33, 0x47, 0x42, 0x61, 0x73, 0x63, 0x6f, 0x20, 0x24, 0x31, 0x54,
		0x72, 0x65, 0x7a, 0x6f, 0x72, 0x20, 0x53, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x47, 0x4f,
		0x20, 0x4c, 0x32, 0x49, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4a, 0x69, 0x6f, 0x4a, 0x69, 0x6f, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4a, 0x69, 0x76, 0x69, 0x52, 0x65, 0x76,
		0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x75, 0x73, 0x20, 0x53,
		0x33, 0x4a, 0x53, 0x50, 0x51, 0x36, 0x35, 0x4a, 0x53, 0x50, 0x20, 0x51, 0x36, 0x35, 0x58, 0x74,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x4b, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x58, 0x74, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x24, 0x31, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x24, 0x31, 0x4a, 0x6f, 0x6c, 0x6c, 0x61,
		0x4a, 0x6f, 0x79, 0x4a, 0x6f, 0x79, 0x53, 0x75, 0x72, 0x66, 0x4a, 0x53, 0x31, 0x30, 0x4a, 0x75,
		0x6d, 0x70, 0x65, 0x72, 0x45, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4a, 0x75, 0x6e, 0x69,
		0x70, 0x65, 0x72, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x4a, 0x75, 0x6e, 0x69, 0x70,
		0x65, 0x72, 0x73, 0x2f, 0x43, 0x65, 0x64, 0x61, 0x72, 0x23, 0x43, 0x54, 0x38, 0x43, 0x54, 0x38,
		0x4a, 0x75, 0x73, 0x74, 0x35, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65,
		0x65, 0x64, 0x6f, 0x6d, 0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d, 0x53, 0x70,
		0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x53, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72, 0x20, 0x32, 0x4a,
		0x55, 0x53, 0x54, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45, 0x52, 0x53, 0x70, 0x61, 0x63, 0x65, 0x72,
		0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x32, 0x42, 0x4c, 0x41, 0x53, 0x54, 0x45, 0x52, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x4c, 0x54, 0x5f, 0x4b, 0x33, 0x30, 0x31, 0x4b, 0x33,
		0x30, 0x31, 0x4e, 0x41, 0x56, 0x54, 0x45, 0x43, 0x48, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x59,
		0x5f, 0x46, 0x32, 0x4e, 0x61, 0x76, 0x74, 0x65, 0x63, 0x68, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x79, 0x20, 0x46, 0x32, 0x4b, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4b, 0x54, 0x32, 0x30, 0x32,
		0x30, 0x31, 0x31, 0x39, 0x39, 0x4b, 0x54, 0x32, 0x30, 0x32, 0x30, 0x31, 0x31, 0x38, 0x38, 0x54,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x44, 0x4f, 0x58, 0x2d, 0x32,
		0x31, 0x33, 0x30, 0x69, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x44,
		0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x33, 0x58, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x44,
		0x4f, 0x58, 0x2d, 0x32, 0x31, 0x32, 0x31, 0x4d, 0x54, 0x34, 0x30, 0x4c, 0x44, 0x58, 0x41, 0x2d,
		0x32, 0x30, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x44, 0x58, 0x41,
		0x2d, 0x32, 0x31, 0x32, 0x32, 0x58, 0x32, 0x37, 0x53, 0x50, 0x61, 0x63, 0x65, 0x20, 0x32, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4b, 0x41, 0x54, 0x56, 0x31, 0x4b, 0x44, 0x44, 0x49, 0x69, 0x69, 0x64,
		0x61, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x72, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x6f,
		0x42, 0x61, 0x72, 0x20, 0x41, 0x30, 0x32, 0x4b, 0x45, 0x4e, 0x53, 0x48, 0x49, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x5f, 0x43, 0x31, 0x77, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x43, 0x31, 0x77, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x49, 0x31, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x50, 0x31, 0x73, 0x4b, 0x45, 0x4e, 0x57, 0x4f, 0x4f, 0x44, 0x4b, 0x49, 0x4e, 0x47,
		0x5a, 0x4f, 0x4e, 0x45, 0x4b, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x4b, 0x4d, 0x43, 0x4b,
		0x4e, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x4f, 0x50, 0x4f, 0x4b, 0x52, 0x45, 0x5a,
		0x4b, 0x52, 0x49, 0x50, 0x4b, 0x24, 0x31, 0x4b, 0x52, 0x4f, 0x4e, 0x4f, 0x4e, 0x45, 0x54, 0x31,
		0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x31, 0x31, 0x30, 0x30, 0x4e, 0x45, 0x54, 0x20, 0x24,
		0x31, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x4e, 0x65, 0x74, 0x20, 0x4d,
		0x61, 0x74, 0x72, 0x69, 0x78, 0x4e, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x58, 0x4e, 0x65, 0x74, 0x20,
		0x4d, 0x61, 0x78, 0x4e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b,
		0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4b, 0x54, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x4b, 0x56,
		0x41, 0x44, 0x52, 0x41, 0x4b, 0x56, 0x41, 0x44, 0x52, 0x41, 0x5f, 0x4b, 0x56, 0x41, 0x44, 0x52,
		0x41, 0x5f, 0x54, 0x54, 0x4b, 0x5a, 0x47, 0x4b, 0x61, 0x61, 0x6e, 0x4b, 0x61, 0x69, 0x6f, 0x6d,
		0x79, 0x4b, 0x61, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x6c, 0x6c,
		0x65, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x47, 0x5f, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b,
		0x20, 0x47, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x52,
		0x4f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
		0x35, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61,
		0x78, 0x20, 0x24, 0x31, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x53, 0x69,
		0x6c, 0x76, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20,
		0x50, 0x4c, 0x41, 0x59, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x51, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x47, 0x4f, 0x4c, 0x44,
		0x5f, 0x50, 0x52, 0x4f, 0x47, 0x6f, 0x6c, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x2d, 0x42, 0x4f,
		0x4f, 0x4b, 0x24, 0x31, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x20, 0x24,
		0x31, 0x4b, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x61, 0x74, 0x61, 0x20, 0x37, 0x4b, 0x4a, 0x2d, 0x47,
		0x4f, 0x43, 0x48, 0x49, 0x47, 0x6f, 0x63, 0x68, 0x69, 0x41, 0x69, 0x6c, 0x75, 0x20, 0x4d, 0x61,
		0x78, 0x59, 0x75, 0x62, 0x69, 0x20, 0x33, 0x47, 0x41, 0x6c, 0x66, 0x61, 0x4b, 0x4a, 0x2d, 0x24,
		0x31, 0x4b, 0x4a, 0x2d, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x4b, 0x4b, 0x61, 0x70, 0x73, 0x79, 0x73, 0x4b, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6e,
		0x4b, 0x39, 0x20, 0x4b, 0x61, 0x76, 0x61, 0x63, 0x68, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x4d,
		0x75, 0x73, 0x69, 0x63, 0x20, 0x34, 0x47, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x45, 0x63, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x45, 0x63, 0x6f, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x4b,
		0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4b, 0x39,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4b, 0x39, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x59, 0x75, 0x76, 0x61, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x39, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x34,
		0x30, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x24, 0x31,
		0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x4b, 0x39, 0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x34,
		0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x41, 0x75, 0x72, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x72, 0x61, 0x20, 0x43, 0x68,
		0x61, 0x6d, 0x70, 0x41, 0x75, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x65, 0x65, 0x6b, 0x20, 0x34, 0x47,
		0x41, 0x6c, 0x66, 0x61, 0x20, 0x41, 0x31, 0x31, 0x34, 0x20, 0x51, 0x75, 0x61, 0x64, 0x4b, 0x39,
		0x20, 0x56, 0x69, 0x72, 0x61, 0x61, 0x74, 0x20, 0x34, 0x47, 0x4d, 0x41, 0x43, 0x48, 0x46, 0x49,
		0x56, 0x45, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x4f,
		0x4e, 0x45, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d,
		0x61, 0x63, 0x68, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x43, 0x48,
		0x4f, 0x4e, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68,
		0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x41, 0x43, 0x48, 0x20, 0x53, 0x49, 0x58, 0x20, 0x56, 0x52, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x20, 0x53, 0x69, 0x78,
		0x20, 0x56, 0x52, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x53, 0x24, 0x31,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x34,
		0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20,
		0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4d, 0x6f, 0x67, 0x68, 0x75, 0x6c, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x53, 0x37,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x6e, 0x65, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x33, 0x44, 0x20,
		0x50, 0x6c, 0x65, 0x78, 0x53, 0x32, 0x30, 0x35, 0x32, 0x47, 0x42, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x35, 0x30, 0x20, 0x32, 0x47, 0x42, 0x4b, 0x2d, 0x6c, 0x69,
		0x74, 0x65, 0x20, 0x46, 0x33, 0x4b, 0x2d, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x46, 0x33, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x6c, 0x65, 0x20, 0x56, 0x41, 0x34, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x48, 0x44, 0x51, 0x75,
		0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x49, 0x50, 0x53, 0x51, 0x75, 0x61,
		0x74, 0x74, 0x72, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x20, 0x56, 0x52, 0x4b, 0x61, 0x74, 0x61, 0x49,
		0x35, 0x54, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x4b, 0x61,
		0x7a, 0x61, 0x6d, 0x54, 0x6f, 0x72, 0x6e, 0x61, 0x64, 0x6f, 0x20, 0x33, 0x34, 0x38, 0x54, 0x68,
		0x75, 0x6e, 0x64, 0x65, 0x72, 0x20, 0x34, 0x35, 0x30, 0x57, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65,
		0x72, 0x20, 0x58, 0x34, 0x2e, 0x30, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x20, 0x58, 0x24,
		0x31, 0x2e, 0x24, 0x32, 0x4b, 0x61, 0x7a, 0x75, 0x6e, 0x61, 0x4b, 0x41, 0x5a, 0x2d, 0x4e, 0x32,
		0x30, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4d, 0x59, 0x46, 0x4c, 0x49, 0x58, 0x4b, 0x65, 0x6d,
		0x70, 0x6c, 0x65, 0x72, 0x20, 0x26, 0x20, 0x53, 0x74, 0x72, 0x61, 0x75, 0x73, 0x73, 0x41, 0x6c,
		0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x32, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x69, 0x33, 0x41, 0x6c, 0x75,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x33, 0x50, 0x24, 0x31, 0x50, 0x31, 0x20, 0x41, 0x6d, 0x61, 0x74,
		0x65, 0x75, 0x72, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x54, 0x56, 0x54, 0x56, 0x4b,
		0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x58, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f,
		0x38, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x45, 0x4d, 0x50,
		0x4c, 0x45, 0x52, 0x5f, 0x39, 0x5a, 0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x20, 0x50, 0x4c,
		0x55, 0x53, 0x5a, 0x4b, 0x65, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a,
		0x4b, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x5a, 0x4b, 0x65, 0x6d, 0x70,
		0x6c, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x65, 0x6e, 0x62, 0x6f, 0x45, 0x36, 0x31, 0x50,
		0x72, 0x6f, 0x45, 0x36, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x33, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4b, 0x65, 0x6e, 0x65, 0x6b, 0x73, 0x69, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x74, 0x79, 0x53,
		0x75, 0x6e, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x65, 0x6e, 0x78, 0x69, 0x6e, 0x64, 0x61, 0x54,
		0x68, 0x72, 0x65, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x57,
		0x24, 0x31, 0x4b, 0x68, 0x61, 0x64, 0x61, 0x73, 0x4b, 0x69, 0x61, 0x6e, 0x6f, 0x53, 0x6c, 0x69,
		0x6d, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x20, 0x44, 0x55, 0x41, 0x4c, 0x20, 0x33, 0x47, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x65, 0x67,
		0x61, 0x6e, 0x63, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x6c,
		0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x36, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65,
		0x20, 0x36, 0x20, 0x35, 0x2e, 0x38, 0x35, 0x22, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65,
		0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x24, 0x32, 0x20, 0x24, 0x33, 0x4b, 0x69, 0x6e, 0x67,
		0x62, 0x6f, 0x78, 0x4b, 0x69, 0x6e, 0x67, 0x73, 0x74, 0x61, 0x72, 0x4b, 0x69, 0x6e, 0x67, 0x73,
		0x75, 0x6e, 0x4b, 0x69, 0x6e, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x4b, 0x69, 0x6f, 0x77, 0x61, 0x24,
		0x31, 0x20, 0x43, 0x72, 0x69, 0x73, 0x74, 0x61, 0x6c, 0x53, 0x35, 0x20, 0x55, 0x4c, 0x54, 0x52,
		0x41, 0x53, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4b, 0x69, 0x76, 0x69, 0x24, 0x31, 0x20,
		0x76, 0x24, 0x32, 0x4b, 0x6c, 0x69, 0x70, 0x61, 0x64, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x5f, 0x48,
		0x4c, 0x4b, 0x4c, 0x36, 0x32, 0x38, 0x48, 0x4c, 0x4b, 0x4c, 0x34, 0x38, 0x39, 0x38, 0x2d, 0x41,
		0x35, 0x30, 0x4b, 0x6f, 0x63, 0x61, 0x73, 0x6f, 0x44, 0x58, 0x37, 0x36, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x36, 0x32, 0x30, 0x30, 0x4d, 0x37, 0x32, 0x39, 0x4d, 0x58, 0x37, 0x38, 0x30, 0x4d,
		0x38, 0x35, 0x31, 0x4d, 0x31, 0x30, 0x35, 0x30, 0x73, 0x4d, 0x31, 0x30, 0x37, 0x30, 0x4d, 0x58,
		0x37, 0x33, 0x36, 0x4b, 0x6f, 0x64, 0x61, 0x6b, 0x49, 0x4d, 0x35, 0x53, 0x65, 0x72, 0x65, 0x6e,
		0x20, 0x24, 0x31, 0x45, 0x6b, 0x74, 0x72, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79,
		0x20, 0x4c, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x77, 0x61, 0x79, 0x20,
		0x24, 0x31, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x50, 0x41, 0x54, 0x48, 0x5f,
		0x37, 0x58, 0x50, 0x52, 0x4f, 0x37, 0x58, 0x50, 0x52, 0x4f, 0x4b, 0x6f, 0x67, 0x61, 0x6e, 0x41,
		0x67, 0x6f, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x67, 0x6f, 0x72,
		0x61, 0x20, 0x58, 0x49, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x31, 0x31, 0x41, 0x67, 0x6f, 0x72,
		0x61, 0x20, 0x47, 0x6f, 0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f,
		0x41, 0x67, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x6f, 0x6d, 0x75, 0x4b, 0x6f,
		0x6e, 0x6b, 0x61, 0x4b, 0x43, 0x35, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x6f, 0x65,
		0x6e, 0x69, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x43, 0x35, 0x31, 0x36, 0x45, 0x35, 0x36, 0x36,
		0x30, 0x53, 0x56, 0x69, 0x76, 0x61, 0x20, 0x35, 0x36, 0x36, 0x30, 0x73, 0x57, 0x38, 0x33, 0x30,
		0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x38, 0x33, 0x30, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x20,
		0x24, 0x31, 0x57, 0x39, 0x39, 0x30, 0x54, 0x75, 0x78, 0x65, 0x64, 0x6f, 0x20, 0x39, 0x39, 0x30,
		0x4b, 0x6f, 0x6e, 0x72, 0x6f, 0x77, 0x42, 0x69, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x4c, 0x49, 0x4e,
		0x4b, 0x35, 0x35, 0x43, 0x6f, 0x6f, 0x6c, 0x2d, 0x4b, 0x43, 0x6f, 0x6f, 0x6c, 0x20, 0x35, 0x35,
		0x53, 0x6f, 0x66, 0x74, 0x20, 0x35, 0x53, 0x6f, 0x66, 0x74, 0x20, 0x35, 0x50, 0x43, 0x6f, 0x6f,
		0x6c, 0x20, 0x46, 0x69, 0x76, 0x65, 0x4a, 0x75, 0x73, 0x74, 0x20, 0x35, 0x4c, 0x69, 0x6e, 0x6b,
		0x20, 0x35, 0x45, 0x61, 0x73, 0x79, 0x20, 0x35, 0x43, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x53,
		0x6b, 0x79, 0x20, 0x35, 0x35, 0x53, 0x77, 0x65, 0x65, 0x74, 0x20, 0x24, 0x31, 0x4b, 0x2d, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x30, 0x33, 0x4b, 0x6f, 0x6f, 0x62, 0x65, 0x65, 0x53, 0x4c, 0x30,
		0x30, 0x34, 0x54, 0x4b, 0x31, 0x30, 0x30, 0x46, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x6f,
		0x6f, 0x6c, 0x6e, 0x65, 0x65, 0x4b, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x20, 0x57, 0x35, 0x30, 0x32, 0x4b, 0x6f, 0x72, 0x61, 0x78, 0x4b, 0x6f, 0x72, 0x69, 0x64,
		0x79, 0x4b, 0x6f, 0x73, 0x6c, 0x61, 0x6d, 0x4b, 0x72, 0x61, 0x66, 0x74, 0x4b, 0x54, 0x56, 0x2d,
		0x24, 0x31, 0x4b, 0x72, 0xc3, 0xbc, 0x67, 0x65, 0x72, 0x26, 0x4d, 0x61, 0x74, 0x7a, 0x4d, 0x4f,
		0x56, 0x45, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x36, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56,
		0x45, 0x20, 0x36, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x24, 0x31, 0x44,
		0x52, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x4c, 0x54, 0x45, 0x44,
		0x52, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x46, 0x4c, 0x4f, 0x57, 0x20, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c,
		0x4f, 0x57, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x34, 0x20, 0x24, 0x31, 0x4c, 0x49,
		0x56, 0x45, 0x20, 0x34, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x35, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56,
		0x45, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x49, 0x56, 0x45, 0x20, 0x24, 0x31, 0x53, 0x4c, 0x49, 0x56, 0x45, 0x20,
		0x24, 0x31, 0x4d, 0x4f, 0x56, 0x45, 0x20, 0x39, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x38, 0x30, 0x36, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x38, 0x30, 0x37, 0x20, 0x38, 0x2e, 0x34, 0x22,
		0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31,
		0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37,
		0x2e, 0x31, 0x22, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x45, 0x41, 0x47, 0x4c, 0x45, 0x20, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4b, 0x75, 0x6c,
		0x69, 0x61, 0x6f, 0x4b, 0x75, 0x6c, 0x74, 0x4b, 0x75, 0x6d, 0x61, 0x69, 0x4b, 0x75, 0x72, 0x69,
		0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x31, 0x34, 0x35,
		0x30, 0x30, 0x4b, 0x79, 0x6f, 0x63, 0x65, 0x72, 0x61, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x6f, 0x42,
		0x61, 0x6c, 0x6d, 0x75, 0x64, 0x61, 0x20, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x24, 0x31,
		0x52, 0x69, 0x73, 0x65, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f,
		0x20, 0x45, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x43, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x4a,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x54, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x58, 0x53, 0x32,
		0x44, 0x69, 0x67, 0x6e, 0x6f, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20,
		0x32, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x52, 0x61, 0x66, 0x72, 0x65, 0x44, 0x69, 0x67, 0x6e,
		0x6f, 0x20, 0x42, 0x58, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x42, 0x58, 0x20, 0x32, 0x44, 0x69,
		0x67, 0x6e, 0x6f, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x52, 0x4d, 0x69, 0x72, 0x61,
		0x69, 0x65, 0x20, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72, 0x20, 0x58, 0x56, 0x48, 0x79,
		0x64, 0x72, 0x6f, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x45, 0x44, 0x47, 0x45, 0x48, 0x79, 0x64,
		0x72, 0x6f, 0x20, 0x58, 0x54, 0x52, 0x4d, 0x43, 0x36, 0x37, 0x33, 0x30, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x49, 0x43, 0x4f, 0x4e, 0x43, 0x36, 0x37, 0x35, 0x30, 0x48, 0x79, 0x64, 0x72, 0x6f,
		0x20, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x36, 0x35, 0x33, 0x30, 0x4e, 0x48, 0x79, 0x64, 0x72,
		0x6f, 0x20, 0x4c, 0x49, 0x46, 0x45, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x57, 0x41, 0x56, 0x45,
		0x43, 0x36, 0x37, 0x34, 0x33, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x20, 0x52, 0x65, 0x61, 0x63, 0x68,
		0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x33, 0x45, 0x37, 0x31, 0x31, 0x30, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72,
		0x63, 0x65, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x43, 0x36, 0x39, 0x33, 0x30,
		0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x47, 0x4b, 0x43, 0x2d, 0x53,
		0x37, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x4b, 0x59, 0x47, 0x30, 0x31, 0x54, 0x6f,
		0x72, 0x71, 0x75, 0x65, 0x20, 0x35, 0x47, 0x44, 0x69, 0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x69,
		0x72, 0x61, 0x69, 0x65, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x31, 0x54, 0x6f,
		0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x36, 0x45, 0x61, 0x73, 0x79, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x72, 0x76,
		0x65, 0x72, 0x61, 0x4d, 0x61, 0x6d, 0x6f, 0x72, 0x69, 0x6e, 0x6f, 0x20, 0x35, 0x47, 0x72, 0x61,
		0x74, 0x69, 0x6e, 0x61, 0x20, 0x34, 0x47, 0x47, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x61, 0x20, 0x24,
		0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x58, 0x30, 0x31, 0x4b, 0x65, 0x69, 0x74, 0x61,
		0x69, 0x20, 0x24, 0x31, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x32, 0x54, 0x6f,
		0x72, 0x71, 0x75, 0x65, 0x20, 0x47, 0x30, 0x33, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x20, 0x47,
		0x30, 0x34, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x34, 0x42, 0x61,
		0x73, 0x69, 0x6f, 0x20, 0x33, 0x4b, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61,
		0x68, 0x6f, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x51, 0x75, 0x61, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x51, 0x58, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x51, 0x5a, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x31, 0x30, 0x51,
		0x75, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x5a, 0x38, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x30, 0x31, 0x52, 0x61, 0x66, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x72,
		0x20, 0x41, 0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x31, 0x55, 0x72,
		0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c, 0x30, 0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x4c,
		0x30, 0x33, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x31, 0x55, 0x72, 0x62, 0x61,
		0x6e, 0x6f, 0x20, 0x56, 0x30, 0x32, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x56, 0x30, 0x33,
		0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x45, 0x58, 0x44, 0x75, 0x72, 0x61,
		0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x58, 0x44, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x42, 0x72,
		0x69, 0x67, 0x61, 0x64, 0x69, 0x65, 0x72, 0x44, 0x75, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x75, 0x74,
		0x4c, 0x75, 0x63, 0x65, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f,
		0x20, 0x32, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x32,
		0x2b, 0x4b, 0x61, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x33, 0x55,
		0x72, 0x62, 0x61, 0x6e, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x47,
		0x7a, 0x4f, 0x6e, 0x65, 0x20, 0x54, 0x79, 0x70, 0x65, 0x2d, 0x58, 0x58, 0x53, 0x32, 0x31, 0x35,
		0x31, 0x43, 0x6f, 0x61, 0x73, 0x74, 0x4b, 0x5a, 0x20, 0x24, 0x31, 0x4b, 0x79, 0x6f, 0x77, 0x6f,
		0x6e, 0x4b, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x65, 0x6b, 0x69, 0x5f, 0x55, 0x31, 0x55, 0x72, 0x65,
		0x6b, 0x69, 0x20, 0x55, 0x31, 0x45, 0x76, 0x61, 0x5f, 0x45, 0x30, 0x31, 0x45, 0x76, 0x61, 0x20,
		0x45, 0x30, 0x31, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x31, 0x52, 0x45, 0x58, 0x20,
		0x52, 0x58, 0x52, 0x65, 0x78, 0x20, 0x52, 0x58, 0x4c, 0x61, 0x6d, 0x69, 0x61, 0x20, 0x4c, 0x30,
		0x31, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20, 0x24, 0x31, 0x44, 0x41, 0x52, 0x54, 0x20,
		0x4b, 0x5a, 0x30, 0x37, 0x44, 0x61, 0x72, 0x74, 0x20, 0x4b, 0x5a, 0x30, 0x37, 0x4c, 0x2d, 0x4d,
		0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x53, 0x61,
		0x70, 0x70, 0x68, 0x69, 0x72, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x49, 0x51, 0x4c, 0x43, 0x54,
		0x4c, 0x45, 0x4d, 0x46, 0x4f, 0x4c, 0x47, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x2d, 0x24, 0x31, 0x4c, 0x37, 0x30, 0x46, 0x37, 0x30,
		0x4c, 0x39, 0x30, 0x4c, 0x38, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x34, 0x30, 0x46, 0x38, 0x4c,
		0x37, 0x30, 0x20, 0x54, 0x72, 0x69, 0x4c, 0x33, 0x30, 0x4c, 0x47, 0x2d, 0x44, 0x31, 0x36, 0x30,
		0x4c, 0x34, 0x30, 0x4c, 0x34, 0x35, 0x4c, 0x33, 0x35, 0x4c, 0x32, 0x30, 0x4c, 0x36, 0x30, 0x4c,
		0x36, 0x30, 0x69, 0x4c, 0x36, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x41, 0x50, 0x4d,
		0x50, 0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x34, 0x4c, 0x47, 0x2d, 0x50, 0x35, 0x30, 0x35,
		0x52, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x56, 0x50, 0x50, 0x5a, 0x6f, 0x6e, 0x65, 0x20,
		0x34, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x32, 0x30, 0x50, 0x4d, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74,
		0x65, 0x20, 0x45, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x4c, 0x47, 0x2d, 0x53, 0x50, 0x32, 0x30, 0x30,
		0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x73, 0x74, 0x79, 0x54,
		0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x35, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20,
		0x32, 0x4c, 0x47, 0x2d, 0x46, 0x35, 0x37, 0x30, 0x42, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x56, 0x53, 0x39, 0x33, 0x30, 0x20, 0x34, 0x47, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75,
		0x6d, 0x20, 0x49, 0x49, 0x20, 0x34, 0x47, 0x47, 0x32, 0x47, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x47, 0x33, 0x47, 0x33, 0x20, 0x56, 0x69, 0x67, 0x6f, 0x72, 0x4c, 0x47, 0x2d, 0x46, 0x34, 0x31,
		0x30, 0x53, 0x47, 0x33, 0x20, 0x41, 0x47, 0x33, 0x53, 0x47, 0x33, 0x20, 0x42, 0x65, 0x61, 0x74,
		0x47, 0x33, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47, 0x2d, 0x46, 0x34, 0x36, 0x30,
		0x47, 0x33, 0x20, 0x43, 0x61, 0x74, 0x2e, 0x20, 0x36, 0x4c, 0x47, 0x2d, 0x44, 0x37, 0x32, 0x34,
		0x47, 0x33, 0x73, 0x47, 0x34, 0x47, 0x34, 0x63, 0x47, 0x34, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x47, 0x34, 0x73, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x35, 0x47, 0x34, 0x20, 0x42, 0x65,
		0x61, 0x74, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x33, 0x31, 0x47, 0x34, 0x20, 0x56, 0x69, 0x67, 0x6f,
		0x72, 0x47, 0x35, 0x20, 0x53, 0x45, 0x47, 0x36, 0x4c, 0x4d, 0x2d, 0x51, 0x38, 0x35, 0x30, 0x47,
		0x37, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x31, 0x30, 0x47, 0x37, 0x20, 0x4f,
		0x6e, 0x65, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x47, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x32,
		0x47, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x34, 0x33,
		0x30, 0x4c, 0x47, 0x78, 0x32, 0x47, 0x78, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x35, 0x30, 0x47, 0x38,
		0x58, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x47, 0x38, 0x31, 0x30, 0x47, 0x38,
		0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x48, 0x34, 0x31, 0x30, 0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x57, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x47, 0x57, 0x69, 0x6e,
		0x65, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x4b, 0x32, 0x30, 0x46,
		0x36, 0x30, 0x41, 0x4b, 0x41, 0x4c, 0x4d, 0x2d, 0x4b, 0x39, 0x32, 0x30, 0x4b, 0x39, 0x32, 0x4c,
		0x47, 0x4c, 0x34, 0x31, 0x43, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x4c,
		0x47, 0x4c, 0x53, 0x36, 0x36, 0x30, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x67,
		0x6e, 0x61, 0x4c, 0x47, 0x4c, 0x36, 0x33, 0x42, 0x4c, 0x46, 0x69, 0x65, 0x73, 0x74, 0x61, 0x46,
		0x69, 0x65, 0x73, 0x74, 0x61, 0x20, 0x32, 0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x32, 0x4c, 0x20,
		0x42, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x20, 0x46, 0x69, 0x6e, 0x6f, 0x52, 0x69, 0x73, 0x69, 0x6f,
		0x52, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x58, 0x33, 0x30, 0x30, 0x53, 0x70, 0x72, 0x65, 0x65,
		0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x53, 0x58, 0x35, 0x30, 0x30, 0x4c, 0x47, 0x4d,
		0x2d, 0x58, 0x31, 0x30, 0x30, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x6f, 0x6c, 0x64,
		0x65, 0x72, 0x20, 0x58, 0x31, 0x30, 0x30, 0x53, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x6c, 0x61,
		0x73, 0x73, 0x69, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x20, 0x32, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x32, 0x30, 0x4b,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x47, 0x4b, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
		0x20, 0x4c, 0x33, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34,
		0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x20, 0x49, 0x49,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x34, 0x30,
		0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c,
		0x31, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x39, 0x20, 0x49,
		0x49, 0x4c, 0x47, 0x2d, 0x50, 0x38, 0x37, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x46, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x33, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x75, 0x73, 0x20, 0x46, 0x36, 0x4c, 0x47, 0x2d, 0x55, 0x53, 0x37, 0x38, 0x30, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x46, 0x37, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x69, 0x74, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45,
		0x20, 0x32, 0x4c, 0x47, 0x2d, 0x46, 0x32, 0x36, 0x30, 0x53, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x31, 0x32, 0x30, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x20, 0x54, 0x61, 0x67, 0x4c, 0x47, 0x2d,
		0x50, 0x37, 0x30, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x4f, 0x70,
		0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x75, 0x73, 0x20, 0x4c, 0x37, 0x20, 0x49, 0x49, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x70, 0x74,
		0x69, 0x6d, 0x75, 0x73, 0x20, 0x4c, 0x37, 0x30, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x4c, 0x2d, 0x30, 0x31, 0x44, 0x50, 0x52, 0x41, 0x44, 0x41, 0x20, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4c, 0x2d, 0x30, 0x32, 0x44, 0x4c, 0x2d, 0x30, 0x37, 0x43, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4c, 0x2d,
		0x30, 0x37, 0x43, 0x56, 0x32, 0x30, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x35, 0x30, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x79, 0x4c, 0x47, 0x2d,
		0x4c, 0x53, 0x38, 0x34, 0x30, 0x56, 0x69, 0x70, 0x65, 0x72, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54,
		0x45, 0x38, 0x30, 0x31, 0x4c, 0x47, 0x51, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x4c, 0x47,
		0x2d, 0x4d, 0x34, 0x30, 0x30, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x51, 0x37, 0x51, 0x37, 0x2b, 0x51, 0x38, 0x2b, 0x51, 0x38, 0x51, 0x39, 0x51, 0x37,
		0x30, 0x51, 0x35, 0x32, 0x51, 0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x58,
		0x4c, 0x47, 0x2d, 0x4d, 0x53, 0x38, 0x37, 0x30, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34,
		0x47, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x32, 0x53, 0x74, 0x79,
		0x6c, 0x6f, 0x20, 0x32, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x32, 0x20, 0x56, 0x53, 0x74, 0x79,
		0x6c, 0x6f, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x33,
		0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x33, 0x53, 0x74,
		0x79, 0x6c, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20,
		0x34, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x20, 0x36, 0x47,
		0x37, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x47, 0x38, 0x32, 0x30, 0x55, 0x4d, 0x31,
		0x47, 0x38, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x47, 0x2d, 0x4d, 0x31, 0x35, 0x33, 0x46,
		0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x32, 0x31, 0x30, 0x43, 0x4d, 0x46,
		0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x20, 0x32, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x20, 0x32,
		0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65,
		0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x32, 0x35,
		0x51, 0x36, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x33, 0x31, 0x35, 0x49, 0x4d, 0x57, 0x33, 0x31, 0x4b,
		0x33, 0x31, 0x4c, 0x47, 0x4c, 0x34, 0x32, 0x33, 0x44, 0x4c, 0x53, 0x6f, 0x6c, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x47, 0x2d, 0x46, 0x38, 0x32, 0x30, 0x4c, 0x55, 0x58, 0x32, 0x58, 0x20, 0x43,
		0x61, 0x6d, 0x58, 0x20, 0x4d, 0x61, 0x63, 0x68, 0x58, 0x20, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
		0x58, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x47, 0x2d, 0x46, 0x37, 0x34, 0x30, 0x4c, 0x58,
		0x20, 0x53, 0x6b, 0x69, 0x6e, 0x58, 0x20, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x58, 0x20, 0x56,
		0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x31, 0x30, 0x57, 0x4d, 0x58,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x58, 0x34, 0x58, 0x34, 0x2b, 0x4b, 0x31, 0x31,
		0x4b, 0x33, 0x30, 0x4c, 0x4d, 0x58, 0x31, 0x33, 0x30, 0x49, 0x4d, 0x4c, 0x4d, 0x2d, 0x4b, 0x33,
		0x31, 0x30, 0x49, 0x4d, 0x57, 0x31, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x30, 0x30, 0x49, 0x4d,
		0x57, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x5a, 0x4d,
		0x57, 0x57, 0x33, 0x30, 0x4c, 0x4d, 0x2d, 0x4b, 0x36, 0x31, 0x30, 0x49, 0x4d, 0x57, 0x34, 0x31,
		0x4c, 0x47, 0x2d, 0x48, 0x35, 0x32, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x34, 0x47, 0x4c, 0x47, 0x4c, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x61, 0x62, 0x65, 0x6c,
		0x20, 0x32, 0x4c, 0x47, 0x2d, 0x58, 0x31, 0x39, 0x30, 0x52, 0x61, 0x79, 0x56, 0x6f, 0x6c, 0x74,
		0x56, 0x6f, 0x6c, 0x74, 0x20, 0x49, 0x49, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x31, 0x30, 0x4c, 0x47,
		0x4d, 0x2d, 0x4b, 0x31, 0x32, 0x31, 0x4c, 0x47, 0x4d, 0x2d, 0x58, 0x34, 0x30, 0x31, 0x4c, 0x58,
		0x34, 0x30, 0x31, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4e, 0x58, 0x34, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x4b, 0x34, 0x4b, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x34, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x32, 0x30, 0x4b, 0x34, 0x30, 0x4b,
		0x34, 0x30, 0x53, 0x4c, 0x4d, 0x2d, 0x4b, 0x34, 0x31, 0x30, 0x4b, 0x34, 0x31, 0x53, 0x4c, 0x47,
		0x2d, 0x58, 0x32, 0x32, 0x30, 0x4b, 0x35, 0x4c, 0x4d, 0x2d, 0x58, 0x35, 0x34, 0x30, 0x4b, 0x35,
		0x30, 0x53, 0x4b, 0x35, 0x30, 0x34, 0x30, 0x32, 0x4c, 0x47, 0x53, 0x70, 0x72, 0x61, 0x79, 0x4c,
		0x2d, 0x30, 0x32, 0x4b, 0x4a, 0x6f, 0x4a, 0x6f, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e,
		0x31, 0x58, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x36, 0x32, 0x35, 0x4e, 0x58, 0x36, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x39, 0x29, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f,
		0x20, 0x32, 0x41, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x20, 0x33, 0x58, 0x32, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x39, 0x29, 0x56, 0x34, 0x30, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x56, 0x35, 0x30, 0x20,
		0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x56, 0x35, 0x31, 0x30, 0x4e, 0x56, 0x35, 0x30,
		0x53, 0x20, 0x54, 0x68, 0x69, 0x6e, 0x51, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x30, 0x4e, 0x51,
		0x39, 0x32, 0x4c, 0x4d, 0x2d, 0x51, 0x39, 0x32, 0x37, 0x4c, 0x51, 0x39, 0x20, 0x4f, 0x6e, 0x65,
		0x56, 0x31, 0x30, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4c, 0x4d, 0x2d, 0x58,
		0x32, 0x32, 0x30, 0x51, 0x4d, 0x41, 0x4b, 0x38, 0x73, 0x4b, 0x38, 0x20, 0x34, 0x47, 0x4b, 0x38,
		0x20, 0x56, 0x4b, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x33, 0x30, 0x56, 0x33,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x35, 0x47, 0x56,
		0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x4d, 0x2d, 0x47, 0x39,
		0x31, 0x30, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x34, 0x47, 0x56, 0x36, 0x30, 0x20, 0x54,
		0x68, 0x69, 0x6e, 0x51, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a,
		0x6f, 0x6e, 0x65, 0x56, 0x33, 0x35, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f,
		0x6e, 0x65, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x5a, 0x6f, 0x6e, 0x65,
		0x20, 0x33, 0x4b, 0x33, 0x4b, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x37, 0x4b,
		0x38, 0x56, 0x53, 0x35, 0x30, 0x30, 0x50, 0x50, 0x4b, 0x31, 0x30, 0x4b, 0x31, 0x30, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x32, 0x32,
		0x4b, 0x33, 0x33, 0x4b, 0x34, 0x32, 0x4b, 0x35, 0x31, 0x4b, 0x35, 0x31, 0x53, 0x4b, 0x35, 0x32,
		0x4b, 0x35, 0x36, 0x4b, 0x35, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x35, 0x31, 0x51, 0x33,
		0x31, 0x51, 0x36, 0x31, 0x51, 0x36, 0x4c, 0x4d, 0x2d, 0x58, 0x34, 0x34, 0x30, 0x69, 0x74, 0x48,
		0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x20, 0x34, 0x58,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x50,
		0x68, 0x6f, 0x65, 0x6e, 0x69, 0x78, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x56, 0x75, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x75, 0x20, 0x49, 0x49, 0x4f,
		0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20, 0x56, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x20,
		0x34, 0x58, 0x20, 0x48, 0x44, 0x4c, 0x65, 0x6f, 0x6e, 0x4c, 0x65, 0x6f, 0x6e, 0x20, 0x34, 0x47,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x47, 0x4c, 0x31, 0x35, 0x38, 0x56, 0x4c, 0x52, 0x65, 0x62,
		0x65, 0x6c, 0x20, 0x33, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x20, 0x34, 0x52, 0x65, 0x62, 0x65, 0x6c,
		0x56, 0x53, 0x38, 0x37, 0x36, 0x4c, 0x75, 0x63, 0x69, 0x64, 0x20, 0x33, 0x47, 0x20, 0x56, 0x69,
		0x73, 0x74, 0x61, 0x4c, 0x47, 0x2d, 0x48, 0x37, 0x34, 0x30, 0x47, 0x20, 0x56, 0x69, 0x73, 0x74,
		0x61, 0x20, 0x32, 0x56, 0x53, 0x38, 0x32, 0x30, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x56, 0x53,
		0x38, 0x37, 0x30, 0x20, 0x34, 0x47, 0x4c, 0x75, 0x63, 0x69, 0x64, 0x20, 0x32, 0x56, 0x53, 0x38,
		0x31, 0x30, 0x50, 0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x79, 0x72, 0x65, 0x4c, 0x47, 0x2d,
		0x46, 0x35, 0x38, 0x30, 0x4c, 0x47, 0x65, 0x6e, 0x74, 0x6c, 0x65, 0x47, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x56, 0x75, 0x20, 0x33, 0x4c, 0x47, 0x2d, 0x46, 0x4c, 0x34, 0x30, 0x4c, 0x30, 0x37,
		0x30, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x47, 0x2d, 0x46, 0x34, 0x34, 0x30, 0x4c, 0x49,
		0x63, 0x65, 0x20, 0x43, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4c, 0x38,
		0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4c, 0x47, 0x2d, 0x44, 0x33, 0x37, 0x30, 0x4c, 0x38, 0x30,
		0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x59, 0x32, 0x35, 0x57, 0x49, 0x4e, 0x47, 0x31, 0x30,
		0x41, 0x33, 0x30, 0x51, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x54, 0x61, 0x62, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x56,
		0x35, 0x33, 0x33, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x4c, 0x4b,
		0x34, 0x33, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c,
		0x47, 0x2d, 0x4c, 0x4b, 0x34, 0x36, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x46, 0x32, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x38, 0x2e, 0x33, 0x4c, 0x47, 0x2d, 0x56, 0x37, 0x30, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d, 0x56, 0x34, 0x39, 0x37, 0x47, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x33, 0x35,
		0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x4c, 0x47, 0x2d,
		0x56, 0x39, 0x34, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38,
		0x2e, 0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x46, 0x48, 0x44, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49, 0x49, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x47, 0x2d, 0x50, 0x35,
		0x33, 0x30, 0x4c, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x46, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x38, 0x2e, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x4b, 0x38, 0x31, 0x35, 0x47,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x20, 0x38, 0x2e, 0x33, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x39, 0x33, 0x30, 0x47, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4c, 0x47, 0x2d, 0x56, 0x35, 0x33,
		0x30, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x20, 0x50, 0x61, 0x64, 0x20, 0x58, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x4c, 0x47, 0x54, 0x33, 0x32, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x5a,
		0x4c, 0x47, 0x54, 0x33, 0x31, 0x51, 0x75, 0x61, 0x20, 0x54, 0x61, 0x64, 0x20, 0x50, 0x58, 0x48,
		0x46, 0x36, 0x30, 0x4c, 0x53, 0x2d, 0x45, 0x55, 0x32, 0x37, 0x41, 0x52, 0x54, 0x31, 0x30, 0x41,
		0x4b, 0x50, 0x4c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x4d, 0x45, 0x4b, 0x45, 0x59, 0x30,
		0x30, 0x30, 0x30, 0x30, 0x31, 0x30, 0x46, 0x57, 0x65, 0x62, 0x4f, 0x53, 0x20, 0x54, 0x56, 0x34,
		0x37, 0x4c, 0x41, 0x37, 0x39, 0x30, 0x57, 0x2d, 0x5a, 0x41, 0x4e, 0x65, 0x74, 0x43, 0x61, 0x73,
		0x74, 0x4c, 0x47, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x55, 0x72, 0x62, 0x61, 0x6e, 0x65, 0x47, 0x20, 0x57, 0x61,
		0x74, 0x63, 0x68, 0x24, 0x31, 0x4c, 0x4e, 0x4d, 0x42, 0x42, 0x53, 0x4c, 0x4f, 0x47, 0x41, 0x4e,
		0x4c, 0x4f, 0x4b, 0x4d, 0x41, 0x54, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x4c, 0x50, 0x58, 0x2d, 0x47,
		0x20, 0x42, 0x4f, 0x58, 0x4c, 0x50, 0x58, 0x2d, 0x47, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x61,
		0x78, 0x42, 0x6f, 0x78, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x54, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x4c, 0x54, 0x5f, 0x53, 0x39, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x53, 0x39, 0x50, 0x37, 0x73, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x31, 0x30,
		0x57, 0x37, 0x50, 0x31, 0x30, 0x69, 0x4d, 0x34, 0x30, 0x4d, 0x36, 0x30, 0x4d, 0x32, 0x35, 0x20,
		0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x33, 0x33, 0x4d, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4c, 0x55, 0x4f, 0x4c, 0x57, 0x4c, 0x59, 0x46, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x34, 0x46,
		0x6c, 0x61, 0x6d, 0x65, 0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x31, 0x45, 0x61, 0x72,
		0x74, 0x68, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x32, 0x31, 0x45, 0x61, 0x72, 0x74, 0x68,
		0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x35, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46,
		0x31, 0x4c, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x4c, 0x53,
		0x2d, 0x34, 0x35, 0x30, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x31, 0x46, 0x6c, 0x61, 0x6d,
		0x65, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x33, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20,
		0x34, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x32, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x35, 0x4c,
		0x53, 0x2d, 0x34, 0x30, 0x30, 0x35, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x36, 0x46, 0x6c, 0x61,
		0x6d, 0x65, 0x20, 0x37, 0x4c, 0x53, 0x2d, 0x34, 0x30, 0x30, 0x38, 0x46, 0x6c, 0x61, 0x6d, 0x65,
		0x20, 0x37, 0x53, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30,
		0x32, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x35, 0x57,
		0x61, 0x74, 0x65, 0x72, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x36, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x36, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x38, 0x57, 0x61, 0x74, 0x65, 0x72,
		0x20, 0x32, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x30, 0x39, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x36, 0x4c,
		0x53, 0x2d, 0x35, 0x30, 0x31, 0x33, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x4c, 0x53, 0x2d, 0x35,
		0x30, 0x31, 0x34, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x30,
		0x57, 0x69, 0x6e, 0x64, 0x20, 0x31, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x35, 0x57, 0x61, 0x74,
		0x65, 0x72, 0x20, 0x38, 0x4c, 0x53, 0x2d, 0x35, 0x30, 0x31, 0x36, 0x57, 0x69, 0x6e, 0x64, 0x20,
		0x37, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x34, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x4c,
		0x53, 0x2d, 0x35, 0x35, 0x30, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x37, 0x53, 0x4c, 0x53,
		0x2d, 0x35, 0x30, 0x31, 0x37, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x31, 0x4c, 0x53, 0x2d,
		0x35, 0x30, 0x31, 0x38, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x34, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x30,
		0x32, 0x30, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x2d, 0x35, 0x32, 0x30,
		0x31, 0x57, 0x61, 0x74, 0x65, 0x72, 0x20, 0x46, 0x31, 0x53, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30,
		0x32, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x33, 0x57, 0x61,
		0x74, 0x65, 0x72, 0x20, 0x33, 0x4c, 0x53, 0x2d, 0x35, 0x35, 0x30, 0x36, 0x57, 0x61, 0x74, 0x65,
		0x72, 0x20, 0x39, 0x4c, 0x53, 0x2d, 0x36, 0x30, 0x30, 0x31, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x32,
		0x4c, 0x59, 0x4f, 0x54, 0x45, 0x43, 0x48, 0x20, 0x4c, 0x41, 0x42, 0x53, 0x4c, 0x46, 0x69, 0x20,
		0x4f, 0x6e, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x20, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x58, 0x33, 0x4c, 0x55, 0x58, 0x55, 0x52, 0x59, 0x4c, 0x75, 0x78, 0x75,
		0x72, 0x79, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x33, 0x49, 0x6f, 0x75, 0x74, 0x64, 0x6f, 0x6f, 0x72,
		0x20, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x33, 0x4c, 0x61, 0x6e, 0x64, 0x76, 0x6f, 0x53, 0x36,
		0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x36, 0x58, 0x4d, 0x24, 0x31, 0x30, 0x30, 0x24, 0x32,
		0x4c, 0x61, 0x6e, 0x69, 0x6e, 0x4c, 0x61, 0x6e, 0x69, 0x78, 0x49, 0x4c, 0x49, 0x55, 0x4d, 0x5f,
		0x50, 0x41, 0x44, 0x5f, 0x52, 0x58, 0x31, 0x30, 0x76, 0x35, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x52, 0x58, 0x31, 0x30, 0x20, 0x56, 0x35, 0x4c, 0x41, 0x4e, 0x49, 0x58,
		0x5f, 0x50, 0x41, 0x44, 0x5f, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x45, 0x37, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x58,
		0x31, 0x32, 0x30, 0x43, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x58, 0x31, 0x32, 0x30, 0x43, 0x49,
		0x6c, 0x69, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x49, 0x6c, 0x69, 0x75, 0x6d, 0x20, 0x41, 0x6c, 0x70,
		0x68, 0x61, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x24, 0x31, 0x56, 0x4c, 0x61,
		0x72, 0x6b, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x20, 0x48, 0x44, 0x46,
		0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32, 0x20, 0x24, 0x31, 0x20, 0x56, 0x65, 0x72, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x24, 0x32, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20,
		0x37, 0x20, 0x33, 0x47, 0x20, 0x48, 0x44, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34,
		0x20, 0x37, 0x48, 0x44, 0x20, 0x33, 0x47, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x32,
		0x20, 0x24, 0x31, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x48, 0x44,
		0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x20, 0x58, 0x34, 0x20, 0x39, 0x46, 0x72, 0x65, 0x65, 0x4d,
		0x65, 0x20, 0x58, 0x34, 0x20, 0x37, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x35,
		0x57, 0x69, 0x46, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x35, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x55,
		0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x48, 0x41, 0x42, 0x4c, 0x45,
		0x54, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x37, 0x50, 0x68, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x36, 0x2e, 0x30, 0x42, 0x6a, 0x6f, 0x72, 0x6e, 0x20, 0x53, 0x50, 0x2d,
		0x35, 0x30, 0x30, 0x43, 0x69, 0x72, 0x72, 0x75, 0x73, 0x20, 0x24, 0x31, 0x49, 0x6d, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x5f, 0x4e, 0x6f, 0x64, 0x61, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x4e, 0x6f, 0x64, 0x61, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x4d, 0x49, 0x44, 0x2d, 0x31, 0x30, 0x38,
		0x39, 0x49, 0x50, 0x53, 0x41, 0x31, 0x30, 0x30, 0x4c, 0x61, 0x76, 0x61, 0x42, 0x6c, 0x61, 0x7a,
		0x65, 0x20, 0x32, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x42,
		0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x42, 0x6c, 0x61,
		0x7a, 0x65, 0x20, 0x4e, 0x58, 0x54, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x35, 0x47, 0x4c, 0x58,
		0x58, 0x35, 0x30, 0x35, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x46,
		0x6c, 0x61, 0x69, 0x72, 0x20, 0x24, 0x31, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x33, 0x30,
		0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59, 0x35, 0x30, 0x42, 0x65, 0x6e, 0x63, 0x6f, 0x20, 0x59,
		0x34, 0x30, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x41, 0x67, 0x6e, 0x69, 0x20, 0x32, 0x20,
		0x35, 0x47, 0x5a, 0x36, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x39, 0x37, 0x20, 0x49, 0x50, 0x53,
		0x52, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x39, 0x37, 0x20, 0x32, 0x47, 0x42, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x41, 0x37, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x33, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x56, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x50, 0x69, 0x78, 0x65, 0x6c, 0x20, 0x56, 0x24, 0x31, 0x58, 0x31, 0x20, 0x41, 0x74, 0x6f, 0x6d,
		0x20, 0x4c, 0x49, 0x72, 0x69, 0x73, 0x20, 0x58, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x58, 0x34, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x41, 0x56, 0x41, 0x20, 0x5a, 0x33, 0x20,
		0x55, 0x50, 0x5a, 0x33, 0x4c, 0x45, 0x58, 0x34, 0x30, 0x32, 0x5a, 0x33, 0x33, 0x5a, 0x24, 0x31,
		0x5a, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x5a, 0x32, 0x4c, 0x5a, 0x47, 0x34, 0x30,
		0x32, 0x20, 0x4f, 0x4d, 0x5a, 0x32, 0x31, 0x5a, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x30,
		0x73, 0x56, 0x32, 0x56, 0x37, 0x56, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x45, 0x39,
		0x39, 0x34, 0x30, 0x5f, 0x57, 0x56, 0x37, 0x73, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5a, 0x35,
		0x33, 0x5a, 0x35, 0x32, 0x5a, 0x36, 0x32, 0x5a, 0x37, 0x31, 0x5a, 0x39, 0x33, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x36, 0x36, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x32, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x35, 0x34, 0x49, 0x72, 0x69, 0x73, 0x20, 0x35, 0x39, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x36,
		0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x35, 0x43, 0x49, 0x72, 0x69, 0x73, 0x20, 0x34, 0x35, 0x49,
		0x72, 0x69, 0x73, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x32, 0x58, 0x49, 0x72, 0x69, 0x73, 0x20,
		0x41, 0x6c, 0x66, 0x61, 0x20, 0x4c, 0x5a, 0x34, 0x31, 0x56, 0x38, 0x56, 0x2b, 0x36, 0x47, 0x72,
		0x61, 0x6e, 0x64, 0x32, 0x63, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x43, 0x52, 0x31, 0x5f,
		0x4c, 0x69, 0x74, 0x65, 0x52, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x45, 0x39, 0x38, 0x32,
		0x30, 0x52, 0x35, 0x4c, 0x45, 0x39, 0x38, 0x31, 0x30, 0x52, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x50, 0x37, 0x70, 0x6c, 0x75, 0x73, 0x4c, 0x5a, 0x58, 0x34, 0x31, 0x35, 0x59, 0x75, 0x76, 0x61,
		0x20, 0x33, 0x4c, 0x5a, 0x58, 0x34, 0x31, 0x34, 0x59, 0x75, 0x76, 0x61, 0x20, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x5a, 0x58, 0x34, 0x30, 0x38, 0x59, 0x75, 0x76, 0x61, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x49, 0x58, 0x34, 0x30, 0x32, 0x59, 0x75, 0x76, 0x61, 0x20, 0x50, 0x72, 0x6f,
		0x4c, 0x5a, 0x47, 0x34, 0x30, 0x39, 0x59, 0x75, 0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4c,
		0x58, 0x58, 0x35, 0x30, 0x38, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x35, 0x47, 0x49, 0x72, 0x69,
		0x73, 0x20, 0x38, 0x38, 0x20, 0x47, 0x6f, 0x46, 0x75, 0x65, 0x6c, 0x20, 0x46, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x49, 0x72, 0x69, 0x73, 0x20, 0x46, 0x75, 0x65, 0x6c, 0x20, 0x46, 0x31, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x31, 0x33, 0x36, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 0x33, 0x36, 0x4b, 0x4b, 0x54, 0x20, 0x51,
		0x55, 0x41, 0x44, 0x52, 0x41, 0x4b, 0x4b, 0x54, 0x20, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x4b,
		0x4b, 0x54, 0x34, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49,
		0x76, 0x6f, 0x72, 0x79, 0x20, 0x24, 0x31, 0x54, 0x38, 0x31, 0x4e, 0x20, 0x55, 0x70, 0x54, 0x38,
		0x31, 0x4e, 0x54, 0x37, 0x31, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x49, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x54, 0x43,
		0x38, 0x30, 0x32, 0x41, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54,
		0x43, 0x39, 0x37, 0x30, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x50, 0x61, 0x6e, 0x20, 0x24, 0x31,
		0x4c, 0x65, 0x42, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x45, 0x63, 0x6f, 0x4c, 0x65, 0x20, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x39, 0x30, 0x30, 0x2b, 0x4c, 0x65, 0x20, 0x31,
		0x53, 0x4c, 0x65, 0x20, 0x33, 0x53, 0x20, 0x24, 0x31, 0x58, 0x39, 0x30, 0x30, 0x20, 0x42, 0x75,
		0x69, 0x6c, 0x64, 0x4c, 0x65, 0x20, 0x58, 0x39, 0x30, 0x30, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x33, 0x4c, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x20, 0x41, 0x49, 0x4c, 0x65, 0x20,
		0x32, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x32, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x5f,
		0x63, 0x31, 0x30, 0x36, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x58,
		0x24, 0x31, 0x4c, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x24, 0x31, 0x4c,
		0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x2d, 0x34, 0x35, 0x20,
		0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x2d, 0x34, 0x35, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x56,
		0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x79, 0x70, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x4c, 0x50, 0x20, 0x44, 0x41, 0x49, 0x53, 0x59, 0x44, 0x61, 0x69, 0x73, 0x79, 0x4c, 0x50,
		0x5f, 0x56, 0x45, 0x59, 0x52, 0x4f, 0x4e, 0x56, 0x65, 0x79, 0x72, 0x6f, 0x6e, 0x4c, 0x50, 0x5f,
		0x50, 0x52, 0x41, 0x44, 0x4f, 0x50, 0x72, 0x61, 0x64, 0x6f, 0x4c, 0x50, 0x5f, 0x42, 0x2d, 0x35,
		0x30, 0x42, 0x35, 0x30, 0x4c, 0x50, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f,
		0x53, 0x32, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x20, 0x53, 0x32, 0x49, 0x4e, 0x46,
		0x49, 0x4e, 0x49, 0x54, 0x59, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54,
		0x59, 0x4c, 0x50, 0x5f, 0x45, 0x56, 0x4f, 0x52, 0x41, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x45,
		0x76, 0x6f, 0x72, 0x61, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x50, 0x20, 0x54, 0x37, 0x30,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x50, 0x5f,
		0x54, 0x37, 0x30, 0x54, 0x37, 0x30, 0x4c, 0x65, 0x61, 0x67, 0x6f, 0x6f, 0x4d, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x35, 0x20, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x35, 0x20, 0x45, 0x64, 0x67,
		0x65, 0x4c, 0x65, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x50,
		0x4f, 0x57, 0x45, 0x52, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x4b, 0x49, 0x49, 0x43, 0x41, 0x41, 0x20, 0x4d, 0x49, 0x58, 0x4b, 0x49, 0x43, 0x43, 0x41, 0x41,
		0x20, 0x4d, 0x69, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x24, 0x31, 0x56,
		0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x31, 0x41, 0x6c, 0x66, 0x61, 0x20, 0x24, 0x31, 0x58,
		0x52, 0x6f, 0x76, 0x65, 0x72, 0x24, 0x31, 0x4c, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x37, 0x50,
		0x72, 0x6f, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x45,
		0x41, 0x47, 0x4f, 0x4f, 0x5f, 0x4c, 0x45, 0x41, 0x50, 0x41, 0x44, 0x37, 0x5f, 0x38, 0x4c, 0x65,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4c, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c,
		0x65, 0x63, 0x74, 0x72, 0x75, 0x73, 0x4c, 0x45, 0x43, 0x54, 0x2d, 0x54, 0x41, 0x42, 0x24, 0x31,
		0x4c, 0x65, 0x64, 0x73, 0x74, 0x61, 0x72, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x35, 0x2e,
		0x30, 0x4e, 0x6f, 0x76, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x36,
		0x2e, 0x30, 0x22, 0x4c, 0x65, 0x65, 0x6c, 0x62, 0x6f, 0x78, 0x4c, 0x65, 0x66, 0x66, 0x4c, 0x65,
		0x67, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x6b, 0x65, 0x50, 0x61, 0x64, 0x2d, 0x24, 0x31, 0x4c, 0x65,
		0x6d, 0x63, 0x6f, 0x4c, 0x65, 0x6d, 0x68, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x6e, 0x63, 0x6f, 0x4c,
		0x45, 0x4e, 0x43, 0x4f, 0x20, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x2d, 0x37, 0x30, 0x30,
		0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x6f, 0x20, 0x37, 0x30, 0x30, 0x54, 0x44, 0x56, 0x39, 0x30,
		0x30, 0x4c, 0x65, 0x6e, 0x6f, 0x76, 0x6f, 0x47, 0x37, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x37, 0x2d, 0x34, 0x30, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x32,
		0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x32, 0x30, 0x49, 0x64,
		0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x2d, 0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x31, 0x30, 0x2d, 0x37, 0x30, 0x41, 0x32, 0x31, 0x30, 0x37, 0x41, 0x2d, 0x48, 0x41, 0x32,
		0x31, 0x30, 0x37, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x32, 0x31, 0x30, 0x39, 0x41, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30,
		0x2d, 0x33, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4b, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x33, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x59,
		0x54, 0x2d, 0x4b, 0x36, 0x30, 0x36, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x42, 0x33, 0x2d, 0x37, 0x33, 0x30, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20,
		0x37, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61,
		0x6c, 0x54, 0x42, 0x2d, 0x37, 0x37, 0x30, 0x33, 0x58, 0x54, 0x41, 0x42, 0x33, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x4c, 0x54, 0x41, 0x42, 0x33,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x33, 0x2d, 0x58, 0x37, 0x30, 0x46,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x31, 0x30, 0x20, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
		0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x42, 0x2d, 0x38, 0x58,
		0x30, 0x34, 0x46, 0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x20, 0x52, 0x45, 0x4c, 0x54, 0x41, 0x42,
		0x20, 0x32, 0x20, 0x41, 0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x41,
		0x38, 0x2d, 0x35, 0x30, 0x4c, 0x43, 0x54, 0x41, 0x42, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x54,
		0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x31, 0x30, 0x54, 0x41, 0x42, 0x33, 0x20, 0x38, 0x54, 0x41,
		0x42, 0x33, 0x20, 0x38, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30,
		0x54, 0x41, 0x42, 0x34, 0x20, 0x38, 0x54, 0x42, 0x2d, 0x38, 0x37, 0x30, 0x34, 0x58, 0x54, 0x41,
		0x42, 0x34, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x34, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x35, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54,
		0x41, 0x42, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54,
		0x61, 0x62, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x31,
		0x54, 0x61, 0x62, 0x20, 0x4d, 0x39, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x54, 0x61, 0x62,
		0x20, 0x50, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x42, 0x33, 0x37, 0x30, 0x46, 0x55, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x32, 0x54, 0x42, 0x33,
		0x35, 0x31, 0x46, 0x55, 0x54, 0x61, 0x62, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20,
		0x4b, 0x31, 0x31, 0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x51, 0x54, 0x20, 0x4b, 0x31, 0x31,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20,
		0x50, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x31, 0x31, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61,
		0x62, 0x20, 0x4b, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20,
		0x45, 0x37, 0x54, 0x61, 0x62, 0x20, 0x45, 0x38, 0x54, 0x42, 0x2d, 0x37, 0x33, 0x30, 0x34, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x50, 0x42, 0x2d, 0x36, 0x35, 0x30, 0x35, 0x54, 0x61, 0x62, 0x20, 0x56, 0x37,
		0x41, 0x31, 0x30, 0x31, 0x4c, 0x56, 0x54, 0x61, 0x62, 0x20, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x52, 0x65, 0x6c, 0x54, 0x42, 0x2d, 0x58, 0x36, 0x30,
		0x35, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x46, 0x48, 0x44, 0x54, 0x42, 0x2d, 0x58,
		0x33, 0x30, 0x36, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x48, 0x44, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d,
		0x31, 0x30, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x37,
		0x54, 0x61, 0x62, 0x20, 0x4d, 0x37, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x59, 0x6f, 0x67, 0x61,
		0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x59, 0x6f, 0x67,
		0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x33, 0x2e, 0x33, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x38, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x59, 0x54, 0x33, 0x2d,
		0x38, 0x35, 0x30, 0x4d, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31,
		0x30, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x59, 0x6f, 0x67, 0x61, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x59, 0x6f,
		0x67, 0x61, 0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x42, 0x2d, 0x4a, 0x37, 0x31, 0x36, 0x46, 0x58,
		0x69, 0x61, 0x6f, 0x58, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31,
		0x31, 0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x42, 0x31, 0x33, 0x38,
		0x46, 0x43, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x54, 0x42, 0x33, 0x33,
		0x31, 0x46, 0x43, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20, 0x31,
		0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x45, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61,
		0x64, 0x32, 0x59, 0x61, 0x6d, 0x61, 0x64, 0x61, 0x20, 0x45, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x32, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x37, 0x22, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62,
		0x20, 0x53, 0x36, 0x30, 0x30, 0x30, 0x49, 0x64, 0x65, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x24, 0x31, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x24, 0x31, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x2d, 0x33, 0x30, 0x54, 0x41,
		0x42, 0x20, 0x32, 0x20, 0x41, 0x37, 0x54, 0x42, 0x2d, 0x38, 0x35, 0x30, 0x34, 0x46, 0x54, 0x41,
		0x42, 0x20, 0x34, 0x20, 0x38, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x22, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x58, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x42, 0x2d, 0x58, 0x33, 0x30, 0x34, 0x46, 0x4d, 0x31, 0x30,
		0x45, 0x31, 0x30, 0x54, 0x41, 0x42, 0x20, 0x32, 0x20, 0x41, 0x24, 0x31, 0x59, 0x42, 0x2d, 0x51,
		0x35, 0x30, 0x31, 0x46, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x41, 0x31, 0x32, 0x59, 0x54, 0x2d, 0x58,
		0x37, 0x30, 0x35, 0x58, 0x59, 0x6f, 0x67, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x54, 0x61, 0x62,
		0x20, 0x4d, 0x38, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33,
		0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x34, 0x29, 0x54,
		0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x34, 0x29, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x34, 0x29, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x38, 0x20, 0x46, 0x48, 0x44, 0x4c, 0x65,
		0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x36, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x39, 0x30, 0x4c, 0x37, 0x31, 0x30, 0x39, 0x31, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x30, 0x41, 0x35, 0x73, 0x41, 0x38, 0x5a, 0x32,
		0x31, 0x35, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x45, 0x64, 0x67, 0x65, 0x5a, 0x55, 0x4b, 0x20, 0x5a,
		0x32, 0x5a, 0x32, 0x31, 0x32, 0x31, 0x5a, 0x55, 0x4b, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x5a, 0x55, 0x4b, 0x20, 0x24, 0x31, 0x4b, 0x33, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x24, 0x31,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x34, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4b, 0x35, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4b, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4b, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x41,
		0x36, 0x30, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x4b, 0x35, 0x56, 0x69, 0x62, 0x65, 0x20,
		0x5a, 0x32, 0x56, 0x69, 0x62, 0x65, 0x20, 0x43, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x32, 0x56,
		0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x56, 0x69, 0x62, 0x65, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x56, 0x69, 0x62, 0x65, 0x20, 0x56, 0x37, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x36,
		0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x24, 0x31, 0x69, 0x4c,
		0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x39, 0x4b, 0x35, 0x53, 0x4b, 0x36, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x4b, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31,
		0x6d, 0x56, 0x69, 0x62, 0x65, 0x20, 0x50, 0x31, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x56, 0x69,
		0x62, 0x65, 0x20, 0x50, 0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x42, 0x41, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53,
		0x31, 0x56, 0x69, 0x62, 0x65, 0x20, 0x53, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x5a, 0x35, 0x73,
		0x5a, 0x35, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47, 0x54,
		0x5a, 0x36, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x47,
		0x54, 0x50, 0x68, 0x61, 0x62, 0x20, 0x32, 0x50, 0x68, 0x61, 0x62, 0x50, 0x68, 0x61, 0x62, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x49, 0x64, 0x65, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x64, 0x74,
		0x61, 0x62, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, 0x34, 0x32, 0x41, 0x58, 0x54,
		0x32, 0x30, 0x38, 0x31, 0x2d, 0x34, 0x4b, 0x31, 0x32, 0x41, 0x32, 0x30, 0x31, 0x30, 0x6c, 0x33,
		0x36, 0x41, 0x32, 0x30, 0x31, 0x30, 0x4b, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x52, 0x2d,
		0x31, 0x35, 0x34, 0x31, 0x46, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x6f,
		0x4e, 0x4c, 0x35, 0x48, 0x30, 0x30, 0x58, 0x58, 0x69, 0x61, 0x6f, 0x78, 0x69, 0x6e, 0x20, 0x31,
		0x30, 0x30, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x37, 0x30, 0x31, 0x50, 0x72,
		0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x37, 0x30, 0x31, 0x49, 0x64, 0x65, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x49, 0x4c, 0x49, 0x64, 0x65,
		0x61, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x34, 0x35, 0x2d, 0x31, 0x35, 0x49, 0x57, 0x4c, 0x46,
		0x6c, 0x65, 0x78, 0x20, 0x31, 0x34, 0x41, 0x50, 0x49, 0x20, 0x38, 0x31, 0x53, 0x53, 0x49, 0x64,
		0x65, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x20, 0x35, 0x32, 0x30, 0x53, 0x2d, 0x32, 0x33,
		0x49, 0x4b, 0x55, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x64, 0x20, 0x59, 0x6f, 0x67, 0x61,
		0x20, 0x33, 0x37, 0x30, 0x4c, 0x65, 0x6f, 0x74, 0x65, 0x63, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35,
		0x30, 0x31, 0x31, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x65, 0x32, 0x35, 0x30, 0x4c, 0x45, 0x53,
		0x50, 0x48, 0x35, 0x30, 0x30, 0x33, 0x42, 0x41, 0x72, 0x67, 0x6f, 0x6e, 0x20, 0x41, 0x32, 0x35,
		0x30, 0x42, 0x4c, 0x45, 0x53, 0x50, 0x48, 0x35, 0x30, 0x31, 0x34, 0x4b, 0x72, 0x79, 0x70, 0x74,
		0x6f, 0x6e, 0x20, 0x4b, 0x31, 0x35, 0x30, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20,
		0x54, 0x33, 0x35, 0x35, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31,
		0x50, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x20, 0x24, 0x31, 0x4c, 0x45, 0x54, 0x41, 0x42, 0x39, 0x31,
		0x36, 0x4c, 0x2d, 0x50, 0x61, 0x64, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x53, 0x4c, 0x65, 0x70,
		0x68, 0x6f, 0x6e, 0x65, 0x53, 0x31, 0x30, 0x34, 0x47, 0x57, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4c, 0x65, 0x73, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x35, 0x4c, 0x65, 0x78,
		0x61, 0x6e, 0x64, 0x53, 0x34, 0x41, 0x31, 0x56, 0x65, 0x67, 0x61, 0x53, 0x34, 0x41, 0x32, 0x49,
		0x72, 0x69, 0x64, 0x61, 0x53, 0x34, 0x41, 0x33, 0x50, 0x61, 0x6c, 0x6c, 0x61, 0x64, 0x61, 0x53,
		0x34, 0x41, 0x35, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x45,
		0x4f, 0x4e, 0x53, 0x34, 0x41, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x53, 0x35, 0x41, 0x31, 0x43,
		0x61, 0x6c, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x53, 0x35, 0x41, 0x32, 0x4f, 0x76, 0x65, 0x72, 0x6f,
		0x6e, 0x53, 0x35, 0x41, 0x33, 0x43, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x53, 0x35, 0x41, 0x34,
		0x41, 0x72, 0x67, 0x6f, 0x6e, 0x53, 0x36, 0x41, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x65, 0x73,
		0x24, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x48, 0x44, 0x24, 0x31, 0x20, 0x48, 0x44, 0x4c, 0x50,
		0x48, 0x37, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x50, 0x48, 0x37, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x78, 0x69, 0x62, 0x6f, 0x6f, 0x6b, 0x4d, 0x46, 0x43, 0x31,
		0x39, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x58, 0x4c, 0x4d, 0x46, 0x43, 0x30, 0x34, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x54, 0x61, 0x62, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x33, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x33, 0x4d, 0x46, 0x43, 0x31, 0x34, 0x32,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x4d, 0x46, 0x43,
		0x32, 0x35, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69,
		0x6f, 0x72, 0x4d, 0x46, 0x43, 0x32, 0x37, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x4d, 0x46, 0x43, 0x32, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x36,
		0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4d, 0x46, 0x43, 0x31,
		0x35, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65,
		0x72, 0x4d, 0x46, 0x43, 0x31, 0x35, 0x37, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x32, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x4d, 0x46, 0x43, 0x33, 0x37, 0x35, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x32, 0x4d, 0x46, 0x43, 0x31, 0x36, 0x32,
		0x46, 0x52, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46,
		0x43, 0x31, 0x38, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76,
		0x61, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x46, 0x43, 0x31, 0x38, 0x31, 0x46, 0x52, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x20, 0x32, 0x4d, 0x46,
		0x43, 0x35, 0x30, 0x30, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x58, 0x4c, 0x4d,
		0x46, 0x43, 0x31, 0x39, 0x30, 0x42, 0x42, 0x46, 0x52, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x44, 0x43, 0x46, 0x52,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x43, 0x61,
		0x72, 0x73, 0x20, 0x48, 0x44, 0x4d, 0x46, 0x43, 0x31, 0x39, 0x35, 0x46, 0x55, 0x46, 0x52, 0x46,
		0x75, 0x72, 0x62, 0x79, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x46, 0x43, 0x31, 0x39,
		0x35, 0x44, 0x50, 0x46, 0x52, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x44, 0x69, 0x73, 0x6e,
		0x65, 0x79, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x73, 0x65, 0x20, 0x48, 0x44, 0x4d,
		0x46, 0x43, 0x31, 0x34, 0x30, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54, 0x61, 0x62, 0x4d, 0x46, 0x43,
		0x31, 0x34, 0x31, 0x46, 0x52, 0x4c, 0x61, 0x70, 0x54, 0x61, 0x62, 0x20, 0x32, 0x4c, 0x69, 0x62,
		0x65, 0x72, 0x74, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x6d, 0x61, 0x78, 0x78, 0x4c, 0x69, 0x6d,
		0x65, 0x4c, 0x69, 0x6d, 0x65, 0x5a, 0x32, 0x50, 0x4c, 0x55, 0x53, 0x4c, 0x69, 0x6e, 0x67, 0x62,
		0x6f, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x31, 0x36,
		0x20, 0x4d, 0x61, 0x78, 0x4c, 0x32, 0x34, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x31, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x4c, 0x69, 0x6e, 0x67, 0x77, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6e, 0x65, 0x78, 0x4c, 0x69, 0x20,
		0x24, 0x31, 0x4c, 0x69, 0x6e, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x6f, 0x57, 0x65, 0x62,
		0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4c, 0x6f, 0x65, 0x77, 0x65, 0x34, 0x38, 0x41, 0x38, 0x31,
		0x46, 0x45, 0x56, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x58, 0x36, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x20,
		0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x46, 0x31, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4b, 0x31, 0x30,
		0x31, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x4b, 0x53, 0x38, 0x30, 0x4c,
		0x6f, 0x67, 0x69, 0x63, 0x6f, 0x6d, 0x54, 0x61, 0x62, 0x5f, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x5f,
		0x50, 0x72, 0x6f, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x39, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x32, 0x34, 0x20, 0x48, 0x44, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4c, 0x61, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x24,
		0x31, 0x6c, 0x6f, 0x67, 0x69, 0x6b, 0x69, 0x64, 0x73, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x69,
		0x64, 0x73, 0x20, 0x34, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x30, 0x31, 0x20, 0x33, 0x47, 0x4c, 0x5f, 0x49, 0x58, 0x49, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x5f,
		0x31, 0x30, 0x34, 0x37, 0x48, 0x44, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x34, 0x37, 0x20, 0x48, 0x44, 0x4c, 0x49, 0x58, 0x49, 0x52, 0x31, 0x30, 0x34,
		0x31, 0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x34, 0x31,
		0x4c, 0x2d, 0x69, 0x78, 0x69, 0x72, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x69, 0x74, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x4c, 0x2d, 0x65, 0x6d, 0x65,
		0x6e, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20, 0x42,
		0x4f, 0x54, 0x4d, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x31, 0x56, 0x52, 0x20, 0x42, 0x4f, 0x54,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x52, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x24,
		0x31, 0x24, 0x31, 0x20, 0x42, 0x4f, 0x54, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x32, 0x24, 0x31,
		0x20, 0x42, 0x4f, 0x54, 0x20, 0x24, 0x32, 0x45, 0x6c, 0x69, 0x6f, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x4c, 0x41,
		0x52, 0x53, 0x6f, 0x6c, 0x61, 0x72, 0x4c, 0x75, 0x6e, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x4c,
		0x55, 0x4e, 0x41, 0x52, 0x4c, 0x75, 0x6e, 0x61, 0x72, 0x4c, 0x65, 0x20, 0x4c, 0x69, 0x66, 0x74,
		0x4c, 0x65, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x65, 0x20, 0x57, 0x61, 0x76, 0x65, 0x4c, 0x65,
		0x20, 0x53, 0x77, 0x69, 0x70, 0x65, 0x4c, 0x65, 0x20, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x4c, 0x65,
		0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x65, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x65,
		0x4c, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x20,
		0x46, 0x52, 0x4c, 0x65, 0x20, 0x48, 0x6f, 0x6c, 0x61, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76,
		0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x6f, 0x6f, 0x76, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x20,
		0x46, 0x52, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x74, 0x4c, 0x65, 0x20, 0x46, 0x69, 0x7a, 0x7a, 0x4c,
		0x65, 0x20, 0x48, 0x6f, 0x70, 0x4c, 0x65, 0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4c, 0x65, 0x20,
		0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x46, 0x52, 0x4c, 0x65, 0x20, 0x53, 0x6d, 0x6f, 0x6f,
		0x74, 0x68, 0x4c, 0x65, 0x20, 0x4d, 0x75, 0x73, 0x74, 0x20, 0x32, 0x4c, 0x65, 0x20, 0x4d, 0x75,
		0x73, 0x74, 0x4c, 0x65, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x4c, 0x65,
		0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4c, 0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45,
		0x2d, 0x52, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x52, 0x4c,
		0x2d, 0x45, 0x47, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x45, 0x4c, 0x2d, 0x45, 0x67, 0x61, 0x6e, 0x74,
		0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x65, 0x20, 0x55, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6b, 0x4c, 0x6f,
		0x67, 0x69, 0x74, 0x65, 0x63, 0x68, 0x47, 0x20, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x6e,
		0x67, 0x54, 0x56, 0x4c, 0x4f, 0x55, 0x69, 0x45, 0x4c, 0x6f, 0x76, 0x6d, 0x65, 0x4c, 0x75, 0x6d,
		0x69, 0x67, 0x6f, 0x6e, 0x4c, 0x75, 0x6d, 0x69, 0x74, 0x65, 0x6c, 0x4c, 0x75, 0x6d, 0x75, 0x73,
		0x49, 0x4e, 0x4e, 0x4f, 0x20, 0x24, 0x31, 0x49, 0x6f, 0x6e, 0x41, 0x45, 0x4f, 0x4e, 0x20, 0x24,
		0x31, 0x4c, 0x75, 0x6e, 0x61, 0x4c, 0x75, 0x78, 0x6f, 0x72, 0x4c, 0x76, 0x69, 0x6c, 0x6c, 0x65,
		0x4d, 0x2d, 0x48, 0x6f, 0x72, 0x73, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x31, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x31, 0x54, 0x6f, 0x70, 0x20, 0x24, 0x31, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x6f,
		0x74, 0x65, 0x38, 0x54, 0x6f, 0x70, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x4d, 0x2d, 0x4b,
		0x4f, 0x50, 0x41, 0x4d, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x45, 0x52, 0x4f, 0x53, 0x20, 0x34, 0x47,
		0x45, 0x72, 0x6f, 0x73, 0x20, 0x34, 0x47, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x45, 0x72, 0x6f, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x45, 0x72, 0x6f, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x43, 0x45,
		0x39, 0x41, 0x63, 0x65, 0x20, 0x39, 0x4a, 0x41, 0x5a, 0x42, 0x41, 0x41, 0x54, 0x45, 0x5a, 0x20,
		0x34, 0x47, 0x46, 0x6f, 0x74, 0x6f, 0x33, 0x46, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x4c, 0x24, 0x31, 0x4d, 0x2e, 0x54, 0x2e, 0x54, 0x2e, 0x4d, 0x54, 0x54, 0x20,
		0x49, 0x44, 0x45, 0x41, 0x4c, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x24, 0x31, 0x4d, 0x33, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x33, 0x55, 0x53, 0x32,
		0x30, 0x57, 0x55, 0x53, 0x32, 0x30, 0x57, 0x4d, 0x33, 0x53, 0x4c, 0x32, 0x30, 0x53, 0x4c, 0x32,
		0x30, 0x4d, 0x33, 0x53, 0x4d, 0x31, 0x35, 0x58, 0x53, 0x4d, 0x31, 0x35, 0x58, 0x4d, 0x34, 0x74,
		0x65, 0x6c, 0x53, 0x53, 0x31, 0x30, 0x35, 0x30, 0x53, 0x53, 0x31, 0x30, 0x36, 0x30, 0x4c, 0x69,
		0x76, 0x65, 0x53, 0x53, 0x31, 0x30, 0x37, 0x30, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x53, 0x31,
		0x30, 0x38, 0x30, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x53, 0x31, 0x30, 0x39, 0x30,
		0x4d, 0x61, 0x78, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x53, 0x34, 0x30, 0x32, 0x30, 0x50,
		0x6c, 0x61, 0x79, 0x53, 0x53, 0x34, 0x30, 0x34, 0x30, 0x49, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x53, 0x53, 0x34, 0x30, 0x34, 0x35, 0x53, 0x53, 0x34, 0x33, 0x34, 0x35, 0x53, 0x6f, 0x75,
		0x6c, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x53, 0x34, 0x33, 0x35, 0x30, 0x53, 0x6f, 0x75, 0x6c,
		0x53, 0x53, 0x34, 0x34, 0x34, 0x35, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x41, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x30, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x53, 0x34,
		0x34, 0x35, 0x31, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x53, 0x53, 0x34, 0x34, 0x35, 0x32,
		0x44, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x2d, 0x52, 0x52, 0x31, 0x20,
		0x46, 0x65, 0x65, 0x6c, 0x52, 0x32, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x32, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35, 0x33, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x35, 0x53, 0x53, 0x34, 0x34, 0x35, 0x36, 0x45,
		0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x2d, 0x52,
		0x45, 0x76, 0x65, 0x72, 0x53, 0x53, 0x34, 0x34, 0x35, 0x37, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e,
		0x63, 0x65, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x53, 0x34, 0x34, 0x35,
		0x38, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d, 0x41, 0x47, 0x4d, 0x41, 0x47, 0x43,
		0x48, 0x4d, 0x41, 0x58, 0x56, 0x49, 0x4d, 0x53, 0x35, 0x33, 0x31, 0x4d, 0x53, 0x35, 0x33, 0x31,
		0x20, 0x56, 0x65, 0x67, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x32, 0x20, 0x4f, 0x72, 0x69, 0x6f, 0x6e,
		0x4d, 0x41, 0x58, 0x58, 0x4d, 0x42, 0x49, 0x4d, 0x42, 0x4b, 0x4d, 0x42, 0x4f, 0x58, 0x4d, 0x44,
		0x43, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x53, 0x4e, 0x6f,
		0x76, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x24,
		0x31, 0x20, 0x34, 0x47, 0x4d, 0x44, 0x54, 0x56, 0x4d, 0x45, 0x45, 0x47, 0x4d, 0x45, 0x47, 0x41,
		0x4d, 0x41, 0x58, 0x4d, 0x45, 0x4f, 0x4d, 0x45, 0x53, 0x57, 0x41, 0x4f, 0x4d, 0x45, 0x55, 0x4d,
		0x49, 0x56, 0x4f, 0x4a, 0x61, 0x7a, 0x7a, 0x20, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38,
		0x29, 0x4d, 0x49, 0x57, 0x41, 0x4e, 0x47, 0x4d, 0x49, 0x58, 0x43, 0x4d, 0x4c, 0x41, 0x42, 0x47,
		0x6c, 0x6f, 0x77, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x4c, 0x4c, 0x45, 0x44, 0x4d, 0x4c, 0x53, 0x69,
		0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x77, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x63, 0x68,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x63, 0x68, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x42, 0x72,
		0x61, 0x76, 0x65, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x41,
		0x6c, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x43, 0x61, 0x72, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42,
		0x72, 0x61, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x56, 0x65,
		0x72, 0x73, 0x65, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x6d, 0x69, 0x6e, 0x69,
		0x20, 0x34, 0x47, 0x54, 0x4f, 0x50, 0x2d, 0x53, 0x20, 0x34, 0x47, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x4f, 0x6e, 0x79, 0x78, 0x69, 0x51,
		0x54, 0x61, 0x6c, 0x6b, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b,
		0x20, 0x53, 0x70, 0x69, 0x63, 0x79, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x34, 0x47, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x33, 0x20, 0x34, 0x47, 0x52,
		0x61, 0x6e, 0x67, 0x65, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c, 0x6b, 0x20, 0x43, 0x6f,
		0x6c, 0x6f, 0x72, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20,
		0x52, 0x6f, 0x73, 0x65, 0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
		0x69, 0x51, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x4a, 0x65,
		0x74, 0x20, 0x33, 0x47, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x20, 0x34, 0x47, 0x44, 0x69, 0x61,
		0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x35, 0x2e, 0x32, 0x20, 0x34, 0x47, 0x69, 0x51, 0x54, 0x61, 0x6c,
		0x6b, 0x20, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x20, 0x34, 0x47, 0x41, 0x6e,
		0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x41, 0x6e, 0x67, 0x65, 0x6c, 0x20, 0x33, 0x47, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x47, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x34, 0x47, 0x46, 0x35, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x34, 0x47,
		0x4d, 0x58, 0x20, 0x34, 0x47, 0x4d, 0x58, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x46, 0x61,
		0x62, 0x20, 0x34, 0x47, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x34, 0x47, 0x4d, 0x6f, 0x72,
		0x65, 0x20, 0x34, 0x47, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34, 0x47, 0x42, 0x72, 0x61, 0x63, 0x65,
		0x20, 0x32, 0x30, 0x31, 0x38, 0x20, 0x34, 0x47, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x34, 0x47,
		0x52, 0x75, 0x62, 0x79, 0x20, 0x34, 0x47, 0x44, 0x58, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x74,
		0x61, 0x20, 0x34, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x53, 0x20, 0x34, 0x47, 0x52, 0x33,
		0x20, 0x34, 0x47, 0x50, 0x68, 0x61, 0x62, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x36, 0x20, 0x34,
		0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6c, 0x75, 0x20, 0x35, 0x2e, 0x35, 0x22,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x47, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x20, 0x34, 0x47, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x69, 0x6e, 0x67, 0x65,
		0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x54, 0x38, 0x20, 0x46, 0x69, 0x6e, 0x67,
		0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x47, 0x69, 0x51, 0x46, 0x32, 0x30, 0x30,
		0x4d, 0x4d, 0x49, 0x4d, 0x4f, 0x56, 0x49, 0x53, 0x55, 0x4e, 0x4d, 0x53, 0x49, 0x50, 0x72, 0x69,
		0x6d, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x54, 0x43, 0x4f, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x61, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61,
		0x63, 0x65, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x61, 0x63, 0x65, 0x20,
		0x32, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74,
		0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x42, 0x69, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x32, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x75, 0x72, 0x66, 0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x62, 0x6f, 0x78,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x44, 0x56, 0x38, 0x33,
		0x30, 0x34, 0x2d, 0x43, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x20, 0x44, 0x56,
		0x38, 0x33, 0x30, 0x34, 0x2d, 0x43, 0x4d, 0x54, 0x4e, 0x46, 0x61, 0x69, 0x74, 0x68, 0x20, 0x32,
		0x39, 0x4b, 0x61, 0x20, 0x43, 0x68, 0x6f, 0x63, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x66,
		0x69, 0x74, 0x20, 0x56, 0x39, 0x30, 0x30, 0x4b, 0x61, 0x46, 0x69, 0x74, 0x20, 0x56, 0x39, 0x30,
		0x30, 0x53, 0x6d, 0x40, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x35,
		0x36, 0x30, 0x4d, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x4d, 0x35, 0x36, 0x31, 0x4d,
		0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x4d, 0x35, 0x37, 0x31, 0x4d, 0x33, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4b, 0x61, 0x6d, 0x75, 0x6e, 0x79, 0x65, 0x4d, 0x54, 0x4e, 0x2d, 0x38,
		0x39, 0x37, 0x38, 0x50, 0x53, 0x74, 0x65, 0x70, 0x70, 0x61, 0x4d, 0x54, 0x4e, 0x2d, 0x24, 0x31,
		0x4d, 0x59, 0x46, 0x4f, 0x4e, 0x4d, 0x59, 0x50, 0x41, 0x44, 0x37, 0x73, 0x4d, 0x79, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x73, 0x4d, 0x61, 0x63, 0x6f, 0x6f, 0x78, 0x4d, 0x43, 0x2d, 0x58, 0x37,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x61, 0x66, 0x65, 0x4d, 0x61, 0x66, 0x65, 0x5f, 0x4d, 0x38,
		0x32, 0x30, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x38, 0x32, 0x30, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x73, 0x65, 0x65, 0x4e, 0x35, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x35, 0x20, 0x4e, 0x6f, 0x76,
		0x61, 0x49, 0x72, 0x6f, 0x6e, 0x2b, 0x4e, 0x35, 0x4d, 0x61, 0x78, 0x5f, 0x58, 0x34, 0x4e, 0x35,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x34, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x42, 0x72, 0x61,
		0x76, 0x6f, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31,
		0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x65, 0x55,
		0x72, 0x61, 0x6e, 0x6f, 0x20, 0x37, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x72, 0x61, 0x6e, 0x6f,
		0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x61, 0x62, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x47, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x31, 0x34, 0x54, 0x61, 0x62, 0x20, 0x37, 0x31,
		0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x41, 0x42, 0x5f, 0x38, 0x31, 0x34, 0x54, 0x61, 0x62,
		0x20, 0x38, 0x31, 0x34, 0x54, 0x61, 0x62, 0x24, 0x31, 0x43, 0x72, 0x6f, 0x6e, 0x6f, 0x20, 0x24,
		0x31, 0x4d, 0x61, 0x6c, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x67, 0x6f, 0x4d, 0x61, 0x6e, 0x67,
		0x6f, 0x5f, 0x41, 0x4b, 0x41, 0x42, 0x55, 0x54, 0x4f, 0x5f, 0x34, 0x47, 0x41, 0x6b, 0x61, 0x62,
		0x75, 0x74, 0x6f, 0x20, 0x34, 0x47, 0x4d, 0x61, 0x6e, 0x6e, 0x4d, 0x61, 0x6e, 0x74, 0x61, 0x20,
		0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30,
		0x31, 0x32, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30,
		0x31, 0x34, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30,
		0x31, 0x35, 0x4d, 0x65, 0x7a, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x30,
		0x52, 0x6f, 0x63, 0x6b, 0x79, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x35, 0x30, 0x32, 0x31, 0x52,
		0x6f, 0x63, 0x6b, 0x79, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30,
		0x31, 0x37, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x32, 0x4d, 0x53, 0x50, 0x39, 0x36, 0x30, 0x30,
		0x32, 0x46, 0x6f, 0x72, 0x74, 0x6f, 0x20, 0x31, 0x4d, 0x53, 0x50, 0x39, 0x34, 0x35, 0x30, 0x31,
		0x45, 0x61, 0x73, 0x79, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x4d, 0x61, 0x6e, 0x74, 0x72,
		0x61, 0x4d, 0x61, 0x72, 0x61, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x4d, 0x45, 0x2d, 0x24,
		0x31, 0x4d, 0x61, 0x73, 0x63, 0x6f, 0x6d, 0x4d, 0x61, 0x73, 0x73, 0x67, 0x6f, 0x56, 0x69, 0x32,
		0x20, 0x53, 0x4d, 0x61, 0x73, 0x73, 0x74, 0x65, 0x6c, 0x4a, 0x75, 0x6e, 0x6f, 0x20, 0x51, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x61, 0x70, 0x69, 0x20, 0x24, 0x31, 0x4e, 0x36, 0x36, 0x30,
		0x53, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x34, 0x47, 0x54, 0x61,
		0x62, 0x31, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x61, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x47, 0x4e, 0x45, 0x4f, 0x51, 0x43, 0x34, 0x47, 0x47, 0x50,
		0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x51, 0x43, 0x20, 0x34, 0x47, 0x4d, 0x61, 0x73, 0x74,
		0x65, 0x72, 0x74, 0x65, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x6f, 0x20, 0x54, 0x6f, 0x6f, 0x6c,
		0x73, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x20, 0x47, 0x52,
		0x41, 0x56, 0x49, 0x54, 0x59, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x37, 0x31, 0x31, 0x36,
		0x20, 0x41, 0x35, 0x4d, 0x61, 0x75, 0x6e, 0x66, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x78, 0x63, 0x6f,
		0x6d, 0x24, 0x31, 0x20, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x4d, 0x53, 0x24, 0x31, 0x52, 0x53,
		0x2d, 0x34, 0x30, 0x31, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x52, 0x69, 0x73, 0x65, 0x20, 0x53, 0x31,
		0x4d, 0x61, 0x78, 0x66, 0x6f, 0x6e, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x73, 0x47, 0x31,
		0x30, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x58, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78,
		0x74, 0x72, 0x6f, 0x6e, 0x50, 0x6c, 0x75, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x77, 0x65, 0x6c, 0x6c,
		0x4d, 0x61, 0x78, 0x77, 0x65, 0x73, 0x74, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x41,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4e, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x20, 0x58, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x35,
		0x5f, 0x47, 0x4f, 0x5f, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x47,
		0x6f, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x52, 0x4f,
		0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x6f,
		0x20, 0x24, 0x31, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x65, 0x20, 0x5a, 0x35, 0x41, 0x73, 0x74,
		0x72, 0x6f, 0x20, 0x58, 0x34, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f,
		0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x34, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x69, 0x74, 0x72,
		0x6f, 0x20, 0x34, 0x73, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x47, 0x72, 0x61, 0x76,
		0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x20, 0x47, 0x4f, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x5f, 0x36, 0x50, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x36, 0x50, 0x47, 0x72, 0x61,
		0x76, 0x69, 0x74, 0x79, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73, 0x74, 0x72,
		0x6f, 0x36, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x36, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x5f, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x39, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x68,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x39, 0x4d, 0x61, 0x7a, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61,
		0x20, 0x58, 0x4d, 0x61, 0x7a, 0x65, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x4d, 0x31, 0x35, 0x38,
		0x32, 0x43, 0x5f, 0x4d, 0x41, 0x58, 0x4d, 0x31, 0x35, 0x38, 0x32, 0x43, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x53, 0x42, 0x2d, 0x24, 0x31, 0x4d, 0x63, 0x4c, 0x61, 0x75, 0x74, 0x4d, 0x65, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x63, 0x65,
		0x72, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x4d, 0x37, 0x38, 0x35, 0x58, 0x31, 0x30, 0x31, 0x30, 0x4d, 0x31, 0x37, 0x51, 0x46,
		0x36, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x37, 0x51, 0x46, 0x24, 0x31,
		0x20, 0x24, 0x32, 0x47, 0x38, 0x30, 0x30, 0x50, 0x33, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73,
		0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50,
		0x33, 0x31, 0x43, 0x38, 0x30, 0x30, 0x50, 0x33, 0x32, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x30, 0x30, 0x50, 0x33,
		0x32, 0x43, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31, 0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x31, 0x30, 0x31, 0x50, 0x35, 0x31,
		0x43, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66,
		0x65, 0x20, 0x4d, 0x37, 0x24, 0x31, 0x51, 0x46, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x46, 0x37, 0x31, 0x36, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x37, 0x31, 0x36, 0x4d, 0x65, 0x63,
		0x6f, 0x6f, 0x6c, 0x4b, 0x4d, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x4d, 0x39, 0x20, 0x54, 0x56,
		0x20, 0x42, 0x6f, 0x78, 0x42, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x4b, 0x49, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x57, 0x4d, 0x38, 0x53, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x56, 0x42, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x24, 0x31, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4d, 0x38, 0x53, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x38, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x38, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x63, 0x6f, 0x6d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x35, 0x30, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x37, 0x30, 0x20, 0x53, 0x32, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x4d, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x48, 0x58, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x4d, 0x58, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x48, 0x58, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x47, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x38, 0x37, 0x35, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x4d, 0x2d,
		0x53, 0x50, 0x31, 0x41, 0x47, 0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x20, 0x47, 0x6f, 0x20, 0x33, 0x47, 0x4d, 0x2d, 0x53, 0x50, 0x37, 0x78, 0x47,
		0x4f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x69, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x31, 0x41, 0x45, 0x43, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x31, 0x30, 0x20,
		0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x53, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x34, 0x20, 0x48,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x48, 0x44, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x53, 0x34, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x58, 0x20, 0x48, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4d,
		0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x4d, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x48, 0x44, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x20, 0x69, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75,
		0x74, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x20,
		0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x69, 0x79, 0x6f, 0x20, 0x38, 0x22,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x67, 0x65,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x31, 0x45, 0x59, 0x57, 0x69, 0x6e, 0x50,
		0x61, 0x64, 0x20, 0x57, 0x38, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x53, 0x32, 0x20, 0x33, 0x47, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x42,
		0x34, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x47, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f,
		0x20, 0x42, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75,
		0x6f, 0x20, 0x47, 0x35, 0x33, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x47, 0x37, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64, 0x20,
		0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x33, 0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x64,
		0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61,
		0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x36, 0x35, 0x30, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x35, 0x31, 0x55, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x34, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x35, 0x30, 0x30, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x24, 0x31, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x55, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x61, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x53, 0x24, 0x31, 0x4d, 0x65, 0x64,
		0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x66,
		0x65, 0x20, 0x24, 0x31, 0x4d, 0x65, 0x67, 0x61, 0x46, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
		0x2b, 0x4d, 0x46, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x34, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x34,
		0x20, 0x4c, 0x54, 0x45, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x20, 0x33, 0x4f, 0x70, 0x74, 0x69, 0x6d,
		0x61, 0x53, 0x50, 0x2d, 0x41, 0x32, 0x30, 0x69, 0x4d, 0x69, 0x6e, 0x74, 0x56, 0x39, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x65, 0x67, 0x61, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x54, 0x54, 0x20,
		0x58, 0x76, 0x69, 0x65, 0x77, 0x20, 0x41, 0x56, 0x31, 0x58, 0x76, 0x69, 0x65, 0x77, 0x2b, 0x4d,
		0x65, 0x69, 0x74, 0x75, 0x54, 0x38, 0x54, 0x38, 0x73, 0x54, 0x39, 0x4d, 0x38, 0x73, 0x32, 0x4d,
		0x65, 0x69, 0x7a, 0x75, 0x4d, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x24, 0x31, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x32, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x32, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x79, 0x4d, 0x62, 0x6c, 0x75, 0x20, 0x32, 0x31, 0x4c, 0x75, 0x63, 0x6b, 0x79,
		0x20, 0x30, 0x38, 0x4d, 0x31, 0x45, 0x4d, 0x32, 0x45, 0x4d, 0x32, 0x4d, 0x33, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x4d, 0x35, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x4d, 0x33, 0x73, 0x4d, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x35, 0x63, 0x4d, 0x58, 0x32, 0x4d,
		0x58, 0x33, 0x4d, 0x58, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x34, 0x4d, 0x58, 0x35, 0x6d,
		0x31, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x4d, 0x31, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x4d,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x38, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x52, 0x4f,
		0x20, 0x37, 0x50, 0x52, 0x4f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x52, 0x4f,
		0x20, 0x24, 0x31, 0x4d, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x31,
		0x36, 0x54, 0x31, 0x36, 0x74, 0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x36, 0x74, 0x68, 0x31, 0x36, 0x58,
		0x31, 0x36, 0x31, 0x36, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x4d, 0x65, 0x6c, 0x72, 0x6f,
		0x73, 0x65, 0x53, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x31, 0x39, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x20, 0x33, 0x2e, 0x34, 0x22, 0x4d, 0x65, 0x6d,
		0x75, 0x70, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x53, 0x6c, 0x69,
		0x64, 0x65, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x4e, 0x47, 0x24, 0x31, 0x20, 0x33, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x50,
		0x61, 0x64, 0x20, 0x37, 0x30, 0x34, 0x24, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x63, 0x69,
		0x66, 0x69, 0x63, 0x47, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x47, 0x6f, 0x50, 0x6f, 0x72,
		0x74, 0x61, 0x6c, 0x20, 0x47, 0x6f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x33, 0x51, 0x75, 0x65,
		0x73, 0x74, 0x20, 0x32, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x65, 0x74,
		0x7a, 0x4d, 0x45, 0x54, 0x5a, 0x20, 0x32, 0x4b, 0x20, 0x54, 0x56, 0x4d, 0x69, 0x58, 0x7a, 0x6f,
		0x4d, 0x45, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x58, 0x31, 0x30, 0x32, 0x31, 0x20, 0x33,
		0x47, 0x4d, 0x58, 0x24, 0x31, 0x20, 0x34, 0x47, 0x4d, 0x45, 0x31, 0x30, 0x32, 0x35, 0x20, 0x33,
		0x47, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x4d, 0x61, 0x78, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x20,
		0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x51, 0x35, 0x30, 0x30, 0x31, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a, 0x75, 0x69, 0x63, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x44, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x4a,
		0x75, 0x69, 0x63, 0x65, 0x20, 0x34, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x75, 0x6c,
		0x73, 0x65, 0x34, 0x35, 0x36, 0x30, 0x4d, 0x4d, 0x58, 0x49, 0x4e, 0x20, 0x32, 0x42, 0x49, 0x4e,
		0x20, 0x32, 0x43, 0x49, 0x4e, 0x20, 0x31, 0x42, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x41,
		0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x45, 0x76, 0x6f, 0x6b, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62,
		0x42, 0x6f, 0x6c, 0x74, 0x20, 0x51, 0x24, 0x31, 0x51, 0x34, 0x31, 0x37, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x51, 0x33, 0x35, 0x30, 0x52, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x51, 0x34, 0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65,
		0x20, 0x32, 0x51, 0x33, 0x38, 0x30, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x51, 0x33, 0x35, 0x31, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x33, 0x35, 0x30, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51,
		0x33, 0x34, 0x39, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x20, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x34, 0x30, 0x39, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x51, 0x34,
		0x31, 0x35, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x50, 0x61, 0x63, 0x65, 0x51, 0x33, 0x34,
		0x30, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65,
		0x6b, 0x61, 0x20, 0x59, 0x55, 0x35, 0x30, 0x34, 0x30, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x20, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61,
		0x20, 0x53, 0x20, 0x59, 0x55, 0x35, 0x35, 0x33, 0x30, 0x51, 0x34, 0x32, 0x34, 0x42, 0x6f, 0x6c,
		0x74, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x51, 0x34, 0x31, 0x30, 0x31, 0x42, 0x6f, 0x6c,
		0x74, 0x20, 0x57, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x51, 0x33, 0x35, 0x32, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x34, 0x42, 0x6f, 0x6c, 0x74, 0x20, 0x24, 0x31, 0x51, 0x33, 0x30, 0x36, 0x42, 0x6f, 0x6c,
		0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x33, 0x47, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x34, 0x32, 0x36, 0x43, 0x61, 0x6e, 0x76, 0x61,
		0x73, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x4e, 0x38, 0x32, 0x31, 0x36, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x31, 0x4e, 0x38, 0x33, 0x30, 0x31, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4e, 0x31, 0x32, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x51, 0x34, 0x34, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x33, 0x35, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x20, 0x32, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x4d, 0x61, 0x67, 0x6e, 0x75, 0x73, 0x20, 0x48, 0x44, 0x43, 0x61, 0x6e,
		0x76, 0x61, 0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x32, 0x43, 0x61, 0x6e, 0x76,
		0x61, 0x73, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x56, 0x64, 0x65, 0x6f, 0x20, 0x34, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x43, 0x61,
		0x6e, 0x76, 0x61, 0x73, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61,
		0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x68, 0x61, 0x72, 0x61, 0x74, 0x20, 0x24, 0x31, 0x69,
		0x4f, 0x6e, 0x65, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x49, 0x4e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x49, 0x4e, 0x20, 0x31, 0x62, 0x43,
		0x61, 0x6e, 0x76, 0x61, 0x73, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4b, 0x69, 0x6e, 0x20,
		0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x34, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x34, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x32, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x34,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x35, 0x30, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x31,
		0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x38, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x36, 0x34, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x34, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x36, 0x34, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x34, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x36, 0x34, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x52, 0x4d, 0x2d,
		0x31, 0x31, 0x35, 0x32, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x35, 0x30, 0x20, 0x53, 0x53,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39,
		0x35, 0x30, 0x20, 0x58, 0x4c, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x39, 0x35, 0x30, 0x20, 0x58, 0x4c, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x39, 0x35, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x39, 0x35, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x33, 0x32, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x33, 0x30, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
		0x20, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x33, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x50,
		0x72, 0x6f, 0x24, 0x31, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x20,
		0x32, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x53, 0x75, 0x72, 0x66,
		0x61, 0x63, 0x65, 0x20, 0x33, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x63,
		0x72, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x45, 0x54, 0x57, 0x31, 0x30, 0x31, 0x47, 0x54, 0x45, 0x2d,
		0x54, 0x61, 0x62, 0x20, 0x57, 0x69, 0x46, 0x69, 0x45, 0x2d, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x69, 0x67, 0x68, 0x74, 0x69, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x78, 0x4e, 0x45,
		0x4f, 0x2d, 0x58, 0x38, 0x2d, 0x48, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x48, 0x4e, 0x45, 0x4f,
		0x20, 0x55, 0x32, 0x32, 0x2d, 0x58, 0x4a, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x32, 0x32, 0x4e, 0x45,
		0x4f, 0x20, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x45, 0x4f, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x38, 0x38, 0x69, 0x4e, 0x45, 0x4f,
		0x2d, 0x58, 0x37, 0x2d, 0x32, 0x31, 0x36, 0x41, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x37, 0x4e, 0x45,
		0x4f, 0x2d, 0x58, 0x35, 0x2d, 0x31, 0x31, 0x36, 0x41, 0x4e, 0x45, 0x4f, 0x20, 0x58, 0x35, 0x4e,
		0x45, 0x4f, 0x20, 0x58, 0x24, 0x31, 0x4e, 0x45, 0x4f, 0x2d, 0x55, 0x31, 0x4e, 0x45, 0x4f, 0x20,
		0x55, 0x31, 0x4e, 0x45, 0x4f, 0x2d, 0x5a, 0x36, 0x34, 0x4e, 0x45, 0x4f, 0x20, 0x5a, 0x36, 0x34,
		0x4e, 0x45, 0x4f, 0x2d, 0x55, 0x39, 0x2d, 0x48, 0x4e, 0x45, 0x4f, 0x20, 0x55, 0x39, 0x48, 0x50,
		0x65, 0x61, 0x72, 0x6c, 0x20, 0x24, 0x31, 0x45, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x64, 0x4d, 0x34,
		0x43, 0x52, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x69, 0x72, 0x47, 0x6f, 0x4f, 0x72, 0x69,
		0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x74,
		0x20, 0x24, 0x31, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31,
		0x46, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6f,
		0x4d, 0x6f, 0x62, 0x69, 0x78, 0x20, 0x4d, 0x36, 0x4d, 0x69, 0x6f, 0x20, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x37, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x24, 0x31,
		0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x20, 0x49, 0x49, 0x49, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x33, 0x50,
		0x32, 0x2b, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x5f, 0x50, 0x55, 0x42, 0x47, 0x5f, 0x31, 0x50, 0x55,
		0x42, 0x47, 0x20, 0x31, 0x4d, 0x69, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x53, 0x20, 0x6d, 0x61, 0x78,
		0x58, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x31, 0x51,
		0x31, 0x31, 0x4d, 0x69, 0x72, 0x61, 0x79, 0x54, 0x50, 0x4d, 0x34, 0x47, 0x5f, 0x57, 0x54, 0x38,
		0x54, 0x50, 0x4d, 0x34, 0x47, 0x20, 0x57, 0x54, 0x38, 0x4d, 0x49, 0x44, 0x4d, 0x20, 0x24, 0x31,
		0x4d, 0x50, 0x4d, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6c, 0x6c, 0x20, 0x26,
		0x20, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x4d, 0x69, 0x74, 0x6f, 0x33, 0x32, 0x35, 0x35, 0x41, 0x33,
		0x37, 0x20, 0x5a, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x62, 0x69,
		0x73, 0x68, 0x69, 0x4d, 0x69, 0x74, 0x73, 0x75, 0x69, 0x4d, 0x6f, 0x62, 0x65, 0x6c, 0x6c, 0x4e,
		0x4f, 0x56, 0x41, 0x20, 0x50, 0x33, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x50, 0x33, 0x4d, 0x6f, 0x62,
		0x69, 0x49, 0x6f, 0x54, 0x4d, 0x6f, 0x62, 0x69, 0x47, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x62, 0x69,
		0x50, 0x72, 0x69, 0x6e, 0x74, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69,
		0x57, 0x69, 0x72, 0x65, 0x4b, 0x41, 0x4e, 0x55, 0x4e, 0x41, 0x4b, 0x61, 0x6e, 0x75, 0x6e, 0x61,
		0x4b, 0x57, 0x41, 0x4e, 0x49, 0x54, 0x41, 0x4b, 0x77, 0x61, 0x6e, 0x69, 0x74, 0x61, 0x4d, 0x6f,
		0x62, 0x69, 0x47, 0x6f, 0x32, 0x4c, 0x4d, 0x6f, 0x62, 0x69, 0x47, 0x6f, 0x20, 0x32, 0x4c, 0x4d,
		0x6f, 0x62, 0x69, 0x63, 0x65, 0x6c, 0x45, 0x70, 0x69, 0x63, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x24,
		0x31, 0x49, 0x58, 0x20, 0x50, 0x52, 0x4f, 0x49, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x58, 0x20,
		0x50, 0x52, 0x4f, 0x52, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x58, 0x2d, 0x31, 0x49, 0x58, 0x4c,
		0x45, 0x47, 0x45, 0x4e, 0x44, 0x20, 0x4d, 0x41, 0x58, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x20,
		0x4d, 0x61, 0x78, 0x4c, 0x45, 0x47, 0x45, 0x4e, 0x44, 0x20, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x4c,
		0x65, 0x67, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x4c, 0x65, 0x67, 0x65, 0x6e,
		0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x42, 0x4c, 0x49, 0x4e, 0x4b, 0x42, 0x6c,
		0x69, 0x6e, 0x6b, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x45, 0x70, 0x69, 0x63, 0x20, 0x24, 0x31, 0x42,
		0x45, 0x52, 0x52, 0x59, 0x31, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x31, 0x42, 0x45, 0x52, 0x52,
		0x59, 0x20, 0x50, 0x52, 0x4f, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x45,
		0x52, 0x52, 0x59, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x32, 0x54, 0x52, 0x45, 0x4e,
		0x44, 0x59, 0x20, 0x32, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x32, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x45, 0x52, 0x52, 0x59, 0x42, 0x65, 0x72, 0x72, 0x79,
		0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x72, 0x65, 0x6e, 0x64,
		0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x52, 0x45, 0x4e, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x54,
		0x45, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x34, 0x20, 0x4c,
		0x54, 0x45, 0x48, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x48, 0x79, 0x70, 0x65, 0x20, 0x58, 0x48, 0x59,
		0x50, 0x45, 0x48, 0x79, 0x70, 0x65, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x5f, 0x5a, 0x41, 0x4d, 0x44,
		0x61, 0x6e, 0x64, 0x79, 0x20, 0x5a, 0x61, 0x6d, 0x44, 0x41, 0x4e, 0x44, 0x59, 0x44, 0x61, 0x6e,
		0x64, 0x79, 0x4d, 0x45, 0x54, 0x52, 0x4f, 0x32, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x20, 0x32, 0x41,
		0x53, 0x54, 0x52, 0x4f, 0x41, 0x73, 0x74, 0x72, 0x6f, 0x56, 0x45, 0x4e, 0x55, 0x53, 0x5f, 0x47,
		0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x47, 0x6f, 0x54, 0x41, 0x4e, 0x47, 0x4f, 0x5f, 0x4c, 0x49,
		0x54, 0x45, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x45, 0x4e, 0x44,
		0x59, 0x5f, 0x44, 0x53, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x44, 0x53, 0x52, 0x45, 0x42, 0x45,
		0x4c, 0x52, 0x55, 0x42, 0x59, 0x52, 0x75, 0x62, 0x79, 0x52, 0x37, 0x4f, 0x52, 0x45, 0x4f, 0x4f,
		0x72, 0x65, 0x6f, 0x47, 0x4c, 0x4f, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x31, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x20, 0x31, 0x5a, 0x4f, 0x4f, 0x4d, 0x5f, 0x31, 0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x31,
		0x48, 0x45, 0x52, 0x4f, 0x5f, 0x44, 0x53, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x44, 0x53, 0x46, 0x41,
		0x4d, 0x45, 0x5f, 0x44, 0x53, 0x46, 0x61, 0x6d, 0x65, 0x20, 0x44, 0x53, 0x46, 0x41, 0x4d, 0x45,
		0x46, 0x61, 0x6d, 0x65, 0x42, 0x45, 0x41, 0x4d, 0x53, 0x48, 0x49, 0x46, 0x54, 0x53, 0x68, 0x69,
		0x66, 0x74, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x4e, 0x45, 0x4f, 0x5f, 0x31, 0x4e, 0x65, 0x6f, 0x4e, 0x65, 0x6f, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x69, 0x6f, 0x20, 0x24, 0x31,
		0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74, 0x63,
		0x68, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x47, 0x6f, 0x53,
		0x77, 0x69, 0x74, 0x63, 0x68, 0x31, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x31, 0x50, 0x4c,
		0x55, 0x53, 0x5f, 0x31, 0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20,
		0x70, 0x6c, 0x75, 0x73, 0x43, 0x6c, 0x69, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4c, 0x49,
		0x4b, 0x43, 0x6c, 0x69, 0x6b, 0x56, 0x58, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x58, 0x24,
		0x31, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x31, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x31, 0x50,
		0x55, 0x52, 0x45, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x46, 0x65, 0x6e, 0x64, 0x79, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x6e, 0x64, 0x79,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x4f, 0x4f, 0x4d, 0x2d, 0x48, 0x5a, 0x6f, 0x6f, 0x6d, 0x20,
		0x48, 0x5a, 0x4f, 0x4f, 0x4d, 0x5a, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x46, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x46, 0x65, 0x76, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x73,
		0x74, 0x61, 0x72, 0x58, 0x31, 0x20, 0x24, 0x31, 0x45, 0x31, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69,
		0x65, 0x58, 0x51, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x4c, 0x61, 0x69,
		0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x37, 0x29, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x32, 0x4c, 0x61,
		0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29,
		0x4c, 0x61, 0x69, 0x20, 0x5a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x4c, 0x61, 0x69, 0x20, 0x5a,
		0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4a, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72,
		0x20, 0x5a, 0x55, 0x4d, 0x42, 0x4f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x75, 0x6d, 0x62,
		0x6f, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6e, 0x61, 0x20,
		0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20,
		0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x75, 0x6b, 0x69, 0x4c, 0x61, 0x69, 0x20,
		0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x24, 0x31, 0x4c, 0x61, 0x69, 0x20, 0x5a, 0x65, 0x6e, 0x61, 0x4c,
		0x61, 0x69, 0x20, 0x5a, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f,
		0x5a, 0x4f, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x5a, 0x6f, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x6d, 0x6f,
		0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x41,
		0x49, 0x20, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x4c, 0x61, 0x69, 0x20, 0x35,
		0x31, 0x32, 0x4c, 0x61, 0x69, 0x20, 0x35, 0x30, 0x34, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69,
		0x73, 0x74, 0x61, 0x72, 0x20, 0x4c, 0x41, 0x49, 0x20, 0x59, 0x4c, 0x61, 0x69, 0x20, 0x59, 0x6d,
		0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58,
		0x20, 0x32, 0x30, 0x31, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x43, 0x31, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x20, 0x58, 0x20, 0x4d, 0x41, 0x58, 0x20, 0x32,
		0x30, 0x31, 0x38, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x6f,
		0x6f, 0x6c, 0x24, 0x31, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x20, 0x4b, 0x41,
		0x54, 0x20, 0x34, 0x35, 0x32, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x61, 0x74, 0x20, 0x34,
		0x35, 0x32, 0x6d, 0x6f, 0x62, 0x69, 0x69, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x4c, 0x41, 0x49, 0x5f,
		0x59, 0x4f, 0x4c, 0x4c, 0x4f, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x61, 0x69, 0x20, 0x59,
		0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x4b, 0x69, 0x6e, 0x67, 0x64,
		0x6f, 0x6d, 0x47, 0xc3, 0xa9, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x20, 0x31, 0x32, 0x36, 0x4d, 0x6f,
		0x62, 0x69, 0x6f, 0x6c, 0x61, 0x4d, 0x53, 0x35, 0x30, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73,
		0x20, 0x49, 0x49, 0x50, 0x6f, 0x6c, 0x79, 0x73, 0x20, 0x4d, 0x53, 0x34, 0x35, 0x4c, 0x31, 0x4d,
		0x53, 0x35, 0x35, 0x58, 0x36, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49,
		0x49, 0x4d, 0x53, 0x35, 0x35, 0x58, 0x35, 0x41, 0x74, 0x6d, 0x6f, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x53, 0x35, 0x35, 0x4c, 0x31, 0x47, 0x41, 0x49, 0x41, 0x4d, 0x53, 0x35, 0x30, 0x4c, 0x31,
		0x49, 0x6e, 0x74, 0x69, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x55, 0x41, 0x54,
		0x54, 0x52, 0x4f, 0x4d, 0x42, 0x2d, 0x32, 0x39, 0x30, 0x30, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74,
		0x72, 0x6f, 0x4d, 0x53, 0x34, 0x33, 0x41, 0x33, 0x30, 0x30, 0x30, 0x4d, 0x53, 0x34, 0x35, 0x41,
		0x34, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x34, 0x35, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34,
		0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x34, 0x35,
		0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63,
		0x65, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x35, 0x30, 0x30, 0x30, 0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30,
		0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x38, 0x4d, 0x53, 0x35, 0x30, 0x41, 0x36, 0x30, 0x30, 0x30,
		0x65, 0x4f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x36, 0x4d, 0x53,
		0x35, 0x30, 0x42, 0x31, 0x31, 0x30, 0x30, 0x30, 0x57, 0x61, 0x76, 0x65, 0x35, 0x57, 0x61, 0x76,
		0x65, 0x20, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x73, 0x74, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x6f, 0x4d,
		0x6f, 0x62, 0x76, 0x6f, 0x69, 0x54, 0x69, 0x63, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x24, 0x31,
		0x4d, 0x6f, 0x64, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x45, 0x50, 0x32, 0x51,
		0x34, 0x32, 0x31, 0x47, 0x45, 0x61, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x64,
		0x65, 0x63, 0x6f, 0x6d, 0x58, 0x69, 0x6e, 0x6f, 0x20, 0x5a, 0x24, 0x31, 0x20, 0x58, 0x24, 0x32,
		0x45, 0x43, 0x48, 0x4f, 0x20, 0x4c, 0x4f, 0x4c, 0x4c, 0x59, 0x45, 0x63, 0x68, 0x6f, 0x20, 0x4c,
		0x6f, 0x6c, 0x6c, 0x79, 0x46, 0x72, 0x65, 0x65, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x46, 0x72,
		0x65, 0x65, 0x57, 0x61, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x66, 0x75,
		0x74, 0x4d, 0x6f, 0x6f, 0x6e, 0x64, 0x72, 0x6f, 0x70, 0x4d, 0x49, 0x41, 0x44, 0x30, 0x31, 0x4d,
		0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x73, 0x69, 0x6d, 0x6f, 0x6d, 0x6f, 0x33, 0x73, 0x6d, 0x6f, 0x6d,
		0x6f, 0x33, 0x53, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61,
		0x4d, 0x4f, 0x54, 0x2d, 0x56, 0x33, 0x36, 0x30, 0x56, 0x33, 0x36, 0x30, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x74, 0x61, 0x62, 0x20, 0x67, 0x37, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x47, 0x37, 0x30, 0x58, 0x54, 0x32, 0x32, 0x36, 0x31, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x47, 0x36, 0x32, 0x50, 0x41, 0x47, 0x53, 0x30, 0x30, 0x30, 0x35,
		0x49, 0x4e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x63, 0x72, 0x6f,
		0x53, 0x70, 0x69, 0x63, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d,
		0x4f, 0x54, 0x4f, 0x52, 0x4f, 0x4c, 0x41, 0x20, 0x45, 0x36, 0x53, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x36, 0x53, 0x72, 0x61, 0x7a, 0x72, 0x20, 0x35, 0x30, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x34, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x54, 0x32, 0x33, 0x32, 0x33, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x34, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a,
		0x72, 0x20, 0x35, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x72, 0x61, 0x7a,
		0x72, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x52, 0x61, 0x7a, 0x72, 0x2b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x6d, 0x6f, 0x74, 0x6f,
		0x72, 0x6f, 0x6c, 0x61, 0x20, 0x72, 0x61, 0x7a, 0x72, 0x20, 0x32, 0x30, 0x32, 0x33, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x58, 0x54,
		0x32, 0x32, 0x35, 0x31, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x52, 0x61, 0x7a, 0x72, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x4d, 0x45, 0x46, 0x69, 0x72, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x45, 0x64, 0x67, 0x65,
		0x20, 0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x34, 0x30, 0x20, 0x4e, 0x65, 0x6f,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x33, 0x30, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61,
		0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x6d, 0x6f, 0x74, 0x6f, 0x72,
		0x6f, 0x6c, 0x61, 0x20, 0x65, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x6e, 0x65, 0x6f, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4e, 0x65, 0x6f, 0x58, 0x54, 0x32, 0x32, 0x30, 0x31,
		0x2d, 0x31, 0x45, 0x64, 0x67, 0x65, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x32, 0x30, 0x45, 0x64, 0x67, 0x65, 0x20, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x65,
		0x66, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4d, 0x6f, 0x74, 0x6f, 0x73, 0x6d, 0x61, 0x72, 0x74,
		0x51, 0x75, 0x65, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x72, 0x65, 0x20, 0x58, 0x54, 0x44, 0x65, 0x66,
		0x79, 0x44, 0x65, 0x66, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x44, 0x65, 0x66, 0x79,
		0x20, 0x58, 0x54, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x61, 0x6c, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x75,
		0x73, 0x49, 0x72, 0x6f, 0x6e, 0x52, 0x6f, 0x63, 0x6b, 0x41, 0x74, 0x72, 0x69, 0x78, 0x4d, 0x6f,
		0x74, 0x6f, 0x6c, 0x75, 0x78, 0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x41,
		0x74, 0x72, 0x69, 0x78, 0x20, 0x54, 0x56, 0x41, 0x74, 0x72, 0x69, 0x78, 0x20, 0x48, 0x44, 0x4d,
		0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x4d, 0x69, 0x6c, 0x65,
		0x73, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79,
		0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x54, 0x38, 0x38, 0x32, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x56, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41,
		0x5a, 0x52, 0x20, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x34, 0x50, 0x68, 0x6f, 0x74, 0x6f,
		0x6e, 0x20, 0x51, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x66, 0x79, 0x20, 0x4d, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20,
		0x52, 0x41, 0x5a, 0x52, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44,
		0x31, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x44, 0x33, 0x44, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x48, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67,
		0x35, 0x32, 0x6a, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32, 0x6a, 0x20,
		0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x32, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67,
		0x35, 0x33, 0x79, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x79, 0x20,
		0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x34, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x38, 0x32, 0x20, 0x35, 0x47,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x31, 0x30, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x54,
		0x32, 0x31, 0x32, 0x37, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x31, 0x30, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x30, 0x34, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x30, 0x34, 0x73,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58,
		0x54, 0x32, 0x30, 0x31, 0x35, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x38, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x32, 0x20, 0x28, 0x34, 0x47, 0x2d, 0x4c, 0x54, 0x45, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x45, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x36, 0x20, 0x28, 0x58, 0x54, 0x32, 0x30, 0x30, 0x35,
		0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x43, 0x72, 0x75, 0x69, 0x73,
		0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x53, 0x75, 0x70, 0x72, 0x61, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x35, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x45, 0x24, 0x31, 0x73, 0x58, 0x54, 0x32, 0x30, 0x38, 0x31, 0x2d, 0x31, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x45, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20,
		0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x43, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x32, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x35, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x36, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x33, 0x30, 0x58, 0x54, 0x32, 0x33, 0x36, 0x33, 0x2d, 0x32, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x33, 0x34, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x30, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x31, 0x58, 0x54, 0x32, 0x31, 0x37, 0x31, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x35, 0x31, 0x20, 0x35, 0x47, 0x58, 0x54, 0x32, 0x31, 0x36, 0x39, 0x2d, 0x31, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x37, 0x31, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20,
		0x53, 0x74, 0x79, 0x6c, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x50, 0x75, 0x72, 0x65,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x20, 0x46,
		0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x34, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x5a, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a,
		0x32, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x5a, 0x33, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x4d, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x53, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x53, 0x35, 0x30,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x33, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x58, 0x33, 0x30, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x34, 0x30,
		0x50, 0x33, 0x30, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x50, 0x33, 0x30, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x24, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x54, 0x32,
		0x32, 0x30, 0x31, 0x2d, 0x32, 0x45, 0x64, 0x67, 0x65, 0x20, 0x58, 0x33, 0x30, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x32, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x45, 0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x24, 0x31, 0x20, 0x4e, 0x65, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35,
		0x47, 0x20, 0x55, 0x57, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x45, 0x64, 0x67, 0x65, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x58, 0x54, 0x32, 0x33, 0x30, 0x33, 0x2d, 0x32, 0x45, 0x64,
		0x67, 0x65, 0x20, 0x34, 0x30, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x48,
		0x79, 0x70, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x4f, 0x6e, 0x65, 0x20,
		0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x46,
		0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
		0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6d, 0x61, 0x63, 0x72,
		0x6f, 0x4f, 0x6e, 0x65, 0x20, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f,
		0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x61, 0x63, 0x65,
		0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x20, 0x41, 0x63, 0x65, 0x6d, 0x6f, 0x74,
		0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4f,
		0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x4f, 0x6e, 0x65, 0x20, 0x35, 0x47, 0x20, 0x41,
		0x63, 0x65, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x76,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x75, 0x73, 0x20, 0x28, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74,
		0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x24, 0x31, 0x29, 0x4d,
		0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x20,
		0x28, 0x24, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75,
		0x73, 0x20, 0x35, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x58, 0x54, 0x32, 0x33, 0x31,
		0x35, 0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x20, 0x35, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x58, 0x54, 0x32, 0x31, 0x31, 0x35,
		0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x73, 0x74, 0x79,
		0x6c, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x31, 0x29, 0x58, 0x54, 0x32, 0x32, 0x37, 0x31, 0x2d, 0x35, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x6d, 0x6f,
		0x74, 0x6f, 0x20, 0x67, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67,
		0x20, 0x70, 0x72, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x20, 0x50, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x46, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x20, 0x70, 0x6c,
		0x75, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20, 0x35, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29,
		0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x20,
		0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34, 0x30, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f,
		0x6e, 0x58, 0x54, 0x32, 0x32, 0x33, 0x33, 0x2d, 0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x34,
		0x32, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36, 0x30, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x36,
		0x30, 0x73, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x24, 0x32, 0x6d, 0x6f, 0x74, 0x6f,
		0x20, 0x67, 0x32, 0x34, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47,
		0x32, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x54, 0x32, 0x33, 0x33, 0x33, 0x2d, 0x31,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x32, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31,
		0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x32, 0x35, 0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x20, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24,
		0x31, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x6f, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x32,
		0x44, 0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x4f, 0x70, 0x74, 0x69,
		0x6d, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x20, 0x28, 0x58, 0x54, 0x31, 0x39, 0x35, 0x35, 0x44,
		0x4c, 0x29, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6f,
		0x77, 0x65, 0x72, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x53, 0x75, 0x70, 0x72,
		0x61, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x6f,
		0x74, 0x6f, 0x20, 0x47, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x74, 0x6f, 0x20,
		0x47, 0x24, 0x31, 0x6d, 0x6f, 0x74, 0x6f, 0x20, 0x67, 0x20, 0x67, 0x6f, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x47, 0x20, 0x47, 0x6f, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x4f, 0x6e, 0x65,
		0x20, 0x35, 0x47, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x78, 0x4d, 0x6f, 0x74, 0x6f,
		0x20, 0x24, 0x31, 0x24, 0x32, 0x24, 0x33, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x24, 0x31, 0x24, 0x32,
		0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x69, 0x58, 0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x33, 0x36, 0x30,
		0x4d, 0x6f, 0x74, 0x6f, 0x20, 0x41, 0x43, 0x54, 0x56, 0x58, 0x54, 0x32, 0x30, 0x37, 0x31, 0x2d,
		0x34, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x35, 0x47, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x28, 0x24, 0x31,
		0x29, 0x52, 0x41, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52, 0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x52,
		0x49, 0x5a, 0x52, 0x20, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x52, 0x4f, 0x49,
		0x44, 0x20, 0x24, 0x31, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x6f, 0x6c, 0x61, 0x20, 0x53, 0x6f, 0x6c,
		0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x6f, 0x76, 0x69, 0x63, 0x4d, 0x6f, 0x76, 0x69, 0x74,
		0x65, 0x6c, 0x4d, 0x6f, 0x78, 0x65, 0x65, 0x4d, 0x48, 0x2d, 0x54, 0x36, 0x30, 0x30, 0x30, 0x32,
		0x31, 0x36, 0x30, 0x4d, 0x54, 0x2d, 0x54, 0x38, 0x24, 0x31, 0x4d, 0x70, 0x6d, 0x61, 0x6e, 0x4d,
		0x50, 0x31, 0x30, 0x30, 0x69, 0x20, 0x4f, 0x43, 0x54, 0x41, 0x4d, 0x50, 0x51, 0x43, 0x47, 0x31,
		0x30, 0x20, 0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x4f, 0x53, 0x4d, 0x75, 0x6c, 0x74,
		0x69, 0x6c, 0x61, 0x73, 0x65, 0x72, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x32, 0x46, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x32, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32,
		0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x20, 0x53, 0x45, 0x47, 0x45, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x24, 0x31, 0x20, 0x35, 0x47, 0x5a, 0x41, 0x50, 0x50, 0x5a, 0x41, 0x50, 0x50, 0x20, 0x49,
		0x49, 0x4d, 0x53, 0x36, 0x30, 0x46, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x53, 0x34, 0x35, 0x53,
		0x5f, 0x41, 0x36, 0x5f, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20,
		0x41, 0x36, 0x20, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x5f, 0x41,
		0x36, 0x5f, 0x54, 0x65, 0x65, 0x6e, 0x4d, 0x53, 0x34, 0x35, 0x53, 0x20, 0x41, 0x36, 0x20, 0x54,
		0x65, 0x65, 0x6e, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x53,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x37, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x24, 0x31,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x37, 0x53, 0x51, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x4d, 0x37, 0x20, 0x33, 0x47, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x4c, 0x24, 0x31, 0x2d, 0x4d, 0x37,
		0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x37, 0x73, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4d, 0x4c, 0x30, 0x31, 0x2d, 0x4d, 0x37, 0x20, 0x53, 0x44, 0x4d, 0x31, 0x30,
		0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x39, 0x20, 0x33, 0x47, 0x4d, 0x37, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x31, 0x30, 0x58, 0x38, 0x20, 0x34, 0x47, 0x4d, 0x24, 0x31, 0x20, 0x33, 0x47, 0x4b,
		0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x77, 0x61, 0x6c, 0x69, 0x6d,
		0x75, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x79, 0x47, 0x69, 0x63, 0x61, 0x48, 0x44, 0x52, 0x20, 0x24,
		0x31, 0x20, 0x42, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x45,
		0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x74, 0x76, 0x20, 0x62, 0x6f, 0x78, 0x51, 0x75, 0x61, 0x64, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f,
		0x78, 0x41, 0x54, 0x56, 0x24, 0x31, 0x4d, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x79,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x50, 0x48, 0x29, 0x6d, 0x79, 0x54, 0x24, 0x31, 0x20,
		0x44, 0x54, 0x56, 0x6d, 0x79, 0x41, 0x24, 0x31, 0x20, 0x44, 0x54, 0x56, 0x41, 0x38, 0x39, 0x38,
		0x20, 0x44, 0x55, 0x4f, 0x41, 0x38, 0x39, 0x38, 0x20, 0x44, 0x75, 0x6f, 0x4d, 0x79, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x4d, 0x59, 0x32, 0x37, 0x6d, 0x79, 0x32, 0x37, 0x4d, 0x59, 0x38, 0x30, 0x37,
		0x6d, 0x79, 0x58, 0x31, 0x6d, 0x79, 0x58, 0x49, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x79,
		0x58, 0x49, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x58, 0x49, 0x24, 0x31, 0x6d, 0x79, 0x24,
		0x31, 0x6d, 0x79, 0x57, 0x58, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x6e,
		0x20, 0x31, 0x42, 0x72, 0x6f, 0x77, 0x6e, 0x20, 0x32, 0x4d, 0x79, 0x50, 0x61, 0x64, 0x20, 0x24,
		0x31, 0x4d, 0x79, 0x54, 0x61, 0x62, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x57, 0x69, 0x67, 0x6f, 0x4d, 0x79, 0x57, 0x69,
		0x67, 0x6f, 0x20, 0x43, 0x69, 0x74, 0x79, 0x33, 0x43, 0x69, 0x74, 0x79, 0x20, 0x33, 0x45, 0x78,
		0x63, 0x69, 0x74, 0x65, 0x20, 0x47, 0x49, 0x49, 0x49, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20,
		0x47, 0x33, 0x4d, 0x79, 0x67, 0x50, 0x61, 0x64, 0x4d, 0x79, 0x6d, 0x61, 0x67, 0x61, 0x4d, 0x79,
		0x72, 0x69, 0x61, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x46, 0x69, 0x76,
		0x65, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x34, 0x47, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61, 0x5f, 0x57, 0x69, 0x64,
		0x65, 0x5f, 0x34, 0x47, 0x57, 0x69, 0x64, 0x65, 0x20, 0x34, 0x47, 0x4d, 0x79, 0x72, 0x69, 0x61,
		0x5f, 0x57, 0x69, 0x64, 0x65, 0x5f, 0x32, 0x57, 0x69, 0x64, 0x65, 0x20, 0x32, 0x4d, 0x79, 0x72,
		0x6f, 0x73, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4d, 0x49, 0x44, 0x2d, 0x24, 0x31, 0x4e,
		0x2d, 0x6f, 0x6e, 0x65, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x50, 0x61,
		0x64, 0x20, 0x41, 0x69, 0x72, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x70, 0x61,
		0x64, 0x53, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x53, 0x4e, 0x70, 0x61, 0x64, 0x51, 0x4e, 0x50, 0x61,
		0x64, 0x20, 0x51, 0x4e, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4e, 0x41, 0x53, 0x43, 0x4f, 0x54,
		0x41, 0x4e, 0x47, 0x4f, 0x20, 0x37, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x20, 0x37, 0x53, 0x4e, 0x41,
		0x50, 0x5f, 0x50, 0x52, 0x4f, 0x53, 0x6e, 0x61, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x43,
		0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x20, 0x41, 0x6d, 0x61, 0x64, 0x61, 0x6e, 0x61, 0x4d, 0x65,
		0x64, 0x69, 0x61, 0x73, 0x20, 0x55, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x45, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31,
		0x30, 0x20, 0x46, 0x48, 0x44, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20, 0x33, 0x29, 0x4c, 0x41, 0x56,
		0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x32, 0x20, 0x51, 0x48, 0x44, 0x4c, 0x41,
		0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x31, 0x31, 0x20, 0x24, 0x31, 0x4c, 0x41,
		0x56, 0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x37, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56,
		0x49, 0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x54, 0x38, 0x20, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49,
		0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x54, 0x45, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49,
		0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x54, 0x53, 0x24, 0x31, 0x4c, 0x41, 0x56, 0x49,
		0x45, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4e, 0x45, 0x4b, 0x4f, 0x4c, 0x54, 0x2d, 0x24,
		0x31, 0x4e, 0x45, 0x54, 0x57, 0x49, 0x54, 0x4e, 0x45, 0x56, 0x49, 0x52, 0x4e, 0x45, 0x58, 0x42,
		0x4f, 0x58, 0x4d, 0x58, 0x51, 0x2d, 0x50, 0x72, 0x6f, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f, 0x58,
		0x4d, 0x58, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x58, 0x51, 0x2d, 0x4e, 0x45, 0x58, 0x42, 0x4f,
		0x58, 0x4d, 0x58, 0x51, 0x4e, 0x45, 0x58, 0x4f, 0x4e, 0x4e, 0x45, 0x58, 0x54, 0x4e, 0x47, 0x20,
		0x4f, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4e, 0x47, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x35, 0x50,
		0x6c, 0x75, 0x73, 0x33, 0x32, 0x47, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x50, 0x24, 0x31,
		0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x44, 0x79, 0x6e,
		0x61, 0x6d, 0x69, 0x63, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x4c, 0x4e, 0x47, 0x70, 0x6f, 0x6e,
		0x4e, 0x49, 0x4e, 0x45, 0x54, 0x45, 0x43, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31,
		0x30, 0x20, 0x47, 0x33, 0x4e, 0x49, 0x4e, 0x45, 0x54, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x4e, 0x4f,
		0x41, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65,
		0x72, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x48, 0x75, 0x6d, 0x6d,
		0x65, 0x72, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x5f, 0x52, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20,
		0x52, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x48, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x20, 0x53, 0x45,
		0x4e, 0x65, 0x78, 0x74, 0x53, 0x45, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x53, 0x45, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x48, 0x33, 0x53, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x48,
		0x33, 0x4c, 0x6f, 0x6f, 0x70, 0x48, 0x34, 0x53, 0x45, 0x4d, 0x47, 0x31, 0x32, 0x48, 0x34, 0x34,
		0x53, 0x45, 0x48, 0x31, 0x30, 0x4c, 0x45, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x34, 0x47, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x53, 0x45, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x53, 0x45, 0x56, 0x69,
		0x76, 0x6f, 0x20, 0x34, 0x47, 0x4e, 0x4f, 0x42, 0x55, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x56, 0x6f, 0x6c, 0x74, 0x20, 0x4e, 0x58, 0x35, 0x4e, 0x4f, 0x47, 0x41, 0x4e, 0x4f, 0x47, 0x41,
		0x50, 0x41, 0x44, 0x20, 0x37, 0x47, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x47, 0x48, 0x44, 0x4e, 0x4f, 0x47, 0x41, 0x50, 0x41, 0x44, 0x20, 0x31,
		0x30, 0x48, 0x44, 0x50, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x43, 0x20, 0x4c, 0x69, 0x76, 0x65,
		0x50, 0x43, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x4f, 0x56, 0x4f, 0x4e, 0x54, 0x54, 0x20,
		0x57, 0x65, 0x73, 0x74, 0x48, 0x69, 0x6b, 0x61, 0x72, 0x69, 0x42, 0x6f, 0x78, 0x2b, 0x20, 0x24,
		0x31, 0x4e, 0x55, 0x55, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x20, 0x38,
		0x53, 0x36, 0x30, 0x30, 0x33, 0x4c, 0x58, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e, 0x35, 0x37,
		0x30, 0x34, 0x4c, 0x53, 0x36, 0x35, 0x31, 0x32, 0x4c, 0x41, 0x31, 0x35, 0x53, 0x36, 0x30, 0x30,
		0x31, 0x4c, 0x53, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x4d, 0x31, 0x39, 0x4e, 0x35, 0x37, 0x30, 0x32,
		0x4c, 0x53, 0x36, 0x35, 0x30, 0x31, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x31, 0x4c, 0x41, 0x35, 0x4c,
		0x4e, 0x35, 0x30, 0x30, 0x32, 0x4c, 0x41, 0x37, 0x4c, 0x53, 0x36, 0x33, 0x30, 0x33, 0x4c, 0x41,
		0x39, 0x4c, 0x4e, 0x35, 0x35, 0x30, 0x32, 0x4c, 0x41, 0x31, 0x30, 0x4c, 0x4e, 0x36, 0x30, 0x30,
		0x31, 0x4c, 0x41, 0x32, 0x33, 0x53, 0x35, 0x37, 0x30, 0x31, 0x4c, 0x4d, 0x34, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x36, 0x37, 0x30, 0x32, 0x58, 0x42, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x59, 0x58, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x59, 0x58, 0x5f, 0x41, 0x31, 0x41,
		0x6c, 0x74, 0x65, 0x72, 0x4e, 0x59, 0x58, 0x5f, 0x42, 0x6c, 0x69, 0x6e, 0x6b, 0x4e, 0x59, 0x58,
		0x5f, 0x45, 0x47, 0x4f, 0x45, 0x67, 0x6f, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x45, 0x4e, 0x49, 0x58,
		0x46, 0x65, 0x6e, 0x69, 0x78, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x49, 0x49, 0x46,
		0x6c, 0x79, 0x20, 0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x4e,
		0x49, 0x46, 0x6c, 0x79, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x59, 0x58, 0x5f, 0x46, 0x4c, 0x59,
		0x4e, 0x59, 0x58, 0x5f, 0x48, 0x49, 0x54, 0x48, 0x69, 0x74, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x41,
		0x4b, 0x4a, 0x61, 0x6b, 0x4e, 0x59, 0x58, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x4a, 0x6f, 0x69, 0x6e,
		0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x5f, 0x49, 0x49, 0x4e, 0x6f, 0x62, 0x61, 0x20,
		0x49, 0x49, 0x4e, 0x59, 0x58, 0x5f, 0x4e, 0x4f, 0x42, 0x41, 0x4e, 0x6f, 0x62, 0x61, 0x4e, 0x59,
		0x58, 0x5f, 0x4f, 0x52, 0x42, 0x49, 0x53, 0x4f, 0x72, 0x62, 0x69, 0x73, 0x52, 0x65, 0x78, 0x4e,
		0x59, 0x58, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x45, 0x53, 0x68, 0x61, 0x64, 0x65, 0x4e, 0x59, 0x58,
		0x5f, 0x53, 0x4b, 0x59, 0x53, 0x6b, 0x79, 0x4e, 0x59, 0x58, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b,
		0x4e, 0x59, 0x58, 0x5f, 0x56, 0x4f, 0x58, 0x4e, 0x59, 0x58, 0x5f, 0x5a, 0x45, 0x55, 0x5a, 0x5f,
		0x48, 0x44, 0x5a, 0x65, 0x75, 0x73, 0x20, 0x48, 0x44, 0x47, 0x4c, 0x41, 0x4d, 0x41, 0x52, 0x47,
		0x4f, 0x4e, 0x6f, 0x72, 0x62, 0x69, 0x73, 0x4e, 0x61, 0x62, 0x69, 0x44, 0x72, 0x65, 0x61, 0x6d,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x42, 0x69, 0x67, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x48, 0x44, 0x20, 0x24, 0x31, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x54, 0x59,
		0x30, 0x37, 0x53, 0x4d, 0x4b, 0x47, 0x42, 0x61, 0x72, 0x62, 0x69, 0x65, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x2e, 0x30, 0x22, 0x4e, 0x42, 0x46, 0x50, 0x30, 0x37, 0x50, 0x4d, 0x4b, 0x47, 0x46,
		0x69, 0x73, 0x68, 0x65, 0x72, 0x20, 0x50, 0x72, 0x69, 0x63, 0x65, 0x20, 0x4c, 0x65, 0x61, 0x72,
		0x6e, 0x69, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x53, 0x4e, 0x42,
		0x30, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x53, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x41, 0x42,
		0x49, 0x32, 0x2d, 0x4e, 0x56, 0x37, 0x41, 0x32, 0x20, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x6e, 0x68,
		0x6f, 0x46, 0x31, 0x30, 0x31, 0x4e, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x41, 0x6d, 0x62, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x6d, 0x61, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f,
		0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x76, 0x52, 0x6f, 0x61, 0x64, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x4e,
		0x65, 0x78, 0x6f, 0x20, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x44, 0x55, 0x4f, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x44, 0x75, 0x6f, 0x4e, 0x45, 0x58, 0x4f, 0x20, 0x45, 0x56, 0x4f, 0x4e, 0x65, 0x78,
		0x6f, 0x20, 0x45, 0x76, 0x6f, 0x4d, 0x4f, 0x56, 0x49, 0x4f, 0x20, 0x32, 0x4d, 0x6f, 0x76, 0x69,
		0x6f, 0x20, 0x32, 0x4e, 0x61, 0x76, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32,
		0x47, 0x6f, 0x4e, 0x50, 0x2d, 0x37, 0x35, 0x32, 0x20, 0x47, 0x6f, 0x4e, 0x61, 0x76, 0x69, 0x74,
		0x65, 0x63, 0x68, 0x4e, 0x61, 0x76, 0x69, 0x74, 0x65, 0x6c, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45,
		0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x45, 0x39, 0x30, 0x30, 0x20, 0x46, 0x75, 0x6c,
		0x6c, 0x20, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x6f, 0x6e, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x4d, 0x35,
		0x30, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x7a, 0x75, 0x20, 0x24, 0x31, 0x53, 0x75, 0x70,
		0x72, 0x65, 0x6d, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65,
		0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x75, 0x70, 0x72, 0x65,
		0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72,
		0x65, 0x6d, 0x65, 0x20, 0x46, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20,
		0x43, 0x68, 0x69, 0x65, 0x66, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x75,
		0x72, 0x65, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x75, 0x72,
		0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x34, 0x30, 0x30, 0x20, 0x33, 0x47, 0x20, 0x32, 0x30, 0x31, 0x37, 0x54, 0x34,
		0x30, 0x30, 0x20, 0x33, 0x47, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x50, 0x6c, 0x61, 0x74,
		0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x50,
		0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4f, 0x72, 0x70, 0x68, 0x65, 0x75, 0x73, 0x20, 0x33,
		0x47, 0x50, 0x72, 0x65, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x52, 0x61, 0x70, 0x74,
		0x6f, 0x72, 0x20, 0x33, 0x47, 0x20, 0x38, 0x47, 0x42, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x63, 0x6e, 0x6f, 0x74, 0x4e, 0x65, 0x64, 0x61,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x43, 0x35, 0x4c, 0x59, 0x35,
		0x30, 0x4e, 0x65, 0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e,
		0x65, 0x66, 0x66, 0x6f, 0x73, 0x20, 0x58, 0x32, 0x30, 0x4e, 0x65, 0x6f, 0x6c, 0x69, 0x78, 0x54,
		0x37, 0x4e, 0x65, 0x6f, 0x6d, 0x69, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x49, 0x51, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22,
		0x20, 0x24, 0x31, 0x47, 0x4e, 0x51, 0x54, 0x2d, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x4e, 0x65, 0x6f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x74, 0x4b, 0x54,
		0x31, 0x30, 0x30, 0x37, 0x4e, 0x65, 0x74, 0x42, 0x6f, 0x78, 0x4e, 0x45, 0x54, 0x42, 0x4f, 0x58,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x53, 0x4e, 0x65, 0x74, 0x67, 0x65, 0x61, 0x72, 0x47, 0x54,
		0x56, 0x31, 0x30, 0x30, 0x4e, 0x65, 0x6f, 0x54, 0x56, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4e,
		0x65, 0x74, 0x6d, 0x61, 0x6b, 0x4e, 0x65, 0x74, 0x50, 0x61, 0x64, 0x20, 0x37, 0x4e, 0x65, 0x75,
		0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x49, 0x4d, 0x2d, 0x4e, 0x65, 0x75, 0x54, 0x61, 0x62, 0x4e,
		0x65, 0x77, 0x20, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x20, 0x42, 0x72,
		0x69, 0x64, 0x67, 0x65, 0x4e, 0x65, 0x77, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x67, 0x65, 0x6e, 0x4e,
		0x65, 0x77, 0x6c, 0x61, 0x6e, 0x64, 0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x39, 0x30, 0x4d, 0x54,
		0x39, 0x30, 0x20, 0x4f, 0x72, 0x63, 0x61, 0x4e, 0x4c, 0x53, 0x2d, 0x4d, 0x54, 0x36, 0x35, 0x4d,
		0x54, 0x36, 0x35, 0x20, 0x42, 0x65, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x56, 0x4e, 0x4c, 0x53,
		0x2d, 0x4e, 0x46, 0x54, 0x31, 0x30, 0x4e, 0x46, 0x54, 0x31, 0x30, 0x20, 0x50, 0x69, 0x6c, 0x6f,
		0x74, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x77, 0x6d, 0x61, 0x6e, 0x4e, 0x65, 0x77, 0x73, 0x4d,
		0x79, 0x4e, 0x65, 0x77, 0x73, 0x64, 0x61, 0x79, 0x4e, 0x65, 0x78, 0x61, 0x4e, 0x65, 0x78, 0x69,
		0x61, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x26, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61,
		0x72, 0x32, 0x30, 0x30, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x32, 0x30, 0x30, 0x30, 0x20, 0x48,
		0x44, 0x20, 0x46, 0x54, 0x41, 0x32, 0x30, 0x30, 0x30, 0x2d, 0x48, 0x44, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x32, 0x30, 0x30, 0x30, 0x20, 0x48, 0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x32, 0x30, 0x30,
		0x30, 0x2d, 0x48, 0x44, 0x32, 0x30, 0x30, 0x30, 0x20, 0x48, 0x44, 0x4e, 0x45, 0x58, 0x54, 0x20,
		0x36, 0x34, 0x36, 0x34, 0x32, 0x30, 0x37, 0x31, 0x59, 0x45, 0x2d, 0x32, 0x30, 0x30, 0x30, 0x48,
		0x44, 0x20, 0x43, 0x58, 0x59, 0x45, 0x2d, 0x32, 0x30, 0x30, 0x30, 0x20, 0x55, 0x53, 0x42, 0x4d,
		0x79, 0x42, 0x6f, 0x78, 0x24, 0x31, 0x20, 0x34, 0x4b, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f,
		0x6b, 0x4e, 0x58, 0x30, 0x30, 0x38, 0x48, 0x44, 0x38, 0x47, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75,
		0x6d, 0x20, 0x38, 0x20, 0x48, 0x44, 0x4e, 0x58, 0x41, 0x38, 0x51, 0x43, 0x31, 0x31, 0x36, 0x41,
		0x72, 0x65, 0x73, 0x20, 0x38, 0x4e, 0x58, 0x41, 0x38, 0x4c, 0x54, 0x45, 0x31, 0x31, 0x36, 0x41,
		0x72, 0x65, 0x73, 0x20, 0x38, 0x4c, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x38, 0x31, 0x31, 0x36, 0x4b,
		0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x38, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31, 0x30, 0x31, 0x33,
		0x32, 0x53, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x30, 0x4e, 0x58, 0x31, 0x36, 0x41, 0x31,
		0x31, 0x32, 0x36, 0x34, 0x41, 0x72, 0x65, 0x73, 0x20, 0x41, 0x31, 0x31, 0x4e, 0x45, 0x58, 0x54,
		0x31, 0x30, 0x31, 0x35, 0x42, 0x41, 0x50, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31, 0x30, 0x4e, 0x58,
		0x41, 0x31, 0x30, 0x31, 0x4c, 0x54, 0x45, 0x31, 0x31, 0x36, 0x41, 0x72, 0x65, 0x73, 0x20, 0x31,
		0x30, 0x4c, 0x4e, 0x58, 0x41, 0x31, 0x31, 0x36, 0x51, 0x43, 0x31, 0x36, 0x34, 0x41, 0x72, 0x65,
		0x73, 0x20, 0x31, 0x31, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x38, 0x48, 0x43, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x39, 0x4e, 0x58, 0x30, 0x31, 0x30, 0x48, 0x49, 0x38, 0x47, 0x50, 0x72,
		0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x31, 0x30, 0x20, 0x48, 0x69, 0x4e, 0x58, 0x37, 0x38, 0x35,
		0x51, 0x43, 0x38, 0x47, 0x4e, 0x58, 0x4d, 0x39, 0x30, 0x30, 0x4d, 0x43, 0x38, 0x20, 0x48, 0x44,
		0x4e, 0x58, 0x4d, 0x37, 0x32, 0x36, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x37, 0x4e,
		0x65, 0x78, 0x74, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x62, 0x69, 0x74, 0x4e, 0x6f, 0x61,
		0x69, 0x6e, 0x4e, 0x4f, 0x41, 0x49, 0x4e, 0x4e, 0x6f, 0x62, 0x62, 0x79, 0x4e, 0x6f, 0x62, 0x6c,
		0x65, 0x78, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x36, 0x54, 0x41, 0x2d, 0x31, 0x30, 0x34, 0x31, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x20, 0x38, 0x20, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x38, 0x20,
		0x53, 0x69, 0x72, 0x6f, 0x63, 0x63, 0x6f, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x37, 0x20, 0x70,
		0x6c, 0x75, 0x73, 0x37, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x36, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x35, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x2e, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x32, 0x20, 0x56, 0x20, 0x54, 0x65, 0x6c, 0x6c, 0x61, 0x4e, 0x6f, 0x6b, 0x69,
		0x61, 0x20, 0x38, 0x20, 0x56, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x38, 0x56, 0x20, 0x35, 0x47,
		0x20, 0x55, 0x57, 0x58, 0x2b, 0x43, 0x31, 0x30, 0x30, 0x4e, 0x31, 0x35, 0x31, 0x44, 0x4c, 0x43,
		0x32, 0x30, 0x30, 0x4e, 0x31, 0x35, 0x30, 0x44, 0x4c, 0x4e, 0x31, 0x33, 0x37, 0x34, 0x44, 0x4c,
		0x47, 0x33, 0x30, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x31, 0x35, 0x35, 0x44, 0x4c, 0x4e, 0x31, 0x35,
		0x33, 0x30, 0x44, 0x4c, 0x47, 0x34, 0x30, 0x30, 0x20, 0x35, 0x47, 0x58, 0x32, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x52, 0x58, 0x2d, 0x35, 0x31, 0x20, 0x4e, 0x39, 0x30, 0x30, 0x4e, 0x39, 0x30, 0x30,
		0x41, 0x73, 0x68, 0x61, 0x20, 0x35, 0x30, 0x30, 0x35, 0x31, 0x33, 0x30, 0x20, 0x58, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32, 0x33,
		0x30, 0x4e, 0x75, 0x72, 0x6f, 0x6e, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x32, 0x33, 0x33, 0x35,
		0x32, 0x33, 0x33, 0x4e, 0x6f, 0x6b, 0x69, 0x61, 0x35, 0x38, 0x30, 0x30, 0x64, 0x2d, 0x31, 0x35,
		0x38, 0x30, 0x30, 0x20, 0x58, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4e,
		0x6f, 0x6b, 0x69, 0x61, 0x36, 0x32, 0x31, 0x30, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f,
		0x72, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x61, 0x70, 0x70, 0x68, 0x69,
		0x72, 0x65, 0x20, 0x41, 0x72, 0x74, 0x65, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d,
		0x31, 0x37, 0x32, 0x32, 0x38, 0x30, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x32,
		0x37, 0x36, 0x32, 0x32, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x33, 0x34,
		0x36, 0x35, 0x38, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x48, 0x2d, 0x34, 0x38, 0x33,
		0x31, 0x30, 0x35, 0x4e, 0x4f, 0x4b, 0x49, 0x41, 0x2d, 0x52, 0x4d, 0x2d, 0x31, 0x31, 0x33, 0x32,
		0x30, 0x35, 0x38, 0x30, 0x38, 0x20, 0x50, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x24, 0x31,
		0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x24, 0x31, 0x20, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x24, 0x31, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x24, 0x31, 0x20, 0x56, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x41, 0x73, 0x68, 0x61, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30,
		0x54, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x35, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x35, 0x32, 0x36, 0x52, 0x4d, 0x2d, 0x38, 0x34, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36,
		0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x36, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x36, 0x33, 0x35, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x32, 0x37, 0x4c, 0x75, 0x6d, 0x69, 0x61,
		0x20, 0x36, 0x33, 0x36, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x31, 0x30, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x54, 0x52, 0x4d, 0x2d, 0x38, 0x38, 0x35, 0x4c, 0x75, 0x6d,
		0x69, 0x61, 0x20, 0x37, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x30, 0x4c,
		0x75, 0x6d, 0x69, 0x61, 0x20, 0x37, 0x33, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30,
		0x30, 0x43, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x30, 0x30, 0x4e, 0x6f, 0x6b, 0x69, 0x61,
		0x20, 0x38, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x32, 0x30, 0x52, 0x4d, 0x2d,
		0x39, 0x38, 0x34, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x38, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69,
		0x61, 0x20, 0x39, 0x30, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x30, 0x4c, 0x75,
		0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x32, 0x39,
		0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x4d, 0x2d, 0x31, 0x30, 0x34,
		0x35, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x39, 0x33, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20,
		0x31, 0x30, 0x32, 0x30, 0x4c, 0x75, 0x6d, 0x69, 0x61, 0x20, 0x31, 0x35, 0x32, 0x30, 0x2e, 0x31,
		0x54, 0x24, 0x31, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x4d,
		0x61, 0x65, 0x6d, 0x6f, 0x20, 0x52, 0x58, 0x2d, 0x33, 0x34, 0x4e, 0x38, 0x30, 0x30, 0x4e, 0x6f,
		0x6d, 0x69, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x45, 0x76, 0x6f,
		0x20, 0x4d, 0x33, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x31, 0x69, 0x35, 0x30, 0x36, 0x20, 0x53, 0x68,
		0x69, 0x6e, 0x65, 0x69, 0x35, 0x37, 0x33, 0x30, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
		0x79, 0x4e, 0x6f, 0x74, 0x65, 0x2d, 0x58, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x58, 0x49, 0x72, 0x6f,
		0x6e, 0x2d, 0x58, 0x31, 0x49, 0x72, 0x6f, 0x6e, 0x2d, 0x4d, 0x45, 0x76, 0x6f, 0x20, 0x4d, 0x34,
		0x45, 0x76, 0x6f, 0x20, 0x58, 0x32, 0x45, 0x76, 0x6f, 0x20, 0x58, 0x45, 0x76, 0x6f, 0x20, 0x58,
		0x31, 0x45, 0x76, 0x6f, 0x20, 0x5a, 0x42, 0x65, 0x61, 0x74, 0x20, 0x4d, 0x42, 0x65, 0x61, 0x74,
		0x20, 0x4d, 0x31, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x58, 0x32, 0x53, 0x70, 0x61, 0x63, 0x65,
		0x20, 0x4d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x58, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4d,
		0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x58, 0x31, 0x4a, 0x75, 0x6d, 0x70,
		0x43, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x32, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x33, 0x20, 0x33, 0x47, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x32, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x33,
		0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74,
		0x20, 0x33, 0x47, 0x43, 0x6f, 0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x43, 0x6f,
		0x72, 0x73, 0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62,
		0x72, 0x61, 0x20, 0x33, 0x20, 0x33, 0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x32, 0x20, 0x33,
		0x47, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x69, 0x62, 0x72,
		0x61, 0x20, 0x34, 0x20, 0x33, 0x47, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4e, 0x6f, 0x6d, 0x75, 0x54, 0x31, 0x38, 0x53, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x53, 0x33, 0x30, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65, 0x63, 0x4e, 0x6f, 0x6f, 0x6e, 0x74, 0x65,
		0x63, 0x20, 0x4e, 0x6f, 0x72, 0x64, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x4e, 0x6f, 0x72, 0x64, 0x6d,
		0x65, 0x6e, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x54, 0x65, 0x63, 0x68, 0x54, 0x6f, 0x75,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x4e, 0x6f, 0x73, 0x4e, 0x6f,
		0x76, 0x75, 0x20, 0x49, 0x49, 0x49, 0x4e, 0x6f, 0x76, 0x75, 0x20, 0x49, 0x49, 0x4e, 0x6f, 0x76,
		0x75, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x38, 0x30, 0x52, 0x6f, 0x79, 0x61, 0x4e, 0x6f, 0x74, 0x68,
		0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x41, 0x31, 0x34, 0x32, 0x50, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x20, 0x32, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x32, 0x61, 0x4e, 0x6f, 0x75, 0x73, 0x4e, 0x53, 0x35, 0x35, 0x31, 0x31, 0x4e, 0x6f,
		0x76, 0x61, 0x63, 0x6f, 0x6d, 0x53, 0x50, 0x59, 0x42, 0x4f, 0x58, 0x53, 0x31, 0x31, 0x53, 0x70,
		0x79, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x70,
		0x79, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x31, 0x31, 0x4e, 0x6f, 0x76, 0x65, 0x78, 0x4e, 0x6f,
		0x76, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x24, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61,
		0x20, 0x41, 0x24, 0x31, 0x50, 0x72, 0x6f, 0x20, 0x4b, 0x31, 0x30, 0x4e, 0x6f, 0x76, 0x69, 0x53,
		0x65, 0x61, 0x4e, 0x75, 0x41, 0x6e, 0x73, 0x4e, 0x45, 0x4f, 0x20, 0x52, 0x65, 0x6c, 0x6f, 0x61,
		0x64, 0x65, 0x64, 0x4e, 0x75, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x62, 0x69, 0x61,
		0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67,
		0x20, 0x50, 0x61, 0x64, 0x5a, 0x36, 0x32, 0x35, 0x35, 0x43, 0x41, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x37, 0x32, 0x4e, 0x58, 0x37, 0x32, 0x34, 0x4a, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35,
		0x47, 0x38, 0x31, 0x35, 0x30, 0x4e, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x47, 0x5a, 0x32, 0x33, 0x35,
		0x32, 0x4e, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x20, 0x35, 0x47, 0x5a, 0x32, 0x33, 0x35, 0x33, 0x4d,
		0x75, 0x73, 0x69, 0x63, 0x5a, 0x32, 0x34, 0x36, 0x30, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x32,
		0x5a, 0x32, 0x33, 0x35, 0x31, 0x4e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x35, 0x47, 0x4e, 0x58, 0x37, 0x31, 0x31, 0x4a,
		0x5a, 0x35, 0x30, 0x4e, 0x58, 0x37, 0x31, 0x32, 0x4a, 0x5a, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x4e, 0x58, 0x37, 0x31, 0x33, 0x4a, 0x5a, 0x35, 0x30, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x4e, 0x58, 0x37, 0x32, 0x31, 0x4a, 0x5a, 0x36, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e,
		0x58, 0x36, 0x36, 0x37, 0x4a, 0x5a, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30,
		0x31, 0x4a, 0x5a, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x32, 0x4a, 0x5a,
		0x34, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x33, 0x33, 0x4a, 0x5a, 0x37, 0x30,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x58, 0x37, 0x33, 0x36, 0x4a, 0x5a, 0x37, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x72, 0x79, 0x20, 0x4e, 0x69, 0x67,
		0x68, 0x74, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69,
		0x63, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x36,
		0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x4e, 0x58, 0x37, 0x38, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63,
		0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x37, 0x30, 0x39, 0x53, 0x52, 0x65, 0x64,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x37, 0x4e, 0x58, 0x36, 0x36, 0x39, 0x4a, 0x52, 0x65,
		0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x4e, 0x58, 0x36, 0x36, 0x36, 0x4a, 0x52,
		0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x36, 0x52, 0x4e, 0x58, 0x36, 0x31, 0x39,
		0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4d, 0x61, 0x72, 0x73, 0x4e,
		0x58, 0x36, 0x32, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x33,
		0x5a, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x35, 0x53, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e,
		0x58, 0x35, 0x30, 0x33, 0x41, 0x5a, 0x35, 0x53, 0x4e, 0x58, 0x35, 0x30, 0x36, 0x4a, 0x5a, 0x37,
		0x4e, 0x58, 0x35, 0x30, 0x37, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35,
		0x30, 0x35, 0x4a, 0x5a, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58, 0x35, 0x30, 0x38, 0x4a, 0x5a,
		0x39, 0x5a, 0x39, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x58,
		0x35, 0x31, 0x32, 0x4a, 0x5a, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4e,
		0x58, 0x35, 0x33, 0x31, 0x4a, 0x5a, 0x31, 0x31, 0x4e, 0x58, 0x35, 0x32, 0x33, 0x4a, 0x5f, 0x56,
		0x31, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x5a, 0x31, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x36, 0x30, 0x36, 0x4a,
		0x5a, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x31, 0x36, 0x4a, 0x5a, 0x31, 0x38, 0x53, 0x4e, 0x58, 0x36,
		0x31, 0x31, 0x4a, 0x5a, 0x31, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x58, 0x35, 0x35, 0x31,
		0x4a, 0x4e, 0x58, 0x35, 0x36, 0x33, 0x4a, 0x5a, 0x31, 0x37, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4e, 0x58, 0x35, 0x38, 0x39, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x53, 0x4e, 0x58, 0x35, 0x39, 0x31, 0x4a, 0x5a, 0x31, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x58, 0x35, 0x39, 0x35, 0x4a, 0x5a, 0x31, 0x37, 0x53, 0x4e, 0x58, 0x36, 0x31, 0x32, 0x4a,
		0x56, 0x31, 0x38, 0x4e, 0x58, 0x36, 0x32, 0x37, 0x4a, 0x5a, 0x32, 0x30, 0x4e, 0x58, 0x37, 0x32,
		0x35, 0x4a, 0x5a, 0x36, 0x30, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x58, 0x35, 0x31, 0x33, 0x4a,
		0x4d, 0x79, 0x20, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x58, 0x36, 0x30, 0x31, 0x4a, 0x4e,
		0x58, 0x36, 0x30, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4e, 0x58,
		0x36, 0x35, 0x39, 0x4a, 0x52, 0x65, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x35, 0x47,
		0x4e, 0x58, 0x36, 0x35, 0x31, 0x4a, 0x4e, 0x58, 0x35, 0x37, 0x33, 0x4a, 0x4d, 0x32, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x4e, 0x58, 0x39, 0x30, 0x37, 0x4a, 0x4d, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x4e, 0x58, 0x35, 0x34, 0x31, 0x4a, 0x4e, 0x31, 0x4e, 0x58, 0x35, 0x39, 0x37, 0x4a, 0x4e, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x58, 0x35, 0x37, 0x35, 0x4a, 0x4e, 0x32, 0x4e, 0x33, 0x4e,
		0x75, 0x62, 0x69, 0x61, 0x20, 0x38, 0x30, 0x31, 0x31, 0x4e, 0x38, 0x30, 0x4e, 0x75, 0x76, 0x6f,
		0x4e, 0x44, 0x34, 0x35, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x54, 0x65, 0x67, 0x72, 0x61, 0x4e,
		0x6f, 0x74, 0x65, 0x2d, 0x50, 0x31, 0x36, 0x34, 0x30, 0x54, 0x65, 0x67, 0x72, 0x61, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x50, 0x31, 0x36, 0x34, 0x30, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20,
		0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x5f, 0x53, 0x48,
		0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x48, 0x49,
		0x45, 0x4c, 0x44, 0x20, 0x54, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41,
		0x20, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x54, 0x56,
		0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x20, 0x50, 0x6f, 0x72,
		0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x2b, 0x41, 0x69, 0x72, 0x33, 0x36, 0x30, 0x20, 0x48, 0x44,
		0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20, 0x48, 0x44, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x2e, 0x30, 0x33, 0x36, 0x30, 0x20,
		0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x36, 0x30, 0x20, 0x41, 0x6c,
		0x70, 0x68, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x48, 0x44, 0x54, 0x56, 0x46, 0x61,
		0x62, 0x20, 0x47, 0x6f, 0x4f, 0x32, 0x4f, 0x41, 0x53, 0x59, 0x53, 0x4f, 0x49, 0x4e, 0x4f, 0x4d,
		0x4f, 0x4b, 0x53, 0x49, 0x4f, 0x4b, 0x57, 0x55, 0x53, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x49, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4f, 0x4c, 0x54, 0x4f, 0x4f, 0x4d, 0x49, 0x58, 0x58, 0x36, 0x30, 0x30,
		0x20, 0x4e, 0x46, 0x43, 0x4f, 0x4e, 0x4e, 0x32, 0x6b, 0x20, 0x54, 0x56, 0x20, 0x73, 0x74, 0x69,
		0x63, 0x6b, 0x32, 0x4b, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x4f, 0x4e, 0x56,
		0x4f, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x4f,
		0x4e, 0x59, 0x58, 0x20, 0x42, 0x4f, 0x4f, 0x58, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31,
		0x4e, 0x6f, 0x76, 0x61, 0x41, 0x69, 0x72, 0x43, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x43, 0x4d, 0x43, 0x5f, 0x4e, 0x6f, 0x76, 0x61, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65,
		0x41, 0x69, 0x72, 0x32, 0x50, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x69, 0x72, 0x32, 0x4e, 0x6f, 0x76, 0x61,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x32, 0x4e, 0x6f, 0x76, 0x61, 0x33, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x4e, 0x6f, 0x76, 0x61, 0x20, 0x33, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65,
		0x32, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x20, 0x32, 0x20, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x50, 0x6f, 0x6b, 0x65, 0x33, 0x50, 0x6f, 0x6b, 0x65, 0x20, 0x33, 0x4b, 0x41, 0x4e,
		0x54, 0x32, 0x4b, 0x61, 0x6e, 0x74, 0x20, 0x32, 0x4b, 0x6f, 0x6e, 0x20, 0x54, 0x69, 0x6b, 0x69,
		0x20, 0x24, 0x31, 0x4c, 0x6f, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x6f, 0x76, 0x46, 0x61, 0x75, 0x73,
		0x74, 0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d, 0x43, 0x5f,
		0x47, 0x41, 0x4d, 0x41, 0x34, 0x47, 0x61, 0x6d, 0x61, 0x20, 0x34, 0x47, 0x41, 0x4c, 0x49, 0x4c,
		0x45, 0x4f, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x47, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
		0x37, 0x47, 0x6f, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x37, 0x4d, 0x43, 0x5f, 0x43, 0x72,
		0x69, 0x73, 0x74, 0x6f, 0x34, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43, 0x72, 0x69, 0x73, 0x74,
		0x6f, 0x20, 0x34, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x20,
		0x24, 0x31, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x41, 0x69, 0x72, 0x20, 0x24, 0x31, 0x43, 0x54, 0x61,
		0x62, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x43, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x20, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x50, 0x50, 0x4f, 0x41, 0x31, 0x31,
		0x41, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x4a, 0x55, 0x31, 0x31, 0x30, 0x5f, 0x41, 0x31, 0x41,
		0x31, 0x78, 0x20, 0x35, 0x47, 0x50, 0x4a, 0x55, 0x31, 0x31, 0x30, 0x41, 0x31, 0x69, 0x20, 0x35,
		0x47, 0x50, 0x4a, 0x53, 0x31, 0x31, 0x30, 0x41, 0x32, 0x78, 0x20, 0x35, 0x47, 0x41, 0x33, 0x78,
		0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x34, 0x31, 0x41, 0x33, 0x78, 0x50, 0x4a, 0x42,
		0x31, 0x31, 0x30, 0x41, 0x32, 0x20, 0x35, 0x47, 0x50, 0x4b, 0x44, 0x31, 0x31, 0x30, 0x41, 0x33,
		0x20, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x41, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x31, 0x31, 0x78, 0x41, 0x31, 0x32, 0x41, 0x31, 0x35, 0x73,
		0x41, 0x31, 0x36, 0x73, 0x43, 0x50, 0x48, 0x32, 0x34, 0x32, 0x31, 0x41, 0x31, 0x36, 0x65, 0x41,
		0x31, 0x36, 0x6b, 0x43, 0x50, 0x48, 0x32, 0x34, 0x37, 0x37, 0x41, 0x31, 0x37, 0x43, 0x50, 0x48,
		0x32, 0x34, 0x37, 0x31, 0x41, 0x31, 0x37, 0x6b, 0x43, 0x50, 0x48, 0x32, 0x31, 0x38, 0x35, 0x50,
		0x43, 0x48, 0x4d, 0x30, 0x30, 0x43, 0x50, 0x48, 0x31, 0x39, 0x32, 0x33, 0x41, 0x31, 0x6b, 0x43,
		0x50, 0x48, 0x32, 0x30, 0x37, 0x31, 0x41, 0x31, 0x31, 0x6b, 0x43, 0x50, 0x48, 0x31, 0x39, 0x32,
		0x35, 0x41, 0x31, 0x73, 0x41, 0x31, 0x36, 0x43, 0x50, 0x48, 0x32, 0x35, 0x39, 0x31, 0x41, 0x31,
		0x38, 0x41, 0x33, 0x37, 0x66, 0x24, 0x31, 0x41, 0x33, 0x37, 0x66, 0x41, 0x33, 0x38, 0x41, 0x33,
		0x39, 0x41, 0x33, 0x36, 0x41, 0x33, 0x31, 0x41, 0x33, 0x33, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x41, 0x33, 0x32, 0x41, 0x33, 0x35, 0x41,
		0x35, 0x32, 0x41, 0x35, 0x33, 0x41, 0x35, 0x33, 0x73, 0x41, 0x35, 0x33, 0x73, 0x20, 0x35, 0x47,
		0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x41, 0x35, 0x34, 0x41, 0x35, 0x34, 0x73, 0x41, 0x35, 0x35,
		0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x33, 0x32, 0x35, 0x41, 0x35, 0x35, 0x41, 0x36, 0x30,
		0x43, 0x50, 0x48, 0x32, 0x36, 0x38, 0x33, 0x41, 0x36, 0x30, 0x20, 0x35, 0x47, 0x41, 0x35, 0x35,
		0x73, 0x20, 0x35, 0x47, 0x50, 0x46, 0x56, 0x4d, 0x31, 0x30, 0x41, 0x35, 0x36, 0x20, 0x35, 0x47,
		0x41, 0x35, 0x37, 0x41, 0x35, 0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x50, 0x48, 0x4a,
		0x31, 0x31, 0x30, 0x41, 0x35, 0x38, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x35, 0x37, 0x37,
		0x41, 0x35, 0x38, 0x50, 0x46, 0x54, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x37, 0x50, 0x48, 0x41, 0x31,
		0x32, 0x30, 0x41, 0x39, 0x36, 0x41, 0x35, 0x53, 0x41, 0x37, 0x31, 0x41, 0x37, 0x31, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x41, 0x37, 0x34, 0x41, 0x37,
		0x34, 0x20, 0x35, 0x47, 0x41, 0x37, 0x32, 0x6e, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x33,
		0x37, 0x35, 0x41, 0x37, 0x36, 0x41, 0x37, 0x37, 0x41, 0x37, 0x37, 0x20, 0x35, 0x47, 0x41, 0x37,
		0x38, 0x20, 0x35, 0x47, 0x41, 0x37, 0x38, 0x41, 0x37, 0x39, 0x41, 0x37, 0x39, 0x20, 0x35, 0x47,
		0x41, 0x37, 0x37, 0x73, 0x41, 0x37, 0x6e, 0x41, 0x37, 0x78, 0x41, 0x38, 0x33, 0x41, 0x38, 0x33,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29,
		0x41, 0x39, 0x32, 0x41, 0x39, 0x32, 0x73, 0x41, 0x39, 0x33, 0x41, 0x39, 0x33, 0x73, 0x50, 0x46,
		0x55, 0x4d, 0x31, 0x30, 0x41, 0x39, 0x36, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x35, 0x32,
		0x39, 0x41, 0x39, 0x38, 0x20, 0x35, 0x47, 0x41, 0x39, 0x34, 0x41, 0x39, 0x35, 0x43, 0x48, 0x50,
		0x32, 0x33, 0x36, 0x35, 0x41, 0x39, 0x78, 0x41, 0x58, 0x35, 0x41, 0x58, 0x35, 0x73, 0x41, 0x58,
		0x37, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x31, 0x46, 0x32, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46,
		0x32, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x50,
		0x48, 0x32, 0x35, 0x32, 0x37, 0x46, 0x32, 0x33, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36,
		0x30, 0x33, 0x46, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32,
		0x36, 0x34, 0x33, 0x46, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x46, 0x31,
		0x31, 0x46, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x37, 0x46, 0x31, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x46, 0x31, 0x73, 0x46, 0x33, 0x46, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x35,
		0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x37, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x46, 0x39,
		0x46, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x31, 0x39, 0x73, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x35, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x37, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x37, 0x61, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x4e, 0x20, 0x35, 0x47, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e,
		0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x32, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x4e, 0x33, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4e, 0x33,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x43, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x47, 0x75, 0x69, 0x74, 0x61, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x65, 0x6c, 0x6f, 0x64,
		0x79, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x4d, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x57,
		0x61, 0x79, 0x20, 0x53, 0x55, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20,
		0x58, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x20, 0x4c, 0x61, 0x6d, 0x62, 0x6f, 0x72, 0x67, 0x68,
		0x69, 0x6e, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20,
		0x4e, 0x65, 0x6f, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x69,
		0x6e, 0x64, 0x20, 0x58, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58,
		0x35, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x45, 0x4d,
		0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x47, 0x46,
		0x4d, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x36, 0x50, 0x48, 0x5a, 0x31, 0x31, 0x30,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x37, 0x50, 0x48, 0x59, 0x31, 0x31, 0x30, 0x46, 0x69, 0x6e,
		0x64, 0x20, 0x58, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x48, 0x59, 0x31, 0x32, 0x30,
		0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x37, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x53, 0x45,
		0x50, 0x4b, 0x43, 0x31, 0x31, 0x30, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x38, 0x20, 0x50, 0x72,
		0x6f, 0x43, 0x50, 0x48, 0x32, 0x36, 0x35, 0x31, 0x46, 0x69, 0x6e, 0x64, 0x20, 0x58, 0x38, 0x4a,
		0x6f, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x37, 0x78, 0x4b, 0x39, 0x78, 0x4b, 0x31, 0x30,
		0x78, 0x4b, 0x39, 0x73, 0x4b, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41, 0x31, 0x20, 0x35, 0x47, 0x4b,
		0x31, 0x31, 0x78, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x32, 0x20, 0x35, 0x47, 0x4b, 0x31, 0x32, 0x78,
		0x20, 0x35, 0x47, 0x4e, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x4e,
		0x65, 0x6f, 0x20, 0x35, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x73, 0x50,
		0x69, 0x61, 0x6e, 0x6f, 0x52, 0x31, 0x31, 0x52, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52,
		0x31, 0x4b, 0x52, 0x31, 0x78, 0x52, 0x31, 0x31, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x31,
		0x31, 0x73, 0x52, 0x31, 0x35, 0x52, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x35, 0x78,
		0x52, 0x31, 0x37, 0x52, 0x58, 0x31, 0x37, 0x4e, 0x65, 0x6f, 0x52, 0x58, 0x31, 0x37, 0x20, 0x4e,
		0x65, 0x6f, 0x52, 0x31, 0x35, 0x20, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x4d, 0x69, 0x72, 0x72,
		0x6f, 0x72, 0x52, 0x31, 0x35, 0x20, 0x4e, 0x65, 0x6f, 0x52, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f,
		0x52, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x31, 0x4c, 0x52, 0x31, 0x53, 0x52, 0x37, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x52, 0x37, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x73, 0x52,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x46, 0x52,
		0x39, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x39, 0x73, 0x52, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x65, 0x6e, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x31, 0x30, 0x58, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x50, 0x43, 0x43, 0x54, 0x30, 0x30, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x31, 0x30, 0x58, 0x50, 0x48, 0x57, 0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x31, 0x30, 0x43, 0x50, 0x48, 0x32, 0x35, 0x33, 0x31, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31,
		0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x31, 0x31, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x43, 0x50, 0x48, 0x32, 0x36, 0x32,
		0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36,
		0x33, 0x37, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20, 0x46, 0x20, 0x35, 0x47, 0x43, 0x50,
		0x48, 0x32, 0x36, 0x38, 0x37, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20, 0x46, 0x20, 0x34,
		0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x32, 0x39, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x31, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x36, 0x38, 0x39, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x31, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x32, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x32, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x34, 0x47, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x20, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34,
		0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x34, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x35, 0x41, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x35, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x52, 0x65, 0x6e,
		0x6f, 0x35, 0x20, 0x4b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x4b, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x46, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x5a, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x35, 0x52, 0x65, 0x6e, 0x6f, 0x20,
		0x36, 0x20, 0x5a, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x6e, 0x6f,
		0x20, 0x36, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x43, 0x50, 0x48, 0x32, 0x33, 0x34, 0x33, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x37, 0x5a, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x41, 0x52, 0x65, 0x6e,
		0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x46, 0x5a, 0x4d, 0x31, 0x30,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x43, 0x50, 0x48, 0x32, 0x34,
		0x35, 0x37, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x20, 0x5a, 0x50, 0x47, 0x42, 0x4d, 0x31, 0x30,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x38, 0x54, 0x50, 0x48, 0x4d,
		0x31, 0x31, 0x30, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x50, 0x47, 0x57, 0x31, 0x31, 0x30, 0x52,
		0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x50, 0x47, 0x58, 0x31, 0x31, 0x30,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x39,
		0x20, 0x41, 0x4b, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4b, 0x39, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x20, 0x45, 0x56, 0x41, 0x52, 0x65,
		0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32,
		0x52, 0x65, 0x6e, 0x6f, 0x20, 0x4b, 0x33, 0x52, 0x65, 0x6e, 0x6f, 0x20, 0x5a, 0x41, 0x35, 0x39,
		0x73, 0x43, 0x50, 0x48, 0x32, 0x36, 0x31, 0x37, 0x41, 0x35, 0x39, 0x20, 0x35, 0x47, 0x50, 0x61,
		0x64, 0x20, 0x41, 0x69, 0x72, 0x4f, 0x50, 0x44, 0x32, 0x33, 0x30, 0x31, 0x50, 0x61, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x32, 0x50, 0x61, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x61, 0x64, 0x20,
		0x32, 0x4f, 0x50, 0x44, 0x32, 0x31, 0x30, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36,
		0x6d, 0x6d, 0x4f, 0x57, 0x31, 0x39, 0x57, 0x32, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x31,
		0x6d, 0x6d, 0x4f, 0x57, 0x32, 0x30, 0x57, 0x31, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x32, 0x20,
		0x34, 0x36, 0x6d, 0x6d, 0x4e, 0x31, 0x54, 0x4f, 0x53, 0x43, 0x41, 0x4c, 0x4d, 0x4f, 0x44, 0x45,
		0x52, 0x4e, 0x20, 0x38, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x6e, 0x20, 0x38, 0x50, 0x69, 0x6c, 0x6f,
		0x74, 0x20, 0x24, 0x31, 0x43, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x4c, 0x41, 0x54, 0x20,
		0x31, 0x43, 0x46, 0x6c, 0x61, 0x74, 0x20, 0x31, 0x43, 0x53, 0x36, 0x30, 0x50, 0x72, 0x6f, 0x53,
		0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20, 0x24, 0x31, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x20, 0x57, 0x69, 0x46, 0x69, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x20,
		0x38, 0x4f, 0x54, 0x54, 0x4f, 0x4f, 0x55, 0x4a, 0x49, 0x41, 0x32, 0x30, 0x31, 0x38, 0x2d, 0x53,
		0x31, 0x30, 0x4d, 0x41, 0x58, 0x53, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x32, 0x30, 0x53,
		0x32, 0x37, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x32, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4f,
		0x58, 0x20, 0x54, 0x41, 0x42, 0x4f, 0x78, 0x2d, 0x70, 0x30, 0x31, 0x30, 0x2d, 0x32, 0x4f, 0x59,
		0x53, 0x49, 0x4e, 0x4f, 0x61, 0x6c, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20, 0x24, 0x31, 0x4f, 0x61,
		0x6e, 0x67, 0x63, 0x63, 0x4f, 0x62, 0x61, 0x62, 0x6f, 0x78, 0x4f, 0x42, 0x41, 0x53, 0x4d, 0x41,
		0x52, 0x54, 0x5f, 0x33, 0x4f, 0x62, 0x65, 0x72, 0x4f, 0x62, 0x69, 0x53, 0x4a, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x63, 0x6f, 0x6e, 0x50,
		0x79, 0x74, 0x68, 0x6f, 0x6e, 0x46, 0x6f, 0x78, 0x57, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x6e,
		0x65, 0x4c, 0x65, 0x6f, 0x70, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x42, 0x6f, 0x61, 0x50, 0x65, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x4f, 0x63, 0x74, 0x6f, 0x70, 0x75,
		0x73, 0x43, 0x72, 0x61, 0x6e, 0x65, 0x48, 0x6f, 0x72, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x41, 0x6c,
		0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x64, 0x6f, 0x74, 0x70, 0x61, 0x64, 0x44, 0x72,
		0x61, 0x67, 0x6f, 0x6e, 0x20, 0x46, 0x72, 0x75, 0x69, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x20,
		0x56, 0x24, 0x31, 0x50, 0x6f, 0x6d, 0x65, 0x6c, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4f, 0x64,
		0x79, 0x73, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x48, 0x44, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45,
		0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x50, 0x48, 0x4f,
		0x4e, 0x45, 0x54, 0x41, 0x42, 0x33, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x74, 0x61, 0x62, 0x20, 0x33, 0x54, 0x48, 0x41, 0x4e, 0x4f, 0x53, 0x5f, 0x31, 0x30, 0x54,
		0x68, 0x61, 0x6e, 0x6f, 0x73, 0x20, 0x31, 0x30, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x4e, 0x45,
		0x58, 0x54, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c,
		0x69, 0x6f, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x41,
		0x42, 0x37, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x74, 0x61, 0x62, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x45,
		0x58, 0x54, 0x52, 0x45, 0x4d, 0x45, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48,
		0x44, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x58, 0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x31,
		0x30, 0x5f, 0x48, 0x44, 0x58, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x58,
		0x45, 0x4c, 0x49, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x58,
		0x65, 0x6c, 0x69, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x45,
		0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47,
		0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x38, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x6f,
		0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x4f, 0x4e, 0x4e,
		0x45, 0x43, 0x54, 0x37, 0x50, 0x52, 0x4f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44,
		0x5f, 0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x20, 0x48, 0x44,
		0x20, 0x4c, 0x54, 0x45, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x54, 0x31, 0x30, 0x5f, 0x70, 0x72,
		0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x54, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x41,
		0x56, 0x45, 0x4e, 0x5f, 0x58, 0x31, 0x30, 0x5f, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x58, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x4d, 0x41,
		0x56, 0x45, 0x4e, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x37, 0x20, 0x4c, 0x54,
		0x45, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x41, 0x4f,
		0x5f, 0x58, 0x31, 0x30, 0x54, 0x61, 0x6f, 0x20, 0x58, 0x31, 0x30, 0x53, 0x50, 0x41, 0x43, 0x45,
		0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f,
		0x4f, 0x4e, 0x45, 0x5f, 0x31, 0x30, 0x53, 0x45, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4f, 0x6e,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x45,
		0x31, 0x30, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x53, 0x50,
		0x41, 0x43, 0x45, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x33, 0x47, 0x53, 0x70, 0x61, 0x63,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x54, 0x68, 0x6f, 0x72, 0x20,
		0x31, 0x30, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x54, 0x38, 0x50, 0x72, 0x6f, 0x4a, 0x75, 0x6e,
		0x69, 0x6f, 0x72, 0x20, 0x54, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x55, 0x4e, 0x49, 0x4f, 0x52,
		0x5f, 0x38, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x75, 0x6e, 0x69, 0x6f, 0x72, 0x20, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x44, 0x4d, 0x38, 0x31, 0x36, 0x48, 0x43, 0x4e, 0x65, 0x6f, 0x20, 0x58, 0x45,
		0x4f, 0x53, 0x31, 0x30, 0x45, 0x4f, 0x53, 0x20, 0x31, 0x30, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x31,
		0x30, 0x5f, 0x4c, 0x54, 0x45, 0x5f, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x54, 0x45, 0x20, 0x56, 0x32, 0x50, 0x61, 0x63, 0x65, 0x20, 0x31, 0x30, 0x41, 0x45, 0x4f,
		0x4e, 0x41, 0x65, 0x6f, 0x6e, 0x46, 0x41, 0x4c, 0x43, 0x4f, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x50,
		0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x46, 0x55, 0x53, 0x49, 0x4f, 0x4e, 0x46, 0x75, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x37, 0x55, 0x6e, 0x6f, 0x20, 0x58, 0x24, 0x31, 0x41, 0x44, 0x4d, 0x38,
		0x30, 0x30, 0x30, 0x4b, 0x50, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f,
		0x31, 0x30, 0x5f, 0x4c, 0x54, 0x45, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x4c,
		0x54, 0x45, 0x50, 0x59, 0x52, 0x4f, 0x5f, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47,
		0x50, 0x79, 0x72, 0x6f, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f,
		0x56, 0x41, 0x5f, 0x58, 0x37, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x33, 0x47, 0x4e, 0x6f, 0x76,
		0x61, 0x20, 0x58, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4f, 0x44, 0x59, 0x53,
		0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x5f, 0x58, 0x37, 0x4e, 0x6f, 0x76, 0x61, 0x20, 0x58, 0x37, 0x54,
		0x68, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4e, 0x4f,
		0x54, 0x4f, 0x53, 0x70, 0x6c, 0x75, 0x73, 0x33, 0x47, 0x4e, 0x6f, 0x74, 0x6f, 0x73, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x33, 0x47, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x47, 0x31, 0x30, 0x4d,
		0x61, 0x76, 0x65, 0x6e, 0x20, 0x47, 0x31, 0x30, 0x50, 0x45, 0x44, 0x49, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x5f, 0x57, 0x50, 0x65, 0x64, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x57, 0x4e, 0x6f,
		0x74, 0x65, 0x54, 0x61, 0x62, 0x5f, 0x50, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x62,
		0x20, 0x50, 0x72, 0x6f, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x5f, 0x33, 0x47, 0x47, 0x6f, 0x61, 0x6c, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x47, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x57, 0x49, 0x65, 0x6f,
		0x73, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x31, 0x30, 0x49, 0x65, 0x6f, 0x73, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x45, 0x52, 0x4f, 0x4e, 0x4e, 0x65, 0x72, 0x6f, 0x6e,
		0x4e, 0x65, 0x6f, 0x20, 0x36, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4c, 0x41, 0x44, 0x45, 0x5f, 0x58,
		0x35, 0x35, 0x53, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x35, 0x49, 0x65, 0x6f, 0x73, 0x20,
		0x24, 0x31, 0x4e, 0x6f, 0x6f, 0x6e, 0x4e, 0x6f, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x6b,
		0x61, 0x70, 0x69, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x20, 0x31, 0x30, 0x4f, 0x6b, 0x61, 0x70, 0x69,
		0x5f, 0x54, 0x61, 0x62, 0x38, 0x5f, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x38, 0x20, 0x50,
		0x72, 0x6f, 0x4f, 0x6b, 0x61, 0x70, 0x69, 0x61, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
		0x65, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x2b,
		0x4f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x4b, 0x2d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x31, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x31, 0x4f, 0x6c, 0x61, 0x78, 0x4f, 0x63, 0x65, 0x61, 0x6e,
		0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x32, 0x4f, 0x6c, 0x6b, 0x79, 0x61,
		0x4f, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x38, 0x20, 0x54, 0x77, 0x6f, 0x41, 0x4f, 0x6c, 0x79,
		0x6d, 0x70, 0x69, 0x61, 0x54, 0x72, 0x65, 0x6b, 0x4f, 0x6e, 0x64, 0x61, 0x54, 0x39, 0x20, 0x53,
		0x4d, 0x49, 0x44, 0x56, 0x38, 0x32, 0x30, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53,
		0x56, 0x38, 0x39, 0x31, 0x57, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x38, 0x39,
		0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x33, 0x47,
		0x20, 0x41, 0x69, 0x72, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36,
		0x77, 0x2d, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x31, 0x31, 0x36, 0x77, 0x20, 0x33, 0x47,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41, 0x69, 0x72,
		0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x4f, 0x53, 0x56, 0x39, 0x31, 0x39, 0x20, 0x41,
		0x69, 0x72, 0x20, 0x43, 0x48, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x56, 0x39, 0x31,
		0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x38, 0x56, 0x39,
		0x31, 0x39, 0x20, 0x34, 0x47, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x38,
		0x56, 0x39, 0x37, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x34, 0x56, 0x39, 0x31, 0x39, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x34, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x38, 0x56, 0x39, 0x38, 0x39, 0x20, 0x41, 0x69, 0x72, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x38, 0x4f, 0x4e, 0x44, 0x41, 0x20, 0x56, 0x39, 0x38, 0x39, 0x56, 0x39, 0x38, 0x39, 0x20,
		0x43, 0x6f, 0x72, 0x65, 0x20, 0x38, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x31, 0x30, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x34, 0x47, 0x56, 0x38, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x32, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x4f, 0x53, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x32, 0x30, 0x20, 0x53, 0x45, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x53, 0x45,
		0x56, 0x31, 0x30, 0x20, 0x34, 0x47, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x58, 0x2d,
		0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75,
		0x73, 0x69, 0x63, 0x20, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x20, 0x49, 0x49, 0x49, 0x58, 0x2d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x24, 0x31, 0x4f,
		0x6e, 0x65, 0x4c, 0x65, 0x72, 0x6e, 0x4f, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x31, 0x33, 0x31,
		0x33, 0x52, 0x31, 0x32, 0x52, 0x31, 0x32, 0x31, 0x31, 0x52, 0x20, 0x35, 0x47, 0x4f, 0x70, 0x65,
		0x6e, 0x41, 0x63, 0x65, 0x20, 0x33, 0x41, 0x63, 0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x41, 0x63, 0x65, 0x20, 0x33, 0x56, 0x41, 0x63, 0x65, 0x20, 0x32, 0x41, 0x63, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x63, 0x65, 0x20, 0x32, 0x56, 0x41, 0x63, 0x65, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x63, 0x65, 0x20, 0x52, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x20, 0x45, 0x64,
		0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64,
		0x20, 0x32, 0x54, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48,
		0x32, 0x36, 0x31, 0x33, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x34, 0x4e, 0x6f, 0x72,
		0x64, 0x20, 0x34, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64,
		0x20, 0x33, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x30, 0x4e, 0x6f,
		0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x30, 0x20, 0x35, 0x47, 0x43, 0x50, 0x48, 0x32, 0x33, 0x38,
		0x39, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x33, 0x30, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72,
		0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x33, 0x30,
		0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x33, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35,
		0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x32, 0x30, 0x20, 0x53, 0x45, 0x4e, 0x6f, 0x72, 0x64,
		0x20, 0x4e, 0x31, 0x30, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x35, 0x47, 0x4e,
		0x6f, 0x72, 0x64, 0x20, 0x4e, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f, 0x72, 0x64,
		0x20, 0x32, 0x20, 0x35, 0x47, 0x4e, 0x6f, 0x72, 0x64, 0x20, 0x43, 0x45, 0x20, 0x32, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x38, 0x54, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x38, 0x20, 0x35, 0x47, 0x20,
		0x55, 0x57, 0x39, 0x52, 0x54, 0x20, 0x35, 0x47, 0x39, 0x52, 0x31, 0x30, 0x52, 0x31, 0x30, 0x52,
		0x20, 0x35, 0x47, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x37,
		0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x37, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x37, 0x54, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x38, 0x54, 0x2b, 0x20, 0x35, 0x47, 0x33, 0x54, 0x35, 0x54, 0x36,
		0x54, 0x50, 0x61, 0x64, 0x20, 0x31, 0x31, 0x2e, 0x36, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x32, 0x20, 0x31, 0x32, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69,
		0x50, 0x61, 0x64, 0x20, 0x47, 0x6f, 0x20, 0x31, 0x31, 0x2e, 0x33, 0x35, 0x22, 0x4f, 0x6e, 0x69,
		0x64, 0x61, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x4f, 0x6e, 0x69, 0x78, 0x38, 0x22, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x33, 0x47,
		0x4f, 0x6e, 0x6b, 0x79, 0x6f, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f, 0x6f, 0x6b, 0x65, 0x65, 0x4f,
		0x6e, 0x65, 0x4f, 0x6f, 0x72, 0x65, 0x64, 0x6f, 0x6f, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x45, 0x61, 0x73, 0x79, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x32, 0x45,
		0x61, 0x73, 0x79, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x52, 0x75, 0x67, 0x67, 0x65,
		0x64, 0x36, 0x30, 0x51, 0x52, 0x75, 0x67, 0x67, 0x65, 0x64, 0x20, 0x36, 0x30, 0x51, 0x4f, 0x70,
		0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x58, 0x4f, 0x70, 0x65, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
		0x65, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x31,
		0x20, 0x34, 0x47, 0x4f, 0x70, 0x65, 0x6c, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x36, 0x4f, 0x70, 0x65,
		0x6e, 0x62, 0x6f, 0x78, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49, 0x5f, 0x50, 0x52, 0x4f,
		0x5f, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x53, 0x5f, 0x34, 0x4b, 0x5f, 0x43, 0x49, 0x5f, 0x4c,
		0x69, 0x74, 0x65, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x43, 0x49, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x53, 0x20, 0x34,
		0x4b, 0x20, 0x24, 0x31, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x53,
		0x31, 0x5f, 0x48, 0x44, 0x41, 0x53, 0x31, 0x20, 0x48, 0x44, 0x41, 0x53, 0x20, 0x34, 0x4b, 0x4f,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x5f, 0x34, 0x5f, 0x30, 0x53, 0x69,
		0x67, 0x6d, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x42, 0x65, 0x65, 0x74, 0x61, 0x5f, 0x34, 0x5f, 0x30,
		0x42, 0x65, 0x65, 0x74, 0x61, 0x20, 0x34, 0x2e, 0x30, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20,
		0x35, 0x2e, 0x30, 0x4f, 0x70, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x75, 0x73, 0x61, 0x69, 0x20, 0x24,
		0x31, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x6f, 0x6d, 0x61, 0x2d, 0x55, 0x48,
		0x44, 0x55, 0x48, 0x44, 0x35, 0x35, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x43, 0x2f, 0x49,
		0x48, 0x44, 0x39, 0x32, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x6f, 0x78, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x4e, 0x65, 0x76, 0x61, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x6c, 0x61, 0x20, 0x66, 0x75, 0x6e, 0x4e, 0x6f, 0x6c, 0x61,
		0x20, 0x46, 0x75, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x7a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61,
		0x20, 0x5a, 0x65, 0x6e, 0x4e, 0x65, 0x76, 0x61, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x65,
		0x76, 0x61, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x72, 0x61, 0x20, 0x32, 0x53, 0x61,
		0x6e, 0x7a, 0x61, 0x53, 0x65, 0x67, 0x6f, 0x46, 0x75, 0x6e, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31,
		0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x32, 0x4d, 0x6f,
		0x75, 0x76, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x54,
		0x61, 0x62, 0x37, 0x57, 0x49, 0x46, 0x49, 0x4d, 0x6f, 0x75, 0x76, 0x65, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x37, 0x20, 0x57, 0x69, 0x46, 0x69, 0x6f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x54, 0x61,
		0x62, 0x5f, 0x37, 0x5f, 0x34, 0x47, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x34, 0x47, 0x44, 0x69,
		0x76, 0x65, 0x20, 0x24, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x53, 0x50, 0x56, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x50, 0x69,
		0x4f, 0x72, 0x62, 0x69, 0x63, 0x52, 0x36, 0x37, 0x38, 0x45, 0x4c, 0x52, 0x43, 0x35, 0x30, 0x31,
		0x4c, 0x53, 0x6c, 0x69, 0x6d, 0x52, 0x43, 0x35, 0x34, 0x35, 0x4c, 0x4d, 0x61, 0x75, 0x69, 0x52,
		0x43, 0x35, 0x35, 0x35, 0x4c, 0x57, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x43, 0x32, 0x32, 0x30,
		0x30, 0x4c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x20, 0x56, 0x52, 0x43, 0x36, 0x30, 0x38,
		0x4c, 0x52, 0x43, 0x36, 0x30, 0x39, 0x4c, 0x52, 0x38, 0x4c, 0x35, 0x54, 0x54, 0x61, 0x62, 0x38,
		0x20, 0x35, 0x47, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x4f, 0x72, 0x62, 0x73, 0x6d, 0x61, 0x72,
		0x74, 0x4f, 0x72, 0x64, 0x69, 0x73, 0x73, 0x69, 0x6d, 0x6f, 0x43, 0x52, 0x41, 0x4e, 0x45, 0x2d,
		0x45, 0x56, 0x42, 0x4f, 0x75, 0x6b, 0x69, 0x4f, 0x4b, 0x50, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x4f,
		0x75, 0x6b, 0x69, 0x74, 0x65, 0x6c, 0x57, 0x50, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x57, 0x50, 0x24, 0x31, 0x43, 0x33, 0x38, 0x4b, 0x37, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x24,
		0x31, 0x20, 0x4d, 0x69, 0x78, 0x55, 0x38, 0x20, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
		0x20, 0x54, 0x61, 0x70, 0x52, 0x54, 0x37, 0x20, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x35, 0x47,
		0x52, 0x54, 0x37, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x35, 0x47, 0x52, 0x54, 0x37, 0x20,
		0x54, 0x49, 0x54, 0x41, 0x4e, 0x52, 0x54, 0x37, 0x20, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x52, 0x54,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x76, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4f, 0x56, 0x2d, 0x56,
		0x31, 0x30, 0x56, 0x65, 0x72, 0x74, 0x69, 0x73, 0x20, 0x59, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72,
		0x74, 0x69, 0x73, 0x20, 0x35, 0x30, 0x32, 0x31, 0x20, 0x41, 0x69, 0x6d, 0x56, 0x65, 0x72, 0x74,
		0x69, 0x73, 0x20, 0x34, 0x30, 0x30, 0x34, 0x20, 0x59, 0x6f, 0x75, 0x56, 0x65, 0x72, 0x74, 0x69,
		0x73, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x30, 0x33, 0x32,
		0x4c, 0x69, 0x76, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x37, 0x30, 0x33, 0x32, 0x51, 0x75, 0x61,
		0x6c, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x31, 0x30, 0x51, 0x75, 0x61, 0x6c, 0x63, 0x6f,
		0x72, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4f, 0x76, 0x76, 0x69, 0x4a, 0x75, 0x6d,
		0x62, 0x6f, 0x20, 0x58, 0x31, 0x4f, 0x77, 0x77, 0x6f, 0x43, 0x61, 0x72, 0x6e, 0x69, 0x76, 0x61,
		0x6c, 0x20, 0x42, 0x35, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x69, 0x66,
		0x69, 0x63, 0x20, 0x38, 0x30, 0x30, 0x69, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x45, 0x50,
		0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x45, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x56, 0x49,
		0x6e, 0x64, 0x69, 0x61, 0x6e, 0x20, 0x56, 0x50, 0x61, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x24,
		0x31, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x72, 0x63, 0x74,
		0x69, 0x63, 0x20, 0x24, 0x31, 0x41, 0x6e, 0x74, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x20, 0x45,
		0x4c, 0x69, 0x66, 0x65, 0x20, 0x34, 0x47, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
		0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x37, 0x34, 0x4d, 0x61, 0x69, 0x5f, 0x33,
		0x47, 0x54, 0x37, 0x34, 0x4d, 0x41, 0x69, 0x20, 0x33, 0x47, 0x4f, 0x79, 0x79, 0x75, 0x54, 0x31,
		0x31, 0x20, 0x33, 0x47, 0x4f, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x44, 0x50, 0x2d, 0x55, 0x50, 0x4d,
		0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52, 0x52, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x52,
		0x53, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x20, 0x4d, 0x44, 0x2d, 0x30, 0x31, 0x50, 0x50, 0x41,
		0x47, 0x52, 0x41, 0x45, 0x52, 0x50, 0x47, 0x52, 0x33, 0x30, 0x34, 0x32, 0x41, 0x33, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x41, 0x50, 0x59, 0x52, 0x45, 0x50, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x31,
		0x22, 0x50, 0x43, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x54, 0x41,
		0x42, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x43, 0x42, 0x4f, 0x58, 0x41, 0x72, 0x74, 0x2d, 0x50, 0x43, 0x42, 0x2d,
		0x56, 0x31, 0x31, 0x36, 0x41, 0x72, 0x74, 0x42, 0x65, 0x65, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x56,
		0x32, 0x31, 0x36, 0x42, 0x65, 0x65, 0x43, 0x6c, 0x61, 0x70, 0x2d, 0x50, 0x43, 0x42, 0x2d, 0x49,
		0x33, 0x31, 0x36, 0x43, 0x6c, 0x61, 0x70, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x33, 0x43,
		0x75, 0x72, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x43, 0x42, 0x2d, 0x54, 0x31, 0x30, 0x34,
		0x4b, 0x6f, 0x76, 0x61, 0x20, 0x54, 0x37, 0x33, 0x30, 0x4b, 0x6f, 0x76, 0x61, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x5f, 0x50, 0x43, 0x42, 0x5f, 0x54, 0x37, 0x33, 0x35, 0x4b, 0x6f, 0x76, 0x61, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x54, 0x37, 0x33, 0x35, 0x50, 0x43, 0x44, 0x50, 0x4c, 0x35, 0x37,
		0x31, 0x55, 0x53, 0x4a, 0x61, 0x67, 0x75, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49,
		0x50, 0x43, 0x44, 0x20, 0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x61, 0x50, 0x45, 0x41,
		0x51, 0x50, 0x45, 0x54, 0x20, 0x24, 0x31, 0x50, 0x49, 0x4e, 0x45, 0x50, 0x49, 0x52, 0x41, 0x4e,
		0x48, 0x41, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x20, 0x54, 0x61, 0x62, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x50, 0x69, 0x72, 0x61, 0x6e, 0x68, 0x61, 0x38, 0x30,
		0x33, 0x32, 0x38, 0x30, 0x33, 0x32, 0x50, 0x49, 0x58, 0x50, 0x52, 0x4f, 0x4c, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x50, 0x4c, 0x44, 0x54, 0x54, 0x65, 0x6c, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x54, 0x37,
		0x50, 0x4f, 0x43, 0x4f, 0x46, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x46, 0x36, 0x58, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x36, 0x20, 0x35, 0x47, 0x58, 0x36, 0x20, 0x4e, 0x65, 0x6f,
		0x58, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x34, 0x30, 0x39, 0x35, 0x50, 0x43, 0x41, 0x44, 0x47,
		0x46, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x34, 0x20, 0x35, 0x47, 0x32, 0x33, 0x31,
		0x32, 0x38, 0x50, 0x43, 0x33, 0x33, 0x49, 0x4d, 0x36, 0x20, 0x35, 0x47, 0x32, 0x33, 0x30, 0x37,
		0x36, 0x50, 0x43, 0x34, 0x42, 0x49, 0x4d, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x32,
		0x34, 0x30, 0x36, 0x36, 0x50, 0x43, 0x39, 0x35, 0x49, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x20, 0x35, 0x47, 0x4d, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x32, 0x30, 0x31, 0x30, 0x4a, 0x31, 0x39, 0x47, 0x43, 0x4d, 0x33, 0x20, 0x53, 0x45, 0x58, 0x33,
		0x20, 0x4e, 0x46, 0x43, 0x58, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33, 0x20, 0x47, 0x54, 0x58,
		0x35, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x47, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x34, 0x20,
		0x47, 0x54, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x58, 0x34, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x46, 0x33, 0x20, 0x47, 0x54, 0x46, 0x34, 0x20, 0x47, 0x54, 0x46, 0x34,
		0x43, 0x33, 0x43, 0x33, 0x31, 0x43, 0x34, 0x30, 0x43, 0x35, 0x30, 0x32, 0x32, 0x31, 0x32, 0x37,
		0x50, 0x43, 0x39, 0x35, 0x49, 0x43, 0x35, 0x35, 0x43, 0x36, 0x31, 0x43, 0x36, 0x35, 0x43, 0x37,
		0x35, 0x46, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x20, 0x47, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x32, 0x34, 0x30, 0x35, 0x43, 0x50, 0x43, 0x46, 0x42, 0x47, 0x50, 0x61, 0x64, 0x20, 0x31, 0x32,
		0x2e, 0x31, 0x22, 0x50, 0x4f, 0x50, 0x54, 0x45, 0x4c, 0x50, 0x39, 0x30, 0x30, 0x30, 0x20, 0x4d,
		0x61, 0x78, 0x50, 0x50, 0x54, 0x56, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x50, 0x52, 0x49, 0x53, 0x4d,
		0x2b, 0x50, 0x72, 0x69, 0x73, 0x6d, 0x50, 0x6c, 0x75, 0x73, 0x24, 0x31, 0x4b, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x50, 0x52, 0x4f, 0x46, 0x69, 0x4c,
		0x4f, 0x50, 0x55, 0x4c, 0x49, 0x44, 0x50, 0x56, 0x42, 0x6f, 0x78, 0x50, 0x56, 0x42, 0x4f, 0x58,
		0x5f, 0x50, 0x35, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x63,
		0x69, 0x66, 0x69, 0x63, 0x20, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x41, 0x6c,
		0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x6d, 0x61, 0x64, 0x69, 0x6c, 0x6c, 0x6f, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x72, 0x64, 0x20, 0x42, 0x65, 0x6c,
		0x6c, 0x44, 0x41, 0x59, 0x54, 0x4f, 0x4e, 0x41, 0x2d, 0x47, 0x31, 0x32, 0x44, 0x61, 0x79, 0x74,
		0x6f, 0x6e, 0x61, 0x20, 0x47, 0x31, 0x32, 0x4d, 0x4f, 0x4e, 0x5a, 0x41, 0x2d, 0x54, 0x37, 0x4d,
		0x6f, 0x6e, 0x7a, 0x61, 0x20, 0x54, 0x37, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x74, 0x6f,
		0x6e, 0x65, 0x20, 0x24, 0x31, 0x45, 0x61, 0x73, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x54, 0x56,
		0x31, 0x31, 0x48, 0x43, 0x50, 0x61, 0x64, 0x70, 0x72, 0x6f, 0x47, 0x54, 0x34, 0x30, 0x70, 0x72,
		0x6f, 0x6d, 0x61, 0x78, 0x47, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78,
		0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x20, 0x54,
		0x56, 0x50, 0x61, 0x6c, 0x6d, 0x54, 0x72, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x54, 0x75, 0x6e, 0x67,
		0x73, 0x74, 0x65, 0x6e, 0x50, 0x56, 0x47, 0x31, 0x30, 0x30, 0x50, 0x65, 0x70, 0x69, 0x74, 0x6f,
		0x50, 0x61, 0x6e, 0x61, 0x63, 0x6f, 0x6d, 0x54, 0x2d, 0x69, 0x37, 0x30, 0x38, 0x44, 0x50, 0x61,
		0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x50, 0x2d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4b,
		0x65, 0x69, 0x74, 0x61, 0x69, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x24,
		0x31, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x50, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x58, 0x45,
		0x6c, 0x75, 0x67, 0x61, 0x20, 0x49, 0x37, 0x45, 0x6c, 0x75, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4c,
		0x75, 0x6d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4c, 0x75, 0x6d, 0x69, 0x78, 0x20, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x50, 0x2d, 0x30, 0x32, 0x44, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64,
		0x20, 0x24, 0x31, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x61, 0x64, 0x20, 0x46, 0x5a, 0x2d, 0x24,
		0x31, 0x50, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76, 0x6f, 0x20, 0x34, 0x47, 0x50, 0x35, 0x35, 0x20,
		0x4d, 0x61, 0x78, 0x50, 0x24, 0x31, 0x20, 0x4e, 0x58, 0x54, 0x50, 0x39, 0x30, 0x32, 0x69, 0x50,
		0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x47, 0x30, 0x30, 0x67, 0x6c, 0x65, 0x20,
		0x54, 0x56, 0x50, 0x61, 0x6e, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x20, 0x4d, 0x49, 0x4c, 0x20,
		0x44, 0x4c, 0x4e, 0x41, 0x56, 0x69, 0x65, 0x72, 0x61, 0x20, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6c,
		0x75, 0x67, 0x61, 0x20, 0x4c, 0x69, 0x76, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x50, 0x61,
		0x6e, 0x61, 0x76, 0x6f, 0x78, 0x50, 0x61, 0x6e, 0x6f, 0x50, 0x61, 0x6e, 0x6f, 0x64, 0x69, 0x63,
		0x50, 0x61, 0x6e, 0x6f, 0x72, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x6e, 0x74, 0x65, 0x63, 0x68,
		0x41, 0x44, 0x52, 0x39, 0x31, 0x30, 0x4c, 0x53, 0x74, 0x61, 0x72, 0x20, 0x51, 0x49, 0x4d, 0x2d,
		0x41, 0x38, 0x36, 0x30, 0x56, 0x65, 0x67, 0x61, 0x20, 0x4e, 0x6f, 0x20, 0x36, 0x49, 0x4d, 0x2d,
		0x41, 0x38, 0x35, 0x30, 0x56, 0x65, 0x67, 0x61, 0x20, 0x52, 0x33, 0x49, 0x4d, 0x2d, 0x41, 0x38,
		0x37, 0x30, 0x4b, 0x56, 0x65, 0x67, 0x61, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x72,
		0x6f, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x45, 0x56, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x45, 0x56,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x65, 0x6c, 0x69, 0x74, 0x74, 0x50, 0x65, 0x6c, 0x69, 0x74,
		0x74, 0x20, 0x54, 0x31, 0x20, 0x4d, 0x41, 0x58, 0x54, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65,
		0x6c, 0x69, 0x74, 0x74, 0x20, 0x54, 0x31, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x54, 0x31, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x70, 0x65, 0x6e, 0x64, 0x6f, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x58,
		0x31, 0x31, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x35, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x65, 0x6e,
		0x74, 0x61, 0x50, 0x53, 0x36, 0x35, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x53, 0x36,
		0x35, 0x30, 0x57, 0x53, 0x37, 0x30, 0x34, 0x44, 0x58, 0x54, 0x2d, 0x50, 0x61, 0x64, 0x20, 0x57,
		0x53, 0x37, 0x30, 0x34, 0x44, 0x58, 0x50, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x45,
		0x6f, 0x6e, 0x20, 0x50, 0x72, 0x69, 0x78, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x37, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6c, 0x69, 0x6d, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
		0x20, 0x58, 0x35, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x24, 0x31, 0x50, 0x65, 0x72, 0x66,
		0x65, 0x6f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35,
		0x31, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x4f, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f, 0x5f, 0x50, 0x46,
		0x5f, 0x41, 0x34, 0x35, 0x35, 0x32, 0x52, 0x41, 0x54, 0x45, 0x50, 0x65, 0x72, 0x66, 0x65, 0x6f,
		0x5f, 0x50, 0x46, 0x5f, 0x41, 0x34, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x50,
		0x68, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72,
		0x67, 0x79, 0x20, 0x4c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x33, 0x2b, 0x45, 0x6e, 0x65,
		0x72, 0x67, 0x79, 0x20, 0x34, 0x53, 0x43, 0x6c, 0x75, 0x65, 0x20, 0x32, 0x53, 0x43, 0x6c, 0x75,
		0x65, 0x20, 0x24, 0x31, 0x50, 0x68, 0x69, 0x6c, 0x63, 0x6f, 0x48, 0x49, 0x54, 0x20, 0x50, 0x31,
		0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x50, 0x31, 0x30, 0x61, 0x48, 0x69, 0x74, 0x20, 0x24, 0x31,
		0x50, 0x48, 0x36, 0x30, 0x44, 0x31, 0x36, 0x44, 0x53, 0x47, 0x57, 0x4e, 0x34, 0x4b, 0x50, 0x54,
		0x42, 0x37, 0x50, 0x41, 0x50, 0x68, 0x69, 0x6c, 0x69, 0x70, 0x73, 0x58, 0x65, 0x6e, 0x69, 0x75,
		0x6d, 0x20, 0x24, 0x31, 0x24, 0x31, 0x2f, 0x39, 0x36, 0x20, 0x34, 0x4b, 0x20, 0x55, 0x48, 0x44,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48, 0x44, 0x20, 0x28, 0x24, 0x31,
		0x2d, 0x32, 0x30, 0x24, 0x32, 0x29, 0x24, 0x31, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x4d,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x20, 0x28, 0x42, 0x44, 0x50, 0x24, 0x31, 0x29, 0x4e, 0x65, 0x74, 0x54, 0x56,
		0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x55, 0x48, 0x44, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x69, 0x64, 0x20, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x55, 0x48,
		0x44, 0x46, 0x69, 0x73, 0x69, 0x6f, 0x20, 0x24, 0x31, 0x4e, 0x65, 0x6f, 0x56, 0x69, 0x75, 0x20,
		0x44, 0x31, 0x53, 0x43, 0x4e, 0x35, 0x35, 0x30, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x6f,
		0x20, 0x55, 0x35, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x74, 0x75, 0x72,
		0x6e, 0x20, 0x58, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x58, 0x50, 0x69,
		0x50, 0x4f, 0x50, 0x69, 0x70, 0x6f, 0x4d, 0x39, 0x50, 0x72, 0x6f, 0x50, 0x69, 0x63, 0x6f, 0x4e,
		0x65, 0x6f, 0x33, 0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x20, 0x4c, 0x69,
		0x6e, 0x6b, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x52, 0x31, 0x64, 0x76, 0x72, 0x37, 0x30,
		0x30, 0x70, 0x69, 0x44, 0x56, 0x52, 0x37, 0x30, 0x30, 0x50, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x42, 0x44, 0x50, 0x2d, 0x31, 0x36, 0x30, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x20, 0x43,
		0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x61, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x65, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x68,
		0x6f, 0x6e, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x52, 0x69, 0x64, 0x65, 0x20, 0x24, 0x31, 0x47,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x54, 0x68, 0x72, 0x65, 0x65, 0x20, 0x76, 0x24, 0x31, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x54, 0x77, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x46, 0x69, 0x76, 0x65, 0x68,
		0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76,
		0x65, 0x57, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x6c, 0x69, 0x6f, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x20, 0x37, 0x20, 0x33, 0x47, 0x48, 0x69, 0x4d, 0x61, 0x78, 0x20, 0x39, 0x2e,
		0x36, 0x22, 0x42, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4a, 0x6f, 0x6b,
		0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x52, 0x61, 0x7a, 0x65, 0x50, 0x69, 0x78, 0x75, 0x73, 0x5f,
		0x4a, 0x65, 0x74, 0x4a, 0x65, 0x74, 0x70, 0x69, 0x78, 0x75, 0x73, 0x20, 0x68, 0x69, 0x74, 0x20,
		0x32, 0x48, 0x69, 0x74, 0x20, 0x32, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x75, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x50,
		0x6c, 0x61, 0x74, 0x6f, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x4e, 0x6f, 0x77, 0x50, 0x6c,
		0x61, 0x79, 0x20, 0x4e, 0x6f, 0x77, 0x20, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x50,
		0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4d, 0x4f, 0x4d, 0x4f, 0x6d, 0x69, 0x6e, 0x69, 0x53, 0x4d, 0x4f,
		0x4d, 0x4f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x53, 0x6d, 0x6f, 0x6d, 0x6f, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20,
		0x33, 0x47, 0x53, 0x4d, 0x4f, 0x4d, 0x4f, 0x20, 0x24, 0x31, 0x50, 0x6c, 0x75, 0x6d, 0x5a, 0x34,
		0x30, 0x35, 0x47, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x33, 0x5a, 0x34, 0x30, 0x37, 0x41, 0x78, 0x65,
		0x20, 0x34, 0x5a, 0x35, 0x31, 0x36, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x5a, 0x35, 0x31,
		0x38, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x20, 0x32, 0x5a, 0x35, 0x31, 0x39, 0x47, 0x61,
		0x74, 0x6f, 0x72, 0x20, 0x35, 0x5a, 0x38, 0x31, 0x31, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78,
		0x20, 0x31, 0x31, 0x5a, 0x37, 0x30, 0x39, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x37,
		0x5a, 0x37, 0x31, 0x32, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x78, 0x20, 0x31, 0x32, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x6c, 0x75, 0x7a, 0x7a, 0x50, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x41, 0x31, 0x30, 0x53,
		0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20, 0x32, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20,
		0x33, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x22, 0x53, 0x55, 0x52, 0x46, 0x70, 0x61, 0x64, 0x20,
		0x34, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x50, 0x4d, 0x38, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x56, 0x69, 0x65,
		0x77, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d, 0x49, 0x2d, 0x4b, 0x42, 0x2d,
		0x30, 0x31, 0x48, 0x44, 0x4d, 0x49, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20,
		0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x56, 0x2d, 0x48, 0x44, 0x4d,
		0x49, 0x2d, 0x32, 0x30, 0x30, 0x42, 0x54, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x43, 0x20, 0x48,
		0x44, 0x4d, 0x49, 0x20, 0x44, 0x6f, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x4f, 0x42, 0x2d, 0x35, 0x30,
		0x34, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x30,
		0x34, 0x35, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x30, 0x36, 0x4f, 0x4e,
		0x59, 0x58, 0x20, 0x35, 0x30, 0x36, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x4f, 0x4e, 0x59, 0x58, 0x20,
		0x35, 0x30, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d,
		0x50, 0x35, 0x32, 0x37, 0x53, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35, 0x32, 0x37, 0x53, 0x50, 0x4f,
		0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x35, 0x34, 0x37, 0x4f, 0x4e, 0x59, 0x58, 0x20, 0x35,
		0x34, 0x37, 0x20, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50,
		0x52, 0x4f, 0x54, 0x41, 0x42, 0x32, 0x36, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32, 0x36,
		0x20, 0x58, 0x58, 0x4c, 0x20, 0x49, 0x50, 0x53, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x32,
		0x35, 0x58, 0x58, 0x4c, 0x50, 0x4f, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x2d, 0x50, 0x4c, 0x31, 0x30,
		0x31, 0x35, 0x4d, 0x6f, 0x62, 0x69, 0x69, 0x20, 0x31, 0x30, 0x31, 0x35, 0x54, 0x41, 0x42, 0x2d,
		0x50, 0x31, 0x30, 0x32, 0x33, 0x32, 0x2d, 0x33, 0x47, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30,
		0x32, 0x33, 0x32, 0x20, 0x33, 0x47, 0x50, 0x72, 0x6f, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x4d,
		0x6f, 0x62, 0x69, 0x69, 0x20, 0x24, 0x31, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x50, 0x6f, 0x6c, 0x61,
		0x72, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x34, 0x30,
		0x30, 0x35, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x34, 0x50, 0x35, 0x30, 0x30, 0x35,
		0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x43, 0x35, 0x50, 0x34, 0x30, 0x30, 0x36, 0x41, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x34, 0x50, 0x53, 0x50, 0x54, 0x44, 0x32, 0x31, 0x4e, 0x41,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x44, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x34, 0x35,
		0x32, 0x36, 0x41, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x45, 0x50, 0x53, 0x50, 0x43, 0x4c, 0x33,
		0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x43, 0x36, 0x50, 0x35, 0x30, 0x30, 0x36,
		0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x50, 0x35, 0x35, 0x32, 0x36, 0x41, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x53, 0x50, 0x43, 0x4b, 0x32,
		0x30, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x50, 0x53, 0x50, 0x43, 0x4b,
		0x32, 0x31, 0x4e, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4b, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x35, 0x30, 0x32, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x50, 0x53,
		0x50, 0x43, 0x4c, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4c, 0x32, 0x50,
		0x53, 0x50, 0x43, 0x4d, 0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x4d, 0x32,
		0x50, 0x35, 0x30, 0x34, 0x36, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x50, 0x35, 0x73, 0x50,
		0x35, 0x35, 0x32, 0x35, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x51, 0x35, 0x73, 0x50, 0x35,
		0x30, 0x34, 0x37, 0x41, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x50, 0x53, 0x50, 0x43, 0x5a,
		0x32, 0x30, 0x41, 0x30, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x20, 0x5a, 0x32, 0x50, 0x35, 0x30, 0x32,
		0x35, 0x41, 0x4c, 0x35, 0x73, 0x50, 0x72, 0x6f, 0x34, 0x36, 0x31, 0x31, 0x50, 0x52, 0x4f, 0x35,
		0x30, 0x32, 0x33, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x35, 0x50, 0x52, 0x4f, 0x56,
		0x34, 0x30, 0x30, 0x41, 0x67, 0x61, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x56, 0x33, 0x35, 0x30, 0x50,
		0x72, 0x6f, 0x56, 0x33, 0x35, 0x30, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x35, 0x50, 0x72, 0x6f,
		0x24, 0x31, 0x50, 0x53, 0x50, 0x54, 0x33, 0x35, 0x30, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x33,
		0x35, 0x30, 0x20, 0x47, 0x72, 0x69, 0x73, 0x50, 0x53, 0x4e, 0x2d, 0x48, 0x31, 0x31, 0x36, 0x53,
		0x6e, 0x61, 0x70, 0x53, 0x4d, 0x58, 0x34, 0x4b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f, 0x78,
		0x20, 0x53, 0x50, 0x75, 0x72, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x6f, 0x62, 0x69,
		0x6c, 0x69, 0x74, 0x79, 0x33, 0x47, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x50, 0x6f, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x50,
		0x6f, 0x6c, 0x79, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6c, 0x79, 0x74, 0x72, 0x6f, 0x6e, 0x52, 0x32,
		0x35, 0x30, 0x38, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x51, 0x2d, 0x46, 0x69, 0x76, 0x65,
		0x52, 0x32, 0x34, 0x30, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x32, 0x58, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x34, 0x30, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x52, 0x31, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x52, 0x32, 0x52, 0x6f, 0x63, 0x6b,
		0x65, 0x74, 0x20, 0x52, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x31, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x53, 0x32, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x31,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x33, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
		0x54, 0x36, 0x20, 0x53, 0x45, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x36, 0x52, 0x6f,
		0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x37, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x54, 0x34,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x52, 0x6f, 0x63, 0x6b, 0x65,
		0x74, 0x20, 0x4a, 0x65, 0x74, 0x7a, 0x20, 0x35, 0x2e, 0x30, 0x34, 0x47, 0x34, 0x35, 0x30, 0x5a,
		0x61, 0x70, 0x20, 0x35, 0x57, 0x36, 0x35, 0x30, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x37, 0x34, 0x35, 0x32, 0x51, 0x75, 0x61, 0x64, 0x72,
		0x61, 0x20, 0x53, 0x32, 0x57, 0x37, 0x35, 0x35, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20,
		0x56, 0x35, 0x57, 0x38, 0x35, 0x37, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x56, 0x37,
		0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x35, 0x30, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x37, 0x53, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x34, 0x47,
		0x35, 0x30, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x65, 0x6f, 0x57, 0x38, 0x34,
		0x38, 0x30, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x34, 0x20, 0x57, 0x38, 0x34, 0x38,
		0x30, 0x57, 0x37, 0x35, 0x33, 0x31, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x20, 0x56, 0x57, 0x37,
		0x34, 0x33, 0x30, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x57,
		0x37, 0x34, 0x33, 0x30, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x5a, 0x61,
		0x70, 0x20, 0x36, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x46,
		0x6c, 0x61, 0x7a, 0x5a, 0x61, 0x70, 0x20, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x5a, 0x61, 0x70,
		0x20, 0x36, 0x20, 0x50, 0x6f, 0x73, 0x68, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x57, 0x31, 0x31,
		0x30, 0x30, 0x53, 0x51, 0x32, 0x33, 0x35, 0x32, 0x52, 0x32, 0x35, 0x35, 0x42, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x54, 0x38, 0x43, 0x6f, 0x73, 0x6d, 0x69, 0x63, 0x61, 0x20, 0x54, 0x37, 0x38,
		0x30, 0x30, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x50, 0x61, 0x64, 0x50, 0x6f, 0x6d, 0x70,
		0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x50, 0x6f, 0x70, 0x70, 0x6f, 0x78, 0x20, 0x50, 0x33, 0x50,
		0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x50, 0x6f, 0x72, 0x73, 0x63, 0x68, 0x65, 0x20, 0x52, 0x65,
		0x61, 0x72, 0x20, 0x53, 0x65, 0x61, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69,
		0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x50, 0x6f,
		0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x59, 0x50, 0x59, 0x5f, 0x53, 0x34, 0x35, 0x30, 0x59, 0x50,
		0x59, 0x20, 0x53, 0x34, 0x35, 0x30, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69,
		0x73, 0x74, 0x20, 0x34, 0x20, 0x24, 0x31, 0x59, 0x4f, 0x4c, 0x4f, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x34, 0x20, 0x46, 0x69, 0x74, 0x55, 0x50, 0x20, 0x33, 0x32, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x34, 0x47, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x34, 0x54, 0x31, 0x30, 0x38, 0x35, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47,
		0x20, 0x50, 0x52, 0x4f, 0x20, 0x58, 0x4d, 0x31, 0x30, 0x20, 0x34, 0x47, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x58, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x20, 0x42, 0x47, 0x48, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x33, 0x32, 0x47, 0x42,
		0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x54, 0x77, 0x69, 0x73, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x46, 0x69, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32,
		0x20, 0x47, 0x6f, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x58, 0x4c, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x53, 0x45, 0x54, 0x77,
		0x69, 0x73, 0x74, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x49, 0x59, 0x70, 0x79, 0x20,
		0x24, 0x31, 0x54, 0x77, 0x69, 0x73, 0x74, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x41, 0x58, 0x49, 0x20,
		0x32, 0x30, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x32, 0x30, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x6f, 0x31,
		0x38, 0x36, 0x48, 0x53, 0x32, 0x30, 0x38, 0x30, 0x35, 0x33, 0x31, 0x41, 0x58, 0x45, 0x5f, 0x49,
		0x49, 0x41, 0x78, 0x65, 0x20, 0x49, 0x49, 0x41, 0x78, 0x65, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31,
		0x30, 0x35, 0x30, 0x35, 0x33, 0x31, 0x50, 0x35, 0x34, 0x31, 0x31, 0x38, 0x35, 0x46, 0x54, 0x35,
		0x30, 0x35, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x31, 0x31, 0x31, 0x38, 0x36, 0x46, 0x54, 0x31,
		0x30, 0x38, 0x30, 0x32, 0x33, 0x31, 0x50, 0x35, 0x37, 0x31, 0x31, 0x38, 0x36, 0x48, 0x53, 0x31,
		0x30, 0x35, 0x30, 0x32, 0x33, 0x32, 0x50, 0x36, 0x33, 0x30, 0x58, 0x24, 0x31, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x50, 0x72, 0x65,
		0x73, 0x74, 0x69, 0x67, 0x69, 0x6f, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44, 0x55, 0x4f, 0x4d,
		0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x35, 0x30, 0x30, 0x20, 0x44,
		0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x20,
		0x44, 0x75, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31,
		0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20,
		0x53, 0x35, 0x50, 0x53, 0x50, 0x37, 0x35, 0x39, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x56, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x31, 0x44,
		0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x53, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x35, 0x34, 0x37, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x35,
		0x50, 0x53, 0x50, 0x35, 0x35, 0x33, 0x30, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20,
		0x5a, 0x35, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33, 0x33, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x5a, 0x33, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x47, 0x72,
		0x61, 0x63, 0x65, 0x20, 0x50, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f,
		0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x52, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x51, 0x35, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x4d, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x30, 0x31, 0x44, 0x55, 0x4f, 0x47, 0x72,
		0x61, 0x63, 0x65, 0x20, 0x52, 0x37, 0x50, 0x53, 0x50, 0x37, 0x35, 0x37, 0x30, 0x44, 0x55, 0x4f,
		0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x50, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37,
		0x35, 0x37, 0x32, 0x44, 0x55, 0x4f, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x35, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x33, 0x50,
		0x53, 0x50, 0x35, 0x35, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x48, 0x35,
		0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x4d, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x34, 0x39, 0x35,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x56, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x33, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4b, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x44, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x30, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x31, 0x38,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x58, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x35, 0x35, 0x35, 0x33, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x30, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x41, 0x35, 0x50, 0x53, 0x50, 0x35, 0x35, 0x34, 0x35, 0x44, 0x55, 0x4f, 0x4d, 0x75,
		0x7a, 0x65, 0x20, 0x45, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x31, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x45, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x20,
		0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x35, 0x35, 0x32, 0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a,
		0x65, 0x20, 0x47, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x37, 0x35, 0x35, 0x30, 0x44,
		0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x47, 0x37, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x31, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x37, 0x20, 0x4c,
		0x54, 0x45, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x43, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x32,
		0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33,
		0x32, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x46, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34,
		0x37, 0x30, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x33, 0x50, 0x53, 0x50, 0x35,
		0x35, 0x32, 0x34, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x4a, 0x35, 0x50, 0x53, 0x50,
		0x37, 0x35, 0x31, 0x31, 0x44, 0x55, 0x4f, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x42, 0x37, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x31, 0x34, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x55, 0x33, 0x50,
		0x53, 0x50, 0x33, 0x35, 0x31, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x56, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x34, 0x31, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x59,
		0x41, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x30, 0x36, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65,
		0x20, 0x59, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x32, 0x33, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a,
		0x65, 0x20, 0x52, 0x33, 0x50, 0x53, 0x50, 0x33, 0x34, 0x37, 0x31, 0x44, 0x55, 0x4f, 0x57, 0x69,
		0x7a, 0x65, 0x20, 0x51, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x53, 0x50, 0x33, 0x35, 0x31, 0x30,
		0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x47, 0x33, 0x50, 0x53, 0x50, 0x33, 0x35, 0x33,
		0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x56, 0x33, 0x50, 0x53, 0x50, 0x33,
		0x35, 0x32, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x50, 0x58, 0x33, 0x50, 0x53,
		0x50, 0x33, 0x35, 0x32, 0x37, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4e, 0x4b, 0x33,
		0x50, 0x53, 0x50, 0x33, 0x34, 0x36, 0x38, 0x44, 0x55, 0x4f, 0x57, 0x69, 0x7a, 0x65, 0x20, 0x4f,
		0x4b, 0x33, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x20, 0x50, 0x4f, 0x53, 0x53, 0x69, 0x6c, 0x76,
		0x65, 0x72, 0x20, 0x50, 0x4f, 0x53, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x37, 0x37, 0x5f, 0x33, 0x47,
		0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x33, 0x33, 0x37, 0x5f, 0x33,
		0x47, 0x53, 0x65, 0x65, 0x64, 0x20, 0x41, 0x37, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x39,
		0x39, 0x37, 0x5f, 0x57, 0x5f, 0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x50,
		0x4d, 0x54, 0x33, 0x31, 0x30, 0x33, 0x5f, 0x57, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x4d, 0x54, 0x33, 0x31, 0x30, 0x34, 0x5f, 0x57, 0x69, 0x5f,
		0x44, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x55, 0x70, 0x50, 0x4d, 0x54,
		0x34, 0x35, 0x31, 0x31, 0x5f, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x4b, 0x69, 0x64, 0x73,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x30, 0x38, 0x4e, 0x6f, 0x64, 0x65, 0x20,
		0x41, 0x38, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x37, 0x37, 0x31, 0x52, 0x6f, 0x6f, 0x74,
		0x20, 0x41, 0x31, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x50, 0x37, 0x30, 0x37, 0x30, 0x43, 0x33,
		0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x34, 0x20, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x65, 0x6f, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x33, 0x47, 0x65, 0x6f, 0x20,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x37, 0x37, 0x37, 0x37, 0x47, 0x65, 0x6f, 0x20, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x32, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x50, 0x4d, 0x54, 0x33, 0x32, 0x38, 0x37, 0x5f,
		0x33, 0x47, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65,
		0x72, 0x20, 0x38, 0x2e, 0x30, 0x20, 0x33, 0x47, 0x50, 0x4d, 0x54, 0x34, 0x32, 0x33, 0x38, 0x5f,
		0x34, 0x47, 0x51, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x64, 0x20,
		0x57, 0x69, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x57, 0x69, 0x7a, 0x65, 0x20,
		0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x4d, 0x75, 0x7a, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x54, 0x56, 0x24, 0x31,
		0x43, 0x49, 0x53, 0x24, 0x32, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
		0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x50, 0x44, 0x2d, 0x33, 0x31,
		0x32, 0x37, 0x4e, 0x43, 0x50, 0x44, 0x2d, 0x33, 0x31, 0x32, 0x37, 0x50, 0x72, 0x69, 0x6d, 0x75,
		0x78, 0x49, 0x4f, 0x58, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20,
		0x36, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x20, 0x24, 0x31, 0x4b, 0x61, 0x70, 0x70, 0x61, 0x42, 0x65,
		0x74, 0x61, 0x20, 0x32, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x20, 0x36, 0x20, 0x34, 0x47, 0x55, 0x50,
		0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x20, 0x34, 0x53, 0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x36, 0x53,
		0x69, 0x72, 0x6f, 0x63, 0x6f, 0x20, 0x59, 0x50, 0x72, 0x69, 0x74, 0x6f, 0x6d, 0x4d, 0x31, 0x30,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4b, 0x37, 0x5f,
		0x41, 0x31, 0x30, 0x31, 0x4b, 0x37, 0x20, 0x41, 0x31, 0x30, 0x31, 0x4d, 0x31, 0x30, 0x5f, 0x41,
		0x69, 0x72, 0x4d, 0x31, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d, 0x31, 0x30, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x20, 0x43, 0x30, 0x31,
		0x50, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x50, 0x37, 0x50, 0x37, 0x50, 0x52, 0x4f, 0x54, 0x72, 0x6f,
		0x6e, 0x50, 0x61, 0x64, 0x20, 0x50, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x78, 0x74,
		0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x50, 0x4c, 0x54, 0x24, 0x31, 0x50, 0x4c,
		0x54, 0x24, 0x31, 0x47, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
		0x6c, 0x69, 0x6e, 0x65, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x4c, 0x4d, 0x35, 0x30,
		0x34, 0x46, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x20, 0x58, 0x50, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
		0x50, 0x72, 0x6f, 0x74, 0x72, 0x75, 0x6c, 0x79, 0x50, 0x75, 0x6e, 0x6f, 0x73, 0x50, 0x75, 0x72,
		0x69, 0x73, 0x6d, 0x4c, 0x69, 0x62, 0x72, 0x65, 0x6d, 0x20, 0x35, 0x51, 0x2d, 0x42, 0x6f, 0x78,
		0x51, 0x2d, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x51, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x51, 0x54, 0x41,
		0x42, 0x31, 0x30, 0x45, 0x57, 0x51, 0x46, 0x58, 0x51, 0x49, 0x4e, 0x51, 0x4c, 0x69, 0x6e, 0x6b,
		0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x20, 0x38, 0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x4a, 0x61, 0x7a, 0x7a, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x52, 0x4f, 0x4a, 0x61, 0x7a,
		0x7a, 0x20, 0x58, 0x20, 0x4a, 0x53, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x4a, 0x61, 0x7a, 0x7a, 0x20,
		0x58, 0x20, 0x4a, 0x53, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x6c, 0x69,
		0x74, 0x65, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e, 0x6f,
		0x69, 0x72, 0x20, 0x24, 0x31, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x41, 0x36, 0x30, 0x30, 0x5a, 0x31,
		0x32, 0x20, 0x50, 0x52, 0x4f, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x5a, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x45, 0x32, 0x20, 0x4e, 0x6f, 0x69, 0x72, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x32, 0x4e, 0x6f, 0x69, 0x72, 0x20, 0x4c, 0x54, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69,
		0x65, 0x77, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50,
		0x52, 0x4f, 0x20, 0x49, 0x49, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49,
		0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50,
		0x52, 0x4f, 0x58, 0x37, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x35, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x4c, 0x55, 0x4e, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x49, 0x54, 0x41, 0x20, 0x53, 0x56, 0x69, 0x74, 0x61, 0x20, 0x53, 0x4e, 0x49,
		0x43, 0x45, 0x20, 0x53, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x53, 0x56, 0x24, 0x31, 0x20, 0x4d, 0x65,
		0x74, 0x61, 0x6c, 0x69, 0x24, 0x31, 0x69, 0x20, 0x28, 0x32, 0x30, 0x24, 0x32, 0x29, 0x69, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x69, 0x36, 0x69, 0x20, 0x32, 0x30, 0x32, 0x30,
		0x69, 0x36, 0x69, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x69, 0x38, 0x69, 0x20, 0x50, 0x52,
		0x4f, 0x69, 0x38, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x38, 0x69, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x51, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20, 0x49, 0x38, 0x69, 0x69, 0x38, 0x69, 0x69, 0x36,
		0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x4f, 0x4e, 0x45, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74,
		0x61, 0x6c, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x48,
		0x44, 0x69, 0x36, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x28, 0x24, 0x31, 0x29, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x48, 0x44, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d,
		0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x43,
		0x69, 0x6e, 0x65, 0x6d, 0x61, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20,
		0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x54,
		0x72, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x73, 0x61,
		0x6e, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x53, 0x61, 0x6e,
		0x74, 0x6f, 0x73, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x52,
		0x4f, 0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x51,
		0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x51, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x4c, 0x69, 0x6e,
		0x71, 0x20, 0x24, 0x31, 0x47, 0x4c, 0x69, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x4c, 0x69, 0x56,
		0x32, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x24, 0x31, 0x20, 0x54, 0x61, 0x62, 0x51, 0x20,
		0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x51, 0x54, 0x45, 0x43, 0x48, 0x51, 0x4d, 0x50,
		0x20, 0x24, 0x31, 0x51, 0x57, 0x41, 0x54, 0x54, 0x51, 0x69, 0x6c, 0x69, 0x76, 0x65, 0x51, 0x37,
		0x53, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47,
		0x51, 0x37, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x37, 0x20, 0x35, 0x2e, 0x35, 0x22,
		0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x32, 0x51, 0x38, 0x20,
		0x35, 0x2e, 0x35, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51,
		0x38, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x38, 0x53, 0x35, 0x49, 0x4e, 0x34,
		0x47, 0x50, 0x51, 0x38, 0x20, 0x35, 0x2e, 0x31, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39, 0x53, 0x35,
		0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x39,
		0x53, 0x35, 0x35, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x34,
		0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x33, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35,
		0x2e, 0x33, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x35, 0x37, 0x49, 0x4e, 0x34, 0x47,
		0x51, 0x31, 0x30, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x20, 0x35,
		0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x31, 0x30, 0x53, 0x36, 0x49, 0x4e, 0x34, 0x47, 0x51,
		0x31, 0x30, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x20, 0x34, 0x47, 0x51, 0x36, 0x54, 0x37, 0x49, 0x4e,
		0x51, 0x37, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x50, 0x51, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x51, 0x38, 0x54, 0x31, 0x30, 0x49, 0x4e, 0x51, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x51,
		0x39, 0x54, 0x37, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x34,
		0x47, 0x51, 0x39, 0x54, 0x39, 0x49, 0x4e, 0x51, 0x39, 0x20, 0x39, 0x2e, 0x30, 0x22, 0x51, 0x39,
		0x54, 0x31, 0x30, 0x49, 0x4e, 0x34, 0x47, 0x51, 0x39, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x34, 0x47, 0x51, 0x54, 0x32, 0x31, 0x31, 0x30, 0x31, 0x51, 0x31, 0x2d, 0x32, 0x31, 0x51, 0x54,
		0x32, 0x31, 0x30, 0x38, 0x42, 0x50, 0x51, 0x34, 0x2d, 0x32, 0x31, 0x39, 0x37, 0x52, 0x2d, 0x32,
		0x39, 0x37, 0x52, 0x32, 0x51, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50,
		0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x20, 0x4b, 0x31, 0x48, 0x79, 0x6e,
		0x65, 0x78, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x79, 0x6e, 0x65, 0x78, 0x20,
		0x24, 0x31, 0x4c, 0x65, 0x76, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x6f, 0x6e, 0x20,
		0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x51, 0x74, 0x65, 0x6b, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x4c, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x6f, 0x20, 0x32, 0x51,
		0x72, 0x61, 0x73, 0x68, 0x4d, 0x55, 0x56, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x55, 0x56, 0x20, 0x55,
		0x70, 0x55, 0x70, 0x51, 0x2d, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x6f, 0x20, 0x24, 0x31, 0x51, 0x2d,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x37, 0x30, 0x4d, 0x51, 0x2d, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x24, 0x31, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x51, 0x75, 0x62, 0x6f, 0x4d, 0x69, 0x6e, 0x65,
		0x72, 0x76, 0x61, 0x58, 0x36, 0x36, 0x38, 0x5f, 0x36, 0x34, 0x47, 0x42, 0x58, 0x36, 0x36, 0x38,
		0x54, 0x31, 0x30, 0x34, 0x51, 0x75, 0x65, 0x63, 0x68, 0x75, 0x61, 0x51, 0x75, 0x65, 0x63, 0x68,
		0x75, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x52, 0x41, 0x50, 0x54, 0x4f, 0x52,
		0x52, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x69, 0x70, 0x75, 0x73, 0x54, 0x69, 0x6e, 0x6b,
		0x75, 0x51, 0x75, 0x6d, 0x6f, 0x56, 0x65, 0x67, 0x61, 0x20, 0x24, 0x31, 0x59, 0x6f, 0x6f, 0x64,
		0x61, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x24, 0x31, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20,
		0x24, 0x31, 0x51, 0x77, 0x61, 0x72, 0x65, 0x54, 0x42, 0x2d, 0x39, 0x37, 0x31, 0x38, 0x51, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x38, 0x30, 0x51, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x54, 0x42, 0x2d, 0x31, 0x33, 0x31, 0x37, 0x51, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x54, 0x42,
		0x2d, 0x31, 0x35, 0x31, 0x37, 0x44, 0x54, 0x61, 0x62, 0x62, 0x79, 0x52, 0x2d, 0x54, 0x56, 0x42,
		0x6f, 0x78, 0x20, 0x24, 0x31, 0x52, 0x33, 0x44, 0x69, 0x46, 0x52, 0x31, 0x35, 0x30, 0x52, 0x41,
		0x5a, 0x5a, 0x52, 0x43, 0x41, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x43, 0x41,
		0x52, 0x45, 0x4e, 0x4f, 0x35, 0x30, 0x31, 0x31, 0x36, 0x31, 0x39, 0x52, 0x43, 0x54, 0x36, 0x35,
		0x31, 0x33, 0x57, 0x38, 0x37, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x31, 0x2e, 0x35, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x2e,
		0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x37, 0x37, 0x33, 0x57, 0x32, 0x32, 0x42, 0x56, 0x6f, 0x79,
		0x61, 0x67, 0x65, 0x72, 0x20, 0x49, 0x49, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x41, 0x74, 0x6c, 0x61,
		0x73, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x32, 0x30, 0x33, 0x57, 0x34,
		0x36, 0x4c, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x20, 0x49, 0x49, 0x52, 0x43, 0x54, 0x36, 0x41, 0x30, 0x36, 0x50, 0x32, 0x32, 0x45, 0x6e, 0x64,
		0x65, 0x61, 0x76, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x48, 0x44, 0x56, 0x69,
		0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43,
		0x54, 0x36, 0x36, 0x30, 0x33, 0x57, 0x34, 0x37, 0x4d, 0x37, 0x56, 0x69, 0x6b, 0x69, 0x6e, 0x67,
		0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x52, 0x43, 0x54, 0x36, 0x36, 0x31, 0x33,
		0x57, 0x32, 0x33, 0x50, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x31,
		0x2e, 0x36, 0x22, 0x52, 0x43, 0x54, 0x24, 0x31, 0x52, 0x43, 0x24, 0x31, 0x52, 0x43, 0x54, 0x52,
		0x45, 0x44, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x67, 0x65, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x52, 0x45,
		0x44, 0x2d, 0x58, 0x52, 0x45, 0x44, 0x5f, 0x58, 0x5f, 0x52, 0x58, 0x32, 0x34, 0x34, 0x31, 0x52,
		0x45, 0x47, 0x41, 0x4c, 0x52, 0x45, 0x4e, 0x53, 0x4f, 0x4e, 0x65, 0x70, 0x20, 0x4e, 0x24, 0x31,
		0x52, 0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20, 0x44, 0x54,
		0x45, 0x4b, 0x36, 0x30, 0x4b, 0x45, 0x59, 0x6f, 0x6e, 0x65, 0x42, 0x42, 0x43, 0x31, 0x30, 0x30,
		0x2d, 0x31, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x45, 0x59, 0x32, 0x20, 0x4c, 0x45, 0x4b,
		0x45, 0x59, 0x32, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x38, 0x4b, 0x45, 0x59, 0x32, 0x20,
		0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x42, 0x46, 0x31, 0x30, 0x30, 0x2d, 0x39, 0x4b, 0x45,
		0x59, 0x32, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x42, 0x47, 0x31, 0x30, 0x30, 0x2d, 0x31,
		0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x50, 0x72, 0x69, 0x76, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72,
		0x79, 0x20, 0x44, 0x54, 0x45, 0x4b, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72,
		0x72, 0x79, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x72, 0x72, 0x79, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x62, 0x6f, 0x6f, 0x6b, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76,
		0x65, 0x20, 0x33, 0x47, 0x20, 0x39, 0x33, 0x30, 0x30, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x24,
		0x31, 0x39, 0x36, 0x33, 0x30, 0x54, 0x6f, 0x75, 0x72, 0x20, 0x39, 0x36, 0x33, 0x30, 0x39, 0x37,
		0x32, 0x30, 0x54, 0x6f, 0x72, 0x63, 0x68, 0x20, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x42,
		0x65, 0x72, 0x72, 0x79, 0x52, 0x4f, 0x41, 0x44, 0x4d, 0x41, 0x58, 0x46, 0x6f, 0x72, 0x74, 0x69,
		0x75, 0x73, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x52, 0x4f, 0x43, 0x48, 0x52, 0x4f, 0x69,
		0x4b, 0x52, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x63, 0x6b,
		0x20, 0x24, 0x31, 0x70, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x32, 0x50, 0x6f, 0x70, 0x70, 0x65, 0x72,
		0x20, 0x32, 0x52, 0x54, 0x4b, 0x45, 0x53, 0x4b, 0x49, 0x4d, 0x4f, 0x21, 0x52, 0x61, 0x6b, 0x75,
		0x74, 0x65, 0x6e, 0x5a, 0x52, 0x30, 0x31, 0x42, 0x69, 0x67, 0x33, 0x39, 0x31, 0x37, 0x4a, 0x52,
		0x42, 0x69, 0x67, 0x20, 0x53, 0x50, 0x37, 0x31, 0x30, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x33, 0x33,
		0x30, 0x43, 0x33, 0x33, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x37, 0x38, 0x30, 0x48, 0x61,
		0x6e, 0x64, 0x20, 0x35, 0x47, 0x52, 0x61, 0x6d, 0x6f, 0x73, 0x4d, 0x4f, 0x53, 0x31, 0x6d, 0x61,
		0x78, 0x4d, 0x4f, 0x53, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x32, 0x32, 0x50, 0x52, 0x4f, 0x20,
		0x33, 0x47, 0x57, 0x32, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x47, 0x52, 0x61, 0x73, 0x70,
		0x62, 0x65, 0x72, 0x72, 0x79, 0x52, 0x61, 0x76, 0x6f, 0x7a, 0x52, 0x61, 0x79, 0x6c, 0x61, 0x6e,
		0x64, 0x7a, 0x58, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x58, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x52, 0x61, 0x7a, 0x65, 0x72, 0x52,
		0x61, 0x7a, 0x65, 0x72, 0x20, 0x45, 0x64, 0x67, 0x65, 0x20, 0x35, 0x47, 0x45, 0x64, 0x67, 0x65,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x79, 0x43,
		0x31, 0x38, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x61,
		0x6c, 0x69, 0x78, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x34,
		0x50, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x37, 0x30,
		0x50, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x38, 0x37, 0x50, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x33, 0x34, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x35, 0x30, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x38,
		0x35, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x47, 0x54, 0x20, 0x36, 0x52, 0x4d,
		0x58, 0x33, 0x38, 0x35, 0x33, 0x47, 0x54, 0x20, 0x36, 0x54, 0x47, 0x54, 0x20, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x35, 0x30, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x36, 0x20, 0x53, 0x45, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x30, 0x47, 0x54, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x52, 0x4d, 0x58, 0x35, 0x30, 0x36, 0x30, 0x47, 0x54, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x37, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79,
		0x52, 0x4d, 0x58, 0x33, 0x36, 0x36, 0x33, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31,
		0x38, 0x32, 0x37, 0x33, 0x69, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x31, 0x39, 0x39,
		0x33, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x31, 0x37, 0x51, 0x32,
		0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x37, 0x33, 0x51, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x4d, 0x58, 0x32, 0x32, 0x30, 0x35, 0x51, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x52, 0x4d, 0x58, 0x33, 0x31, 0x36, 0x31, 0x51, 0x33, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x34, 0x36, 0x32, 0x51, 0x33, 0x74, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x37, 0x32, 0x51, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x38, 0x51, 0x35, 0x52, 0x4d, 0x58, 0x33,
		0x35, 0x37, 0x34, 0x51, 0x35, 0x69, 0x58, 0x37, 0x20, 0x35, 0x47, 0x58, 0x37, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x58, 0x54, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x35, 0x69, 0x52, 0x4d, 0x58,
		0x31, 0x39, 0x32, 0x39, 0x35, 0x73, 0x36, 0x69, 0x52, 0x4d, 0x58, 0x32, 0x30, 0x30, 0x32, 0x36,
		0x53, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x30, 0x33, 0x37, 0x49, 0x52,
		0x4d, 0x58, 0x32, 0x31, 0x37, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x31, 0x35, 0x58, 0x37, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x52, 0x4d, 0x58, 0x33, 0x30, 0x38, 0x31, 0x38, 0x69, 0x52, 0x4d, 0x58, 0x33,
		0x33, 0x38, 0x31, 0x38, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x34, 0x31, 0x38, 0x20, 0x35, 0x47,
		0x39, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x32, 0x39, 0x69, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x33, 0x35, 0x32, 0x31, 0x39, 0x20, 0x35, 0x47, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20,
		0x35, 0x47, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31,
		0x37, 0x31, 0x30, 0x73, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x34, 0x31, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x34, 0x30, 0x31,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x37, 0x31, 0x31, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x37, 0x30, 0x31, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x35, 0x31, 0x31, 0x78, 0x20, 0x35, 0x47,
		0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x30, 0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x34, 0x32, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x34, 0x33, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x31,
		0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x34, 0x30, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x36, 0x37, 0x31,
		0x32, 0x2b, 0x20, 0x35, 0x47, 0x31, 0x32, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x37,
		0x31, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39, 0x38, 0x31, 0x32, 0x78, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x33, 0x39, 0x39, 0x33, 0x31, 0x32, 0x78, 0x52, 0x4d, 0x58, 0x35, 0x30, 0x30, 0x32, 0x31,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x31, 0x33,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x35, 0x30, 0x30, 0x30, 0x31,
		0x33, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x35, 0x31, 0x31, 0x33, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x34, 0x30, 0x31, 0x34, 0x78, 0x20, 0x35, 0x47, 0x52, 0x4d,
		0x58, 0x35, 0x30, 0x35, 0x31, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x35,
		0x53, 0x43, 0x31, 0x31, 0x43, 0x31, 0x32, 0x43, 0x31, 0x35, 0x43, 0x31, 0x35, 0x20, 0x51, 0x75,
		0x61, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x31,
		0x37, 0x43, 0x32, 0x30, 0x43, 0x32, 0x31, 0x43, 0x32, 0x31, 0x59, 0x43, 0x32, 0x35, 0x43, 0x32,
		0x35, 0x73, 0x43, 0x32, 0x35, 0x59, 0x43, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x39, 0x30,
		0x43, 0x33, 0x30, 0x73, 0x43, 0x33, 0x33, 0x43, 0x33, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x31,
		0x30, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x33, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x36, 0x35, 0x43,
		0x35, 0x31, 0x73, 0x43, 0x35, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x33, 0x30, 0x52, 0x4d, 0x58,
		0x33, 0x39, 0x33, 0x39, 0x43, 0x36, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x35, 0x30, 0x43, 0x36,
		0x33, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x31, 0x30, 0x52, 0x4d, 0x58, 0x33, 0x38,
		0x39, 0x30, 0x43, 0x36, 0x37, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x32, 0x43, 0x36, 0x37, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39, 0x37, 0x43, 0x36, 0x35, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x39, 0x34, 0x31, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33, 0x31, 0x43, 0x31, 0x31,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x54, 0x20, 0x35, 0x52, 0x4d, 0x58, 0x33, 0x38,
		0x38, 0x38, 0x47, 0x54, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30,
		0x39, 0x47, 0x54, 0x20, 0x33, 0x47, 0x54, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x54, 0x20,
		0x32, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x35, 0x31, 0x47, 0x54, 0x20, 0x32, 0x20, 0x45, 0x78, 0x70,
		0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x54, 0x20, 0x4e,
		0x65, 0x6f, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x33, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x20, 0x31, 0x35, 0x30, 0x57, 0x47,
		0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x54, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32,
		0x54, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x30, 0x31, 0x47, 0x54, 0x20, 0x4d, 0x61, 0x73, 0x74, 0x65,
		0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x46, 0x6c, 0x61, 0x73, 0x68, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x4d, 0x58, 0x32, 0x31, 0x39, 0x33, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30,
		0x52, 0x4d, 0x58, 0x32, 0x30, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x32, 0x30, 0x41,
		0x52, 0x4d, 0x58, 0x33, 0x31, 0x37, 0x31, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x41,
		0x52, 0x4d, 0x58, 0x32, 0x31, 0x35, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x52,
		0x4d, 0x58, 0x33, 0x32, 0x34, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x33, 0x30, 0x20, 0x35,
		0x47, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x33, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x41, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x38, 0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30,
		0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x32, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x4d, 0x58, 0x33, 0x33, 0x39, 0x36, 0x4e, 0x61, 0x72, 0x7a,
		0x6f, 0x20, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4e, 0x61, 0x72, 0x7a, 0x6f,
		0x20, 0x35, 0x30, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x4d, 0x58, 0x33, 0x32, 0x33,
		0x35, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x30,
		0x36, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x35, 0x30, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x52, 0x4d, 0x58, 0x33, 0x37, 0x35, 0x30, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36, 0x30, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x38, 0x36, 0x39, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x37,
		0x30, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x35, 0x30, 0x30, 0x33, 0x4e, 0x61, 0x72, 0x7a, 0x6f,
		0x20, 0x37, 0x30, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33,
		0x38, 0x36, 0x38, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x36, 0x31, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x4e,
		0x35, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x33, 0x33, 0x4e, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x4e,
		0x36, 0x31, 0x58, 0x35, 0x30, 0x20, 0x35, 0x47, 0x58, 0x35, 0x30, 0x74, 0x20, 0x35, 0x47, 0x58,
		0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47,
		0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x58, 0x33,
		0x20, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x4d, 0x58, 0x32, 0x30,
		0x38, 0x33, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x65, 0x20, 0x58, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x35, 0x47, 0x58, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x51, 0x33, 0x73, 0x56, 0x35,
		0x20, 0x35, 0x47, 0x56, 0x33, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x36, 0x31, 0x38, 0x56,
		0x31, 0x31, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x31, 0x32, 0x35, 0x56, 0x31, 0x31, 0x73,
		0x20, 0x35, 0x47, 0x56, 0x31, 0x33, 0x20, 0x35, 0x47, 0x56, 0x31, 0x35, 0x20, 0x35, 0x47, 0x52,
		0x4d, 0x58, 0x33, 0x35, 0x37, 0x31, 0x56, 0x32, 0x33, 0x52, 0x4d, 0x58, 0x33, 0x35, 0x37, 0x36,
		0x56, 0x32, 0x33, 0x69, 0x52, 0x4d, 0x58, 0x33, 0x34, 0x37, 0x35, 0x56, 0x32, 0x35, 0x52, 0x4d,
		0x58, 0x33, 0x36, 0x31, 0x39, 0x52, 0x4d, 0x58, 0x33, 0x37, 0x38, 0x33, 0x56, 0x35, 0x30, 0x52,
		0x4d, 0x58, 0x33, 0x37, 0x38, 0x31, 0x56, 0x35, 0x30, 0x73, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39,
		0x35, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x39, 0x36, 0x56, 0x36, 0x30, 0x73, 0x52, 0x4d, 0x58, 0x32,
		0x32, 0x30, 0x32, 0x47, 0x54, 0x20, 0x35, 0x47, 0x52, 0x4d, 0x58, 0x33, 0x39, 0x33, 0x38, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x36, 0x30, 0x78, 0x50, 0x61, 0x64, 0x50, 0x61, 0x64, 0x20, 0x58, 0x50,
		0x61, 0x64, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x34, 0x4b, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65,
		0x53, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x50, 0x2d, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78,
		0x52, 0x65, 0x64, 0x62, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x64, 0x66, 0x6f, 0x78, 0x57, 0x69, 0x7a,
		0x70, 0x61, 0x64, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x72, 0x20, 0x56, 0x38, 0x52, 0x65, 0x64,
		0x77, 0x61, 0x79, 0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x31, 0x30, 0x5f, 0x6c, 0x69, 0x74, 0x65,
		0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x65, 0x64, 0x77, 0x61, 0x79, 0x37, 0x5f, 0x70,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x77, 0x61, 0x79, 0x5f, 0x37, 0x52, 0x65, 0x65, 0x64, 0x65, 0x72,
		0x41, 0x38, 0x69, 0x2d, 0x51, 0x32, 0x41, 0x38, 0x69, 0x20, 0x51, 0x32, 0x50, 0x31, 0x31, 0x53,
		0x45, 0x5f, 0x41, 0x72, 0x74, 0x50, 0x31, 0x31, 0x53, 0x45, 0x20, 0x41, 0x72, 0x74, 0x4d, 0x31,
		0x30, 0x53, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x31, 0x30, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d,
		0x37, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x37, 0x20, 0x47,
		0x6f, 0x4d, 0x38, 0x47, 0x6f, 0x32, 0x30, 0x32, 0x30, 0x4d, 0x38, 0x20, 0x47, 0x6f, 0x20, 0x28,
		0x32, 0x30, 0x32, 0x30, 0x29, 0x24, 0x31, 0x20, 0x47, 0x6f, 0x4d, 0x31, 0x30, 0x20, 0x42, 0x6c,
		0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x50, 0x31, 0x32, 0x43, 0x75, 0x72, 0x76, 0x65, 0x50, 0x31, 0x32, 0x20, 0x43, 0x75, 0x72,
		0x76, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50,
		0x4c, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x4d, 0x61, 0x6b, 0x73, 0x50,
		0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x6b, 0x73, 0x50, 0x31, 0x33, 0x5f,
		0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x32, 0x30, 0x32, 0x32, 0x50, 0x31,
		0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x32, 0x29, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75, 0x65, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x31, 0x33, 0x20,
		0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x31, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75,
		0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x24, 0x31, 0x29, 0x50, 0x31, 0x33,
		0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x31, 0x33, 0x5f, 0x42, 0x6c, 0x75,
		0x65, 0x50, 0x31, 0x33, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x20, 0x31, 0x32, 0x38, 0x47, 0x42, 0x53, 0x31,
		0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x4c, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x53, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x20, 0x45, 0x64, 0x67, 0x65, 0x53, 0x31, 0x39, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x53, 0x31, 0x39, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x45,
		0x45, 0x44, 0x45, 0x52, 0x20, 0x54, 0x56, 0x52, 0x65, 0x6c, 0x4e, 0x41, 0x54, 0x52, 0x65, 0x6c,
		0x6e, 0x64, 0x6f, 0x6f, 0x52, 0x65, 0x6d, 0x64, 0x75, 0x6e, 0x52, 0x44, 0x24, 0x31, 0x52, 0x65,
		0x6e, 0x6f, 0x76, 0x61, 0x52, 0x65, 0x76, 0x6f, 0x52, 0x65, 0x76, 0x6f, 0x5f, 0x59, 0x6f, 0x75,
		0x70, 0x6c, 0x75, 0x73, 0x59, 0x6f, 0x75, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x76, 0x6f,
		0x6d, 0x6f, 0x76, 0x69, 0x6c, 0x53, 0x36, 0x35, 0x32, 0x33, 0x53, 0x32, 0x31, 0x52, 0x68, 0x69,
		0x6e, 0x6f, 0x50, 0x61, 0x63, 0x65, 0x20, 0x41, 0x31, 0x52, 0x69, 0x63, 0x6f, 0x68, 0x72, 0x69,
		0x63, 0x6f, 0x68, 0x5f, 0x72, 0x69, 0x63, 0x6f, 0x68, 0x5f, 0x6d, 0x66, 0x70, 0x61, 0x70, 0x6e,
		0x6c, 0x4d, 0x46, 0x50, 0x52, 0x69, 0x6b, 0x6f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x4b, 0x24,
		0x31, 0x52, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x49,
		0x4e, 0x47, 0x49, 0x4e, 0x47, 0x20, 0x42, 0x45, 0x4c, 0x4c, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x31, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x31, 0x30, 0x31, 0x20, 0x34, 0x47,
		0x52, 0x69, 0x6e, 0x6e, 0x6f, 0x52, 0x69, 0x74, 0x6d, 0x69, 0x78, 0x52, 0x4d, 0x44, 0x2d, 0x24,
		0x31, 0x52, 0x4d, 0x50, 0x2d, 0x24, 0x31, 0x52, 0x69, 0x74, 0x7a, 0x76, 0x69, 0x76, 0x61, 0x53,
		0x35, 0x30, 0x30, 0x43, 0x52, 0x69, 0x76, 0x69, 0x65, 0x72, 0x61, 0x52, 0x69, 0x76, 0x6f, 0x53,
		0x54, 0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x6d,
		0x20, 0x53, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x54, 0x4f, 0x52, 0x4d, 0x5f, 0x53, 0x38,
		0x53, 0x74, 0x6f, 0x72, 0x6d, 0x20, 0x53, 0x38, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20,
		0x50, 0x5a, 0x24, 0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31,
		0x52, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x20, 0x52, 0x58, 0x24, 0x31, 0x52, 0x69, 0x7a, 0x7a, 0x65,
		0x6e, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x61, 0x64, 0x72, 0x6f,
		0x76, 0x65, 0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x43, 0x68, 0x61,
		0x6e, 0x67, 0x41, 0x6e, 0x20, 0x53, 0x52, 0x6f, 0x61, 0x6d, 0x20, 0x43, 0x61, 0x74, 0x52, 0x6f,
		0x6b, 0x69, 0x74, 0x4f, 0x72, 0x62, 0x20, 0x53, 0x49, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x4f,
		0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x4f, 0x20, 0x33, 0x44, 0x52, 0x6f, 0x6b, 0x75, 0x33,
		0x39, 0x33, 0x30, 0x58, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6b, 0x75, 0x34,
		0x36, 0x34, 0x30, 0x58, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
		0x20, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6d,
		0x62, 0x69, 0x63, 0x61, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x4a, 0x65, 0x74, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x43, 0x69, 0x6e,
		0x65, 0x6d, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x76, 0x30, 0x31, 0x52, 0x6f, 0x6d, 0x73, 0x61, 0x74,
		0x52, 0x6f, 0x73, 0x73, 0x26, 0x4d, 0x6f, 0x6f, 0x72, 0x52, 0x4d, 0x24, 0x31, 0x2d, 0x24, 0x32,
		0x52, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x64, 0x50, 0x72, 0x6f,
		0x20, 0x51, 0x24, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6b, 0x79, 0x20, 0x37, 0x2e, 0x38, 0x35,
		0x22, 0x20, 0x33, 0x47, 0x24, 0x31, 0x20, 0x37, 0x2e, 0x38, 0x35, 0x22, 0x20, 0x33, 0x47, 0x52,
		0x6f, 0x79, 0x51, 0x75, 0x65, 0x65, 0x6e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x2d, 0x52, 0x51,
		0x34, 0x35, 0x31, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x52, 0x6f, 0x79, 0x6f, 0x6c, 0x65, 0x46,
		0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x20, 0x32, 0x46, 0x6c, 0x65, 0x78, 0x50, 0x61, 0x69, 0x52,
		0x75, 0x67, 0x47, 0x65, 0x61, 0x72, 0x52, 0x47, 0x37, 0x32, 0x35, 0x52, 0x75, 0x67, 0x67, 0x65,
		0x54, 0x65, 0x63, 0x68, 0x52, 0x75, 0x67, 0x67, 0x65, 0x78, 0x52, 0x68, 0x69, 0x6e, 0x6f, 0x20,
		0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x75, 0x69, 0x6f, 0x4d, 0x36, 0x37, 0x31, 0x4d, 0x34, 0x43,
		0x6f, 0x6c, 0x61, 0x20, 0x34, 0x47, 0x52, 0x75, 0x6e, 0x62, 0x6f, 0x46, 0x31, 0x2d, 0x54, 0x54,
		0x52, 0x75, 0x6e, 0x62, 0x6f, 0x50, 0x32, 0x52, 0x75, 0x70, 0x61, 0x50, 0x79, 0x72, 0x61, 0x6d,
		0x69, 0x64, 0x20, 0x41, 0x35, 0x58, 0x52, 0x79, 0x74, 0x65, 0x53, 0x2d, 0x43, 0x6f, 0x6c, 0x6f,
		0x72, 0x53, 0x2d, 0x54, 0x45, 0x4c, 0x4c, 0x53, 0x32, 0x54, 0x65, 0x6c, 0x53, 0x41, 0x49, 0x4c,
		0x46, 0x49, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x41, 0x4e, 0x59, 0x53, 0x41, 0x4e, 0x59,
		0x20, 0x56, 0x38, 0x53, 0x41, 0x4e, 0x59, 0x20, 0x56, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x53, 0x45, 0x42, 0x42, 0x45, 0x53, 0x45, 0x45, 0x57, 0x4f, 0x53, 0x45,
		0x47, 0x53, 0x45, 0x4d, 0x50, 0x20, 0x54, 0x43, 0x4c, 0x4c, 0x39, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x4f, 0x21, 0x20, 0x33, 0x43, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x4f, 0x21, 0x20, 0x33,
		0x43, 0x53, 0x45, 0x4e, 0x4e, 0x41, 0x53, 0x45, 0x52, 0x56, 0x4f, 0x31, 0x36, 0x20, 0x4d, 0x61,
		0x78, 0x53, 0x46, 0x52, 0x53, 0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x32, 0x53,
		0x74, 0x61, 0x72, 0x58, 0x74, 0x72, 0x65, 0x6d, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x58,
		0x74, 0x72, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x33, 0x53,
		0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72,
		0x61, 0x69, 0x6c, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x41,
		0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x75, 0x72, 0x61, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x41, 0x75, 0x72, 0x61, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20,
		0x32, 0x53, 0x74, 0x61, 0x72, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72,
		0x53, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20,
		0x36, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x34, 0x53, 0x74, 0x61,
		0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74, 0x20, 0x33, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64,
		0x69, 0x63, 0x74, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64,
		0x64, 0x69, 0x63, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x41, 0x64, 0x64, 0x69, 0x63, 0x74,
		0x53, 0x74, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x20, 0x32, 0x53, 0x74, 0x61, 0x72, 0x54, 0x65,
		0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x61,
		0x72, 0x4e, 0x61, 0x75, 0x74, 0x65, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x61, 0x75,
		0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x61, 0x62, 0x53, 0x47, 0x49, 0x4e, 0x53, 0x47, 0x49,
		0x4e, 0x5f, 0x45, 0x31, 0x30, 0x4d, 0x45, 0x31, 0x30, 0x4d, 0x53, 0x47, 0x49, 0x4e, 0x5f, 0x58,
		0x31, 0x30, 0x58, 0x31, 0x30, 0x53, 0x49, 0x4e, 0x47, 0x45, 0x52, 0x34, 0x4b, 0x20, 0x47, 0x53,
		0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x56, 0x53, 0x49, 0x4e, 0x47, 0x45, 0x52, 0x20, 0x41, 0x4e,
		0x44, 0x52, 0x4f, 0x49, 0x44, 0x20, 0x54, 0x56, 0x53, 0x4b, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64,
		0x62, 0x61, 0x6e, 0x64, 0x42, 0x48, 0x58, 0x2d, 0x55, 0x48, 0x32, 0x30, 0x30, 0x42, 0x20, 0x54,
		0x56, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x53, 0x4b, 0x47, 0x53, 0x4b, 0x4b, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x59, 0x4e,
		0x58, 0x5f, 0x4c, 0x55, 0x58, 0x45, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x4c, 0x75, 0x78, 0x65, 0x48,
		0x79, 0x70, 0x65, 0x72, 0x20, 0x58, 0x20, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x48, 0x59, 0x50,
		0x45, 0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x20, 0x49, 0x49, 0x48, 0x79, 0x70,
		0x65, 0x72, 0x20, 0x58, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x48, 0x59, 0x50,
		0x45, 0x52, 0x20, 0x58, 0x20, 0x42, 0x4c, 0x41, 0x44, 0x45, 0x48, 0x79, 0x70, 0x65, 0x72, 0x20,
		0x58, 0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x45, 0x43, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x34, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x20, 0x53,
		0x34, 0x53, 0x4d, 0x54, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x43, 0x52, 0x55, 0x53,
		0x48, 0x5f, 0x58, 0x35, 0x36, 0x35, 0x43, 0x72, 0x75, 0x73, 0x68, 0x20, 0x58, 0x35, 0x36, 0x35,
		0x42, 0x4c, 0x41, 0x5a, 0x45, 0x5f, 0x58, 0x35, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x7a, 0x65, 0x20,
		0x58, 0x35, 0x30, 0x30, 0x53, 0x4d, 0x55, 0x58, 0x53, 0x4e, 0x41, 0x4d, 0x49, 0x53, 0x4f, 0x4c,
		0x45, 0x50, 0x6f, 0x70, 0x20, 0x53, 0x24, 0x31, 0x53, 0x4f, 0x4c, 0x4f, 0x49, 0x6e, 0x73, 0x70,
		0x69, 0x72, 0x65, 0x5f, 0x55, 0x35, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x49, 0x6e, 0x73, 0x70, 0x69,
		0x72, 0x65, 0x20, 0x55, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72,
		0x65, 0x5f, 0x55, 0x35, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x20, 0x55, 0x35, 0x53, 0x4f,
		0x4e, 0x4f, 0x53, 0x42, 0x52, 0x32, 0x30, 0x30, 0x42, 0x4f, 0x4f, 0x53, 0x54, 0x52, 0x6f, 0x61,
		0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6c,
		0x61, 0x79, 0x3a, 0x24, 0x31, 0x4f, 0x6e, 0x65, 0x53, 0x4c, 0x53, 0x75, 0x62, 0x53, 0x4f, 0x53,
		0x48, 0x53, 0x6f, 0x73, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x4f, 0x57, 0x4c, 0x59, 0x53,
		0x50, 0x43, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x4f, 0x43, 0x54, 0x41, 0x43, 0x4f,
		0x52, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x43, 0x6f,
		0x72, 0x65, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29,
		0x20, 0x24, 0x31, 0x47, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x47,
		0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54,
		0x59, 0x20, 0x50, 0x52, 0x4f, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x53, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74,
		0x79, 0x20, 0x53, 0x45, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x2d, 0x32, 0x2d, 0x4d, 0x41,
		0x58, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x72,
		0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x32, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x20, 0x55,
		0x4c, 0x54, 0x49, 0x4d, 0x41, 0x54, 0x45, 0x20, 0x32, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x20, 0x32, 0x47, 0x52, 0x41, 0x56, 0x49,
		0x54, 0x59, 0x5f, 0x33, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
		0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x52, 0x41, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x33,
		0x5f, 0x53, 0x45, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x33, 0x20, 0x53, 0x45, 0x47,
		0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20, 0x24, 0x31, 0x47, 0x6c, 0x6f, 0x77, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x79, 0x65, 0x61, 0x72, 0x4c, 0x37, 0x30, 0x5f, 0x4c,
		0x69, 0x74, 0x65, 0x4c, 0x37, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x4c, 0x4f, 0x57, 0x20,
		0x37, 0x46, 0x6c, 0x6f, 0x77, 0x20, 0x37, 0x4c, 0x61, 0x69, 0x6b, 0x61, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x4c, 0x49, 0x54, 0x45,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x50, 0x43, 0x20, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x4d, 0x41, 0x58, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78,
		0x53, 0x50, 0x43, 0x20, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e,
		0x20, 0x4d, 0x41, 0x58, 0x47, 0x65, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x50, 0x43, 0x20, 0x47,
		0x45, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x47, 0x65, 0x6e, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x50, 0x43, 0x20, 0x47, 0x45, 0x4e, 0x47, 0x65, 0x6e, 0x53, 0x50, 0x43,
		0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x50, 0x43, 0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e,
		0x41, 0x6c, 0x69, 0x65, 0x6e, 0x53, 0x50, 0x55, 0x52, 0x54, 0x53, 0x51, 0x4f, 0x4f, 0x4c, 0x56,
		0x24, 0x31, 0x53, 0x53, 0x4b, 0x59, 0x53, 0x54, 0x46, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x46, 0x72, 0x61, 0x63, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x41, 0x65, 0x72,
		0x69, 0x61, 0x6c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x41, 0x65,
		0x72, 0x69, 0x61, 0x6c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x42, 0x6c,
		0x6f, 0x63, 0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x20,
		0x6d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x20, 0x33, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x33, 0x42, 0x4c,
		0x4f, 0x43, 0x4b, 0x20, 0x47, 0x4f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x47, 0x6f, 0x53, 0x4c,
		0x41, 0x59, 0x20, 0x49, 0x49, 0x53, 0x6c, 0x61, 0x79, 0x20, 0x49, 0x49, 0x4a, 0x6f, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x54, 0x47, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x54,
		0x4b, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x38, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x37, 0x53, 0x53, 0x74,
		0x6f, 0x72, 0x6d, 0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x7a, 0x53, 0x74, 0x6f, 0x72, 0x6d,
		0x20, 0x32, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x20, 0x35, 0x7a, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x20,
		0x31, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x50, 0x2d, 0x53, 0x31, 0x53, 0x55,
		0x4e, 0x57, 0x49, 0x4e, 0x44, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x33,
		0x47, 0x53, 0x4b, 0x59, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x30, 0x53, 0x6b, 0x79, 0x20,
		0x4b, 0x69, 0x64, 0x73, 0x20, 0x37, 0x30, 0x53, 0x6b, 0x79, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32,
		0x47, 0x53, 0x55, 0x4e, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53, 0x57, 0x49, 0x53, 0x53, 0x4d,
		0x4f, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x53, 0x43, 0x48, 0x4f, 0x4e, 0x20, 0x52, 0x39, 0x50,
		0x52, 0x41, 0x24, 0x31, 0x5a, 0x55, 0x52, 0x37, 0x32, 0x32, 0x4d, 0x5a, 0x37, 0x32, 0x20, 0x67,
		0x6f, 0x5a, 0x55, 0x52, 0x24, 0x31, 0x53, 0x57, 0x4f, 0x46, 0x59, 0x4d, 0x35, 0x30, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x59, 0x48, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x61,
		0x62, 0x61, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x63, 0x6f, 0x6d, 0x45, 0x54, 0x20, 0x4b, 0x69,
		0x6d, 0x65, 0x6d, 0x4b, 0x69, 0x6d, 0x65, 0x6d, 0x20, 0x4b, 0x65, 0x72, 0x65, 0x66, 0x61, 0x20,
		0x34, 0x47, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x4e, 0x65,
		0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52,
		0x61, 0x79, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x45, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x59,
		0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x52, 0x41, 0x59,
		0x20, 0x32, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x52, 0x61, 0x79, 0x20, 0x32, 0x4e, 0x45, 0x4f, 0x4e,
		0x5f, 0x4e, 0x4f, 0x56, 0x41, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x4e, 0x45,
		0x4f, 0x4e, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4e, 0x45, 0x4f, 0x4e, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x53, 0x74, 0x6f, 0x72, 0x6d, 0x53, 0x46, 0x43, 0x53,
		0x54, 0x42, 0x32, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x54, 0x42, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x53, 0x61, 0x67, 0x65, 0x6d, 0x53, 0x61, 0x67, 0x65, 0x6d, 0x63, 0x6f, 0x6d, 0x44, 0x43, 0x54,
		0x49, 0x57, 0x33, 0x36, 0x32, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x44, 0x43, 0x54, 0x49, 0x57, 0x33,
		0x36, 0x32, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x61, 0x69, 0x65, 0x74, 0x53, 0x69, 0x63, 0x75,
		0x72, 0x6f, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x61, 0x6c, 0x6f, 0x72,
		0x61, 0x47, 0x54, 0x2d, 0x42, 0x39, 0x31, 0x35, 0x30, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x79,
		0x6e, 0x63, 0x53, 0x4d, 0x54, 0x2d, 0x45, 0x35, 0x30, 0x31, 0x35, 0x4d, 0x61, 0x70, 0x6c, 0x65,
		0x20, 0x4d, 0x61, 0x70, 0x6c, 0x65, 0x32, 0x30, 0x31, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x31, 0x32, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x31, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20,
		0x37, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x32, 0x20, 0x37,
		0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x32, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x22, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37,
		0x22, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x53, 0x43, 0x2d, 0x30, 0x31, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x76, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x38, 0x2e, 0x34, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x32, 0x30, 0x31, 0x34, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f,
		0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x32,
		0x2e, 0x32, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53,
		0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31,
		0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x36, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53,
		0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22,
		0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20,
		0x38, 0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e,
		0x34, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x38,
		0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x2b, 0x20,
		0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x41, 0x39, 0x2b, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39, 0x20, 0x38,
		0x2e, 0x37, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x39,
		0x20, 0x38, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37, 0x2e, 0x30, 0x22,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20,
		0x77, 0x69, 0x74, 0x68, 0x20, 0x53, 0x20, 0x50, 0x65, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x35,
		0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x35, 0x65, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22,
		0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x36, 0x20, 0x31,
		0x30, 0x2e, 0x35, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31,
		0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x39, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20,
		0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x46, 0x45, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20,
		0x46, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x39, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x39, 0x20, 0x46, 0x45, 0x2b, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x39, 0x20, 0x31, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x31,
		0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20,
		0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x56,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30,
		0x22, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20,
		0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x20, 0x2b, 0x20, 0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x33,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52,
		0x4f, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x38, 0x2e, 0x34, 0x22, 0x20,
		0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20,
		0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x20, 0x31, 0x30, 0x2e, 0x35, 0x22, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x32, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x33, 0x20, 0x39,
		0x2e, 0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32,
		0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x53, 0x37, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x31, 0x31, 0x2e, 0x30,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53,
		0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31,
		0x32, 0x2e, 0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x53, 0x37, 0x20, 0x46, 0x45, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x34, 0x2e, 0x36, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e,
		0x34, 0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x53, 0x38, 0x2b, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x53, 0x38, 0x20, 0x31, 0x31, 0x2e, 0x30,
		0x22, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x50, 0x52,
		0x4f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x37,
		0x2e, 0x30, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38,
		0x2e, 0x30, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20,
		0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e, 0x37, 0x22, 0x20, 0x57, 0x69, 0x46,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x39, 0x2e,
		0x37, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x20, 0x4c, 0x54,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30,
		0x2e, 0x35, 0x22, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20,
		0x33, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x45, 0x20, 0x39,
		0x2e, 0x36, 0x22, 0x20, 0x34, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x35, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
		0x20, 0x33, 0x20, 0x38, 0x2e, 0x30, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x22, 0x20, 0x57, 0x69, 0x46, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x32, 0x22, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x61, 0x62, 0x20, 0x51, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x56, 0x37, 0x30, 0x30,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x53, 0x4d, 0x2d, 0x52,
		0x33, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20,
		0x46, 0x69, 0x74, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x53, 0x53, 0x4d, 0x2d, 0x52, 0x33, 0x38, 0x31,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x32, 0x20, 0x4e,
		0x65, 0x6f, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x32, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x32, 0x20, 0x34,
		0x34, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x30, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76,
		0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x33, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x20, 0x34, 0x30, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d,
		0x52, 0x38, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68,
		0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x37, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x30,
		0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35,
		0x20, 0x34, 0x30, 0x6d, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x35, 0x20, 0x34, 0x34, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39, 0x32, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39, 0x32, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39, 0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x20, 0x34, 0x37, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x39, 0x35, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x36, 0x20, 0x43, 0x6c, 0x61, 0x73,
		0x73, 0x69, 0x63, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x30, 0x35, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x36, 0x6d, 0x6d,
		0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x39, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x31, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x38, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x34, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20,
		0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x35, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x4d,
		0x2d, 0x52, 0x36, 0x30, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37,
		0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33,
		0x20, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x34, 0x36, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x52, 0x37, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72,
		0x20, 0x53, 0x32, 0x20, 0x34, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x32, 0x20, 0x34, 0x34,
		0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x35, 0x30, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x20,
		0x34, 0x30, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x33, 0x32, 0x47, 0x65, 0x61, 0x72, 0x20,
		0x53, 0x32, 0x20, 0x34, 0x32, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x36, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20, 0x46, 0x72, 0x6f,
		0x6e, 0x74, 0x69, 0x65, 0x72, 0x20, 0x33, 0x33, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x37, 0x37,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x65, 0x61, 0x72, 0x20, 0x53, 0x33, 0x20,
		0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52,
		0x38, 0x34, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20,
		0x33, 0x20, 0x34, 0x35, 0x6d, 0x6d, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x34,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20,
		0x34, 0x35, 0x6d, 0x6d, 0x53, 0x4d, 0x2d, 0x52, 0x38, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x53, 0x4d,
		0x2d, 0x52, 0x38, 0x35, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x61, 0x74, 0x63,
		0x68, 0x20, 0x33, 0x20, 0x34, 0x31, 0x6d, 0x6d, 0x20, 0x34, 0x47, 0x47, 0x65, 0x61, 0x72, 0x20,
		0x4c, 0x69, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x48, 0x75, 0x62, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x32, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x68, 0x61, 0x74, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x65, 0x61, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x65,
		0x61, 0x6e, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x75, 0x6f,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x70, 0x69, 0x63, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x70,
		0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x33, 0x4f, 0x6d, 0x6e, 0x69,
		0x61, 0x20, 0x49, 0x49, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x4d, 0x4f, 0x6d, 0x6e, 0x69, 0x61,
		0x20, 0x57, 0x4f, 0x6d, 0x6e, 0x69, 0x61, 0x20, 0x37, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x46,
		0x6c, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x53,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x63, 0x65, 0x20, 0x34, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x49, 0x49, 0x20, 0x48, 0x44, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x56, 0x61, 0x6c,
		0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x6f, 0x72, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f,
		0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x31, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x42, 0x65, 0x61, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42,
		0x65, 0x61, 0x6d, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x64, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x69, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x69,
		0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x78, 0x70, 0x72,
		0x65, 0x73, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x45, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x47, 0x69, 0x6f, 0x72,
		0x67, 0x69, 0x6f, 0x20, 0x41, 0x72, 0x6d, 0x61, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x57, 0x69, 0x4d, 0x41, 0x58, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x33, 0x20, 0x6d, 0x69, 0x6e,
		0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x45,
		0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20,
		0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49,
		0x49, 0x49, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x34, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x54, 0x41, 0x52, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x4f, 0x43,
		0x4b, 0x45, 0x54, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50,
		0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x50, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59,
		0x20, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x4b, 0x69, 0x74, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59,
		0x6f, 0x75, 0x6e, 0x67, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x59, 0x6f, 0x75, 0x6e, 0x67, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x59, 0x6f,
		0x75, 0x6e, 0x67, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x41, 0x4d, 0x45, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x4e,
		0x46, 0x43, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x41, 0x4d, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46,
		0x65, 0x65, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20,
		0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x43, 0x45, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x20, 0x44, 0x55, 0x4f, 0x53, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76,
		0x65, 0x72, 0x20, 0x33, 0x20, 0x56, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x20, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63,
		0x6f, 0x76, 0x65, 0x72, 0x20, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x58, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x37, 0x57, 0x61,
		0x76, 0x65, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20,
		0x59, 0x57, 0x61, 0x76, 0x65, 0x20, 0x4d, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x32, 0x35, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x35, 0x33, 0x33, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x37, 0x38, 0x57,
		0x61, 0x76, 0x65, 0x20, 0x37, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x34,
		0x20, 0x7a, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4b, 0x20, 0x7a, 0x6f,
		0x6f, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x56, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x56,
		0x61, 0x6c, 0x75, 0x65, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x34, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x20, 0x49, 0x49, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x2d, 0x53, 0x49, 0x4d, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20,
		0x4c, 0x54, 0x45, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x41, 0x63,
		0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4e, 0x65,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x35, 0x20, 0x4b, 0x20, 0x53, 0x70, 0x6f,
		0x72, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x36, 0x20, 0x45, 0x64, 0x67, 0x65, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x37, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x20,
		0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x38, 0x2b,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x39, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x53, 0x43, 0x2d, 0x30, 0x35, 0x4c, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x2b, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63,
		0x20, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x30, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31,
		0x20, 0x46, 0x45, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x31,
		0x20, 0x35, 0x47, 0x20, 0x4f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x20, 0x47, 0x61, 0x6d, 0x65,
		0x73, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x53, 0x32, 0x31, 0x2b, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x53, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x32, 0x2b, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x53, 0x32, 0x33, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x33, 0x20, 0x46,
		0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x32, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x32, 0x34,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46,
		0x6c, 0x69, 0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61,
		0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x61, 0x56,
		0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x56, 0x69, 0x38, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x76, 0x61, 0x6e, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x20, 0x51, 0x75,
		0x61, 0x6e, 0x74, 0x75, 0x6d, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x30, 0x33, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x30, 0x34, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x34, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x33, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x30, 0x35, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x31, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x31, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x32, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x20, 0x28,
		0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x34, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x35, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x32,
		0x73, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x36, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x36,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x36, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x37, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x37, 0x31, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x38, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x38, 0x2b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x39, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x37, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x20, 0x35,
		0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x31, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x30, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x30, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x32, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x33, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x41, 0x33, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x41, 0x34, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x30, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x41, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x31, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x20,
		0x55, 0x57, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x33, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20, 0x34, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x41, 0x35, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x41, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x37, 0x30, 0x73, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x38, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41,
		0x39, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x39, 0x30, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x30, 0x32, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x46, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x31, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x46, 0x31, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46,
		0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x46, 0x34, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x34, 0x32,
		0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35, 0x32, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x46, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x20,
		0x49, 0x49, 0x49, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x75,
		0x6e, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x31, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x31, 0x20, 0x41, 0x63, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x75, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x32, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20,
		0x4f, 0x72, 0x62, 0x69, 0x74, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x6b, 0x79, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x41, 0x75, 0x72, 0x61, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x35, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x36, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x34, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x34, 0x2b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x38, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a,
		0x37, 0x2b, 0x20, 0x28, 0x43, 0x37, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x53, 0x6b,
		0x79, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x50,
		0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x6f, 0x72, 0x65,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x44, 0x75, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x43, 0x72, 0x6f, 0x77, 0x6e, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x37, 0x20, 0x56, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x37,
		0x20, 0x37, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x2d, 0x4a, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4a, 0x39, 0x20, 0x37, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4a, 0x39, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x2d, 0x41, 0x33, 0x32, 0x36,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x35, 0x47, 0x53, 0x4d,
		0x2d, 0x4d, 0x33, 0x33, 0x36, 0x4b, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x75, 0x6d,
		0x70, 0x20, 0x32, 0x53, 0x4d, 0x2d, 0x4d, 0x34, 0x34, 0x36, 0x4b, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x30, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x34, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x30, 0x31, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x30, 0x31, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32,
		0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x30, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x30, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x31, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x31, 0x33, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4d, 0x31, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x31, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x30, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x32, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x32, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x42, 0x75, 0x64, 0x64, 0x79,
		0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x32, 0x33, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x30, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x33, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x33, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x33, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x31, 0x73, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4d, 0x33, 0x34, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4d, 0x33, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x34, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x35, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e,
		0x74, 0x75, 0x6d, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x33, 0x20,
		0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x35, 0x34, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d, 0x36, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x35, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30,
		0x31, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x32, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x20,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x35,
		0x20, 0x28, 0x32, 0x30, 0x31, 0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e,
		0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x28, 0x32, 0x30, 0x31,
		0x36, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4f, 0x6e, 0x37, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43,
		0x35, 0x35, 0x20, 0x35, 0x47, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x43, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x43, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x5a, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x33, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64,
		0x65, 0x72, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20,
		0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x53, 0x6f, 0x6c, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x53, 0x6f,
		0x6c, 0x20, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x48, 0x61, 0x6c, 0x6f, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x41, 0x6d, 0x70, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46,
		0x6f, 0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x34, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x33, 0x20, 0x46, 0x6c, 0x69,
		0x70, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x57, 0x32, 0x34, 0x20, 0x46, 0x6c, 0x69, 0x70,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x33, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x34, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x35, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x36, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x20, 0x35, 0x47, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20, 0x35, 0x47,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x35, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x5a, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x36, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75,
		0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x44, 0x75, 0x6f, 0x73,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x46, 0x61, 0x6e, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69,
		0x6f, 0x6e, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x49, 0x20, 0x4c,
		0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x32,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x78,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x20, 0x56, 0x45, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x28, 0x54, 0x56, 0x29, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4a, 0x32,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4e, 0x65, 0x6f, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45,
		0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x45, 0x64, 0x67, 0x65, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x20, 0x44, 0x75, 0x6f, 0x73, 0x47, 0x61, 0x6c, 0x61,
		0x78, 0x79, 0x20, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x32, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20,
		0x4d, 0x65, 0x67, 0x61, 0x20, 0x35, 0x2e, 0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4d,
		0x65, 0x67, 0x61, 0x20, 0x36, 0x2e, 0x33, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x37, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x38, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x2b, 0x47, 0x61, 0x6c,
		0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78,
		0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32,
		0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x74, 0x69, 0x76, 0x20, 0x53, 0x45, 0x47,
		0x72, 0x65, 0x61, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x33,
		0x45, 0x32, 0x31, 0x35, 0x32, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20,
		0x33, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x43, 0x2d, 0x30, 0x32, 0x43, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x54, 0x56, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x24, 0x31, 0x53, 0x43, 0x2d, 0x24, 0x31, 0x53, 0x43, 0x48, 0x2d,
		0x24, 0x31, 0x53, 0x61, 0x6d, 0x74, 0x65, 0x63, 0x68, 0x53, 0x61, 0x6d, 0x74, 0x72, 0x6f, 0x6e,
		0x53, 0x61, 0x6e, 0x65, 0x69, 0x4e, 0x38, 0x33, 0x4e, 0x39, 0x31, 0x38, 0x33, 0x31, 0x32, 0x44,
		0x47, 0x31, 0x30, 0x31, 0x53, 0x61, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x41, 0x42, 0x37, 0x41, 0x33,
		0x47, 0x30, 0x35, 0x54, 0x41, 0x42, 0x2d, 0x37, 0x41, 0x33, 0x47, 0x30, 0x35, 0x53, 0x61, 0x6e,
		0x73, 0x75, 0x69, 0x53, 0x35, 0x30, 0x35, 0x30, 0x32, 0x34, 0x53, 0x61, 0x6e, 0x74, 0x69, 0x6e,
		0x42, 0x69, 0x54, 0x42, 0x69, 0x5a, 0x20, 0x56, 0x35, 0x38, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49,
		0x20, 0x47, 0x31, 0x47, 0x41, 0x41, 0x4d, 0x49, 0x49, 0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x48,
		0x32, 0x2d, 0x41, 0x43, 0x61, 0x6e, 0x64, 0x79, 0x20, 0x55, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x44,
		0x72, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x30, 0x33, 0x41, 0x43, 0x6c, 0x61,
		0x73, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x48, 0x61, 0x6c, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f,
		0x6d, 0x61, 0x20, 0x41, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x48, 0x6f, 0x6e, 0x67,
		0x51, 0x69, 0x20, 0x48, 0x51, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x7a, 0x4e, 0x65, 0x77, 0x64, 0x75,
		0x6e, 0x48, 0x65, 0x78, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x48, 0x59, 0x2d, 0x30, 0x30, 0x32, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x47, 0x31, 0x30, 0x31, 0x2d, 0x4f, 0x47, 0x4b, 0x61, 0x74, 0x61, 0x6e,
		0x61, 0x20, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x20, 0x58, 0x49, 0x6e, 0x63, 0x6f, 0x67,
		0x6e, 0x69, 0x74, 0x6f, 0x49, 0x6e, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x61, 0x76, 0x69,
		0x6f, 0x53, 0x62, 0x65, 0x72, 0x53, 0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63,
		0x68, 0x6f, 0x6b, 0x53, 0x63, 0x68, 0x6f, 0x6b, 0x20, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56,
		0x35, 0x35, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x35, 0x35, 0x46, 0x72, 0x65, 0x65, 0x64,
		0x6f, 0x6d, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x58, 0x4c, 0x46, 0x72, 0x65, 0x65, 0x64, 0x6f, 0x6d,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x58, 0x4c, 0x53, 0x63, 0x6f, 0x6f, 0x6c, 0x65, 0x53,
		0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x53, 0x65, 0x61, 0x74, 0x65, 0x6c, 0x53, 0x65, 0x65, 0x6b,
		0x65, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x6e,
		0x67, 0x61, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x78, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x53, 0x45,
		0x4c, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x36, 0x53, 0x6c, 0x61, 0x73, 0x68,
		0x20, 0x36, 0x56, 0x4f, 0x59, 0x41, 0x47, 0x45, 0x52, 0x2d, 0x56, 0x34, 0x35, 0x56, 0x6f, 0x79,
		0x61, 0x67, 0x65, 0x72, 0x20, 0x56, 0x34, 0x35, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x45,
		0x53, 0x37, 0x33, 0x32, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x55, 0x53, 0x45, 0x53, 0x37,
		0x33, 0x32, 0x20, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x75, 0x73, 0x53, 0x45, 0x4c, 0x46, 0x49,
		0x58, 0x5f, 0x51, 0x35, 0x5f, 0x55, 0x52, 0x42, 0x41, 0x4e, 0x51, 0x35, 0x20, 0x55, 0x72, 0x62,
		0x61, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x51, 0x33, 0x5f, 0x52, 0x45, 0x42, 0x45,
		0x4c, 0x51, 0x33, 0x20, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f,
		0x51, 0x36, 0x5f, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4f, 0x4e, 0x51, 0x36, 0x20, 0x53, 0x74,
		0x61, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x58, 0x5f, 0x56, 0x34, 0x31,
		0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x4d, 0x41, 0x52, 0x44, 0x49, 0x47, 0x52, 0x41, 0x53, 0x56, 0x34,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x72, 0x64, 0x69, 0x67, 0x72, 0x61, 0x73, 0x53,
		0x65, 0x6e, 0x63, 0x6f, 0x72, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x24, 0x31, 0x22,
		0x20, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x33, 0x45,
		0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x20, 0x42, 0x61, 0x73, 0x69,
		0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65,
		0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
		0x20, 0x38, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x38, 0x45, 0x6c,
		0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x33, 0x45, 0x6c, 0x65, 0x6d,
		0x65, 0x6e, 0x74, 0x20, 0x39, 0x2e, 0x37, 0x20, 0x56, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
		0x74, 0x20, 0x39, 0x2e, 0x37, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x31, 0x30, 0x2e,
		0x31, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x50, 0x24,
		0x31, 0x53, 0x65, 0x6e, 0x64, 0x6f, 0x53, 0x65, 0x6e, 0x6b, 0x61, 0x74, 0x65, 0x6c, 0x4d, 0x61,
		0x78, 0x69, 0x6d, 0x75, 0x73, 0x54, 0x31, 0x30, 0x30, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75,
		0x73, 0x20, 0x54, 0x31, 0x30, 0x30, 0x31, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x69, 0x74, 0x53, 0x65,
		0x6e, 0x77, 0x61, 0x4f, 0x64, 0x69, 0x6e, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x49, 0x6e, 0x69,
		0x7a, 0x69, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x69, 0x7a, 0x69, 0x6f, 0x20, 0x4c,
		0x54, 0x45, 0x56, 0x37, 0x30, 0x35, 0x42, 0x50, 0x65, 0x67, 0x61, 0x73, 0x75, 0x73, 0x54, 0x68,
		0x6f, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
		0x53, 0x65, 0x75, 0x69, 0x63, 0x41, 0x55, 0x54, 0x4f, 0x49, 0x44, 0x20, 0x24, 0x31, 0x53, 0x65,
		0x77, 0x6f, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x70, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78,
		0x33, 0x53, 0x54, 0x54, 0x4d, 0x32, 0x31, 0x56, 0x41, 0x50, 0x50, 0x52, 0x6f, 0x75, 0x76, 0x6f,
		0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58, 0x78, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x58,
		0x78, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
		0x20, 0x4f, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20,
		0x53, 0x33, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x35,
		0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x53, 0x37, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x58, 0x34, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x57, 0x69, 0x73, 0x68, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x57, 0x69, 0x73, 0x68,
		0x20, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x4d, 0x30, 0x34, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x38, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x36, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x37, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x65, 0x6e,
		0x73, 0x65, 0x20, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x44, 0x31, 0x30, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x20, 0x53, 0x49, 0x4d, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a,
		0x65, 0x72, 0x6f, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x5a, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x28, 0x43, 0x31, 0x30, 0x29, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x5a, 0x65, 0x74, 0x61, 0x44, 0x72, 0x61, 0x67,
		0x6f, 0x6e, 0x20, 0x51, 0x75, 0x65, 0x73, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x53, 0x48, 0x2d, 0x30, 0x36, 0x44, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x58, 0x58, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4c,
		0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x20,
		0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x53, 0x49,
		0x4d, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x37,
		0x2b, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56,
		0x36, 0x20, 0x35, 0x47, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x56, 0x36, 0x2b, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x4b, 0x20, 0x24, 0x31, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x34, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
		0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x45, 0x76, 0x65, 0x72, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x6f, 0x6d,
		0x70, 0x61, 0x63, 0x74, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
		0x6c, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x58,
		0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x20, 0x32, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x32, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x20, 0x42, 0x61, 0x73, 0x69,
		0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53,
		0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x32, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x53, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20,
		0x53, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x33, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x42, 0x61, 0x73,
		0x69, 0x63, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x36, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x37, 0x41, 0x71, 0x75, 0x6f,
		0x73, 0x20, 0x52, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x77, 0x69,
		0x73, 0x68, 0x33, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x52, 0x38, 0x41, 0x71, 0x75, 0x6f, 0x73,
		0x20, 0x55, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x53, 0x42, 0x31, 0x30, 0x41, 0x32, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x32, 0x42, 0x61, 0x73, 0x69, 0x6f, 0x20, 0x41,
		0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x20, 0x57, 0x61, 0x72, 0x73, 0x53, 0x48,
		0x2d, 0x52, 0x4d, 0x30, 0x32, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x53, 0x48, 0x2d, 0x52, 0x4d,
		0x30, 0x32, 0x34, 0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x34, 0x30, 0x31,
		0x53, 0x48, 0x44, 0x69, 0x73, 0x6e, 0x65, 0x79, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x20,
		0x24, 0x31, 0x41, 0x30, 0x30, 0x31, 0x53, 0x48, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x53,
		0x75, 0x6d, 0x61, 0x68, 0x6f, 0x20, 0x35, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69,
		0x74, 0x61, 0x69, 0x20, 0x33, 0x4e, 0x50, 0x41, 0x32, 0x30, 0x35, 0x53, 0x48, 0x41, 0x71, 0x75,
		0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x34, 0x4e, 0x50, 0x38, 0x30, 0x37,
		0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65, 0x69, 0x74, 0x61, 0x69, 0x20, 0x31,
		0x30, 0x4e, 0x50, 0x35, 0x30, 0x31, 0x53, 0x48, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x65,
		0x69, 0x74, 0x61, 0x69, 0x4c, 0x65, 0x69, 0x63, 0x61, 0x20, 0x4c, 0x65, 0x69, 0x74, 0x7a, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x70, 0x61, 0x67, 0x6f,
		0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4b, 0x2d, 0x74, 0x61, 0x69, 0x50,
		0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x65, 0x20, 0x36, 0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x41, 0x71,
		0x75, 0x6f, 0x73, 0x20, 0x50, 0x61, 0x64, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x53, 0x48, 0x54, 0x32, 0x31, 0x4c, 0x43, 0x44, 0x5f, 0x78, 0x78, 0x53, 0x55, 0x46, 0x4f,
		0x43, 0x34, 0x37, 0x35, 0x41, 0x4c, 0x43, 0x44, 0x2d, 0x36, 0x30, 0x53, 0x55, 0x34, 0x37, 0x35,
		0x41, 0x41, 0x71, 0x75, 0x6f, 0x73, 0x20, 0x4e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41,
		0x71, 0x75, 0x6f, 0x73, 0x20, 0x54, 0x56, 0x24, 0x31, 0x53, 0x68, 0x69, 0x66, 0x74, 0x20, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x73, 0x53, 0x68, 0x69, 0x76, 0x61, 0x6b, 0x69, 0x53, 0x54, 0x56, 0x2d,
		0x24, 0x31, 0x53, 0x68, 0x74, 0x72, 0x69, 0x6b, 0x68, 0x2d, 0x4d, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x70, 0x6f, 0x73, 0x20, 0x46, 0x32, 0x53, 0x68, 0x75, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x63,
		0x6f, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x4d, 0x6f, 0x72, 0x65, 0x5f, 0x33, 0x4d, 0x6f, 0x72,
		0x65, 0x20, 0x33, 0x50, 0x6c, 0x75, 0x73, 0x33, 0x5f, 0x34, 0x47, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x6d, 0x61, 0x78, 0x4d, 0x65,
		0x67, 0x61, 0x20, 0x32, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x32, 0x4d, 0x65, 0x67,
		0x61, 0x20, 0x32, 0x4e, 0x69, 0x6c, 0x65, 0x20, 0x58, 0x53, 0x53, 0x52, 0x33, 0x2d, 0x31, 0x2d,
		0x35, 0x31, 0x2d, 0x35, 0x4d, 0x53, 0x53, 0x44, 0x2d, 0x31, 0x2d, 0x35, 0x33, 0x2d, 0x31, 0x33,
		0x4d, 0x45, 0x31, 0x30, 0x30, 0x32, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x2d, 0x4d,
		0x61, 0x78, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x45,
		0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x33,
		0x53, 0x69, 0x65, 0x6d, 0x65, 0x6e, 0x73, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x2d,
		0x54, 0x72, 0x65, 0x6d, 0x65, 0x20, 0x50, 0x51, 0x24, 0x31, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x24, 0x31, 0x54, 0x61, 0x62, 0x5f, 0x41, 0x31, 0x30,
		0x32, 0x35, 0x5f, 0x58, 0x2d, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58, 0x2d, 0x54, 0x72, 0x65, 0x6d,
		0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x30, 0x32, 0x35, 0x54, 0x61, 0x62, 0x20, 0x41,
		0x31, 0x30, 0x31, 0x30, 0x20, 0x4e, 0x65, 0x6f, 0x58, 0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20,
		0x53, 0x24, 0x31, 0x53, 0x69, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74,
		0x20, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x70, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x32, 0x53, 0x69, 0x6d, 0x62, 0x61, 0x6e, 0x73, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54,
		0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x54, 0x61, 0x62, 0x55, 0x6c, 0x74,
		0x69, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x63, 0x61, 0x73,
		0x73, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x50, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x53,
		0x37, 0x32, 0x2d, 0x42, 0x53, 0x58, 0x32, 0x57, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x79, 0x53, 0x69,
		0x6e, 0x67, 0x74, 0x65, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49,
		0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x20, 0x49, 0x20, 0x4d, 0x69, 0x78, 0x53,
		0x69, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x50, 0x2d, 0x24, 0x31, 0x53, 0x69, 0x72, 0x69, 0x6e,
		0x20, 0x4c, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6e, 0x6e, 0x65, 0x79, 0x20, 0x55, 0x31, 0x53, 0x6f,
		0x6c, 0x61, 0x72, 0x69, 0x6e, 0x53, 0x69, 0x73, 0x77, 0x6f, 0x6f, 0x41, 0x70, 0x72, 0x69, 0x78,
		0x20, 0x43, 0x35, 0x35, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x30,
		0x4d, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x35, 0x2e, 0x35, 0x43, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x5f, 0x34, 0x5f, 0x30, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x34, 0x2e, 0x30, 0x50, 0x6c,
		0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x61,
		0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x42, 0x34, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d,
		0x20, 0x24, 0x31, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x56, 0x69, 0x65, 0x77,
		0x24, 0x31, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x64, 0x20,
		0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4b, 0x59, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x79, 0x20, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x56,
		0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74,
		0x61, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x54, 0x38, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x58, 0x53, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x20, 0x58, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x4d,
		0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x5f, 0x35, 0x5f, 0x35, 0x5f, 0x4f, 0x63, 0x74, 0x61,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x35, 0x20, 0x4f, 0x63, 0x74, 0x61, 0x45, 0x4c,
		0x49, 0x54, 0x45, 0x20, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x50, 0x52, 0x4f, 0x45, 0x6c, 0x69, 0x74,
		0x65, 0x20, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x4d, 0x35, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x35, 0x35, 0x20, 0x4d,
		0x61, 0x78, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x41, 0x36, 0x33, 0x4d, 0x61, 0x78, 0x45, 0x6c,
		0x69, 0x74, 0x65, 0x20, 0x41, 0x36, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x4b, 0x59, 0x20, 0x42,
		0x36, 0x33, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x42, 0x36, 0x33, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x2e,
		0x24, 0x32, 0x46, 0x75, 0x65, 0x67, 0x6f, 0x20, 0x24, 0x31, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x72,
		0x6f, 0x5f, 0x49, 0x49, 0x49, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x49, 0x49, 0x50, 0x52, 0x4f, 0x5f,
		0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65,
		0x53, 0x4b, 0x59, 0x20, 0x35, 0x35, 0x4d, 0x35, 0x35, 0x4d, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65,
		0x72, 0x35, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x50, 0x72, 0x65, 0x73, 0x74,
		0x69, 0x67, 0x65, 0x20, 0x58, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x45, 0x4d, 0x31,
		0x35, 0x30, 0x51, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x45, 0x53, 0x31, 0x33, 0x30, 0x51, 0x20, 0x31,
		0x54, 0x42, 0x45, 0x53, 0x31, 0x34, 0x30, 0x51, 0x20, 0x32, 0x54, 0x42, 0x45, 0x53, 0x32, 0x34,
		0x30, 0x45, 0x53, 0x33, 0x34, 0x30, 0x51, 0x20, 0x32, 0x54, 0x42, 0x20, 0x56, 0x33, 0x53, 0x6b,
		0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x49, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x6b, 0x79, 0x74, 0x65, 0x63, 0x68, 0x53, 0x6b, 0x79, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x46, 0x6c,
		0x6f, 0x77, 0x42, 0x6f, 0x78, 0x2d, 0x46, 0x31, 0x53, 0x57, 0x2d, 0x32, 0x32, 0x41, 0x45, 0x20,
		0x4e, 0x46, 0x53, 0x57, 0x54, 0x56, 0x2d, 0x32, 0x32, 0x41, 0x45, 0x20, 0x4e, 0x46, 0x53, 0x6d,
		0x61, 0x64, 0x6c, 0x53, 0x61, 0x66, 0x61, 0x72, 0x69, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x20, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x69, 0x6c, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x52, 0x49,
		0x4d, 0x45, 0x20, 0x49, 0x49, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x49, 0x49, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x4b, 0x61, 0x73, 0x73, 0x65, 0x6c, 0x53, 0x4b, 0x35, 0x35, 0x30, 0x31, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x65, 0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6f,
		0x6f, 0x6b, 0x53, 0x42, 0x31, 0x33, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x62, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x65, 0x78, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x66, 0x72, 0x65, 0x6e, 0x53, 0x37, 0x20,
		0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x37, 0x2e, 0x30, 0x50, 0x44, 0x36, 0x44, 0x31, 0x4a, 0x41, 0x6e, 0x64, 0x72, 0x6f,
		0x6d, 0x61, 0x78, 0x20, 0x56, 0x33, 0x73, 0x41, 0x44, 0x36, 0x38, 0x32, 0x4a, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x54, 0x41, 0x44, 0x36, 0x38, 0x38, 0x47, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x43, 0x32, 0x41, 0x44, 0x36, 0x38, 0x39, 0x47, 0x41, 0x6e,
		0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x41, 0x44, 0x36, 0x38, 0x32, 0x48, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x69, 0x33, 0x73, 0x41, 0x44, 0x36, 0x42, 0x31,
		0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47, 0x32, 0x20, 0x48, 0x6f, 0x74,
		0x41, 0x44, 0x39, 0x41, 0x31, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x47,
		0x32, 0x41, 0x44, 0x36, 0x38, 0x33, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x49, 0x42, 0x32, 0x36, 0x44, 0x32, 0x48, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20,
		0x4c, 0x4e, 0x65, 0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x2d, 0x69, 0x4e,
		0x65, 0x77, 0x20, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x49, 0x41, 0x6e, 0x64,
		0x72, 0x6f, 0x6d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61,
		0x6e, 0x54, 0x31, 0x53, 0x4d, 0x38, 0x30, 0x31, 0x54, 0x32, 0x53, 0x4d, 0x39, 0x30, 0x31, 0x4d,
		0x31, 0x53, 0x4d, 0x39, 0x31, 0x39, 0x4d, 0x31, 0x4c, 0x4e, 0x75, 0x74, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x32, 0x73, 0x4e, 0x75, 0x74, 0x20, 0x33, 0x4e, 0x75, 0x74, 0x20, 0x32, 0x4e, 0x75, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x33, 0x4a, 0x69, 0x61, 0x6e, 0x47, 0x75, 0x6f, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x61, 0x6e, 0x20, 0x55, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x55, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x79, 0x4d,
		0x69, 0x6e, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x31, 0x30, 0x4c, 0x53, 0x6d,
		0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x53, 0x32, 0x20, 0x41, 0x64,
		0x76, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x35, 0x2e, 0x35, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f,
		0x6f, 0x74, 0x68, 0x20, 0x36, 0x2e, 0x32, 0x36, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x36,
		0x2e, 0x32, 0x36, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x36, 0x2e, 0x38, 0x53, 0x6d, 0x6f, 0x74, 0x72, 0x65, 0x73, 0x68, 0x6b, 0x61, 0x53,
		0x6f, 0x62, 0x69, 0x65, 0x54, 0x65, 0x63, 0x68, 0x53, 0x4f, 0x42, 0x49, 0x45, 0x54, 0x45, 0x43,
		0x48, 0x20, 0x53, 0x4c, 0x50, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x33,
		0x44, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x6f, 0x64, 0x61, 0x73,
		0x6f, 0x64, 0x61, 0x20, 0x46, 0x49, 0x52, 0x45, 0x53, 0x6f, 0x66, 0x74, 0x62, 0x61, 0x6e, 0x6b,
		0x53, 0x6f, 0x68, 0x6f, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x6f, 0x6c, 0x6f, 0x6e, 0x65,
		0x45, 0x31, 0x34, 0x35, 0x37, 0x45, 0x61, 0x72, 0x74, 0x68, 0x20, 0x49, 0x72, 0x6f, 0x6e, 0x20,
		0x45, 0x31, 0x34, 0x35, 0x37, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x69, 0x6e, 0x64, 0x20, 0x42,
		0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x57, 0x31, 0x34, 0x35, 0x30, 0x57, 0x31, 0x34, 0x35, 0x32,
		0x57, 0x69, 0x6e, 0x64, 0x20, 0x41, 0x69, 0x72, 0x20, 0x57, 0x31, 0x34, 0x35, 0x32, 0x53, 0x4f,
		0x4c, 0x4f, 0x4e, 0x45, 0x20, 0x41, 0x34, 0x37, 0x53, 0x4c, 0x2d, 0x41, 0x34, 0x37, 0x53, 0x75,
		0x6e, 0x5f, 0x53, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x35, 0x30, 0x31,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35, 0x35, 0x30, 0x31, 0x53, 0x75, 0x6d, 0x6f, 0x20,
		0x53, 0x35, 0x30, 0x30, 0x31, 0x53, 0x6f, 0x6e, 0x69, 0x6d, 0x58, 0x50, 0x33, 0x34, 0x30, 0x30,
		0x58, 0x50, 0x33, 0x58, 0x50, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x50, 0x35, 0x73, 0x58,
		0x50, 0x35, 0x58, 0x50, 0x36, 0x58, 0x50, 0x37, 0x58, 0x50, 0x38, 0x58, 0x50, 0x31, 0x30, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72,
		0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x61, 0x72, 0x63, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x20, 0x53,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x6e, 0x65, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x6f, 0x6c,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x72, 0x61, 0x79, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69,
		0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x31, 0x30,
		0x41, 0x73, 0x70, 0x65, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x4c, 0x41, 0x59,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x72, 0x6f, 0x20, 0x53, 0x4c, 0x69, 0x76,
		0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x74, 0x78,
		0x74, 0x74, 0x78, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x4a, 0x61, 0x6c, 0x6f, 0x75, 0x4e, 0x61, 0x69,
		0x74, 0x65, 0x43, 0x65, 0x64, 0x61, 0x72, 0x45, 0x6c, 0x6d, 0x48, 0x61, 0x7a, 0x65, 0x6c, 0x41,
		0x69, 0x6e, 0x6f, 0x59, 0x61, 0x72, 0x69, 0x53, 0x61, 0x74, 0x69, 0x6f, 0x56, 0x69, 0x76, 0x61,
		0x7a, 0x56, 0x69, 0x76, 0x61, 0x7a, 0x20, 0x70, 0x72, 0x6f, 0x5a, 0x79, 0x6c, 0x6f, 0x53, 0x70,
		0x69, 0x72, 0x6f, 0x59, 0x65, 0x6e, 0x64, 0x6f, 0x57, 0x39, 0x36, 0x30, 0x4d, 0x69, 0x78, 0x20,
		0x57, 0x61, 0x6c, 0x6b, 0x6d, 0x61, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x58,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x49, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x46, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x41, 0x32, 0x53, 0x4f, 0x2d, 0x30, 0x32, 0x44, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4e, 0x58, 0x47, 0x32, 0x32, 0x39, 0x39, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x52, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4f, 0x2d, 0x30, 0x34, 0x47, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x41, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x41, 0x63, 0x65, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20,
		0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x56, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x56, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x30, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x30, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61,
		0x6c, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x31, 0x20, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x49, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x49, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x31, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x31, 0x20, 0x56, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x56,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49, 0x49,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x35, 0x20, 0x49, 0x49, 0x49, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x35, 0x20, 0x49,
		0x56, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x4c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72,
		0x63, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x48, 0x44,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x61, 0x72, 0x63, 0x6f, 0x20, 0x53, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x69, 0x6f, 0x6e, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x58,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x54, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x20,
		0x64, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x74, 0x69, 0x70, 0x6f, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x6d, 0x69, 0x72, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x55, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x55, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x56, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4a, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x67, 0x6f, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x45, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x45, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x34, 0x47, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x43, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x53, 0x50, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x52, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x31, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x45, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x45, 0x34, 0x67, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x4c, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x32, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x49, 0x33, 0x33, 0x31, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x33, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4c, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x4d, 0x32, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x4d, 0x34, 0x20, 0x41, 0x71, 0x75, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4d, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4d, 0x35, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x43, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x34, 0x20, 0x44, 0x75, 0x61,
		0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x43, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x33, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x54, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x57, 0x69, 0x66, 0x69,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
		0x20, 0x57, 0x69, 0x46, 0x69, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x20, 0x54,
		0x61, 0x62, 0x6c, 0x65, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x44, 0x36,
		0x35, 0x36, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x32, 0x61, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x2b, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x33, 0x76, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x34, 0x45, 0x36, 0x35, 0x30, 0x38, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x34, 0x76,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
		0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x5a, 0x35, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x5a,
		0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x5a, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58,
		0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58,
		0x41, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x31, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x45, 0x35, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41,
		0x31, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x31, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x58, 0x70,
		0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x34, 0x34, 0x33,
		0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x41, 0x32, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x73, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x5a, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x48, 0x38, 0x32, 0x36, 0x36, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x4f, 0x2d, 0x30, 0x35, 0x4b,
		0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61,
		0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x5a, 0x32, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x75, 0x6d, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x5a, 0x33, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x4c, 0x31, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x4c, 0x31, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61,
		0x20, 0x41, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x47, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69,
		0x61, 0x20, 0x53, 0x58, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x58, 0x58, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x20, 0x58, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20,
		0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x58, 0x20, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
		0x65, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x5a, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x5a, 0x34, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x5a, 0x32, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c,
		0x65, 0x74, 0x20, 0x5a, 0x33, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x58, 0x70, 0x65,
		0x72, 0x69, 0x61, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x53, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x20, 0x33, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x24,
		0x31, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x35,
		0x29, 0x42, 0x72, 0x61, 0x76, 0x69, 0x61, 0x20, 0x56, 0x48, 0x31, 0x57, 0x61, 0x6c, 0x6b, 0x6d,
		0x61, 0x6e, 0x20, 0x24, 0x31, 0x42, 0x44, 0x50, 0x37, 0x47, 0x42, 0x44, 0x50, 0x38, 0x47, 0x5f,
		0x41, 0x58, 0x42, 0x44, 0x50, 0x38, 0x47, 0x20, 0x41, 0x58, 0x42, 0x44, 0x56, 0x37, 0x47, 0x5f,
		0x4e, 0x56, 0x42, 0x44, 0x56, 0x37, 0x47, 0x20, 0x4e, 0x56, 0x42, 0x44, 0x50, 0x39, 0x47, 0x5f,
		0x41, 0x58, 0x44, 0x42, 0x44, 0x50, 0x39, 0x47, 0x20, 0x41, 0x58, 0x44, 0x42, 0x6c, 0x75, 0x2d,
		0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x28, 0x24, 0x31, 0x29, 0x42,
		0x6c, 0x75, 0x2d, 0x72, 0x61, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x61, 0x72, 0x63,
		0x6f, 0x20, 0x49, 0x53, 0x31, 0x31, 0x53, 0x58, 0x70, 0x65, 0x72, 0x69, 0x61, 0x20, 0x24, 0x31,
		0x53, 0x6f, 0x75, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x6d, 0x61, 0x78,
		0x53, 0x6f, 0x79, 0x65, 0x73, 0x53, 0x31, 0x30, 0x2d, 0x48, 0x58, 0x53, 0x31, 0x32, 0x20, 0x50,
		0x52, 0x4f, 0x58, 0x53, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x78, 0x45,
		0x64, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4e,
		0x65, 0x6f, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4e, 0x65, 0x6f, 0x20, 0x24, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x31, 0x31, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x38, 0x53, 0x70,
		0x61, 0x72, 0x78, 0x20, 0x53, 0x37, 0x53, 0x37, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x6c,
		0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x56, 0x75, 0x6c, 0x63, 0x61,
		0x6e, 0x6f, 0x20, 0x35, 0x2e, 0x35, 0x22, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x20, 0x35,
		0x2e, 0x30, 0x22, 0x43, 0x75, 0x61, 0x72, 0x7a, 0x6f, 0x20, 0x36, 0x2e, 0x30, 0x22, 0x44, 0x69,
		0x61, 0x6d, 0x61, 0x6e, 0x74, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x22, 0x58, 0x6c, 0x69, 0x66, 0x65,
		0x20, 0x24, 0x31, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d, 0x35, 0x51, 0x2b, 0x58, 0x6c, 0x69,
		0x66, 0x65, 0x2d, 0x4d, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x4d,
		0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x56, 0x69, 0x63, 0x74, 0x6f,
		0x72, 0x35, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x35,
		0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x35, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x2d, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
		0x35, 0x35, 0x48, 0x44, 0x58, 0x6c, 0x69, 0x66, 0x65, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
		0x6f, 0x20, 0x35, 0x35, 0x20, 0x48, 0x44, 0x4d, 0x69, 0x2d, 0x24, 0x31, 0x4e, 0x4d, 0x69, 0x2d,
		0x24, 0x31, 0x41, 0x51, 0x54, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x39, 0x30, 0x30, 0x30,
		0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x5f, 0x50,
		0x72, 0x6f, 0x4d, 0x69, 0x6c, 0x61, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x47, 0x69, 0x6f, 0x6e, 0x65,
		0x65, 0x20, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x79, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x5f, 0x58, 0x4d,
		0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x58, 0x4d, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x5f,
		0x31, 0x38, 0x4d, 0x79, 0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x31, 0x38, 0x52, 0x49, 0x4f, 0x20,
		0x53, 0x54, 0x41, 0x52, 0x52, 0x69, 0x6f, 0x20, 0x53, 0x74, 0x61, 0x72, 0x56, 0x45, 0x4e, 0x55,
		0x53, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x53, 0x74, 0x61, 0x72, 0x5f, 0x4d, 0x69, 0x78, 0x5f, 0x32, 0x53, 0x74, 0x61, 0x72, 0x20, 0x4d,
		0x69, 0x78, 0x20, 0x32, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x49,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x20, 0x54, 0x77, 0x6f, 0x49, 0x20, 0x73, 0x74, 0x61, 0x72, 0x20, 0x6f, 0x6e, 0x65, 0x49, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x20, 0x4f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x6c, 0x69, 0x67, 0x68,
		0x74, 0x5f, 0x52, 0x4f, 0x4d, 0x45, 0x5f, 0x58, 0x52, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x73, 0x74,
		0x61, 0x72, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72,
		0x2b, 0x2b, 0x53, 0x74, 0x61, 0x72, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
		0x20, 0x47, 0x6f, 0x41, 0x73, 0x74, 0x72, 0x61, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20,
		0x44, 0x31, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x55, 0x50, 0x20, 0x24, 0x31, 0x45, 0x6e,
		0x67, 0x61, 0x67, 0x65, 0x20, 0x37, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x74, 0x61, 0x72, 0x77,
		0x61, 0x79, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x61, 0x20, 0x53, 0x24, 0x31, 0x53,
		0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x57, 0x2d, 0x4c, 0x45, 0x44, 0x24, 0x31, 0x53,
		0x74, 0x69, 0x6c, 0x65, 0x76, 0x73, 0x53, 0x54, 0x36, 0x35, 0x53, 0x4d, 0x57, 0x4f, 0x53, 0x34,
		0x4b, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x78, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x78, 0x65, 0x5a, 0x65,
		0x65, 0x27, 0x54, 0x61, 0x62, 0x24, 0x31, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x58, 0x20, 0x4c, 0x69,
		0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x72, 0x61,
		0x77, 0x42, 0x65, 0x72, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x74, 0x79, 0x6c, 0x6f, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x54, 0x45, 0x50,
		0x5f, 0x55, 0x50, 0x53, 0x74, 0x65, 0x70, 0x20, 0x55, 0x70, 0x53, 0x57, 0x49, 0x46, 0x54, 0x5f,
		0x34, 0x47, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x34, 0x47, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49,
		0x5f, 0x50, 0x52, 0x4f, 0x5f, 0x34, 0x47, 0x49, 0x6e, 0x6b, 0x6f, 0x73, 0x69, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x34, 0x47, 0x37, 0x32, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x37, 0x32, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x39, 0x20, 0x54, 0x6f, 0x70, 0x61, 0x7a, 0x53, 0x56, 0x36, 0x31, 0x20, 0x56,
		0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x36, 0x31, 0x20, 0x4d,
		0x61, 0x67, 0x69, 0x63, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x41, 0x5a,
		0x5a, 0x53, 0x36, 0x31, 0x20, 0x4a, 0x61, 0x7a, 0x7a, 0x53, 0x35, 0x37, 0x5f, 0x41, 0x5a, 0x55,
		0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x35, 0x37, 0x5f, 0x41,
		0x4c, 0x55, 0x52, 0x45, 0x53, 0x35, 0x37, 0x20, 0x41, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x35, 0x36,
		0x20, 0x4d, 0x49, 0x53, 0x54, 0x53, 0x35, 0x36, 0x20, 0x4d, 0x69, 0x73, 0x74, 0x43, 0x50, 0x45,
		0x39, 0x31, 0x53, 0x35, 0x34, 0x20, 0x5a, 0x65, 0x6e, 0x53, 0x35, 0x35, 0x20, 0x4e, 0x6f, 0x76,
		0x61, 0x53, 0x34, 0x30, 0x5f, 0x56, 0x49, 0x53, 0x54, 0x41, 0x53, 0x34, 0x30, 0x20, 0x56, 0x69,
		0x73, 0x74, 0x61, 0x53, 0x35, 0x30, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x53, 0x35, 0x30, 0x20, 0x4a,
		0x61, 0x64, 0x65, 0x53, 0x35, 0x30, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x53, 0x35, 0x30, 0x20, 0x42,
		0x6f, 0x6c, 0x64, 0x49, 0x74, 0x68, 0x65, 0x6d, 0x62, 0x61, 0x41, 0x52, 0x43, 0x54, 0x49, 0x43,
		0x41, 0x72, 0x63, 0x74, 0x69, 0x63, 0x45, 0x42, 0x59, 0x33, 0x33, 0x53, 0x35, 0x33, 0x5f, 0x53,
		0x54, 0x41, 0x52, 0x4b, 0x53, 0x35, 0x33, 0x20, 0x53, 0x74, 0x61, 0x72, 0x6b, 0x53, 0x34, 0x30,
		0x5f, 0x4c, 0x49, 0x46, 0x45, 0x53, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x66, 0x65, 0x4c, 0x49, 0x46,
		0x45, 0x5f, 0x32, 0x4c, 0x69, 0x66, 0x65, 0x20, 0x32, 0x4d, 0x4f, 0x53, 0x43, 0x4f, 0x57, 0x4d,
		0x6f, 0x73, 0x63, 0x6f, 0x77, 0x53, 0x34, 0x39, 0x20, 0x50, 0x6f, 0x69, 0x73, 0x65, 0x53, 0x34,
		0x39, 0x20, 0x4d, 0x6f, 0x6e, 0x6f, 0x53, 0x34, 0x39, 0x20, 0x45, 0x63, 0x6f, 0x53, 0x36, 0x34,
		0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x53, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x44,
		0x51, 0x52, 0x32, 0x32, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e,
		0x6b, 0x6f, 0x73, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x49, 0x4e, 0x4b, 0x4f, 0x53, 0x49, 0x49, 0x6e,
		0x6b, 0x6f, 0x73, 0x69, 0x49, 0x4e, 0x4b, 0x55, 0x4c, 0x55, 0x5f, 0x50, 0x52, 0x4f, 0x49, 0x6e,
		0x6b, 0x75, 0x6c, 0x75, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x55,
		0x53, 0x42, 0x6f, 0x6c, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x72, 0x61, 0x76, 0x65, 0x52,
		0x41, 0x49, 0x4e, 0x52, 0x61, 0x69, 0x6e, 0x53, 0x41, 0x54, 0x55, 0x52, 0x4e, 0x44, 0x56, 0x4b,
		0x38, 0x32, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x54, 0x61, 0x72, 0x69, 0x73, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x44, 0x56, 0x4b, 0x38, 0x37, 0x4f, 0x72, 0x69, 0x6f, 0x6e,
		0x20, 0x38, 0x20, 0x54, 0x61, 0x62, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x53, 0x75, 0x67, 0x61, 0x72,
		0x59, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x46, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75,
		0x6d, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6e, 0x56, 0x61, 0x6e, 0x53, 0x75, 0x6e,
		0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x36, 0x5f, 0x70, 0x72, 0x6f, 0x5f, 0x34,
		0x47, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x53,
		0x75, 0x6e, 0x6d, 0x69, 0x54, 0x32, 0x73, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x5f, 0x50,
		0x52, 0x4f, 0x2d, 0x53, 0x54, 0x56, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x53, 0x54, 0x53, 0x75,
		0x6e, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63,
		0x6b, 0x53, 0x75, 0x6e, 0x73, 0x74, 0x65, 0x63, 0x68, 0x53, 0x75, 0x6e, 0x76, 0x65, 0x6c, 0x6c,
		0x54, 0x39, 0x35, 0x5a, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x4d, 0x38,
		0x53, 0x4d, 0x58, 0x51, 0x2d, 0x48, 0x33, 0x53, 0x75, 0x70, 0x65, 0x72, 0x20, 0x47, 0x65, 0x6e,
		0x65, 0x72, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x4f, 0x58, 0x53, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x75, 0x70, 0x65,
		0x72, 0x54, 0x56, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x20, 0x58, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20,
		0x58, 0x57, 0x48, 0x49, 0x54, 0x45, 0x20, 0x58, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x58, 0x53,
		0x75, 0x70, 0x65, 0x72, 0x54, 0x61, 0x62, 0x4b, 0x37, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x53, 0x75,
		0x70, 0x65, 0x72, 0x6d, 0x61, 0x78, 0x4d, 0x58, 0x31, 0x31, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x65,
		0x4d, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x75, 0x70, 0x72, 0x61, 0x53,
		0x75, 0x70, 0x72, 0x61, 0x69, 0x6d, 0x53, 0x75, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x20,
		0x24, 0x31, 0x53, 0x75, 0x7a, 0x75, 0x6b, 0x69, 0x53, 0x75, 0x6d, 0x6f, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x45, 0x43, 0x4f, 0x50, 0x41, 0x44, 0x37, 0x45, 0x43, 0x4f, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x53, 0x76, 0x65, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x4b, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x34, 0x47, 0x53, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65,
		0x20, 0x38, 0x53, 0x77, 0x69, 0x73, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x53, 0x77, 0x69, 0x74, 0x65,
		0x6c, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x53, 0x79, 0x63, 0x6f, 0x52, 0x53,
		0x2d, 0x24, 0x31, 0x53, 0x79, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x79, 0x50, 0x44, 0x31, 0x20, 0x34,
		0x47, 0x5a, 0x56, 0x49, 0x49, 0x49, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x20, 0x24, 0x31, 0x5a,
		0x56, 0x49, 0x49, 0x49, 0x4e, 0x4f, 0x56, 0x41, 0x69, 0x4e, 0x6f, 0x76, 0x61, 0x53, 0x79, 0x6d,
		0x70, 0x68, 0x6f, 0x6e, 0x79, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x69, 0x69, 0x41, 0x74, 0x6f,
		0x6d, 0x20, 0x49, 0x49, 0x52, 0x6f, 0x61, 0x72, 0x20, 0x24, 0x31, 0x47, 0x31, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x68, 0x65, 0x6c, 0x69, 0x6f, 0x20, 0x33, 0x30, 0x53, 0x79, 0x6d, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x45, 0x41, 0x53, 0x59, 0x5f, 0x4e, 0x41, 0x56, 0x5f, 0x32, 0x45, 0x61,
		0x73, 0x79, 0x20, 0x4e, 0x61, 0x76, 0x20, 0x32, 0x53, 0x79, 0x72, 0x6f, 0x78, 0x53, 0x79, 0x73,
		0x74, 0x65, 0x6d, 0x37, 0x36, 0x47, 0x61, 0x6c, 0x61, 0x67, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x2d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x54, 0x4d, 0x52, 0x56, 0x4c, 0x34, 0x47, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x56, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x34, 0x54, 0x4d, 0x52, 0x56, 0x30, 0x36, 0x35, 0x47,
		0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x78, 0x20, 0x35, 0x47, 0x54, 0x4d, 0x52, 0x56, 0x30,
		0x36, 0x50, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x78, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c,
		0x20, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x56, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x52, 0x59, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x32, 0x52, 0x45, 0x56, 0x56,
		0x4c, 0x20, 0x36, 0x20, 0x35, 0x47, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x37, 0x20, 0x35, 0x47,
		0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x45,
		0x56, 0x56, 0x4c, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x65, 0x6c, 0x65,
		0x6b, 0x6f, 0x6d, 0x20, 0x50, 0x75, 0x6c, 0x73, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x24, 0x31, 0x29, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x24, 0x31,
		0x29, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x20, 0x50, 0x68,
		0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x54, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x4d, 0x52,
		0x56, 0x35, 0x47, 0x54, 0x42, 0x52, 0x45, 0x56, 0x56, 0x4c, 0x20, 0x54, 0x61, 0x62, 0x20, 0x35,
		0x47, 0x54, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x39, 0x36, 0x54, 0x41, 0x44, 0x41,
		0x41, 0x4d, 0x54, 0x41, 0x47, 0x20, 0x54, 0x65, 0x63, 0x68, 0x54, 0x41, 0x47, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x20, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x41,
		0x55, 0x42, 0x45, 0x54, 0x42, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x49, 0x67, 0x6e, 0x69, 0x73,
		0x20, 0x24, 0x31, 0x54, 0x43, 0x4c, 0x47, 0x61, 0x6c, 0x61, 0x20, 0x47, 0x36, 0x30, 0x53, 0x69,
		0x67, 0x6e, 0x61, 0x49, 0x6f, 0x6e, 0x20, 0x58, 0x53, 0x74, 0x79, 0x6c, 0x75, 0x73, 0x20, 0x35,
		0x47, 0x32, 0x30, 0x31, 0x32, 0x30, 0x35, 0x33, 0x30, 0x34, 0x33, 0x30, 0x33, 0x34, 0x30, 0x33,
		0x33, 0x30, 0x35, 0x33, 0x30, 0x35, 0x69, 0x33, 0x30, 0x36, 0x54, 0x34, 0x33, 0x31, 0x50, 0x34,
		0x30, 0x35, 0x34, 0x30, 0x36, 0x54, 0x35, 0x30, 0x36, 0x46, 0x34, 0x30, 0x36, 0x69, 0x54, 0x35,
		0x30, 0x36, 0x54, 0x20, 0x34, 0x30, 0x36, 0x73, 0x34, 0x30, 0x38, 0x34, 0x30, 0x20, 0x53, 0x45,
		0x32, 0x30, 0x4c, 0x32, 0x30, 0x4c, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x65, 0x6d,
		0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x30, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x32, 0x30, 0x45, 0x33, 0x30, 0x45, 0x32, 0x30, 0x59, 0x32, 0x30, 0x42, 0x43,
		0x39, 0x41, 0x33, 0x58, 0x4c, 0x35, 0x4c, 0x39, 0x4c, 0x39, 0x53, 0x4c, 0x31, 0x30, 0x4c, 0x31,
		0x30, 0x2b, 0x4c, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x50,
		0x6c, 0x65, 0x78, 0x31, 0x30, 0x20, 0x35, 0x47, 0x31, 0x30, 0x20, 0x35, 0x47, 0x20, 0x55, 0x57,
		0x4c, 0x58, 0x41, 0x32, 0x58, 0x58, 0x34, 0x20, 0x35, 0x47, 0x34, 0x30, 0x20, 0x58, 0x45, 0x20,
		0x35, 0x47, 0x31, 0x30, 0x4c, 0x31, 0x30, 0x20, 0x53, 0x45, 0x32, 0x30, 0x20, 0x53, 0x45, 0x32,
		0x30, 0x20, 0x41, 0x33, 0x30, 0x20, 0x53, 0x45, 0x34, 0x31, 0x38, 0x38, 0x56, 0x33, 0x30, 0x20,
		0x4c, 0x45, 0x33, 0x30, 0x2b, 0x54, 0x36, 0x37, 0x36, 0x48, 0x33, 0x30, 0x33, 0x30, 0x20, 0x5a,
		0x33, 0x30, 0x20, 0x56, 0x20, 0x35, 0x47, 0x54, 0x36, 0x30, 0x33, 0x44, 0x4c, 0x33, 0x30, 0x20,
		0x54, 0x33, 0x30, 0x20, 0x35, 0x47, 0x33, 0x30, 0x20, 0x58, 0x45, 0x20, 0x35, 0x47, 0x33, 0x30,
		0x20, 0x58, 0x4c, 0x32, 0x30, 0x52, 0x20, 0x35, 0x47, 0x32, 0x30, 0x53, 0x32, 0x30, 0x20, 0x58,
		0x45, 0x32, 0x30, 0x20, 0x35, 0x47, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x34,
		0x30, 0x52, 0x20, 0x35, 0x47, 0x49, 0x4f, 0x4e, 0x20, 0x56, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70,
		0x65, 0x72, 0x20, 0x34, 0x30, 0x39, 0x34, 0x39, 0x34, 0x47, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70,
		0x65, 0x72, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x39, 0x31, 0x39, 0x39, 0x53, 0x4e, 0x78,
		0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x39, 0x34, 0x36, 0x36,
		0x58, 0x4e, 0x78, 0x74, 0x50, 0x61, 0x70, 0x65, 0x72, 0x20, 0x31, 0x31, 0x39, 0x33, 0x31, 0x37,
		0x58, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x54, 0x4b, 0x45,
		0x45, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x62, 0x20, 0x38, 0x22, 0x20, 0x34, 0x47, 0x39, 0x31,
		0x33, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x38, 0x22, 0x39, 0x31, 0x33, 0x32, 0x53, 0x54, 0x61,
		0x62, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x39, 0x32, 0x39, 0x35, 0x47, 0x31, 0x30, 0x20, 0x54, 0x61,
		0x62, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x39, 0x32, 0x39, 0x36, 0x47, 0x31, 0x30, 0x20, 0x54,
		0x61, 0x62, 0x4d, 0x61, 0x78, 0x20, 0x57, 0x69, 0x46, 0x69, 0x39, 0x32, 0x39, 0x36, 0x51, 0x31,
		0x30, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x61, 0x78, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x73, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x57, 0x69, 0x46, 0x69, 0x20, 0x28, 0x47,
		0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x20,
		0x28, 0x47, 0x65, 0x6e, 0x20, 0x32, 0x29, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x54, 0x61, 0x62, 0x20, 0x37, 0x4c, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x30, 0x4c, 0x20, 0x57, 0x69, 0x46, 0x69, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x46,
		0x48, 0x44, 0x20, 0x34, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x48, 0x44, 0x20, 0x34,
		0x47, 0x39, 0x31, 0x33, 0x37, 0x57, 0x54, 0x61, 0x62, 0x20, 0x38, 0x20, 0x4c, 0x45, 0x39, 0x31,
		0x36, 0x36, 0x47, 0x54, 0x61, 0x62, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x54, 0x45, 0x38, 0x34, 0x39,
		0x31, 0x58, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x4c, 0x39, 0x30, 0x38, 0x30, 0x47, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x73, 0x20, 0x34, 0x47, 0x42, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54,
		0x56, 0x20, 0x24, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x30, 0x29, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x74, 0x76, 0x5f, 0x41, 0x46, 0x54, 0x4d, 0x4d,
		0x2d, 0x54, 0x43, 0x4c, 0x2d, 0x54, 0x53, 0x38, 0x30, 0x31, 0x31, 0x54, 0x53, 0x38, 0x30, 0x31,
		0x31, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x33, 0x2d, 0x53, 0x65, 0x72, 0x69, 0x65,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x46, 0x48, 0x44, 0x20, 0x46, 0x69, 0x72, 0x65,
		0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x34, 0x4b, 0x20, 0x46, 0x69, 0x72,
		0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x34, 0x4b, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x54, 0x44, 0x20, 0x53,
		0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x44, 0x20, 0x54, 0x65, 0x63, 0x68, 0x4e, 0x41, 0x54,
		0x2d, 0x54, 0x4e, 0x37, 0x30, 0x4e, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x56, 0x41, 0x2d, 0x50,
		0x41, 0x30, 0x30, 0x54, 0x44, 0x54, 0x2d, 0x4d, 0x41, 0x30, 0x31, 0x54, 0x45, 0x43, 0x48, 0x4e,
		0x4f, 0x53, 0x41, 0x54, 0x58, 0x39, 0x38, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x39, 0x38, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x54, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x54,
		0x45, 0x54, 0x43, 0x54, 0x49, 0x41, 0x4e, 0x59, 0x55, 0x54, 0x49, 0x4d, 0x76, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x54, 0x4a, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x31, 0x30, 0x54, 0x4a, 0x44, 0x54, 0x4f, 0x4f, 0x47, 0x4f, 0x54, 0x4f, 0x50, 0x44,
		0x4f, 0x4e, 0x54, 0x4f, 0x50, 0x53, 0x48, 0x4f, 0x57, 0x53, 0x54, 0x4f, 0x52, 0x4e, 0x41, 0x44,
		0x4f, 0x54, 0x4f, 0x53, 0x43, 0x49, 0x44, 0x4f, 0x57, 0x31, 0x30, 0x39, 0x54, 0x4f, 0x58, 0x54,
		0x4f, 0x58, 0x31, 0x54, 0x50, 0x53, 0x54, 0x54, 0x45, 0x43, 0x54, 0x54, 0x4b, 0x2d, 0x54, 0x56,
		0x54, 0x54, 0x4b, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x32, 0x31, 0x34, 0x53, 0x42, 0x2d, 0x32, 0x31,
		0x34, 0x54, 0x54, 0x66, 0x6f, 0x6e, 0x65, 0x54, 0x54, 0x32, 0x30, 0x54, 0x56, 0x2b, 0x54, 0x56,
		0x43, 0x4e, 0x75, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x53, 0x58, 0x2d, 0x53, 0x50, 0x35, 0x54,
		0x57, 0x4d, 0x41, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x53, 0x41, 0x6d, 0x61,
		0x7a, 0x69, 0x6e, 0x67, 0x20, 0x24, 0x31, 0x54, 0x57, 0x5a, 0x54, 0x61, 0x62, 0x50, 0x6c, 0x61,
		0x79, 0x20, 0x24, 0x31, 0x4f, 0x58, 0x5f, 0x58, 0x31, 0x4f, 0x58, 0x20, 0x58, 0x31, 0x54, 0x59,
		0x44, 0x54, 0x61, 0x69, 0x67, 0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x69,
		0x67, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x61, 0x72, 0x61, 0x54,
		0x61, 0x6c, 0x69, 0x75, 0x73, 0x54, 0x61, 0x6d, 0x62, 0x6f, 0x54, 0x61, 0x6e, 0x69, 0x78, 0x54,
		0x58, 0x24, 0x31, 0x73, 0x54, 0x58, 0x24, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x58, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x54, 0x58, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x65, 0x61, 0x63, 0x68,
		0x54, 0x6f, 0x75, 0x63, 0x68, 0x54, 0x65, 0x63, 0x54, 0x6f, 0x79, 0x4f, 0x4e, 0x20, 0x31, 0x32,
		0x38, 0x47, 0x42, 0x54, 0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x53, 0x38, 0x31, 0x33, 0x47, 0x54,
		0x65, 0x63, 0x68, 0x50, 0x61, 0x64, 0x31, 0x30, 0x51, 0x43, 0x31, 0x30, 0x51, 0x43, 0x54, 0x65,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x5f, 0x31, 0x30, 0x78, 0x78, 0x31, 0x30, 0x58, 0x58, 0x54, 0x65,
		0x63, 0x68, 0x50, 0x61, 0x64, 0x37, 0x30, 0x33, 0x37, 0x30, 0x33, 0x33, 0x47, 0x78, 0x33, 0x47,
		0x5f, 0x31, 0x36, 0x33, 0x47, 0x2d, 0x31, 0x36, 0x58, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x4d,
		0x35, 0x20, 0x24, 0x31, 0x4d, 0x36, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x36, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x20, 0x43, 0x61, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x5f,
		0x50, 0x61, 0x64, 0x5f, 0x4b, 0x61, 0x69, 0x6f, 0x73, 0x5f, 0x4f, 0x6e, 0x65, 0x5f, 0x33, 0x47,
		0x4b, 0x61, 0x69, 0x6f, 0x73, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x54, 0x65, 0x63, 0x68,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x53, 0x61, 0x74, 0x54, 0x65,
		0x63, 0x68, 0x6e, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x35, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x6f, 0x70, 0x63, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x50, 0x61, 0x64, 0x20, 0x55, 0x50, 0x31, 0x30, 0x24, 0x31, 0x54, 0x65, 0x63,
		0x68, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x65, 0x63, 0x68, 0x77, 0x6f, 0x6f, 0x64, 0x54, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x54, 0x31, 0x30, 0x54, 0x32, 0x30, 0x39, 0x38, 0x50, 0x31,
		0x30, 0x53, 0x50, 0x32, 0x30, 0x48, 0x44, 0x50, 0x34, 0x30, 0x48, 0x44, 0x50, 0x38, 0x30, 0x54,
		0x41, 0x70, 0x65, 0x78, 0x20, 0x50, 0x31, 0x30, 0x48, 0x44, 0x50, 0x31, 0x30, 0x48, 0x44, 0x5f,
		0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x65, 0x78, 0x20, 0x50, 0x31, 0x30, 0x48, 0x44, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x50, 0x33, 0x30, 0x53, 0x50, 0x38, 0x35, 0x4d, 0x32, 0x30, 0x5f, 0x34, 0x47,
		0x4d, 0x32, 0x30, 0x20, 0x34, 0x47, 0x4d, 0x38, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4c, 0x41,
		0x30, 0x30, 0x32, 0x4d, 0x33, 0x30, 0x20, 0x34, 0x47, 0x54, 0x4c, 0x41, 0x30, 0x31, 0x36, 0x4d,
		0x31, 0x36, 0x4d, 0x34, 0x30, 0x41, 0x69, 0x72, 0x4d, 0x34, 0x30, 0x20, 0x41, 0x69, 0x72, 0x4d,
		0x34, 0x30, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x53, 0x45, 0x4d, 0x34, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4d, 0x34, 0x30, 0x53, 0x54, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x34, 0x30,
		0x20, 0x41, 0x69, 0x72, 0x54, 0x4c, 0x41, 0x30, 0x30, 0x31, 0x54, 0x34, 0x30, 0x54, 0x34, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x24, 0x31, 0x48, 0x44, 0x4d, 0x24, 0x31, 0x48, 0x44, 0x54,
		0x35, 0x30, 0x50, 0x72, 0x6f, 0x5f, 0x57, 0x54, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x38,
		0x30, 0x68, 0x50, 0x38, 0x30, 0x58, 0x50, 0x33, 0x30, 0x41, 0x69, 0x72, 0x50, 0x33, 0x30, 0x20,
		0x41, 0x69, 0x72, 0x54, 0x50, 0x61, 0x64, 0x20, 0x39, 0x38, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22,
		0x20, 0x34, 0x47, 0x58, 0x39, 0x38, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x58, 0x39, 0x38, 0x20,
		0x41, 0x69, 0x72, 0x20, 0x49, 0x49, 0x49, 0x58, 0x39, 0x38, 0x20, 0x41, 0x69, 0x72, 0x20, 0x49,
		0x49, 0x54, 0x65, 0x63, 0x6e, 0x6f, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x36, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x36,
		0x53, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x36, 0x53, 0x50, 0x68, 0x61, 0x6e, 0x74,
		0x6f, 0x6d, 0x20, 0x24, 0x31, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x32, 0x50,
		0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x58, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20,
		0x46, 0x6f, 0x6c, 0x64, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6f,
		0x6c, 0x64, 0x20, 0x32, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x20, 0x46, 0x6c,
		0x69, 0x70, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x56, 0x32, 0x20, 0x46, 0x6c, 0x69,
		0x70, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x39, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f,
		0x6d, 0x20, 0x38, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x57, 0x58, 0x33, 0x4c, 0x54, 0x45, 0x57,
		0x58, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x2d, 0x57, 0x33, 0x57, 0x33,
		0x46, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x69, 0x54, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41,
		0x69, 0x72, 0x20, 0x32, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x41, 0x63, 0x65, 0x20,
		0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x32, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x69, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x20, 0x32,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x69, 0x53, 0x6b, 0x79, 0x20, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x69, 0x53, 0x6b, 0x79,
		0x20, 0x33, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x43, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x44, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64,
		0x20, 0x37, 0x43, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20,
		0x37, 0x46, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x37, 0x47, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x72, 0x6f,
		0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x44, 0x20, 0x34, 0x47, 0x44, 0x72, 0x6f, 0x69,
		0x64, 0x50, 0x61, 0x64, 0x20, 0x38, 0x44, 0x52, 0x37, 0x2b, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x69, 0x34, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x39, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20,
		0x31, 0x31, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x32, 0x20, 0x41, 0x69, 0x72, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x41,
		0x69, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69,
		0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x36, 0x20, 0x53, 0x45, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x43,
		0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x31, 0x37, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x20, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x38, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x31, 0x38, 0x50, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31, 0x39, 0x43, 0x61, 0x6d,
		0x6f, 0x6e, 0x20, 0x31, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x31,
		0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x32, 0x30, 0x43, 0x61, 0x6d, 0x6f,
		0x6e, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x47, 0x43, 0x61,
		0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50,
		0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33,
		0x30, 0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x53, 0x20, 0x50, 0x72, 0x6f,
		0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x53, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43,
		0x4d, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x58, 0x20,
		0x50, 0x72, 0x6f, 0x43, 0x61, 0x6d, 0x6f, 0x6e, 0x20, 0x43, 0x58, 0x43, 0x61, 0x6d, 0x6f, 0x6e,
		0x20, 0x43, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x31, 0x50, 0x6f, 0x70, 0x20,
		0x32, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x46, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x58, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x32,
		0x58, 0x50, 0x6f, 0x70, 0x20, 0x32, 0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x70, 0x20, 0x33, 0x50,
		0x6f, 0x70, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x50, 0x6f,
		0x70, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72,
		0x50, 0x6f, 0x70, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x6f,
		0x70, 0x20, 0x35, 0x58, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20,
		0x35, 0x43, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x6f, 0x70, 0x20, 0x35,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x35, 0x50, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x50,
		0x6f, 0x70, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x50, 0x6f, 0x70, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f,
		0x50, 0x6f, 0x70, 0x20, 0x37, 0x50, 0x6f, 0x70, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f,
		0x70, 0x20, 0x38, 0x50, 0x6f, 0x70, 0x20, 0x39, 0x53, 0x41, 0x31, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x53,
		0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x34, 0x29, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x32, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x30, 0x43, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x59, 0x6f,
		0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x34, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x35, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x41,
		0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x36, 0x20, 0x47, 0x6f, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x37, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x37, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x37, 0x54, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x38, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x43, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x38, 0x50, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x38, 0x54, 0x53, 0x70, 0x61,
		0x72, 0x6b, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x39, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x39, 0x54, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x43, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x31, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x47, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x47, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30,
		0x29, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x30, 0x43, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20,
		0x33, 0x30, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x20, 0x41, 0x69, 0x72, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x53, 0x70, 0x61, 0x72,
		0x6b, 0x20, 0x43, 0x4d, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x50,
		0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x75, 0x76,
		0x6f, 0x69, 0x72, 0x20, 0x32, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x31, 0x50, 0x6f,
		0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33,
		0x20, 0x41, 0x69, 0x72, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x33, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x50, 0x6f, 0x75, 0x76, 0x6f, 0x69, 0x72, 0x20, 0x34, 0x50, 0x6f, 0x75, 0x76, 0x6f,
		0x69, 0x72, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6d, 0x20, 0x4a, 0x38, 0x52,
		0x37, 0x20, 0x34, 0x47, 0x57, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x58, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x54, 0x45, 0x43, 0x4e, 0x4f, 0x20, 0x53, 0x39, 0x50, 0x6f, 0x76, 0x61, 0x50, 0x6f, 0x76,
		0x61, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x32, 0x50,
		0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x33, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x32, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x33,
		0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x34, 0x50, 0x6f, 0x76,
		0x61, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x35, 0x50, 0x6f, 0x76,
		0x61, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x50, 0x6f, 0x76,
		0x61, 0x20, 0x36, 0x20, 0x4e, 0x65, 0x6f, 0x50, 0x6f, 0x76, 0x61, 0x20, 0x36, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x35, 0x47, 0x4c, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x65, 0x67, 0x61, 0x50,
		0x61, 0x64, 0x20, 0x31, 0x31, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x50, 0x72, 0x65, 0x6f,
		0x20, 0x54, 0x65, 0x6b, 0x6e, 0x6f, 0x73, 0x61, 0x20, 0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20,
		0x50, 0x31, 0x50, 0x72, 0x65, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x54, 0x65, 0x6c, 0x65, 0x32, 0x24,
		0x31, 0x20, 0x31, 0x2e, 0x31, 0x4d, 0x69, 0x64, 0x69, 0x20, 0x32, 0x2e, 0x30, 0x54, 0x65, 0x6c,
		0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x54, 0x45, 0x4c, 0x2d, 0x31, 0x30, 0x31, 0x33, 0x47,
		0x49, 0x51, 0x41, 0x47, 0x69, 0x71, 0x61, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47,
		0x54, 0x45, 0x4c, 0x2d, 0x24, 0x31, 0x46, 0x6f, 0x78, 0x74, 0x72, 0x6f, 0x74, 0x32, 0x46, 0x6f,
		0x78, 0x74, 0x72, 0x6f, 0x74, 0x20, 0x32, 0x4c, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x41, 0x4c,
		0x69, 0x6d, 0x61, 0x20, 0x4c, 0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x4c,
		0x54, 0x45, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x54, 0x45,
		0x20, 0x4d, 0x69, 0x6b, 0x65, 0x4d, 0x69, 0x6b, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x65, 0x6c,
		0x65, 0x67, 0x6f, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x4f, 0x2d, 0x57, 0x35, 0x30, 0x33, 0x57, 0x35,
		0x30, 0x33, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x6f, 0x5f, 0x4a, 0x4f, 0x59, 0x32, 0x4a, 0x6f, 0x79,
		0x20, 0x32, 0x57, 0x69, 0x73, 0x65, 0x32, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x57, 0x69, 0x73, 0x65,
		0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x72, 0x54, 0x65,
		0x6c, 0x69, 0x61, 0x4e, 0x6f, 0x72, 0x64, 0x69, 0x63, 0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20,
		0x4e, 0x6f, 0x72, 0x64, 0x69, 0x63, 0x54, 0x65, 0x6c, 0x69, 0x61, 0x20, 0x62, 0x6f, 0x78, 0x54,
		0x65, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x6c, 0x6b, 0x6f, 0x6d, 0x54, 0x65, 0x6c, 0x6c, 0x79, 0x54,
		0x59, 0x35, 0x35, 0x5f, 0x31, 0x54, 0x59, 0x35, 0x35, 0x2d, 0x31, 0x54, 0x65, 0x6c, 0x6d, 0x61,
		0x54, 0x65, 0x6c, 0x6d, 0x61, 0x5f, 0x46, 0x31, 0x5f, 0x4d, 0x61, 0x78, 0x5f, 0x34, 0x47, 0x46,
		0x31, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x46, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x34, 0x47, 0x46, 0x31, 0x78, 0x34, 0x47, 0x46, 0x31, 0x78, 0x20, 0x34, 0x47, 0x46, 0x65, 0x65,
		0x6c, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x65, 0x65, 0x6c, 0x57, 0x69, 0x2d, 0x4b, 0x69, 0x66,
		0x2b, 0x20, 0x33, 0x47, 0x57, 0x69, 0x2d, 0x4b, 0x69, 0x66, 0x2b, 0x20, 0x34, 0x47, 0x54, 0x65,
		0x6c, 0x6d, 0x61, 0x5f, 0x57, 0x69, 0x6b, 0x69, 0x66, 0x5f, 0x4d, 0x61, 0x78, 0x5f, 0x34, 0x47,
		0x57, 0x69, 0x2d, 0x4b, 0x69, 0x66, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x65, 0x6c, 0x6f, 0x53, 0x79,
		0x73, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x45, 0x4c, 0x4f, 0x5f, 0x4d, 0x35, 0x54, 0x65, 0x6c, 0x70,
		0x6f, 0x54, 0x50, 0x53, 0x24, 0x31, 0x54, 0x65, 0x6d, 0x69, 0x67, 0x65, 0x72, 0x65, 0x65, 0x76,
		0x54, 0x47, 0x20, 0x24, 0x31, 0x54, 0x65, 0x72, 0x61, 0x63, 0x75, 0x62, 0x65, 0x54, 0x65, 0x73,
		0x63, 0x6f, 0x48, 0x75, 0x64, 0x6c, 0x20, 0x24, 0x31, 0x4f, 0x70, 0x33, 0x6e, 0x20, 0x44, 0x6f,
		0x74, 0x74, 0x54, 0x65, 0x74, 0x72, 0x61, 0x74, 0x61, 0x62, 0x43, 0x61, 0x73, 0x65, 0x62, 0x6f,
		0x6f, 0x6b, 0x20, 0x33, 0x54, 0x68, 0x4c, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x32, 0x42,
		0x6f, 0x78, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x54, 0x68, 0x6f,
		0x6d, 0x73, 0x6f, 0x6e, 0x51, 0x4d, 0x37, 0x33, 0x34, 0x2d, 0x32, 0x51, 0x4d, 0x37, 0x33, 0x34,
		0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x35, 0x2d, 0x38, 0x47, 0x51, 0x4d, 0x37, 0x33, 0x36,
		0x2d, 0x38, 0x47, 0x20, 0x28, 0x48, 0x44, 0x29, 0x33, 0x47, 0x20, 0x38, 0x39, 0x35, 0x30, 0x53,
		0x50, 0x54, 0x45, 0x4f, 0x31, 0x30, 0x42, 0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f, 0x31, 0x30, 0x42,
		0x4b, 0x31, 0x36, 0x54, 0x45, 0x4f, 0x58, 0x31, 0x30, 0x2d, 0x4d, 0x54, 0x38, 0x53, 0x4c, 0x31,
		0x32, 0x38, 0x4c, 0x54, 0x45, 0x54, 0x45, 0x4f, 0x58, 0x31, 0x30, 0x54, 0x45, 0x4f, 0x24, 0x31,
		0x48, 0x45, 0x52, 0x4f, 0x31, 0x30, 0x52, 0x4b, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x52,
		0x4b, 0x54, 0x6c, 0x69, 0x6e, 0x6b, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x36,
		0x37, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x20, 0x36, 0x37, 0x39,
		0x45, 0x76, 0x65, 0x72, 0x79, 0x24, 0x31, 0x44, 0x65, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x54,
		0x48, 0x32, 0x30, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x54, 0x48, 0x31,
		0x30, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x20, 0x54, 0x48, 0x31, 0x30, 0x31,
		0x53, 0x65, 0x72, 0x65, 0x61, 0x20, 0x35, 0x30, 0x30, 0x54, 0x68, 0x75, 0x72, 0x61, 0x79, 0x61,
		0x54, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x56, 0x6f, 0x53, 0x54, 0x52, 0x45, 0x41,
		0x4d, 0x20, 0x34, 0x4b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x4b, 0x54, 0x43, 0x44,
		0x38, 0x46, 0x36, 0x30, 0x30, 0x30, 0x24, 0x32, 0x54, 0x69, 0x62, 0x75, 0x74, 0x61, 0x4d, 0x61,
		0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x54, 0x69, 0x67, 0x65, 0x72, 0x73,
		0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x20, 0x53, 0x24, 0x31, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31,
		0x20, 0x54, 0x32, 0x54, 0x49, 0x53, 0x30, 0x30, 0x31, 0x24, 0x31, 0x54, 0x69, 0x6d, 0x65, 0x32,
		0x24, 0x31, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x69, 0x6d, 0x6f, 0x76, 0x69, 0x54, 0x4d,
		0x4f, 0x56, 0x49, 0x5f, 0x59, 0x45, 0x41, 0x48, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x59, 0x65, 0x61,
		0x68, 0x20, 0x42, 0x65, 0x61, 0x74, 0x59, 0x65, 0x61, 0x68, 0x4c, 0x49, 0x56, 0x45, 0x59, 0x65,
		0x61, 0x68, 0x20, 0x4c, 0x49, 0x56, 0x45, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x58,
		0x20, 0x43, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4d, 0x58, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x74, 0x20, 0x32, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x69, 0x73,
		0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x20, 0x55, 0x4c,
		0x54, 0x52, 0x41, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x45,
		0x70, 0x69, 0x78, 0x59, 0x65, 0x61, 0x68, 0x5f, 0x47, 0x6f, 0x59, 0x65, 0x61, 0x68, 0x20, 0x47,
		0x6f, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x61, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x73, 0x69,
		0x67, 0x6e, 0x69, 0x61, 0x20, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x20, 0x24, 0x31, 0x54, 0x69, 0x6e,
		0x61, 0x69, 0x54, 0x69, 0x6e, 0x6d, 0x6f, 0x54, 0x69, 0x76, 0x61, 0x78, 0x54, 0x6f, 0x6c, 0x69,
		0x6e, 0x6f, 0x54, 0x6f, 0x6c, 0x69, 0x6e, 0x6f, 0x20, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54,
		0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x6f, 0x6b, 0x79, 0x54, 0x4f, 0x4f, 0x4b, 0x59, 0x41, 0x39, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x20, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x74,
		0x6f, 0x20, 0x57, 0x34, 0x31, 0x38, 0x43, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x31, 0x31, 0x37, 0x43,
		0x6f, 0x74, 0x6f, 0x20, 0x54, 0x31, 0x31, 0x37, 0x58, 0x31, 0x30, 0x31, 0x33, 0x43, 0x4f, 0x54,
		0x4f, 0x5f, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x34, 0x30, 0x30, 0x31, 0x37, 0x54, 0x6f,
		0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x44, 0x54, 0x34, 0x35, 0x31, 0x38, 0x5f, 0x34,
		0x47, 0x54, 0x44, 0x54, 0x34, 0x35, 0x34, 0x31, 0x5f, 0x34, 0x47, 0x54, 0x44, 0x54, 0x33, 0x37,
		0x37, 0x38, 0x5f, 0x57, 0x69, 0x5f, 0x45, 0x54, 0x44, 0x54, 0x33, 0x38, 0x38, 0x37, 0x5f, 0x57,
		0x69, 0x5f, 0x44, 0x54, 0x44, 0x54, 0x34, 0x35, 0x32, 0x38, 0x5f, 0x34, 0x47, 0x5f, 0x45, 0x54,
		0x6f, 0x70, 0x65, 0x6c, 0x6f, 0x74, 0x65, 0x6b, 0x4b, 0x49, 0x44, 0x53, 0x24, 0x31, 0x20, 0x4b,
		0x69, 0x64, 0x73, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6c, 0x75, 0x78,
		0x54, 0x6f, 0x70, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x50, 0x30, 0x31, 0x54, 0x6f, 0x72, 0x65, 0x78,
		0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x24, 0x31, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20,
		0x53, 0x6b, 0x79, 0x20, 0x33, 0x67, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x33, 0x47, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x54, 0x4f, 0x4d, 0x20, 0x53,
		0x44, 0x52, 0x4f, 0x49, 0x44, 0x5a, 0x20, 0x41, 0x74, 0x6f, 0x6d, 0x20, 0x53, 0x45, 0x47, 0x4f,
		0x20, 0x24, 0x31, 0x45, 0x47, 0x4f, 0x20, 0x50, 0x68, 0x61, 0x62, 0x20, 0x33, 0x47, 0x45, 0x47,
		0x4f, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x54, 0x6f, 0x73, 0x68, 0x69, 0x62, 0x61,
		0x54, 0x2d, 0x30, 0x31, 0x43, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x43,
		0x54, 0x2d, 0x30, 0x31, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x31, 0x44,
		0x54, 0x2d, 0x30, 0x32, 0x44, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x54, 0x2d, 0x30, 0x32, 0x44,
		0x49, 0x53, 0x30, 0x34, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x30, 0x34, 0x49, 0x53,
		0x31, 0x31, 0x54, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x49, 0x53, 0x31, 0x31, 0x54, 0x41, 0x54,
		0x37, 0x2d, 0x43, 0x41, 0x54, 0x31, 0x53, 0x30, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41, 0x54,
		0x31, 0x53, 0x30, 0x41, 0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20,
		0x41, 0x54, 0x33, 0x30, 0x30, 0x53, 0x45, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67,
		0x7a, 0x61, 0x20, 0x41, 0x54, 0x35, 0x30, 0x30, 0x61, 0x52, 0x65, 0x67, 0x7a, 0x61, 0x20, 0x41,
		0x54, 0x24, 0x31, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41, 0x54, 0x31, 0x30, 0x24, 0x31,
		0x2d, 0x41, 0x41, 0x54, 0x31, 0x30, 0x2d, 0x41, 0x45, 0x78, 0x63, 0x69, 0x74, 0x65, 0x20, 0x41,
		0x54, 0x31, 0x30, 0x2d, 0x41, 0x53, 0x41, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x54, 0x45, 0x20, 0x4c,
		0x35, 0x30, 0x2d, 0x43, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x4c, 0x35,
		0x30, 0x43, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x33, 0x32,
		0x57, 0x46, 0x32, 0x46, 0x35, 0x33, 0x44, 0x42, 0x36, 0x35, 0x55, 0x46, 0x33, 0x44, 0x36, 0x33,
		0x44, 0x41, 0x41, 0x46, 0x54, 0x4b, 0x4d, 0x53, 0x54, 0x31, 0x32, 0x34, 0x33, 0x4c, 0x46, 0x37,
		0x31, 0x31, 0x55, 0x32, 0x30, 0x41, 0x46, 0x54, 0x44, 0x43, 0x54, 0x33, 0x31, 0x34, 0x4b, 0x20,
		0x55, 0x48, 0x44, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x46, 0x54, 0x42, 0x41, 0x4d,
		0x52, 0x33, 0x31, 0x31, 0x34, 0x33, 0x4c, 0x46, 0x34, 0x32, 0x31, 0x55, 0x31, 0x39, 0x56, 0x33,
		0x35, 0x20, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54,
		0x53, 0x42, 0x4e, 0x65, 0x74, 0x54, 0x56, 0x2f, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x2d, 0x4d, 0x49,
		0x44, 0x38, 0x37, 0x30, 0x53, 0x42, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x20, 0x38,
		0x22, 0x54, 0x4d, 0x2d, 0x4d, 0x49, 0x44, 0x31, 0x30, 0x35, 0x30, 0x57, 0x4b, 0x44, 0x4d, 0x65,
		0x67, 0x61, 0x20, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20,
		0x33, 0x47, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x54, 0x52, 0x39, 0x39, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x72, 0x65, 0x6b, 0x53, 0x74, 0x6f,
		0x72, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x53, 0x54, 0x31,
		0x33, 0x34, 0x31, 0x36, 0x2d, 0x31, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68,
		0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x31, 0x33, 0x2e, 0x34, 0x22, 0x53, 0x75, 0x72, 0x66, 0x74,
		0x61, 0x62, 0x20, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31, 0x31, 0x53, 0x75,
		0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x20, 0x53, 0x31,
		0x31, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20, 0x50, 0x31, 0x30, 0x53, 0x75, 0x72,
		0x66, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x54, 0x46, 0x4d, 0x54, 0x4b, 0x41, 0x57, 0x30, 0x31,
		0x32, 0x33, 0x32, 0x53, 0x75, 0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x4c, 0x31, 0x35, 0x53, 0x75,
		0x72, 0x66, 0x54, 0x61, 0x62, 0x20, 0x58, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x49, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x54, 0x72, 0x65, 0x76, 0x69, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31,
		0x20, 0x33, 0x47, 0x20, 0x56, 0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x20, 0x56,
		0x38, 0x54, 0x41, 0x42, 0x20, 0x39, 0x20, 0x33, 0x47, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x20,
		0x33, 0x47, 0x20, 0x56, 0x31, 0x36, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47,
		0x56, 0x4d, 0x49, 0x4e, 0x49, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x20, 0x56, 0x50, 0x68, 0x61,
		0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x20, 0x43, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20,
		0x34, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x34, 0x2e, 0x35, 0x51, 0x50,
		0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35, 0x20, 0x53, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65,
		0x74, 0x20, 0x35, 0x2e, 0x33, 0x20, 0x51, 0x50, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x35,
		0x2e, 0x35, 0x20, 0x51, 0x20, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x50, 0x68, 0x61, 0x62,
		0x6c, 0x65, 0x74, 0x20, 0x36, 0x20, 0x53, 0x54, 0x72, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x54,
		0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x66, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x73,
		0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x31, 0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31,
		0x53, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e,
		0x5f, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x72, 0x69, 0x6d, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x70,
		0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x20, 0x36,
		0x30, 0x54, 0x72, 0x69, 0x6f, 0x56, 0x35, 0x31, 0x44, 0x54, 0x54, 0x72, 0x6f, 0x6e, 0x73, 0x6d,
		0x61, 0x72, 0x74, 0x54, 0x72, 0x75, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x20, 0x35, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x34, 0x2e, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x47, 0x65, 0x6e, 0x20, 0x43, 0x20, 0x24,
		0x31, 0x22, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x79, 0x20, 0x35, 0x2e, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20,
		0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x50, 0x72, 0x6f,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75,
		0x72, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47, 0x20, 0x41,
		0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x20, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x47, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x2e, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x34, 0x47, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x79, 0x20, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x47, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x50, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47,
		0x20, 0x4d, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x34, 0x47,
		0x20, 0x4d, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x4d,
		0x41, 0x52, 0x54, 0x20, 0x54, 0x41, 0x42, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x4d, 0x31, 0x53, 0x4d, 0x41, 0x52,
		0x54, 0x20, 0x54, 0x41, 0x42, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x20, 0x50,
		0x52, 0x4f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x65,
		0x2d, 0x42, 0x69, 0x7a, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x20, 0x54, 0x41,
		0x42, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x34, 0x47, 0x20, 0x65, 0x2d, 0x42, 0x69, 0x7a, 0x54, 0x52, 0x55, 0x45,
		0x20, 0x42, 0x45, 0x59, 0x4f, 0x4e, 0x44, 0x20, 0x54, 0x41, 0x42, 0x20, 0x33, 0x47, 0x42, 0x65,
		0x79, 0x6f, 0x6e, 0x64, 0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x37, 0x2e, 0x30, 0x20, 0x51, 0x75, 0x61, 0x64, 0x43, 0x6f, 0x72,
		0x65, 0x48, 0x50, 0x48, 0x30, 0x37, 0x49, 0x44, 0x20, 0x54, 0x56, 0x20, 0x48, 0x50, 0x48, 0x30,
		0x37, 0x54, 0x72, 0x75, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x54, 0x75, 0x43, 0x45, 0x4c, 0x54,
		0x75, 0x6e, 0x69, 0x73, 0x69, 0x65, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x53, 0x74,
		0x61, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20, 0x54, 0x54, 0x58, 0x35, 0x20,
		0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x35, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x58, 0x20, 0x52, 0x61,
		0x79, 0x58, 0x35, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x58, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x58,
		0x36, 0x20, 0x5a, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x37, 0x22,
		0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x78, 0x5f, 0x53, 0x33,
		0x53, 0x33, 0x45, 0x33, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x2d, 0x58, 0x5f, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x45, 0x70, 0x73, 0x69, 0x6c, 0x6f,
		0x6e, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58, 0x20, 0x6c, 0x61, 0x6d, 0x64, 0x61, 0x4c, 0x61,
		0x6d, 0x64, 0x61, 0x50, 0x69, 0x20, 0x34, 0x47, 0x54, 0x55, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x49,
		0x34, 0x47, 0x49, 0x20, 0x34, 0x47, 0x49, 0x63, 0x65, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x58,
		0x20, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x72, 0x61, 0x6c, 0x20, 0x49,
		0x49, 0x41, 0x71, 0x75, 0x61, 0x20, 0x49, 0x49, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x20, 0x33,
		0x47, 0x48, 0x69, 0x76, 0x65, 0x20, 0x56, 0x49, 0x46, 0x69, 0x72, 0x65, 0x20, 0x49, 0x49, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x42, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x20, 0x49, 0x56, 0x52, 0x75, 0x62,
		0x69, 0x6b, 0x20, 0x49, 0x49, 0x20, 0x37, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x75, 0x62, 0x69, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20,
		0x31, 0x30, 0x2e, 0x31, 0x22, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x20, 0x49, 0x49, 0x49,
		0x20, 0x33, 0x47, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30,
		0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c, 0x74, 0x61, 0x62, 0x32, 0x47, 0x42, 0x31, 0x30, 0x43,
		0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x43, 0x61, 0x6c, 0x6c,
		0x74, 0x61, 0x62, 0x37, 0x69, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x20,
		0x37, 0x22, 0x51, 0x55, 0x41, 0x44, 0x2d, 0x43, 0x4f, 0x52, 0x45, 0x20, 0x41, 0x33, 0x33, 0x20,
		0x69, 0x6e, 0x65, 0x74, 0x54, 0x77, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x75, 0x72, 0x62, 0x6f,
		0x4b, 0x69, 0x64, 0x73, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x70, 0x61, 0x64, 0x20, 0x33,
		0x47, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x64, 0x20, 0x33, 0x47, 0x33, 0x47,
		0x20, 0x4e, 0x65, 0x77, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x50, 0x61, 0x64, 0x54, 0x75, 0x72, 0x6b,
		0x63, 0x65, 0x6c, 0x6c, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x54, 0x35, 0x30, 0x54, 0x24, 0x31,
		0x30, 0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x35,
		0x54, 0x32, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x54, 0x75,
		0x76, 0x69, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x4d, 0x4f, 0x53, 0x54, 0x77, 0x6f, 0x65, 0x54, 0x79,
		0x6d, 0x65, 0x73, 0x54, 0xc3, 0xbc, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d,
		0x54, 0x75, 0x72, 0x6b, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x6b, 0x6f, 0x6d, 0x54, 0x54, 0x31, 0x37,
		0x35, 0x55, 0x2d, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x33, 0x30,
		0x65, 0x20, 0x35, 0x47, 0x45, 0x6e, 0x6a, 0x6f, 0x79, 0x20, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x55, 0x2e, 0x53, 0x2e, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x55, 0x53,
		0x43, 0x43, 0x2d, 0x55, 0x53, 0x43, 0x43, 0x2d, 0x45, 0x36, 0x37, 0x36, 0x32, 0x4b, 0x79, 0x6f,
		0x63, 0x65, 0x72, 0x61, 0x20, 0x44, 0x75, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x44,
		0x54, 0x56, 0x33, 0x34, 0x38, 0x20, 0x44, 0x56, 0x42, 0x54, 0x56, 0x33, 0x34, 0x38, 0x20, 0x49,
		0x53, 0x44, 0x42, 0x54, 0x56, 0x33, 0x35, 0x38, 0x20, 0x44, 0x56, 0x42, 0x55, 0x45, 0x55, 0x45,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x31, 0x50, 0x61, 0x64, 0x20, 0x31, 0x55, 0x47, 0x49, 0x4e, 0x45,
		0x55, 0x4d, 0x49, 0x44, 0x49, 0x47, 0x49, 0x4d, 0x54, 0x30, 0x31, 0x41, 0x31, 0x31, 0x20, 0x54,
		0x61, 0x62, 0x4d, 0x54, 0x30, 0x37, 0x41, 0x31, 0x33, 0x20, 0x54, 0x61, 0x62, 0x47, 0x31, 0x20,
		0x54, 0x61, 0x62, 0x4d, 0x54, 0x31, 0x31, 0x47, 0x32, 0x20, 0x54, 0x61, 0x62, 0x4d, 0x54, 0x31,
		0x36, 0x47, 0x35, 0x20, 0x54, 0x61, 0x62, 0x41, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d,
		0x61, 0x78, 0x4d, 0x50, 0x31, 0x37, 0x4d, 0x50, 0x32, 0x39, 0x43, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x50, 0x30, 0x37, 0x4d, 0x50, 0x32, 0x30, 0x4d, 0x50, 0x30, 0x39, 0x4d, 0x50, 0x31,
		0x39, 0x46, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x50, 0x31, 0x33, 0x46, 0x33,
		0x20, 0x35, 0x47, 0x4d, 0x50, 0x31, 0x38, 0x47, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x31, 0x31,
		0x53, 0x41, 0x31, 0x33, 0x53, 0x41, 0x31, 0x35, 0x43, 0x47, 0x35, 0x20, 0x4d, 0x65, 0x63, 0x68,
		0x61, 0x47, 0x36, 0x20, 0x35, 0x47, 0x47, 0x35, 0x41, 0x47, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x47,
		0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x20,
		0x58, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x58, 0x55, 0x4d, 0x49, 0x20, 0x54, 0x4f, 0x55, 0x43,
		0x48, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x45, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49,
		0x53, 0x4f, 0x4e, 0x20, 0x47, 0x54, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x50, 0x52,
		0x34, 0x4a, 0x42, 0x58, 0x32, 0x30, 0x41, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x32, 0x30,
		0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20,
		0x4e, 0x31, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x58, 0x31, 0x30, 0x42, 0x69, 0x73, 0x6f, 0x6e,
		0x20, 0x47, 0x54, 0x32, 0x20, 0x35, 0x47, 0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x47, 0x54, 0x32,
		0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x32, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x49, 0x53, 0x4f, 0x4e, 0x42, 0x69,
		0x73, 0x6f, 0x6e, 0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x53, 0x48, 0x61, 0x6d, 0x6d, 0x65,
		0x72, 0x20, 0x53, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x5f, 0x58, 0x44, 0x69, 0x61, 0x6d,
		0x6f, 0x6e, 0x64, 0x20, 0x58, 0x43, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x32, 0x43, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x32, 0x53, 0x75, 0x70, 0x65, 0x72, 0x5a, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x32, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x53, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x32, 0x5f,
		0x50, 0x52, 0x4f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x33, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x35, 0x53, 0x41, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x31, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x35, 0x47, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x37, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x4e, 0x49, 0x57, 0x41, 0x55, 0x4e, 0x4e, 0x4f, 0x55, 0x4f,
		0x4f, 0x47, 0x4f, 0x55, 0x55, 0x54, 0x4f, 0x4b, 0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x33, 0x53,
		0x44, 0x6f, 0x72, 0x65, 0x6c, 0x20, 0x24, 0x31, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x37, 0x51,
		0x55, 0x54, 0x53, 0x74, 0x61, 0x72, 0x63, 0x6f, 0x6d, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x5a,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x7a, 0x62, 0x65, 0x6b, 0x69, 0x73, 0x74, 0x61,
		0x6e, 0x55, 0x67, 0x6f, 0x6f, 0x73, 0x55, 0x54, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x4f,
		0x58, 0x33, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x4f, 0x58, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x55, 0x68, 0x61, 0x6e, 0x73, 0x55, 0x68, 0x61, 0x70, 0x70, 0x79, 0x55, 0x50, 0x24, 0x31, 0x55,
		0x50, 0x33, 0x35, 0x30, 0x55, 0x50, 0x35, 0x38, 0x30, 0x55, 0x35, 0x38, 0x30, 0x55, 0x6c, 0x65,
		0x66, 0x6f, 0x6e, 0x65, 0x42, 0x65, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x24, 0x31, 0x42, 0x65,
		0x20, 0x50, 0x75, 0x72, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x50, 0x75, 0x72,
		0x65, 0x42, 0x65, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x65, 0x20, 0x4f,
		0x6e, 0x65, 0x42, 0x65, 0x20, 0x58, 0x42, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x61, 0x72,
		0x69, 0x73, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x61, 0x72, 0x69, 0x73, 0x5f, 0x58, 0x50, 0x61, 0x72, 0x69, 0x73, 0x20, 0x58, 0x50,
		0x61, 0x72, 0x69, 0x73, 0x54, 0x69, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x54, 0x69,
		0x67, 0x65, 0x72, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x41, 0x72,
		0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x20, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x36, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x32, 0x30, 0x57, 0x54, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x24, 0x31, 0x45, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x24, 0x31, 0x53, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x58, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x33, 0x57, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x33, 0x57, 0x54, 0x41, 0x72, 0x6d,
		0x6f, 0x72, 0x20, 0x24, 0x31, 0x20, 0x35, 0x47, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f,
		0x72, 0x20, 0x50, 0x61, 0x64, 0x24, 0x31, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x24, 0x31, 0x47, 0x65,
		0x6d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x65, 0x6e, 0x6e, 0x61, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x24, 0x31, 0x50, 0x54, 0x61, 0x62, 0x20, 0x41, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x55, 0x6d, 0x61, 0x78, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x24, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x24, 0x31, 0x51,
		0x61, 0x20, 0x33, 0x47, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31,
		0x30, 0x51, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b,
		0x20, 0x24, 0x31, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x31, 0x30, 0x4c, 0x2d, 0x50, 0x4c, 0x55, 0x53,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30, 0x4c, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x30,
		0x51, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20,
		0x31, 0x30, 0x41, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f,
		0x6b, 0x20, 0x31, 0x30, 0x51, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e,
		0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x35, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x55, 0x6d, 0x69, 0x69, 0x6f, 0x50, 0x36, 0x30, 0x5f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5f,
		0x35, 0x47, 0x50, 0x36, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x55, 0x6e,
		0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x54, 0x65, 0x63, 0x68, 0x53, 0x39, 0x30, 0x30, 0x50, 0x52,
		0x4f, 0x42, 0x54, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x42, 0x54, 0x53, 0x39,
		0x30, 0x30, 0x5f, 0x50, 0x72, 0x6f, 0x53, 0x39, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x6e,
		0x69, 0x64, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x4a, 0x65, 0x6c, 0x6c,
		0x79, 0x20, 0x32, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x32, 0x45, 0x4a, 0x65, 0x6c, 0x6c, 0x79,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x4a, 0x65, 0x6c, 0x6c, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x54, 0x69,
		0x74, 0x61, 0x6e, 0x5f, 0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x53, 0x6c, 0x69, 0x6d,
		0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x2d, 0x53, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f,
		0x63, 0x6b, 0x20, 0x53, 0x55, 0x4e, 0x49, 0x41, 0x36, 0x32, 0x5f, 0x53, 0x30, 0x31, 0x54, 0x69,
		0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x45, 0x54, 0x69, 0x63, 0x6b, 0x74, 0x6f, 0x63, 0x6b,
		0x54, 0x41, 0x4e, 0x4b, 0x20, 0x30, 0x31, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x30, 0x31, 0x54, 0x41,
		0x4e, 0x4b, 0x20, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x54, 0x61, 0x6e, 0x6b, 0x20, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x41, 0x4e, 0x4b, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x20, 0x31, 0x54, 0x61, 0x6e,
		0x6b, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x38, 0x38, 0x34, 0x39, 0x20, 0x54, 0x61, 0x6e,
		0x6b, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x71, 0x63, 0x65,
		0x6c, 0x6c, 0x41, 0x34, 0x55, 0x6e, 0x69, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x73,
		0x74, 0x72, 0x6f, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x63, 0x68, 0x45, 0x41, 0x35, 0x30,
		0x30, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x64, 0x20, 0x47, 0x72, 0x6f,
		0x75, 0x70, 0x53, 0x44, 0x4f, 0x54, 0x54, 0x30, 0x32, 0x30, 0x32, 0x45, 0x4f, 0x4e, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x2d, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x53, 0x44, 0x53, 0x54, 0x42, 0x30, 0x32, 0x45, 0x4f, 0x4e, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x55,
		0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x4d, 0x31, 0x30, 0x20,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x38, 0x53, 0x2b, 0x20, 0x34, 0x4b, 0x48, 0x31, 0x30, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x69, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x41,
		0x75, 0x64, 0x69, 0x20, 0x4b, 0x53, 0x57, 0x61, 0x79, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x78,
		0x38, 0x36, 0x5f, 0x36, 0x34, 0x20, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x6e, 0x65,
		0x63, 0x74, 0x6f, 0x55, 0x35, 0x31, 0x33, 0x44, 0x72, 0x6f, 0x6e, 0x65, 0x20, 0x58, 0x54, 0x55,
		0x35, 0x31, 0x35, 0x31, 0x55, 0x36, 0x31, 0x31, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20,
		0x58, 0x55, 0x36, 0x31, 0x33, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x53, 0x55, 0x36,
		0x31, 0x35, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x4d, 0x55, 0x36, 0x31, 0x36, 0x55,
		0x37, 0x31, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x55, 0x37, 0x31, 0x30, 0x55,
		0x37, 0x32, 0x30, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x20, 0x5a, 0x55, 0x2d, 0x38, 0x33,
		0x30, 0x52, 0x75, 0x73, 0x68, 0x55, 0x39, 0x30, 0x33, 0x55, 0x39, 0x30, 0x35, 0x41, 0x69, 0x72,
		0x20, 0x35, 0x2e, 0x35, 0x55, 0x6e, 0x6e, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e,
		0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x53, 0x50, 0x37, 0x55, 0x6e, 0x6f, 0x50, 0x68, 0x6f,
		0x6e, 0x65, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x35, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x65,
		0x6d, 0x69, 0x65, 0x72, 0x20, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x55, 0x6e, 0x6f, 0x6e, 0x75, 0x55,
		0x6e, 0x6f, 0x77, 0x68, 0x79, 0x51, 0x4f, 0x4f, 0x51, 0x20, 0x56, 0x24, 0x31, 0x51, 0x4f, 0x4f,
		0x51, 0x55, 0x72, 0x6f, 0x76, 0x6f, 0x56, 0x2d, 0x47, 0x65, 0x6e, 0x56, 0x2d, 0x48, 0x4f, 0x4d,
		0x45, 0x56, 0x2d, 0x48, 0x4f, 0x50, 0x45, 0x56, 0x41, 0x49, 0x4f, 0x56, 0x50, 0x41, 0x30, 0x35,
		0x31, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x56, 0x41, 0x4c, 0x45, 0x56, 0x24, 0x31, 0x45,
		0x20, 0x4c, 0x54, 0x45, 0x56, 0x41, 0x4c, 0x45, 0x4d, 0x50, 0x48, 0x41, 0x4e, 0x54, 0x4f, 0x4d,
		0x5f, 0x5a, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x20, 0x5a, 0x56, 0x41, 0x4c, 0x54, 0x45,
		0x43, 0x48, 0x54, 0x41, 0x42, 0x37, 0x51, 0x38, 0x30, 0x34, 0x56, 0x41, 0x4c, 0x54, 0x41, 0x42,
		0x2d, 0x37, 0x51, 0x38, 0x30, 0x34, 0x56, 0x41, 0x4c, 0x56, 0x41, 0x4e, 0x57, 0x49, 0x4e, 0x56,
		0x41, 0x56, 0x41, 0x56, 0x43, 0x43, 0x61, 0x63, 0x74, 0x75, 0x73, 0x2d, 0x50, 0x72, 0x6f, 0x43,
		0x61, 0x63, 0x74, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x24, 0x31, 0x20, 0x49, 0x49, 0x56, 0x44,
		0x56, 0x44, 0x56, 0x45, 0x4f, 0x4e, 0x56, 0x45, 0x54, 0x41, 0x53, 0x56, 0x47, 0x4f, 0x20, 0x54,
		0x45, 0x4c, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x56, 0x24, 0x31, 0x4e, 0x65, 0x77,
		0x20, 0x24, 0x31, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x32, 0x69, 0x5f, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x20, 0x54, 0x41, 0x42, 0x20, 0x32, 0x56, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x32, 0x56, 0x49, 0x44, 0x41, 0x56, 0x49, 0x49, 0x50, 0x4f, 0x4f, 0x76,
		0x69, 0x32, 0x30, 0x32, 0x32, 0x30, 0x38, 0x31, 0x39, 0x52, 0x36, 0x56, 0x49, 0x4b, 0x55, 0x53,
		0x48, 0x41, 0x56, 0x49, 0x4c, 0x4c, 0x41, 0x4f, 0x4e, 0x56, 0x36, 0x37, 0x35, 0x31, 0x4c, 0x56,
		0x33, 0x30, 0x20, 0x52, 0x53, 0x56, 0x35, 0x30, 0x31, 0x57, 0x56, 0x32, 0x30, 0x20, 0x53, 0x45,
		0x56, 0x49, 0x4d, 0x4f, 0x51, 0x41, 0x34, 0x39, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x49, 0x56,
		0x49, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x56, 0x49, 0x56, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x56,
		0x49, 0x57, 0x41, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x4c, 0x69, 0x67,
		0x68, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x20, 0x50, 0x4c, 0x55,
		0x53, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x49, 0x47, 0x48, 0x54,
		0x20, 0x4f, 0x4e, 0x45, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x20, 0x4f, 0x6e, 0x65, 0x4c, 0x69, 0x67,
		0x68, 0x74, 0x20, 0x41, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x20,
		0x50, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x31, 0x56, 0x4b, 0x20, 0x4d, 0x6f, 0x62,
		0x69, 0x6c, 0x65, 0x56, 0x4b, 0x24, 0x31, 0x56, 0x4b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x35,
		0x20, 0x53, 0x45, 0x56, 0x4e, 0x50, 0x54, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
		0x67, 0x79, 0x56, 0x4e, 0x54, 0x2d, 0x54, 0x61, 0x62, 0x38, 0x56, 0x4f, 0x43, 0x41, 0x4c, 0x56,
		0x4f, 0x47, 0x41, 0x56, 0x4f, 0x47, 0x41, 0x20, 0x35, 0x35, 0x39, 0x30, 0x39, 0x56, 0x56, 0x4f,
		0x4c, 0x49, 0x41, 0x56, 0x4f, 0x4c, 0x4b, 0x41, 0x4e, 0x4f, 0x56, 0x55, 0x43, 0x41, 0x54, 0x49,
		0x4d, 0x45, 0x53, 0x56, 0x75, 0x63, 0x61, 0x50, 0x61, 0x64, 0x56, 0x56, 0x45, 0x54, 0x49, 0x4d,
		0x45, 0x56, 0x31, 0x56, 0x61, 0x6e, 0x6b, 0x79, 0x6f, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50,
		0x61, 0x64, 0x20, 0x53, 0x24, 0x31, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20,
		0x24, 0x31, 0x51, 0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x53, 0x31, 0x30, 0x5f, 0x52, 0x4f, 0x57,
		0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x50, 0x61, 0x64, 0x20, 0x53, 0x31, 0x30, 0x56, 0x61, 0x72,
		0x67, 0x6f, 0x56, 0x61, 0x73, 0x74, 0x6b, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x56, 0x65, 0x69, 0x64, 0x6f, 0x6f, 0x56, 0x45, 0x49,
		0x44, 0x4f, 0x4f, 0x56, 0x65, 0x6b, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x73, 0x6f, 0x49, 0x73, 0x70,
		0x72, 0x69, 0x74, 0x20, 0x55, 0x35, 0x30, 0x56, 0x65, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x56, 0x65,
		0x6e, 0x74, 0x75, 0x72, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x4d, 0x61, 0x72, 0x69, 0x6e, 0x65,
		0x72, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x43, 0x54, 0x24, 0x31, 0x56, 0x65, 0x72,
		0x69, 0x63, 0x6f, 0x55, 0x6e, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x55, 0x6e, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x4d, 0x2d, 0x24, 0x31, 0x56, 0x65, 0x72, 0x69, 0x7a, 0x6f,
		0x6e, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x53,
		0x55, 0x4e, 0x31, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x38, 0x20, 0x48, 0x44,
		0x51, 0x54, 0x41, 0x53, 0x55, 0x4e, 0x32, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20,
		0x38, 0x20, 0x48, 0x44, 0x20, 0x34, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a,
		0x33, 0x4b, 0x49, 0x44, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x4b, 0x69, 0x64,
		0x73, 0x20, 0x4c, 0x54, 0x45, 0x51, 0x54, 0x41, 0x51, 0x5a, 0x33, 0x45, 0x6c, 0x6c, 0x69, 0x70,
		0x73, 0x69, 0x73, 0x20, 0x38, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x20, 0x37, 0x57,
		0x54, 0x56, 0x49, 0x53, 0x30, 0x31, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69,
		0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x56, 0x65, 0x72, 0x6e, 0x65, 0x65, 0x41, 0x70, 0x6f, 0x6c,
		0x6c, 0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x58, 0x41,
		0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x68, 0x6f,
		0x72, 0x20, 0x45, 0x54, 0x68, 0x6f, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x72, 0x6e,
		0x65, 0x65, 0x5f, 0x4d, 0x35, 0x4d, 0x37, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x32, 0x5f, 0x65, 0x75,
		0x72, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x20,
		0x45, 0x31, 0x2e, 0x31, 0x56, 0x65, 0x72, 0x73, 0x75, 0x73, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
		0x4c, 0x75, 0x63, 0x6b, 0x20, 0x4c, 0x20, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x49, 0x6d, 0x70,
		0x72, 0x65, 0x73, 0x73, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20,
		0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x24, 0x31, 0x20, 0x34,
		0x47, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x75, 0x63, 0x6b, 0x20, 0x34, 0x47,
		0x20, 0x4e, 0x46, 0x43, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x69, 0x6f, 0x6e,
		0x20, 0x24, 0x31, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x54, 0x61, 0x62, 0x20, 0x58, 0x24, 0x31,
		0x54, 0x61, 0x62, 0x20, 0x24, 0x31, 0x47, 0x20, 0x24, 0x32, 0x2e, 0x24, 0x33, 0x22, 0x56, 0x65,
		0x72, 0x74, 0x75, 0x41, 0x73, 0x74, 0x65, 0x72, 0x24, 0x31, 0x56, 0x54, 0x4c, 0x2d, 0x32, 0x30,
		0x32, 0x31, 0x30, 0x31, 0x69, 0x56, 0x65, 0x72, 0x74, 0x75, 0x20, 0x35, 0x47, 0x56, 0x54, 0x4c,
		0x2d, 0x32, 0x30, 0x32, 0x32, 0x30, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x76, 0x65, 0x72, 0x74, 0x75,
		0x20, 0x35, 0x47, 0x56, 0x54, 0x4c, 0x2d, 0x32, 0x30, 0x32, 0x33, 0x30, 0x31, 0x4d, 0x65, 0x74,
		0x61, 0x76, 0x65, 0x72, 0x74, 0x75, 0x20, 0x32, 0x20, 0x35, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74,
		0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x58, 0x56, 0x65, 0x72, 0x79, 0x6b, 0x6f,
		0x6f, 0x6c, 0x76, 0x65, 0x72, 0x79, 0x6b, 0x6f, 0x6f, 0x6c, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x4c,
		0x6f, 0x74, 0x75, 0x73, 0x20, 0x4a, 0x72, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x49, 0x49, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x4c,
		0x54, 0x45, 0x4c, 0x6f, 0x74, 0x75, 0x73, 0x20, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69,
		0x63, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x65, 0x50, 0x68, 0x61,
		0x6e, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x49, 0x49, 0x41, 0x6c, 0x70, 0x68,
		0x61, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49,
		0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x4d, 0x61, 0x76, 0x65,
		0x72, 0x69, 0x63, 0x6b, 0x20, 0x49, 0x49, 0x49, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72,
		0x69, 0x63, 0x6b, 0x20, 0x4a, 0x72, 0x4d, 0x61, 0x76, 0x65, 0x72, 0x69, 0x63, 0x6b, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x70, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x61, 0x72, 0x20, 0x4a, 0x72, 0x41,
		0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x53, 0x6f, 0x6c,
		0x20, 0x51, 0x75, 0x61, 0x74, 0x72, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73,
		0x20, 0x50, 0x72, 0x6f, 0x43, 0x79, 0x70, 0x72, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65,
		0x6f, 0x20, 0x33, 0x47, 0x4c, 0x65, 0x6f, 0x20, 0x49, 0x56, 0x4c, 0x65, 0x6f, 0x20, 0x56, 0x44,
		0x6f, 0x72, 0x61, 0x64, 0x6f, 0x4f, 0x72, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f,
		0x73, 0x6d, 0x6f, 0x20, 0x4a, 0x72, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x52, 0x6f, 0x79, 0x61, 0x6c,
		0x65, 0x20, 0x51, 0x75, 0x61, 0x74, 0x74, 0x72, 0x6f, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61,
		0x64, 0x20, 0x4c, 0x54, 0x45, 0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x49,
		0x4b, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x64, 0x20, 0x49, 0x56, 0x56, 0x65, 0x73, 0x74, 0x61,
		0x56, 0x45, 0x53, 0x54, 0x41, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x54, 0x56, 0x20, 0x33, 0x32, 0x4c, 0x44, 0x38, 0x36, 0x53, 0x56, 0x45, 0x53, 0x54, 0x41, 0x5f,
		0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x56, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x54, 0x56, 0x56,
		0x65, 0x73, 0x74, 0x65, 0x6c, 0x56, 0x54, 0x39, 0x37, 0x50, 0x52, 0x4f, 0x56, 0x54, 0x61, 0x62,
		0x20, 0x39, 0x2e, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x50, 0x37, 0x34, 0x56, 0x54, 0x61, 0x62,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x49, 0x49, 0x56, 0x54, 0x41, 0x42, 0x31, 0x30, 0x56, 0x54,
		0x61, 0x62, 0x20, 0x31, 0x30, 0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x45, 0x43, 0x4f,
		0x5f, 0x49, 0x49, 0x49, 0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x45, 0x63, 0x6f, 0x20, 0x33,
		0x56, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x37, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x49, 0x49,
		0x56, 0x54, 0x61, 0x62, 0x20, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x56, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x56, 0x33, 0x5f, 0x35, 0x35, 0x38, 0x30, 0x5f, 0x44, 0x75, 0x61, 0x6c,
		0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x33, 0x20, 0x35, 0x35, 0x38, 0x30, 0x20, 0x44, 0x75,
		0x61, 0x6c, 0x56, 0x53, 0x50, 0x31, 0x34, 0x35, 0x4d, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x34,
		0x2e, 0x35, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x35,
		0x2e, 0x30, 0x56, 0x56, 0x53, 0x50, 0x32, 0x35, 0x30, 0x53, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20,
		0x35, 0x2e, 0x30, 0x58, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x47, 0x56, 0x65, 0x6e, 0x75, 0x73,
		0x20, 0x35, 0x2e, 0x35, 0x56, 0x56, 0x53, 0x50, 0x33, 0x35, 0x35, 0x53, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x35, 0x2e, 0x35, 0x58, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x56, 0x24, 0x31, 0x24,
		0x32, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x5a, 0x24, 0x31, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20,
		0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75,
		0x73, 0x20, 0x45, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x45,
		0x24, 0x31, 0x56, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x44, 0x75,
		0x61, 0x6c, 0x35, 0x30, 0x30, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x73, 0x74, 0x65,
		0x6c, 0x5f, 0x35, 0x30, 0x30, 0x30, 0x5f, 0x32, 0x67, 0x62, 0x35, 0x30, 0x30, 0x30, 0x20, 0x32,
		0x47, 0x42, 0x35, 0x35, 0x33, 0x30, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x78, 0x69, 0x61,
		0x56, 0x65, 0x78, 0x69, 0x61, 0x20, 0x46, 0x43, 0x53, 0x20, 0x45, 0x32, 0x20, 0x43, 0x4c, 0x4d,
		0x45, 0x6c, 0x65, 0x67, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x45, 0x32, 0x20, 0x43, 0x4c, 0x4d, 0x56,
		0x69, 0x42, 0x6f, 0x78, 0x56, 0x69, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6f, 0x54, 0x6f, 0x75, 0x63,
		0x68, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x56,
		0x69, 0x64, 0x65, 0x6f, 0x63, 0x6f, 0x6e, 0x5f, 0x56, 0x31, 0x35, 0x38, 0x35, 0x56, 0x31, 0x35,
		0x38, 0x35, 0x56, 0x54, 0x37, 0x35, 0x43, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x33, 0x4b,
		0x72, 0x79, 0x74, 0x6f, 0x6e, 0x4b, 0x72, 0x79, 0x74, 0x6f, 0x6e, 0x20, 0x32, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x31, 0x44, 0x65, 0x6c, 0x69,
		0x74, 0x65, 0x20, 0x32, 0x31, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x4d, 0x65, 0x74, 0x61, 0x6c, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x53, 0x74, 0x61, 0x72, 0x72,
		0x20, 0x31, 0x30, 0x30, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x30, 0x49, 0x6e, 0x66, 0x69,
		0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x20, 0x24, 0x31, 0x49, 0x6e, 0x66, 0x69, 0x6e,
		0x69, 0x75, 0x6d, 0x20, 0x5a, 0x34, 0x35, 0x51, 0x20, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x5a, 0x35, 0x30, 0x20, 0x4e, 0x6f, 0x76, 0x61, 0x56, 0x69,
		0x65, 0x6e, 0x64, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x56, 0x35, 0x30,
		0x30, 0x41, 0x38, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x50, 0x68, 0x6f, 0x6e,
		0x65, 0x20, 0x24, 0x31, 0x76, 0x73, 0x69, 0x37, 0x71, 0x5f, 0x31, 0x56, 0x69, 0x65, 0x77, 0x50,
		0x61, 0x64, 0x20, 0x69, 0x37, 0x51, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31,
		0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x49, 0x46, 0x50, 0x24, 0x31, 0x35,
		0x30, 0x2d, 0x33, 0x20, 0x24, 0x31, 0x22, 0x20, 0x34, 0x4b, 0x56, 0x69, 0x6e, 0x61, 0x62, 0x6f,
		0x78, 0x58, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x56, 0x69, 0x6e, 0x67, 0x61, 0x56, 0x4d,
		0x50, 0x2d, 0x30, 0x32, 0x31, 0x2d, 0x38, 0x32, 0x30, 0x32, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30,
		0x32, 0x35, 0x2d, 0x33, 0x32, 0x34, 0x30, 0x32, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x35,
		0x2d, 0x31, 0x36, 0x32, 0x30, 0x31, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x31, 0x2d, 0x31,
		0x36, 0x32, 0x30, 0x34, 0x31, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x35, 0x2d, 0x36, 0x36, 0x34,
		0x30, 0x34, 0x35, 0x56, 0x4d, 0x50, 0x2d, 0x30, 0x31, 0x31, 0x2d, 0x38, 0x31, 0x30, 0x31, 0x31,
		0x56, 0x4d, 0x50, 0x2d, 0x30, 0x34, 0x36, 0x2d, 0x36, 0x36, 0x34, 0x30, 0x34, 0x36, 0x30, 0x32,
		0x33, 0x56, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x56, 0x69, 0x6f, 0x73, 0x56, 0x4d, 0x50, 0x30, 0x36,
		0x31, 0x37, 0x56, 0x69, 0x70, 0x72, 0x6f, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x58, 0x45, 0x64, 0x67,
		0x65, 0x20, 0x32, 0x56, 0x69, 0x72, 0x7a, 0x6f, 0x56, 0x24, 0x31, 0x63, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x58, 0x53, 0x31,
		0x30, 0x30, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x6f,
		0x75, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x69,
		0x66, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x65, 0x56, 0x69, 0x73,
		0x75, 0x61, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x30, 0x24, 0x31, 0x45, 0x6c, 0x69, 0x74, 0x65,
		0x31, 0x30, 0x51, 0x48, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x31, 0x30, 0x51, 0x48, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72,
		0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x56,
		0x69, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x56, 0x69, 0x74, 0x79, 0x61, 0x7a, 0x56, 0x69, 0x75,
		0x6d, 0x65, 0x65, 0x24, 0x31, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x24, 0x31, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x45, 0x56, 0x35, 0x20, 0x58, 0x45, 0x56, 0x37, 0x56, 0x69, 0x76, 0x61, 0x78, 0x46,
		0x6c, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x79, 0x20, 0x34, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x46, 0x6c, 0x79, 0x20, 0x56, 0x35, 0x30, 0x30, 0x50, 0x6f, 0x69, 0x6e,
		0x74, 0x20, 0x58, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x53, 0x35, 0x30, 0x30, 0x46, 0x75, 0x6e,
		0x20, 0x53, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x24, 0x31, 0x46, 0x6c, 0x79, 0x20, 0x56, 0x24,
		0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x58, 0x35, 0x30,
		0x31, 0x30, 0x54, 0x50, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x24, 0x32, 0x47, 0x56, 0x69, 0x76, 0x6f,
		0x50, 0x41, 0x32, 0x31, 0x37, 0x30, 0x50, 0x41, 0x32, 0x33, 0x37, 0x33, 0x50, 0x41, 0x32, 0x34,
		0x37, 0x33, 0x50, 0x61, 0x64, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x41, 0x32, 0x33, 0x35,
		0x33, 0x69, 0x50, 0x41, 0x32, 0x33, 0x37, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x61, 0x64,
		0x69, 0x50, 0x41, 0x32, 0x34, 0x35, 0x31, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x41, 0x69, 0x72, 0x69, 0x50, 0x41, 0x32, 0x34, 0x37, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50,
		0x61, 0x64, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x50, 0x41, 0x32, 0x34, 0x35, 0x33, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x32, 0x58, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x56, 0x32, 0x32,
		0x35, 0x36, 0x41, 0x58, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x56, 0x32, 0x31, 0x37, 0x38, 0x41, 0x58,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x56, 0x32, 0x32, 0x36, 0x36, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c,
		0x64, 0x20, 0x32, 0x56, 0x32, 0x33, 0x30, 0x33, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20,
		0x33, 0x56, 0x32, 0x33, 0x33, 0x37, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x32, 0x39, 0x41, 0x58, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x2b,
		0x56, 0x32, 0x33, 0x31, 0x38, 0x41, 0x58, 0x31, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x31,
		0x30, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x58, 0x31, 0x30, 0x30, 0x56, 0x32, 0x34, 0x30,
		0x35, 0x41, 0x58, 0x32, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x34, 0x31, 0x39, 0x41,
		0x58, 0x32, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x56, 0x32, 0x34,
		0x31, 0x35, 0x41, 0x58, 0x32, 0x30, 0x30, 0x56, 0x32, 0x33, 0x32, 0x34, 0x48, 0x41, 0x58, 0x31,
		0x30, 0x30, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x35, 0x39, 0x41, 0x58, 0x31, 0x30,
		0x30, 0x73, 0x59, 0x32, 0x30, 0x30, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x36, 0x31, 0x47, 0x41,
		0x59, 0x32, 0x30, 0x30, 0x20, 0x47, 0x54, 0x56, 0x32, 0x33, 0x35, 0x34, 0x41, 0x59, 0x32, 0x30,
		0x30, 0x69, 0x59, 0x32, 0x30, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x35, 0x33, 0x44,
		0x41, 0x59, 0x32, 0x30, 0x30, 0x74, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20,
		0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x39, 0x54, 0x56, 0x32, 0x32, 0x31, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x31, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31,
		0x30, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x31, 0x56, 0x32, 0x33, 0x30, 0x34, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x31, 0x31, 0x53, 0x56, 0x32, 0x32, 0x35, 0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x32, 0x56, 0x32,
		0x33, 0x32, 0x39, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x31, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x33, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x35, 0x56, 0x32, 0x31, 0x38, 0x30, 0x47, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x55, 0x35, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x4c, 0x65, 0x67, 0x65,
		0x6e, 0x64, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x49, 0x6e, 0x64, 0x69, 0x61, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x37, 0x56, 0x32, 0x34, 0x32, 0x35, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x31, 0x30, 0x56, 0x32, 0x34, 0x32, 0x36, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x4e, 0x65, 0x6f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x39, 0x36, 0x41,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x36, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x37, 0x56, 0x32, 0x32, 0x33, 0x32, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x37, 0x20, 0x52, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x49, 0x32, 0x32, 0x31, 0x37, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x33, 0x38, 0x41, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x4e, 0x65, 0x6f, 0x20, 0x37, 0x20, 0x53, 0x45, 0x56, 0x32, 0x33, 0x30, 0x32, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x33, 0x38,
		0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x56, 0x32, 0x33, 0x33, 0x39,
		0x46, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x39, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x32, 0x34, 0x30, 0x33, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20,
		0x39, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x56, 0x32, 0x31, 0x35, 0x37, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e,
		0x65, 0x6f, 0x20, 0x35, 0x53, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65,
		0x6f, 0x20, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x35, 0x35, 0x56,
		0x32, 0x33, 0x30, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x38, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f, 0x20, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x4e, 0x65, 0x6f,
		0x20, 0x36, 0x20, 0x53, 0x45, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x69, 0x51, 0x4f, 0x4f,
		0x20, 0x5a, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x31, 0x78, 0x20, 0x35, 0x47, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x33, 0x5a, 0x35, 0x78, 0x20, 0x37, 0x31, 0x32, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x35, 0x78, 0x56, 0x32, 0x31, 0x33, 0x31, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x5a, 0x35, 0x78, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x20, 0x35, 0x47,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x56, 0x32,
		0x31, 0x36, 0x34, 0x4b, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x78, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x36, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x32, 0x37, 0x30, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a,
		0x37, 0x56, 0x32, 0x32, 0x33, 0x30, 0x45, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x69,
		0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a,
		0x37, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x37, 0x32, 0x41, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x78, 0x20, 0x35,
		0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x37, 0x73, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x31,
		0x34, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x38, 0x56, 0x32, 0x33, 0x31, 0x32, 0x41, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x38, 0x78, 0x56, 0x32, 0x33, 0x36, 0x31, 0x41, 0x69, 0x51, 0x4f,
		0x4f, 0x20, 0x5a, 0x39, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x33, 0x35, 0x32, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x54, 0x75, 0x72, 0x62,
		0x6f, 0x56, 0x32, 0x34, 0x31, 0x37, 0x41, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x20, 0x54,
		0x75, 0x72, 0x62, 0x6f, 0x2b, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x78, 0x20, 0x35, 0x47,
		0x49, 0x32, 0x34, 0x30, 0x33, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x73, 0x20, 0x35, 0x47,
		0x49, 0x32, 0x33, 0x30, 0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39, 0x73, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x35, 0x47, 0x49, 0x32, 0x33, 0x30, 0x36, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x5a, 0x39,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x69,
		0x51, 0x4f, 0x4f, 0x20, 0x55, 0x31, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x69, 0x51,
		0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x55, 0x33, 0x78, 0x20, 0x35,
		0x47, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x35, 0x69, 0x51, 0x4f, 0x4f, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x69, 0x51, 0x4f, 0x4f, 0x20,
		0x38, 0x56, 0x33, 0x30, 0x65, 0x56, 0x34, 0x30, 0x20, 0x53, 0x45, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x56, 0x32, 0x31, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x65, 0x56, 0x32, 0x31, 0x65, 0x20,
		0x35, 0x47, 0x56, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x55, 0x32, 0x30, 0x55,
		0x31, 0x30, 0x4e, 0x65, 0x78, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x20,
		0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x33, 0x53, 0x4e, 0x65, 0x78, 0x20, 0x53, 0x4e, 0x65, 0x78,
		0x20, 0x33, 0x53, 0x20, 0x35, 0x47, 0x4e, 0x65, 0x78, 0x20, 0x41, 0x4e, 0x65, 0x78, 0x20, 0x44,
		0x75, 0x61, 0x6c, 0x20, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x56, 0x32, 0x33, 0x31, 0x32,
		0x42, 0x41, 0x59, 0x31, 0x30, 0x30, 0x69, 0x20, 0x35, 0x47, 0x54, 0x31, 0x20, 0x35, 0x47, 0x56,
		0x32, 0x31, 0x35, 0x31, 0x54, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31,
		0x35, 0x33, 0x54, 0x31, 0x20, 0x34, 0x47, 0x56, 0x32, 0x31, 0x34, 0x33, 0x54, 0x31, 0x78, 0x56,
		0x32, 0x31, 0x38, 0x38, 0x41, 0x54, 0x32, 0x78, 0x54, 0x32, 0x78, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x32, 0x32, 0x32, 0x54, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x32, 0x31, 0x54, 0x32, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x34, 0x30, 0x56, 0x32, 0x34, 0x32, 0x36,
		0x54, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x56, 0x32, 0x34, 0x30, 0x34, 0x54, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x33, 0x20, 0x35, 0x47, 0x54, 0x33, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x54, 0x33, 0x78, 0x20, 0x35, 0x47, 0x56, 0x31, 0x39, 0x36, 0x32,
		0x42, 0x41, 0x47, 0x31, 0x20, 0x35, 0x47, 0x53, 0x31, 0x35, 0x56, 0x32, 0x33, 0x34, 0x34, 0x41,
		0x53, 0x31, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x36, 0x32, 0x41, 0x53, 0x31, 0x39,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x33, 0x33, 0x34, 0x41, 0x53, 0x31, 0x38, 0x65, 0x56, 0x32,
		0x33, 0x32, 0x33, 0x41, 0x53, 0x31, 0x38, 0x56, 0x32, 0x33, 0x36, 0x34, 0x41, 0x53, 0x31, 0x39,
		0x56, 0x32, 0x31, 0x32, 0x31, 0x41, 0x56, 0x32, 0x34, 0x32, 0x39, 0x41, 0x56, 0x32, 0x34, 0x33,
		0x30, 0x41, 0x53, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x33, 0x30, 0x41, 0x53,
		0x31, 0x30, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x65, 0x56, 0x32, 0x31, 0x32, 0x36, 0x56,
		0x32, 0x33, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x33, 0x30, 0x56, 0x32, 0x33, 0x20, 0x35,
		0x47, 0x56, 0x32, 0x31, 0x33, 0x32, 0x41, 0x58, 0x37, 0x30, 0x74, 0x56, 0x32, 0x31, 0x33, 0x32,
		0x56, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x56, 0x32, 0x32, 0x30, 0x32, 0x56,
		0x32, 0x35, 0x20, 0x53, 0x45, 0x56, 0x32, 0x35, 0x65, 0x56, 0x32, 0x32, 0x33, 0x30, 0x41, 0x59,
		0x33, 0x35, 0x6d, 0x56, 0x32, 0x32, 0x33, 0x30, 0x56, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x32, 0x32, 0x33, 0x37, 0x56, 0x32, 0x37, 0x65, 0x56, 0x32, 0x37, 0x56, 0x32, 0x32, 0x35, 0x30,
		0x56, 0x32, 0x39, 0x56, 0x32, 0x32, 0x35, 0x31, 0x56, 0x32, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x32, 0x33, 0x30, 0x33, 0x56, 0x32, 0x39, 0x65, 0x56, 0x32, 0x33, 0x31, 0x37, 0x41, 0x59, 0x31,
		0x32, 0x20, 0x28, 0x32, 0x30, 0x32, 0x33, 0x29, 0x56, 0x32, 0x33, 0x31, 0x37, 0x56, 0x32, 0x39,
		0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x31, 0x35, 0x59, 0x32, 0x38, 0x20, 0x35, 0x47, 0x56,
		0x32, 0x33, 0x35, 0x31, 0x59, 0x32, 0x38, 0x73, 0x20, 0x35, 0x47, 0x59, 0x32, 0x38, 0x56, 0x32,
		0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x56, 0x32, 0x33, 0x34, 0x32, 0x56, 0x33,
		0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x33, 0x32, 0x37, 0x41, 0x59, 0x33, 0x36, 0x74,
		0x59, 0x33, 0x38, 0x20, 0x35, 0x47, 0x56, 0x33, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35,
		0x47, 0x56, 0x34, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x32, 0x33, 0x34, 0x38, 0x56, 0x34,
		0x30, 0x56, 0x32, 0x33, 0x34, 0x37, 0x56, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x34, 0x30,
		0x65, 0x56, 0x32, 0x33, 0x31, 0x39, 0x56, 0x32, 0x32, 0x30, 0x37, 0x41, 0x53, 0x31, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x53, 0x36, 0x20, 0x35, 0x47, 0x53, 0x31, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x31, 0x39, 0x30, 0x41, 0x53, 0x31, 0x35, 0x65, 0x56, 0x32, 0x32, 0x34, 0x34, 0x41, 0x53, 0x31,
		0x36, 0x56, 0x32, 0x32, 0x34, 0x35, 0x41, 0x53, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32,
		0x32, 0x33, 0x39, 0x41, 0x53, 0x31, 0x36, 0x65, 0x56, 0x32, 0x32, 0x38, 0x33, 0x41, 0x56, 0x32,
		0x32, 0x38, 0x32, 0x41, 0x53, 0x31, 0x37, 0x74, 0x56, 0x32, 0x32, 0x38, 0x35, 0x41, 0x53, 0x31,
		0x37, 0x65, 0x56, 0x32, 0x32, 0x38, 0x34, 0x41, 0x53, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x53,
		0x37, 0x65, 0x53, 0x37, 0x74, 0x53, 0x37, 0x74, 0x20, 0x35, 0x47, 0x53, 0x39, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x53, 0x39, 0x65, 0x55, 0x33, 0x58, 0x56, 0x31, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x31, 0x31, 0x69, 0x56, 0x31, 0x35, 0x56, 0x31, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x31, 0x37, 0x20, 0x4e, 0x65, 0x6f, 0x56, 0x31, 0x37,
		0x56, 0x31, 0x39, 0x56, 0x35, 0x56, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x35, 0x73, 0x56, 0x37, 0x37, 0x65, 0x56, 0x37, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x39, 0x56, 0x39, 0x20, 0x59, 0x6f, 0x75, 0x74, 0x68, 0x56, 0x39, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x39, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58,
		0x39, 0x73, 0x58, 0x39, 0x30, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x32, 0x34,
		0x31, 0x48, 0x41, 0x58, 0x39, 0x30, 0x73, 0x58, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x32, 0x30,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x44, 0x58, 0x32, 0x30, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x32, 0x31, 0x69, 0x58, 0x32, 0x31, 0x20, 0x55, 0x44, 0x58, 0x32, 0x31, 0x58, 0x32, 0x31,
		0x53, 0x58, 0x32, 0x33, 0x58, 0x32, 0x37, 0x58, 0x32, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x33,
		0x30, 0x58, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x35, 0x30, 0x58, 0x35, 0x30, 0x65, 0x58,
		0x35, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x35, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x36, 0x30, 0x58, 0x36, 0x30, 0x74, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x58, 0x36, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x37, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x58, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x37, 0x30, 0x58,
		0x37, 0x30, 0x20, 0x35, 0x47, 0x58, 0x38, 0x30, 0x56, 0x32, 0x32, 0x34, 0x32, 0x41, 0x56, 0x32,
		0x32, 0x32, 0x37, 0x41, 0x58, 0x39, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x58, 0x38, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x58, 0x38, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x58, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x36, 0x59, 0x31, 0x73, 0x59, 0x31, 0x37, 0x59, 0x31, 0x37, 0x73,
		0x59, 0x31, 0x38, 0x59, 0x31, 0x38, 0x73, 0x56, 0x32, 0x33, 0x35, 0x30, 0x59, 0x31, 0x38, 0x65,
		0x59, 0x31, 0x36, 0x56, 0x32, 0x31, 0x34, 0x30, 0x41, 0x59, 0x31, 0x30, 0x56, 0x32, 0x31, 0x36,
		0x38, 0x41, 0x59, 0x31, 0x30, 0x20, 0x54, 0x31, 0x56, 0x32, 0x33, 0x31, 0x33, 0x41, 0x59, 0x31,
		0x30, 0x30, 0x20, 0x35, 0x47, 0x59, 0x31, 0x30, 0x30, 0x56, 0x32, 0x31, 0x36, 0x38, 0x56, 0x32,
		0x31, 0x31, 0x38, 0x59, 0x30, 0x31, 0x59, 0x30, 0x31, 0x41, 0x59, 0x30, 0x32, 0x73, 0x59, 0x30,
		0x32, 0x74, 0x59, 0x30, 0x32, 0x59, 0x30, 0x32, 0x41, 0x59, 0x30, 0x33, 0x59, 0x30, 0x33, 0x74,
		0x59, 0x31, 0x32, 0x56, 0x32, 0x31, 0x36, 0x33, 0x41, 0x59, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x59, 0x31, 0x32, 0x61, 0x59, 0x31, 0x32, 0x69, 0x59, 0x31, 0x35, 0x56, 0x32, 0x31, 0x33, 0x34,
		0x59, 0x31, 0x35, 0x61, 0x59, 0x31, 0x35, 0x73, 0x59, 0x31, 0x35, 0x63, 0x59, 0x31, 0x39, 0x59,
		0x31, 0x39, 0x73, 0x59, 0x32, 0x30, 0x59, 0x32, 0x32, 0x56, 0x32, 0x32, 0x34, 0x39, 0x59, 0x32,
		0x37, 0x56, 0x32, 0x33, 0x32, 0x32, 0x59, 0x32, 0x37, 0x73, 0x56, 0x32, 0x33, 0x30, 0x32, 0x59,
		0x32, 0x37, 0x20, 0x35, 0x47, 0x59, 0x32, 0x32, 0x73, 0x59, 0x32, 0x30, 0x20, 0x28, 0x32, 0x30,
		0x32, 0x31, 0x29, 0x59, 0x32, 0x30, 0x41, 0x59, 0x32, 0x30, 0x47, 0x59, 0x32, 0x30, 0x54, 0x59,
		0x32, 0x30, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x31, 0x31, 0x73, 0x59, 0x32,
		0x30, 0x73, 0x56, 0x32, 0x32, 0x37, 0x39, 0x41, 0x59, 0x33, 0x35, 0x2b, 0x56, 0x32, 0x32, 0x37,
		0x38, 0x41, 0x59, 0x37, 0x37, 0x74, 0x56, 0x32, 0x32, 0x37, 0x31, 0x41, 0x59, 0x37, 0x38, 0x2b,
		0x59, 0x37, 0x32, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x30, 0x32, 0x41, 0x59, 0x37, 0x32, 0x54,
		0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x31, 0x37, 0x59, 0x37, 0x35, 0x56, 0x32, 0x32, 0x31, 0x39,
		0x41, 0x59, 0x37, 0x37, 0x56, 0x32, 0x31, 0x36, 0x39, 0x59, 0x37, 0x37, 0x20, 0x35, 0x47, 0x59,
		0x32, 0x30, 0x69, 0x59, 0x32, 0x31, 0x73, 0x59, 0x32, 0x31, 0x47, 0x59, 0x32, 0x31, 0x59, 0x32,
		0x31, 0x61, 0x59, 0x32, 0x31, 0x65, 0x59, 0x32, 0x31, 0x74, 0x59, 0x33, 0x56, 0x32, 0x30, 0x34,
		0x34, 0x59, 0x33, 0x73, 0x56, 0x31, 0x39, 0x33, 0x30, 0x41, 0x59, 0x33, 0x20, 0x53, 0x74, 0x61,
		0x6e, 0x64, 0x61, 0x72, 0x64, 0x56, 0x32, 0x34, 0x31, 0x30, 0x41, 0x59, 0x33, 0x30, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x59, 0x33, 0x30, 0x59, 0x33, 0x30, 0x20, 0x35, 0x47, 0x59,
		0x33, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59, 0x33, 0x30, 0x67, 0x59, 0x33, 0x31,
		0x59, 0x33, 0x31, 0x73, 0x56, 0x32, 0x31, 0x35, 0x38, 0x41, 0x56, 0x32, 0x31, 0x35, 0x38, 0x56,
		0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x56, 0x32, 0x31, 0x38, 0x30, 0x41, 0x59, 0x33, 0x32, 0x74,
		0x59, 0x33, 0x33, 0x59, 0x33, 0x33, 0x73, 0x59, 0x33, 0x33, 0x74, 0x59, 0x33, 0x33, 0x73, 0x20,
		0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x59, 0x33, 0x35, 0x59, 0x33, 0x36, 0x59, 0x33, 0x36, 0x20,
		0x35, 0x47, 0x59, 0x33, 0x36, 0x63, 0x20, 0x35, 0x47, 0x59, 0x35, 0x73, 0x59, 0x35, 0x30, 0x74,
		0x59, 0x35, 0x31, 0x59, 0x35, 0x31, 0x20, 0x50, 0x4b, 0x59, 0x35, 0x31, 0x20, 0x28, 0x32, 0x30,
		0x31, 0x35, 0x29, 0x59, 0x35, 0x31, 0x73, 0x59, 0x35, 0x31, 0x41, 0x59, 0x35, 0x32, 0x73, 0x59,
		0x35, 0x32, 0x59, 0x35, 0x33, 0x69, 0x59, 0x35, 0x33, 0x59, 0x35, 0x33, 0x73, 0x56, 0x32, 0x30,
		0x36, 0x39, 0x41, 0x59, 0x35, 0x33, 0x73, 0x20, 0x54, 0x31, 0x59, 0x35, 0x35, 0x6c, 0x59, 0x35,
		0x35, 0x73, 0x59, 0x35, 0x35, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x32, 0x31,
		0x36, 0x34, 0x50, 0x41, 0x59, 0x37, 0x33, 0x74, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x32, 0x37,
		0x59, 0x35, 0x35, 0x20, 0x35, 0x47, 0x56, 0x32, 0x31, 0x35, 0x34, 0x59, 0x35, 0x35, 0x56, 0x32,
		0x30, 0x34, 0x35, 0x41, 0x59, 0x35, 0x34, 0x73, 0x59, 0x35, 0x36, 0x20, 0x35, 0x47, 0x56, 0x32,
		0x33, 0x35, 0x35, 0x59, 0x35, 0x38, 0x20, 0x35, 0x47, 0x59, 0x36, 0x35, 0x59, 0x36, 0x39, 0x59,
		0x37, 0x30, 0x73, 0x59, 0x36, 0x30, 0x73, 0x59, 0x37, 0x31, 0x59, 0x37, 0x31, 0x74, 0x59, 0x37,
		0x31, 0x69, 0x59, 0x37, 0x33, 0x59, 0x37, 0x33, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x59,
		0x37, 0x33, 0x73, 0x59, 0x37, 0x36, 0x20, 0x35, 0x47, 0x59, 0x37, 0x36, 0x73, 0x59, 0x37, 0x73,
		0x59, 0x38, 0x31, 0x59, 0x38, 0x31, 0x69, 0x59, 0x38, 0x31, 0x73, 0x59, 0x38, 0x33, 0x59, 0x38,
		0x33, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x38, 0x39, 0x59, 0x39, 0x30, 0x59, 0x39, 0x31, 0x59, 0x39,
		0x31, 0x69, 0x59, 0x39, 0x73, 0x59, 0x31, 0x32, 0x73, 0x59, 0x31, 0x32, 0x73, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x31, 0x29, 0x59, 0x39, 0x33, 0x59, 0x39, 0x33, 0x73, 0x59, 0x39, 0x35, 0x59, 0x39,
		0x37, 0x5a, 0x31, 0x5a, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x31, 0x69, 0x5a, 0x31, 0x78, 0x5a,
		0x33, 0x78, 0x5a, 0x35, 0x78, 0x5a, 0x35, 0x78, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x59,
		0x37, 0x35, 0x20, 0x35, 0x47, 0x59, 0x37, 0x35, 0x73, 0x58, 0x20, 0x53, 0x68, 0x6f, 0x74, 0x58,
		0x36, 0x53, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x36, 0x53, 0x59, 0x36, 0x36, 0x69, 0x58, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x20, 0x24, 0x31, 0x53, 0x58, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x20, 0x24,
		0x31, 0x56, 0x69, 0x7a, 0x69, 0x6f, 0x56, 0x41, 0x50, 0x34, 0x33, 0x30, 0x49, 0x53, 0x56, 0x2d,
		0x42, 0x31, 0x31, 0x44, 0x35, 0x30, 0x75, 0x2d, 0x44, 0x31, 0x56, 0x69, 0x7a, 0x6d, 0x6f, 0x54,
		0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x37, 0x22, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x20, 0x31,
		0x30, 0x2e, 0x31, 0x22, 0x56, 0x6f, 0x64, 0x61, 0x63, 0x6f, 0x6d, 0x4b, 0x69, 0x63, 0x6b, 0x61,
		0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x34, 0x47, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f,
		0x6e, 0x65, 0x56, 0x46, 0x44, 0x20, 0x31, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x34, 0x47, 0x50, 0x72, 0x6f, 0x20, 0x34, 0x47, 0x56, 0x46, 0x44, 0x37, 0x32, 0x30, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x56, 0x46, 0x36, 0x38, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x4b, 0x69, 0x63, 0x6b, 0x61, 0x56, 0x46, 0x36, 0x39, 0x35, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x32, 0x30, 0x30, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20,
		0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x37, 0x56,
		0x46, 0x44, 0x20, 0x33, 0x30, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x37, 0x20, 0x44, 0x75, 0x61, 0x6c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x75, 0x72,
		0x62, 0x6f, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x38, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x45, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x58, 0x39, 0x56, 0x46, 0x44, 0x20, 0x36, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x56, 0x46, 0x44, 0x33, 0x32, 0x30, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x43, 0x39, 0x56, 0x46, 0x44, 0x20, 0x38, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20,
		0x36, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x31, 0x30, 0x56, 0x46, 0x44, 0x20, 0x36,
		0x32, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x4e, 0x39, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x37, 0x30, 0x30,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x37, 0x56, 0x46, 0x44,
		0x20, 0x37, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x56, 0x38, 0x56, 0x46, 0x44, 0x20,
		0x37, 0x32, 0x30, 0x56, 0x46, 0x44, 0x20, 0x37, 0x33, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x56, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56, 0x32, 0x32, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x56, 0x32, 0x32, 0x56, 0x46, 0x44, 0x20, 0x39, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x34, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x47, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x34, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x34, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x6f, 0x64, 0x61, 0x66, 0x6f, 0x6e,
		0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x43, 0x68, 0x61, 0x74, 0x56, 0x46, 0x2d, 0x36, 0x39, 0x36, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x37, 0x39, 0x35, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36, 0x56, 0x46, 0x2d, 0x38, 0x39, 0x35,
		0x4e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x36, 0x56, 0x46,
		0x2d, 0x31, 0x33, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x36,
		0x56, 0x46, 0x2d, 0x31, 0x34, 0x39, 0x37, 0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65,
		0x20, 0x36, 0x56, 0x46, 0x44, 0x20, 0x31, 0x31, 0x30, 0x30, 0x54, 0x61, 0x62, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x37, 0x56, 0x46, 0x44, 0x20, 0x31, 0x33, 0x30, 0x30, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x4e, 0x38, 0x56, 0x46, 0x44, 0x20, 0x31, 0x34, 0x30, 0x30,
		0x54, 0x61, 0x62, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x20, 0x54, 0x61, 0x62, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x34, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x34, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x61, 0x62, 0x20, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x49, 0x49, 0x20, 0x31, 0x30, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x49, 0x49, 0x49, 0x20, 0x37, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x61, 0x62, 0x20,
		0x49, 0x49, 0x49, 0x20, 0x31, 0x30, 0x47, 0x69, 0x67, 0x61, 0x54, 0x56, 0x47, 0x69, 0x67, 0x61,
		0x20, 0x54, 0x56, 0x56, 0x46, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x6f,
		0x6c, 0x6c, 0x61, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x5a,
		0x75, 0x6e, 0x20, 0x24, 0x31, 0x58, 0x79, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6c, 0x74,
		0x20, 0x53, 0x20, 0x41, 0x37, 0x56, 0x6f, 0x6c, 0x74, 0x20, 0x53, 0x56, 0x6f, 0x6c, 0x74, 0x20,
		0x58, 0x47, 0x79, 0x67, 0x61, 0x20, 0x51, 0x53, 0x47, 0x79, 0x67, 0x61, 0x20, 0x58, 0x53, 0x47,
		0x79, 0x67, 0x61, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x51, 0x53, 0x4a, 0x61, 0x78, 0x20,
		0x53, 0x20, 0x41, 0x37, 0x4a, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4a, 0x61, 0x78, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x69, 0x4d, 0x61, 0x72, 0x74, 0x5f, 0x50, 0x72, 0x6f, 0x49, 0x4d, 0x61, 0x72, 0x74,
		0x20, 0x50, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x4d, 0x24, 0x31, 0x20, 0x28, 0x32,
		0x30, 0x32, 0x30, 0x29, 0x50, 0x6c, 0x75, 0x72, 0x69, 0x20, 0x24, 0x31, 0x37, 0x50, 0x6c, 0x75,
		0x72, 0x69, 0x20, 0x24, 0x31, 0x38, 0x44, 0x72, 0x75, 0x69, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x61,
		0x67, 0x6e, 0x65, 0x74, 0x20, 0x4d, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4d,
		0x61, 0x67, 0x6e, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x61, 0x67, 0x6e,
		0x65, 0x74, 0x20, 0x24, 0x31, 0x4e, 0x61, 0x76, 0x6f, 0x20, 0x24, 0x31, 0x4f, 0x72, 0x69, 0x6e,
		0x5f, 0x51, 0x53, 0x4f, 0x72, 0x69, 0x6e, 0x20, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73,
		0x5f, 0x51, 0x53, 0x53, 0x69, 0x72, 0x69, 0x75, 0x73, 0x20, 0x51, 0x53, 0x53, 0x70, 0x69, 0x72,
		0x69, 0x74, 0x20, 0x51, 0x53, 0x58, 0x61, 0x76, 0x79, 0x20, 0x24, 0x31, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x50, 0x41, 0x44, 0x20, 0x24, 0x31, 0x56, 0x6f, 0x6e, 0x74, 0x61, 0x72, 0x44, 0x51, 0x30,
		0x38, 0x48, 0x4b, 0x31, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x4b, 0x20, 0x4d, 0x61, 0x78, 0x48, 0x4b,
		0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x48, 0x4b, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x48, 0x4b, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x56, 0x6f, 0x72, 0x61, 0x67, 0x6f, 0x43, 0x45, 0x4c, 0x4c, 0x2d, 0x35, 0x30, 0x30,
		0x56, 0x6f, 0x72, 0x63, 0x6f, 0x6d, 0x53, 0x58, 0x50, 0x52, 0x4f, 0x5f, 0x63, 0x6c, 0x61, 0x73,
		0x73, 0x69, 0x63, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
		0x63, 0x53, 0x58, 0x50, 0x72, 0x6f, 0x53, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x37, 0x2d, 0x63,
		0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x53, 0x37, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63,
		0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x4c, 0x49, 0x54, 0x45, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x61, 0x72, 0x74, 0x7a, 0x50, 0x52, 0x4f, 0x51, 0x75,
		0x61, 0x72, 0x74, 0x7a, 0x20, 0x50, 0x72, 0x6f, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x50, 0x41, 0x44,
		0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64, 0x56, 0x6f, 0x72, 0x6b, 0x65, 0x56, 0x6f,
		0x72, 0x6d, 0x6f, 0x72, 0x5a, 0x47, 0x36, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x44, 0x36, 0x35,
		0x20, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x44, 0x36, 0x35, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x48, 0x44, 0x36, 0x35, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x44, 0x36, 0x35,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x31, 0x30, 0x4d, 0x5f, 0x50, 0x72, 0x6f, 0x54, 0x31, 0x30,
		0x4d, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x41, 0x42, 0x31, 0x30, 0x5a, 0x20, 0x54, 0x61, 0x62,
		0x20, 0x31, 0x30, 0x42, 0x54, 0x41, 0x42, 0x31, 0x30, 0x42, 0x20, 0x54, 0x61, 0x62, 0x20, 0x31,
		0x30, 0x56, 0x6f, 0x74, 0x6f, 0x56, 0x6f, 0x78, 0x74, 0x65, 0x6c, 0x56, 0x6f, 0x79, 0x6f, 0x69,
		0x38, 0x20, 0x4d, 0x61, 0x78, 0x56, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x79, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4a, 0x6f, 0x79, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74, 0x69,
		0x76, 0x65, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x65, 0x65, 0x20, 0x33, 0x42, 0x65,
		0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x20, 0x24, 0x31, 0x41, 0x63, 0x74,
		0x69, 0x76, 0x65, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x62, 0x73, 0x6f, 0x6e, 0x41, 0x72, 0x69, 0x73,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x69, 0x73, 0x56, 0x73, 0x75, 0x6e, 0x49, 0x6c, 0x6c, 0x75,
		0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x45,
		0x52, 0x43, 0x55, 0x52, 0x59, 0x20, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x4d, 0x65, 0x72, 0x63, 0x75,
		0x72, 0x79, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e, 0x4f, 0x54,
		0x45, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x4e,
		0x4f, 0x43, 0x41, 0x4d, 0x4d, 0x61, 0x72, 0x73, 0x20, 0x4e, 0x6f, 0x63, 0x61, 0x6d, 0x41, 0x71,
		0x75, 0x61, 0x20, 0x54, 0x6f, 0x75, 0x67, 0x68, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x53,
		0x65, 0x6c, 0x66, 0x69, 0x65, 0x56, 0x75, 0x65, 0x20, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x65,
		0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x33, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x53, 0x31, 0x31,
		0x56, 0xc3, 0xb6, 0x6c, 0x66, 0x65, 0x6e, 0x4e, 0x65, 0x78, 0x6f, 0x20, 0x54, 0x41, 0x42, 0x37,
		0x57, 0x26, 0x4f, 0x57, 0x4f, 0x20, 0x50, 0x61, 0x64, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x4f, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x4f, 0x24, 0x31, 0x58, 0x39, 0x20, 0x43, 0x41,
		0x4c, 0x4c, 0x32, 0x58, 0x39, 0x20, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x32, 0x57, 0x41, 0x46, 0x57,
		0x41, 0x4e, 0x53, 0x41, 0x57, 0x45, 0x57, 0x49, 0x57, 0x41, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x20,
		0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x54, 0x56, 0x57, 0x4f, 0x5a, 0x49, 0x46, 0x41, 0x4e,
		0x57, 0x53, 0x57, 0x61, 0x69, 0x6e, 0x79, 0x6f, 0x6b, 0x57, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x57,
		0x61, 0x6c, 0x74, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x57, 0x61, 0x6c, 0x70, 0x61,
		0x64, 0x20, 0x24, 0x31, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x69, 0x6e, 0x66,
		0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x36, 0x20, 0x49, 0x6e,
		0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x38, 0x20, 0x6d,
		0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x53, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x72, 0x69, 0x6d,
		0x6f, 0x20, 0x24, 0x31, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x48,
		0x38, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x52, 0x58, 0x37, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4f,
		0x72, 0x62, 0x69, 0x74, 0x20, 0x59, 0x24, 0x31, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x20, 0x4d, 0x24,
		0x31, 0x58, 0x41, 0x4e, 0x4f, 0x4e, 0x20, 0x58, 0x32, 0x30, 0x58, 0x61, 0x6e, 0x6f, 0x6e, 0x20,
		0x58, 0x32, 0x30, 0x58, 0x41, 0x4e, 0x4f, 0x4e, 0x20, 0x58, 0x39, 0x30, 0x58, 0x61, 0x6e, 0x6f,
		0x6e, 0x20, 0x58, 0x39, 0x30, 0x4e, 0x45, 0x58, 0x47, 0x20, 0x4e, 0x37, 0x31, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4e, 0x65, 0x78, 0x67, 0x20, 0x4e, 0x37, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4e,
		0x65, 0x78, 0x67, 0x20, 0x4e, 0x24, 0x31, 0x57, 0x41, 0x4c, 0x54, 0x4f, 0x4e, 0x20, 0x47, 0x53,
		0x4d, 0x41, 0x52, 0x54, 0x20, 0x32, 0x4b, 0x54, 0x56, 0x50, 0x72, 0x69, 0x6d, 0x6f, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x61, 0x6c, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x6f,
		0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x57, 0x61, 0x6e, 0x6d, 0x75, 0x6b, 0x61, 0x6e, 0x67, 0x57,
		0x65, 0x43, 0x68, 0x69, 0x70, 0x57, 0x65, 0x62, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x50, 0x72, 0x6f,
		0x20, 0x38, 0x34, 0x37, 0x35, 0x57, 0x65, 0x63, 0x6f, 0x6f, 0x6c, 0x57, 0x65, 0x65, 0x6c, 0x69,
		0x6b, 0x65, 0x69, 0x74, 0x57, 0x65, 0x69, 0x69, 0x6d, 0x69, 0x32, 0x30, 0x32, 0x30, 0x30, 0x38,
		0x30, 0x38, 0x41, 0x31, 0x58, 0x31, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x65, 0x69, 0x6d, 0x65,
		0x69, 0x77, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x33, 0x57, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x20,
		0x33, 0x57, 0x45, 0x49, 0x4d, 0x45, 0x49, 0x5f, 0x4e, 0x45, 0x4f, 0x4e, 0x32, 0x4e, 0x65, 0x6f,
		0x6e, 0x20, 0x32, 0x57, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x4d, 0x57, 0x65, 0x73, 0x74, 0x65, 0x72,
		0x6e, 0x20, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65,
		0x72, 0x32, 0x30, 0x31, 0x30, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x30, 0x29, 0x57, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x57, 0x65, 0x73, 0x74, 0x70, 0x6f,
		0x69, 0x6e, 0x74, 0x57, 0x65, 0x78, 0x6c, 0x65, 0x72, 0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x35,
		0x5a, 0x45, 0x4e, 0x20, 0x34, 0x2e, 0x37, 0x5a, 0x45, 0x4e, 0x20, 0x35, 0x5a, 0x45, 0x4e, 0x20,
		0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x41, 0x42, 0x20, 0x31, 0x30, 0x51, 0x54, 0x41, 0x42,
		0x20, 0x31, 0x30, 0x69, 0x51, 0x20, 0x33, 0x47, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4d, 0x6f,
		0x62, 0x69, 0x6c, 0x65, 0x41, 0x4d, 0x31, 0x30, 0x31, 0x30, 0x56, 0x4f, 0x6d, 0x65, 0x67, 0x61,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x33, 0x57, 0x68, 0x6f, 0x6f, 0x70, 0x57, 0x69, 0x65, 0x70,
		0x70, 0x6f, 0x57, 0x69, 0x67, 0x6f, 0x72, 0x57, 0x69, 0x6b, 0x6f, 0x41, 0x69, 0x78, 0x2d, 0x41,
		0x4e, 0x30, 0x30, 0x54, 0x33, 0x56, 0x6f, 0x69, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55,
		0x31, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x55, 0x32, 0x30, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x55, 0x33, 0x30, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x50, 0x65, 0x61, 0x78, 0x20, 0x32, 0x43,
		0x69, 0x6e, 0x6b, 0x24, 0x31, 0x43, 0x69, 0x6e, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x69, 0x67, 0x68,
		0x77, 0x61, 0x79, 0x20, 0x50, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x20,
		0x53, 0x74, 0x61, 0x72, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x24, 0x31, 0x48, 0x69, 0x67,
		0x68, 0x77, 0x61, 0x79, 0x20, 0x24, 0x31, 0x49, 0x67, 0x67, 0x79, 0x46, 0x65, 0x76, 0x65, 0x72,
		0x53, 0x74, 0x61, 0x69, 0x72, 0x77, 0x61, 0x79, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x46, 0x61,
		0x62, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67, 0x65, 0x20, 0x34, 0x47, 0x52, 0x69, 0x64, 0x67,
		0x65, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x20, 0x4c, 0x49, 0x54, 0x45, 0x52, 0x61, 0x69,
		0x6e, 0x62, 0x6f, 0x77, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77,
		0x20, 0x24, 0x31, 0x44, 0x61, 0x72, 0x6b, 0x73, 0x69, 0x64, 0x65, 0x44, 0x61, 0x72, 0x6b, 0x6d,
		0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x72, 0x6b, 0x6e,
		0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x6c, 0x69, 0x6d, 0x4f, 0x7a, 0x7a, 0x79, 0x42, 0x61,
		0x72, 0x72, 0x79, 0x42, 0x69, 0x72, 0x64, 0x79, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x20, 0x32, 0x42,
		0x6c, 0x6f, 0x6f, 0x6d, 0x4a, 0x69, 0x6d, 0x6d, 0x79, 0x4a, 0x45, 0x52, 0x52, 0x59, 0x20, 0x4d,
		0x41, 0x58, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x4d, 0x61, 0x78, 0x57, 0x5f, 0x4b, 0x33, 0x30,
		0x30, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x33, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x54,
		0x56, 0x4d, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x34, 0x4a, 0x65, 0x72, 0x72, 0x79, 0x20, 0x32,
		0x4a, 0x65, 0x72, 0x72, 0x79, 0x47, 0x65, 0x74, 0x61, 0x77, 0x61, 0x79, 0x4b, 0x65, 0x6e, 0x6e,
		0x79, 0x47, 0x6f, 0x61, 0x46, 0x72, 0x65, 0x64, 0x64, 0x79, 0x4b, 0x69, 0x74, 0x65, 0x57, 0x5f,
		0x4b, 0x34, 0x30, 0x30, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x4c, 0x69, 0x66, 0x65, 0x20,
		0x33, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x6e,
		0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x24, 0x31,
		0x4c, 0x65, 0x6e, 0x6e, 0x79, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x32, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x20, 0x32, 0x53, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x53,
		0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x75, 0x6e, 0x6e, 0x79,
		0x20, 0x33, 0x57, 0x2d, 0x4b, 0x32, 0x30, 0x30, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x33, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x32, 0x57, 0x2d, 0x4b, 0x33, 0x36, 0x30, 0x2d, 0x54, 0x56,
		0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x31,
		0x33, 0x30, 0x2d, 0x54, 0x4d, 0x56, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x34, 0x57, 0x2d, 0x4b,
		0x33, 0x38, 0x30, 0x2d, 0x54, 0x56, 0x4d, 0x53, 0x75, 0x6e, 0x6e, 0x79, 0x20, 0x35, 0x53, 0x75,
		0x6e, 0x6e, 0x79, 0x20, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20,
		0x33, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x54, 0x6f, 0x6d,
		0x6d, 0x79, 0x20, 0x32, 0x54, 0x6f, 0x6d, 0x6d, 0x79, 0x57, 0x61, 0x78, 0x48, 0x61, 0x72, 0x72,
		0x79, 0x57, 0x2d, 0x56, 0x36, 0x30, 0x30, 0x48, 0x61, 0x72, 0x72, 0x79, 0x20, 0x32, 0x57, 0x49,
		0x4d, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x49, 0x4d, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61,
		0x62, 0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x20, 0x46, 0x61, 0x62, 0x50, 0x75, 0x6c, 0x70,
		0x20, 0x34, 0x47, 0x50, 0x75, 0x6c, 0x70, 0x52, 0x6f, 0x62, 0x62, 0x79, 0x24, 0x31, 0x55, 0x20,
		0x50, 0x75, 0x6c, 0x73, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x50, 0x75, 0x6c, 0x73,
		0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x55, 0x20, 0x46, 0x65,
		0x65, 0x6c, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x56, 0x33,
		0x39, 0x39, 0x31, 0x41, 0x4e, 0x55, 0x20, 0x46, 0x65, 0x65, 0x6c, 0x20, 0x46, 0x61, 0x62, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x32, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x50,
		0x72, 0x69, 0x6d, 0x65, 0x57, 0x43, 0x33, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x76, 0x31, 0x32, 0x66, 0x6e, 0x6c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x57,
		0x5f, 0x43, 0x38, 0x30, 0x30, 0x57, 0x5f, 0x43, 0x38, 0x36, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x32, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x5f, 0x50, 0x32, 0x30, 0x30, 0x56, 0x69, 0x65, 0x77, 0x20,
		0x47, 0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56,
		0x38, 0x35, 0x31, 0x57, 0x2d, 0x56, 0x38, 0x35, 0x30, 0x2d, 0x45, 0x45, 0x41, 0x56, 0x69, 0x65,
		0x77, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x34, 0x32, 0x30, 0x2d, 0x45,
		0x45, 0x41, 0x57, 0x2d, 0x4b, 0x32, 0x31, 0x31, 0x57, 0x2d, 0x4b, 0x35, 0x32, 0x31, 0x59, 0x36,
		0x30, 0x59, 0x36, 0x31, 0x59, 0x36, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x2d, 0x4b, 0x36,
		0x31, 0x30, 0x59, 0x36, 0x32, 0x59, 0x38, 0x30, 0x57, 0x2d, 0x56, 0x36, 0x38, 0x30, 0x57, 0x2d,
		0x4b, 0x36, 0x33, 0x30, 0x59, 0x38, 0x32, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x20, 0x50, 0x72,
		0x6f, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x2d, 0x56, 0x37,
		0x34, 0x35, 0x2d, 0x54, 0x56, 0x4d, 0x52, 0x69, 0x64, 0x65, 0x52, 0x69, 0x64, 0x65, 0x20, 0x32,
		0x52, 0x69, 0x64, 0x65, 0x20, 0x33, 0x4b, 0x2d, 0x4b, 0x6f, 0x6f, 0x6c, 0x57, 0x69, 0x6c, 0x64,
		0x52, 0x65, 0x64, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x2b, 0x57, 0x69, 0x6c, 0x65, 0x79, 0x66, 0x6f, 0x78, 0x20, 0x53, 0x70, 0x61, 0x72, 0x6b,
		0x20, 0x58, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x58, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32,
		0x20, 0x24, 0x31, 0x53, 0x77, 0x69, 0x66, 0x74, 0x20, 0x32, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x6c,
		0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x4e, 0x4f, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41,
		0x43, 0x45, 0x20, 0x56, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x56,
		0x57, 0x69, 0x6e, 0x6b, 0x53, 0x57, 0x49, 0x54, 0x52, 0x4f, 0x4e, 0x2d, 0x69, 0x31, 0x32, 0x41,
		0x53, 0x77, 0x69, 0x74, 0x72, 0x6f, 0x6e, 0x20, 0x69, 0x31, 0x32, 0x41, 0x57, 0x69, 0x6e, 0x6d,
		0x61, 0x78, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x48, 0x34, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x20, 0x48,
		0x34, 0x54, 0x69, 0x67, 0x65, 0x72, 0x5f, 0x58, 0x31, 0x32, 0x54, 0x69, 0x67, 0x65, 0x72, 0x20,
		0x58, 0x31, 0x32, 0x57, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x6f, 0x54, 0x31, 0x30, 0x20, 0x4c, 0x54,
		0x45, 0x48, 0x24, 0x31, 0x57, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x72, 0x57, 0x69, 0x6e, 0x74, 0x6f,
		0x75, 0x63, 0x68, 0x51, 0x39, 0x33, 0x53, 0x57, 0x69, 0x73, 0x65, 0x61, 0x73, 0x79, 0x57, 0x69,
		0x7a, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x57, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x57, 0x69, 0x61, 0x6d,
		0x20, 0x23, 0x36, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x69, 0x61, 0x6d, 0x20, 0x23, 0x24,
		0x31, 0x6d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x24, 0x31, 0x6d, 0x69, 0x54, 0x61, 0x62,
		0x20, 0x50, 0x52, 0x4f, 0x20, 0x31, 0x30, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x6d, 0x69, 0x54, 0x61,
		0x62, 0x20, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x66, 0x67, 0x61, 0x6e, 0x67, 0x41, 0x54, 0x2d, 0x41,
		0x53, 0x24, 0x31, 0x57, 0x6f, 0x6c, 0x6b, 0x69, 0x57, 0x53, 0x30, 0x35, 0x34, 0x57, 0x35, 0x2e,
		0x35, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57, 0x35, 0x35, 0x53, 0x45, 0x57, 0x35, 0x2e, 0x35, 0x20,
		0x53, 0x45, 0x57, 0x53, 0x36, 0x32, 0x36, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x57, 0x36, 0x32, 0x36,
		0x20, 0x4c, 0x49, 0x54, 0x45, 0x57, 0x36, 0x2e, 0x32, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x57,
		0x53, 0x35, 0x53, 0x45, 0x57, 0x35, 0x20, 0x53, 0x45, 0x57, 0x53, 0x30, 0x36, 0x37, 0x57, 0x36,
		0x20, 0x50, 0x72, 0x6f, 0x57, 0x6f, 0x6e, 0x75, 0x57, 0x6f, 0x6f, 0x53, 0x50, 0x35, 0x30, 0x32,
		0x36, 0x69, 0x2d, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69, 0x6f, 0x53, 0x63, 0x6f, 0x72, 0x70, 0x69,
		0x6f, 0x53, 0x50, 0x35, 0x30, 0x34, 0x30, 0x2d, 0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65, 0x61,
		0x43, 0x61, 0x73, 0x69, 0x6f, 0x70, 0x65, 0x61, 0x20, 0x49, 0x49, 0x57, 0x6f, 0x72, 0x74, 0x6d,
		0x61, 0x6e, 0x6e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x20, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x24,
		0x32, 0x57, 0x6f, 0x78, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x6d, 0x62, 0x75, 0x73, 0x20, 0x24, 0x31,
		0x69, 0x2d, 0x31, 0x30, 0x31, 0x5a, 0x69, 0x65, 0x6c, 0x6f, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x41,
		0x47, 0x45, 0x47, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x58, 0x2d, 0x42, 0x4f, 0x58, 0x2d, 0x4d,
		0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x36, 0x33, 0x50, 0x72, 0x6f, 0x58, 0x36, 0x33, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x4d, 0x2d, 0x53, 0x57, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x57, 0x69,
		0x46, 0x69, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a,
		0x4f, 0x59, 0x31, 0x30, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x4a, 0x6f,
		0x79, 0x20, 0x31, 0x30, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x54, 0x56, 0x4a, 0x6f, 0x79, 0x20,
		0x24, 0x31, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x24, 0x31, 0x20, 0x24,
		0x32, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x38, 0x20, 0x4c, 0x54, 0x45, 0x48, 0x6f, 0x70, 0x65, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x6f, 0x70, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x58, 0x2d, 0x54, 0x49, 0x47, 0x49, 0x5f, 0x4a, 0x4f, 0x59, 0x37, 0x5f, 0x4d, 0x41,
		0x58, 0x4a, 0x6f, 0x79, 0x20, 0x37, 0x20, 0x4d, 0x61, 0x78, 0x4a, 0x4f, 0x59, 0x31, 0x30, 0x5f,
		0x4c, 0x54, 0x45, 0x4a, 0x6f, 0x79, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x32, 0x38,
		0x20, 0x4c, 0x54, 0x45, 0x56, 0x31, 0x38, 0x20, 0x70, 0x72, 0x6f, 0x5f, 0x41, 0x56, 0x31, 0x38,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x68, 0x6f, 0x74, 0x6f,
		0x20, 0x50, 0x31, 0x31, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x50, 0x31, 0x35, 0x5f, 0x4c, 0x69,
		0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x20, 0x50, 0x31, 0x35, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x53, 0x68, 0x61, 0x72, 0x70, 0x20, 0x24, 0x31, 0x58, 0x2d, 0x56, 0x69, 0x65, 0x77, 0x5a, 0x45,
		0x4e, 0x20, 0x55, 0x35, 0x2b, 0x41, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x44, 0x53, 0x41,
		0x6d, 0x62, 0x65, 0x72, 0x20, 0x4b, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f,
		0x41, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x41,
		0x6d, 0x62, 0x65, 0x72, 0x20, 0x48, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x4e, 0x65,
		0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4e, 0x65, 0x6f, 0x6e, 0x50, 0x52, 0x4f,
		0x54, 0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x72,
		0x6f, 0x74, 0x6f, 0x6e, 0x20, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x58,
		0x2d, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x69, 0x75, 0x6d, 0x47, 0x54, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x47, 0x4f, 0x54, 0x69, 0x74,
		0x61, 0x6e, 0x69, 0x75, 0x6d, 0x20, 0x47, 0x54, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x20,
		0x47, 0x4f, 0x58, 0x38, 0x38, 0x58, 0x38, 0x38, 0x70, 0x72, 0x6f, 0x31, 0x30, 0x50, 0x72, 0x6f,
		0x20, 0x31, 0x30, 0x58, 0x39, 0x36, 0x41, 0x69, 0x72, 0x20, 0x24, 0x31, 0x58, 0x39, 0x36, 0x4d,
		0x61, 0x78, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5f, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x78, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x20, 0x24, 0x31, 0x58, 0x39, 0x36, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x6c, 0x75,
		0x73, 0x4d, 0x61, 0x78, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x36, 0x5f, 0x58, 0x36, 0x5f,
		0x49, 0x58, 0x36, 0x69, 0x58, 0x39, 0x36, 0x4d, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x55, 0x53,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x58, 0x39, 0x36, 0x4d, 0x49, 0x4e, 0x49,
		0x5f, 0x31, 0x31, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x31, 0x31, 0x58, 0x39, 0x36, 0x51, 0x58, 0x43,
		0x4f, 0x4d, 0x69, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x58, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
		0x6e, 0x58, 0x47, 0x45, 0x4d, 0x58, 0x47, 0x49, 0x4d, 0x49, 0x58, 0x4b, 0x30, 0x33, 0x48, 0x48,
		0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x6f, 0x47, 0x6f, 0x20, 0x50,
		0x72, 0x6f, 0x58, 0x50, 0x50, 0x65, 0x6e, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x44, 0x72, 0x61,
		0x77, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x61, 0x64, 0x58, 0x52, 0x45, 0x41, 0x4c, 0x58, 0x34, 0x30,
		0x30, 0x30, 0x42, 0x65, 0x61, 0x6d, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x59, 0x20, 0x41, 0x75, 0x74,
		0x6f, 0x58, 0x63, 0x65, 0x6c, 0x6c, 0x58, 0x63, 0x72, 0x75, 0x69, 0x73, 0x65, 0x72, 0x58, 0x67,
		0x6f, 0x64, 0x79, 0x58, 0x47, 0x54, 0x5f, 0x45, 0x45, 0x41, 0x58, 0x47, 0x54, 0x4e, 0x30, 0x31,
		0x50, 0x72, 0x6f, 0x4e, 0x30, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x69, 0x61, 0x6f, 0x64, 0x75,
		0x58, 0x69, 0x61, 0x6f, 0x6c, 0x61, 0x6a, 0x69, 0x61, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65,
		0x70, 0x70, 0x65, 0x72, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x20, 0x50,
		0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x45, 0x20, 0x53, 0x70, 0x6f, 0x72,
		0x74, 0x73, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x38, 0x58, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x20, 0x50, 0x65, 0x70, 0x70, 0x65, 0x72, 0x20, 0x39, 0x58,
		0x4d, 0x61, 0x74, 0x65, 0x20, 0x33, 0x30, 0x20, 0x4d, 0x61, 0x78, 0x58, 0x69, 0x61, 0x6f, 0x6d,
		0x69, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x41, 0x57, 0x4d, 0x2d,
		0x41, 0x30, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x48, 0x65,
		0x6c, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x42,
		0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x35, 0x47, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x34,
		0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x42, 0x6c, 0x61,
		0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c,
		0x61, 0x63, 0x6b, 0x20, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x24, 0x31, 0x48, 0x6f, 0x6e, 0x67,
		0x6d, 0x69, 0x20, 0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x48, 0x6f,
		0x6e, 0x67, 0x6d, 0x69, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x33, 0x47, 0x48,
		0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x32, 0x20,
		0x34, 0x47, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x50, 0x6c,
		0x61, 0x79, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x53, 0x45, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x69, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x65, 0x4d, 0x49,
		0x20, 0x43, 0x43, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d,
		0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x43, 0x43, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69,
		0x20, 0x43, 0x43, 0x20, 0x39, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x31, 0x31, 0x69, 0x20, 0x48, 0x79, 0x70, 0x65,
		0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x58,
		0x4d, 0x69, 0x20, 0x31, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x4d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31,
		0x30, 0x53, 0x4d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d,
		0x69, 0x20, 0x31, 0x30, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x69, 0x4d, 0x69, 0x20, 0x31, 0x31,
		0x54, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x54, 0x4d, 0x69, 0x20, 0x31, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x20, 0x4e, 0x45, 0x4d, 0x69, 0x20, 0x31, 0x31,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x4c, 0x69,
		0x74, 0x65, 0x4d, 0x69, 0x20, 0x31, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4d, 0x69, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x54, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x31, 0x32, 0x54, 0x20, 0x50, 0x72, 0x6f,
		0x31, 0x32, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x32, 0x53, 0x31, 0x32, 0x53, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x31, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x31, 0x32, 0x58, 0x31, 0x33, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x31, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x31, 0x33, 0x54, 0x20,
		0x50, 0x72, 0x6f, 0x31, 0x33, 0x54, 0x31, 0x34, 0x31, 0x34, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x58, 0x69, 0x61, 0x6f, 0x6d, 0x69, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x54, 0x69,
		0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x54, 0x69, 0x31, 0x34, 0x20, 0x43, 0x69, 0x76, 0x69,
		0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x34, 0x54, 0x20, 0x50, 0x72, 0x6f, 0x31, 0x35, 0x20,
		0x50, 0x72, 0x6f, 0x32, 0x34, 0x31, 0x32, 0x39, 0x50, 0x4e, 0x37, 0x34, 0x43, 0x31, 0x35, 0x4d,
		0x69, 0x20, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x38, 0x20, 0x45, 0x78, 0x70,
		0x6c, 0x6f, 0x72, 0x65, 0x72, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20,
		0x38, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x38, 0x4d, 0x69, 0x20, 0x39, 0x54, 0x20, 0x50, 0x72,
		0x6f, 0x4d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x20, 0x39,
		0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x45, 0x64, 0x69,
		0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69,
		0x20, 0x35, 0x73, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x35, 0x58, 0x4d, 0x69, 0x20,
		0x33, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x43, 0x4d, 0x69, 0x20, 0x34, 0x57, 0x4d, 0x69, 0x20, 0x34,
		0x69, 0x4d, 0x69, 0x20, 0x34, 0x20, 0x4c, 0x54, 0x45, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x33,
		0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d,
		0x69, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x69,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x41, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65,
		0x4d, 0x69, 0x20, 0x41, 0x33, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x34, 0x4d, 0x69, 0x20,
		0x4d, 0x69, 0x78, 0x20, 0x32, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x33, 0x20, 0x35, 0x47,
		0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20,
		0x32, 0x53, 0x20, 0x41, 0x72, 0x74, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x32, 0x53, 0x4d,
		0x69, 0x20, 0x4d, 0x69, 0x78, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x4d, 0x69, 0x78,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x34, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33,
		0x50, 0x6f, 0x63, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x46, 0x31, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x47, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20,
		0x33, 0x32, 0x34, 0x31, 0x32, 0x39, 0x52, 0x54, 0x37, 0x43, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x34, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x35, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x32, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x53, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x38, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x38, 0x41, 0x20, 0x24, 0x31, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x43,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x33, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31,
		0x33, 0x32, 0x34, 0x30, 0x36, 0x45, 0x52, 0x4e, 0x39, 0x43, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x31, 0x33, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x33, 0x43, 0x20,
		0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x34, 0x43, 0x32, 0x34, 0x31, 0x31, 0x44,
		0x52, 0x4e, 0x34, 0x37, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x34, 0x52, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x39, 0x69, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x69, 0x20, 0x53, 0x70, 0x6f, 0x72, 0x74,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x41,
		0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39,
		0x54, 0x20, 0x4e, 0x46, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x39, 0x43, 0x20, 0x4e, 0x46,
		0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x31, 0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32,
		0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x30, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x31, 0x32, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x32, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x31, 0x32, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x31, 0x31,
		0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74,
		0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x4d, 0x31, 0x39, 0x30, 0x33, 0x46, 0x31, 0x30, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x32, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x5a, 0x6f, 0x6f, 0x6d, 0x20, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x53, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x33, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30,
		0x20, 0x34, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x69, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b,
		0x34, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x47, 0x61, 0x6d,
		0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4b, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x32, 0x32, 0x30,
		0x34, 0x31, 0x32, 0x31, 0x31, 0x41, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x4d, 0x65, 0x72, 0x63, 0x65, 0x64,
		0x65, 0x73, 0x2d, 0x41, 0x4d, 0x47, 0x20, 0x46, 0x31, 0x20, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x32,
		0x30, 0x34, 0x31, 0x32, 0x31, 0x36, 0x49, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30,
		0x69, 0x32, 0x31, 0x31, 0x32, 0x31, 0x32, 0x31, 0x30, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4b, 0x35, 0x30, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x35, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x32, 0x33, 0x30, 0x31, 0x33, 0x52, 0x4b, 0x37, 0x35, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4b, 0x36, 0x30, 0x32, 0x32, 0x31, 0x32, 0x32, 0x52, 0x4b, 0x39, 0x33, 0x43, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30,
		0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x36, 0x30, 0x20, 0x55, 0x6c,
		0x74, 0x72, 0x61, 0x32, 0x33, 0x31, 0x31, 0x37, 0x52, 0x4b, 0x36, 0x36, 0x43, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4b, 0x37, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x32, 0x33, 0x31, 0x31, 0x44, 0x52,
		0x4b, 0x34, 0x38, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x37, 0x30, 0x45, 0x32, 0x33,
		0x31, 0x31, 0x33, 0x52, 0x4b, 0x43, 0x36, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4b, 0x37,
		0x30, 0x32, 0x34, 0x30, 0x37, 0x46, 0x52, 0x4b, 0x38, 0x45, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4b, 0x37, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4b, 0x38, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x59, 0x31, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x59, 0x33, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x45, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x65, 0x58,
		0x69, 0x61, 0x6f, 0x6d, 0x69, 0x5f, 0x4d, 0x31, 0x38, 0x30, 0x35, 0x44, 0x31, 0x53, 0x54, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x37, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x37, 0x41, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x34, 0x20, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x31, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x41, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x41, 0x32, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x41, 0x33, 0x78, 0x32, 0x33, 0x31, 0x32, 0x43, 0x52, 0x4e, 0x43, 0x43, 0x4c, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x41, 0x33, 0x32, 0x34, 0x30, 0x39, 0x42, 0x52, 0x4e, 0x32, 0x43, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x41, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x49, 0x4e, 0x33,
		0x55, 0x4c, 0x54, 0x52, 0x41, 0x51, 0x69, 0x6e, 0x20, 0x33, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x51, 0x69, 0x6e, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x51, 0x69, 0x6e, 0x20, 0x32, 0x43, 0x43,
		0x31, 0x31, 0x43, 0x69, 0x76, 0x69, 0x43, 0x69, 0x76, 0x69, 0x20, 0x32, 0x43, 0x69, 0x76, 0x69,
		0x20, 0x33, 0x43, 0x69, 0x76, 0x69, 0x20, 0x34, 0x43, 0x69, 0x76, 0x69, 0x20, 0x31, 0x53, 0x4d,
		0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x50, 0x61,
		0x64, 0x20, 0x35, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x20,
		0x35, 0x47, 0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x61, 0x64, 0x20, 0x36,
		0x50, 0x61, 0x64, 0x20, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x34, 0x50, 0x61, 0x64, 0x20,
		0x36, 0x53, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x31, 0x32, 0x2e, 0x34, 0x22, 0x4d, 0x69, 0x20, 0x50,
		0x61, 0x64, 0x20, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20,
		0x34, 0x20, 0x57, 0x69, 0x46, 0x69, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x34, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x33, 0x4d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x32, 0x4d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x50, 0x61, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x20, 0x38, 0x2e, 0x37, 0x22, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x50, 0x61, 0x64, 0x20, 0x53, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x50, 0x61, 0x64,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x41, 0x31, 0x4d,
		0x69, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f,
		0x72, 0x20, 0x31, 0x35, 0x30, 0x22, 0x4d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x4d, 0x30, 0x35, 0x4d,
		0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x6e, 0x67, 0x4d, 0x69, 0x20,
		0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x32, 0x4d, 0x69, 0x20, 0x42,
		0x6f, 0x78, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x24,
		0x31, 0x4d, 0x69, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x31, 0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34,
		0x53, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x51, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69,
		0x63, 0x6b, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x20, 0x34, 0x4b, 0x4d,
		0x69, 0x54, 0x56, 0x20, 0x50, 0x31, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x52, 0x31, 0x4d, 0x69, 0x54,
		0x56, 0x20, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x34, 0x41, 0x4d, 0x69,
		0x54, 0x56, 0x20, 0x34, 0x41, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x54, 0x56, 0x20, 0x24, 0x31,
		0x54, 0x56, 0x20, 0x42, 0x6f, 0x78, 0x20, 0x53, 0x20, 0x28, 0x32, 0x6e, 0x64, 0x20, 0x47, 0x65,
		0x6e, 0x29, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x46, 0x69,
		0x72, 0x65, 0x20, 0x54, 0x56, 0x20, 0x34, 0x4b, 0x4d, 0x69, 0x20, 0x4d, 0x69, 0x78, 0x20, 0x46,
		0x6f, 0x6c, 0x64, 0x4d, 0x69, 0x78, 0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x32, 0x4d, 0x69, 0x78,
		0x20, 0x46, 0x6f, 0x6c, 0x64, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x48, 0x6f, 0x6e, 0x67, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x54, 0x44,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x34, 0x47, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x32, 0x6b, 0x65, 0x6e, 0x7a, 0x6f, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x35, 0x41, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x58, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39,
		0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39,
		0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x39, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x30, 0x54, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x4a, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72,
		0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x32, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x31, 0x32, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x52, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x32, 0x52, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x54, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x54, 0x20,
		0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x44, 0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f,
		0x32, 0x34, 0x30, 0x36, 0x45, 0x52, 0x4e, 0x39, 0x43, 0x43, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x52, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f,
		0x74, 0x65, 0x20, 0x31, 0x33, 0x52, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f,
		0x32, 0x34, 0x30, 0x39, 0x30, 0x52, 0x41, 0x32, 0x39, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x34, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x34, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x33, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x45, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x45,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x50,
		0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54,
		0x20, 0x50, 0x72, 0x6f, 0x2b, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20,
		0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x20, 0x35, 0x47, 0x52, 0x65,
		0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x2b,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x52, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x34,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x20, 0x53,
		0x45, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x52,
		0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x53, 0x20, 0x35, 0x47,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x31, 0x54, 0x20, 0x35,
		0x47, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x38, 0x54, 0x52, 0x65, 0x64,
		0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x53, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20,
		0x4e, 0x6f, 0x74, 0x65, 0x20, 0x37, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65,
		0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x64, 0x6d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x64, 0x6d,
		0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x52, 0x65, 0x64, 0x6d, 0x69, 0x20, 0x24,
		0x31, 0x4d, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e,
		0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31,
		0x30, 0x20, 0x50, 0x72, 0x6f, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x31, 0x30, 0x4d, 0x69,
		0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x24, 0x31, 0x51, 0x69, 0x6e, 0x20, 0x31, 0x73, 0x2b, 0x4d,
		0x69, 0x20, 0x4f, 0x6e, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x69, 0x20, 0x4f, 0x6e, 0x65,
		0x20, 0x24, 0x31, 0x4d, 0x69, 0x20, 0x24, 0x31, 0x48, 0x4d, 0x20, 0x24, 0x31, 0x58, 0x69, 0x6f,
		0x6e, 0x43, 0x45, 0x24, 0x31, 0x58, 0x6f, 0x6c, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x31,
		0x58, 0x45, 0x72, 0x61, 0x20, 0x31, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x72, 0x61, 0x20, 0x24,
		0x31, 0x58, 0x45, 0x72, 0x61, 0x20, 0x34, 0x58, 0x20, 0x32, 0x47, 0x42, 0x45, 0x72, 0x61, 0x20,
		0x32, 0x56, 0x45, 0x72, 0x61, 0x20, 0x24, 0x31, 0x43, 0x75, 0x62, 0x65, 0x20, 0x35, 0x2e, 0x30,
		0x58, 0x6f, 0x72, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x20, 0x41,
		0x33, 0x20, 0x34, 0x47, 0x54, 0x65, 0x6c, 0x65, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x4d, 0x65,
		0x67, 0x61, 0x50, 0x61, 0x64, 0x20, 0x33, 0x32, 0x30, 0x34, 0x20, 0x56, 0x35, 0x48, 0x4d, 0x54,
		0x20, 0x24, 0x31, 0x48, 0x53, 0x54, 0x20, 0x32, 0x36, 0x30, 0x58, 0x73, 0x68, 0x69, 0x74, 0x6f,
		0x75, 0x58, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x58, 0x43, 0x6f, 0x72,
		0x65, 0x20, 0x58, 0x58, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x58, 0x39, 0x58, 0x42, 0x6f, 0x74, 0x20,
		0x24, 0x31, 0x58, 0x50, 0x31, 0x30, 0x5f, 0x57, 0x69, 0x66, 0x69, 0x58, 0x50, 0x31, 0x30, 0x20,
		0x57, 0x69, 0x46, 0x69, 0x58, 0x74, 0x72, 0x61, 0x74, 0x65, 0x63, 0x68, 0x58, 0x4d, 0x31, 0x34,
		0x47, 0x49, 0x67, 0x75, 0x61, 0x6e, 0x61, 0x50, 0x61, 0x64, 0x20, 0x58, 0x4d, 0x31, 0x34, 0x47,
		0x58, 0x31, 0x30, 0x4d, 0x54, 0x31, 0x36, 0x58, 0x31, 0x30, 0x4d, 0x54, 0x38, 0x37, 0x49, 0x67,
		0x75, 0x61, 0x6e, 0x61, 0x50, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x58, 0x77, 0x61,
		0x76, 0x65, 0x78, 0x50, 0x61, 0x64, 0x20, 0x24, 0x31, 0x59, 0x41, 0x53, 0x49, 0x4e, 0x59, 0x41,
		0x53, 0x49, 0x4e, 0x20, 0x24, 0x31, 0x4b, 0x20, 0x47, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20,
		0x54, 0x56, 0x59, 0x45, 0x4c, 0x4c, 0x59, 0x4f, 0x55, 0x54, 0x48, 0x59, 0x45, 0x50, 0x45, 0x4e,
		0x4d, 0x32, 0x30, 0x32, 0x30, 0x31, 0x34, 0x31, 0x39, 0x58, 0x31, 0x32, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x4d, 0x61, 0x78, 0x59, 0x4f, 0x54, 0x4f, 0x50, 0x54, 0x59, 0x55, 0x20, 0x46, 0x6c, 0x79,
		0x59, 0x55, 0x48, 0x4f, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x56, 0x61, 0x73, 0x74, 0x5f, 0x50, 0x6c,
		0x75, 0x73, 0x56, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x59, 0x55, 0x48, 0x4f, 0x5f,
		0x59, 0x31, 0x5f, 0x41, 0x43, 0x45, 0x59, 0x31, 0x20, 0x41, 0x63, 0x65, 0x59, 0x55, 0x48, 0x4f,
		0x5f, 0x59, 0x31, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x53, 0x59, 0x31, 0x20, 0x53, 0x74, 0x61, 0x72,
		0x20, 0x53, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x59, 0x31, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x59, 0x31,
		0x20, 0x53, 0x74, 0x61, 0x72, 0x59, 0x55, 0x48, 0x4f, 0x5f, 0x4f, 0x31, 0x5f, 0x4c, 0x49, 0x54,
		0x45, 0x4f, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x59, 0x55, 0x4d, 0x4b, 0x45, 0x4d, 0x59, 0x55,
		0x4e, 0x44, 0x4f, 0x4f, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x59, 0x61, 0x6e, 0x64, 0x65, 0x78,
		0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x32, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x31, 0x4d, 0x6f, 0x64,
		0x75, 0x6c, 0x65, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x24, 0x31, 0x59, 0x4e, 0x44, 0x58, 0x2d, 0x30,
		0x30, 0x30, 0x53, 0x42, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x20, 0x44,
		0x75, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x73, 0x74, 0x61, 0x74,
		0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x59, 0x61,
		0x72, 0x76, 0x69, 0x6b, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x39,
		0x32, 0x30, 0x4e, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x37, 0x63,
		0x4c, 0x75, 0x6e, 0x61, 0x20, 0x54, 0x41, 0x42, 0x32, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x54, 0x41, 0x42, 0x34, 0x37, 0x34, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x31, 0x30, 0x4c, 0x75, 0x6e,
		0x61, 0x20, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x31, 0x35, 0x30, 0x4c, 0x75, 0x6e, 0x61, 0x20,
		0x31, 0x30, 0x63, 0x54, 0x41, 0x42, 0x30, 0x39, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f, 0x62, 0x6c,
		0x65, 0x20, 0x39, 0x2e, 0x37, 0x54, 0x41, 0x42, 0x31, 0x30, 0x2d, 0x34, 0x31, 0x30, 0x4e, 0x6f,
		0x62, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x34, 0x38,
		0x35, 0x4e, 0x6f, 0x62, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x58, 0x65, 0x6e, 0x74, 0x61,
		0x20, 0x37, 0x63, 0x54, 0x41, 0x42, 0x30, 0x37, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74,
		0x61, 0x20, 0x37, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x30, 0x58, 0x65,
		0x6e, 0x74, 0x61, 0x20, 0x38, 0x69, 0x63, 0x54, 0x41, 0x42, 0x30, 0x38, 0x2d, 0x32, 0x30, 0x31,
		0x2d, 0x33, 0x47, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x38, 0x63, 0x54, 0x41, 0x42, 0x39, 0x2d,
		0x32, 0x30, 0x30, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37, 0x69, 0x63, 0x54, 0x41,
		0x42, 0x30, 0x39, 0x2d, 0x32, 0x31, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x39, 0x2e, 0x37,
		0x69, 0x63, 0x2b, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x30, 0x69, 0x63, 0x54, 0x41, 0x42,
		0x31, 0x33, 0x2d, 0x32, 0x30, 0x31, 0x58, 0x65, 0x6e, 0x74, 0x61, 0x20, 0x31, 0x33, 0x63, 0x59,
		0x65, 0x73, 0x4d, 0x36, 0x33, 0x31, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x4d,
		0x36, 0x35, 0x31, 0x47, 0x5f, 0x4d, 0x59, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20,
		0x32, 0x4d, 0x36, 0x38, 0x35, 0x59, 0x34, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20,
		0x33, 0x59, 0x65, 0x73, 0x74, 0x65, 0x6c, 0x59, 0x65, 0x7a, 0x7a, 0x41, 0x6e, 0x64, 0x79, 0x20,
		0x24, 0x31, 0x59, 0x65, 0x7a, 0x7a, 0x2d, 0x41, 0x43, 0x34, 0x45, 0x49, 0x41, 0x6e, 0x64, 0x79,
		0x20, 0x34, 0x45, 0x49, 0x41, 0x52, 0x54, 0x31, 0x5f, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20,
		0x31, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x52, 0x54, 0x31, 0x41, 0x72, 0x74, 0x20, 0x31, 0x41, 0x52,
		0x54, 0x32, 0x50, 0x52, 0x4f, 0x41, 0x72, 0x74, 0x20, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x52,
		0x54, 0x20, 0x33, 0x53, 0x41, 0x72, 0x74, 0x20, 0x33, 0x53, 0x45, 0x50, 0x49, 0x43, 0x20, 0x54,
		0x45, 0x70, 0x69, 0x63, 0x20, 0x54, 0x47, 0x4f, 0x20, 0x24, 0x31, 0x4c, 0x49, 0x56, 0x31, 0x4c,
		0x49, 0x56, 0x20, 0x33, 0x53, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x56, 0x20, 0x24, 0x31, 0x53,
		0x4c, 0x49, 0x56, 0x20, 0x33, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x49, 0x56, 0x32, 0x20, 0x4c, 0x54,
		0x45, 0x4d, 0x41, 0x58, 0x5f, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x78, 0x20, 0x31,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x58, 0x32, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61,
		0x78, 0x20, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x20,
		0x24, 0x32, 0x41, 0x6e, 0x64, 0x79, 0x20, 0x24, 0x31, 0x2e, 0x24, 0x32, 0x20, 0x24, 0x33, 0x59,
		0x6f, 0x6b, 0x61, 0x20, 0x54, 0x56, 0x4b, 0x42, 0x32, 0x20, 0x50, 0x72, 0x6f, 0x59, 0x6f, 0x6f,
		0x7a, 0x59, 0x6f, 0x74, 0x61, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x59, 0x6f, 0x75, 0x69, 0x6e, 0x59, 0x6f, 0x75, 0x2d, 0x42, 0x6f, 0x78, 0x59, 0x6f, 0x75,
		0x77, 0x65, 0x69, 0x4d, 0x69, 0x6e, 0x69, 0x20, 0x35, 0x47, 0x59, 0x74, 0x6f, 0x6e, 0x65, 0x59,
		0x75, 0x59, 0x75, 0x70, 0x68, 0x6f, 0x72, 0x69, 0x61, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
		0x20, 0x32, 0x59, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x59,
		0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x32, 0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x59, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x59, 0x55, 0x20, 0x36, 0x30, 0x30, 0x30,
		0x59, 0x75, 0x72, 0x65, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x59, 0x75, 0x61, 0x6e, 0x64,
		0x61, 0x6f, 0x59, 0x75, 0x6e, 0x53, 0x6f, 0x6e, 0x67, 0x59, 0x53, 0x24, 0x31, 0x20, 0x50, 0x72,
		0x6f, 0x59, 0x75, 0x6e, 0x6f, 0x55, 0x4c, 0x58, 0x2d, 0x24, 0x31, 0x59, 0x75, 0x73, 0x75, 0x6e,
		0x4c, 0x41, 0x32, 0x2d, 0x54, 0x59, 0x78, 0x74, 0x65, 0x6c, 0x5a, 0x2d, 0x4b, 0x61, 0x69, 0x5a,
		0x48, 0x26, 0x4b, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4a, 0x31, 0x30, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x24, 0x31, 0x4f, 0x64, 0x79,
		0x73, 0x73, 0x65, 0x79, 0x20, 0x41, 0x65, 0x6f, 0x6e, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x41, 0x63, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x4f, 0x64, 0x79,
		0x73, 0x73, 0x65, 0x79, 0x20, 0x50, 0x65, 0x72, 0x72, 0x69, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65,
		0x79, 0x20, 0x46, 0x6c, 0x61, 0x6d, 0x65, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x45,
		0x76, 0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72,
		0x79, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53, 0x77, 0x69, 0x66, 0x74, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x54, 0x79, 0x74, 0x61, 0x6e, 0x4f, 0x64, 0x79, 0x73, 0x73,
		0x65, 0x79, 0x20, 0x53, 0x61, 0x67, 0x61, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x53,
		0x61, 0x63, 0x72, 0x65, 0x64, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x50, 0x6f, 0x70,
		0x6f, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x64,
		0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x47, 0x6c, 0x61, 0x7a, 0x65, 0x4f, 0x64, 0x79,
		0x73, 0x73, 0x65, 0x79, 0x20, 0x48, 0x69, 0x67, 0x68, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79,
		0x20, 0x53, 0x6f, 0x61, 0x72, 0x4f, 0x64, 0x79, 0x73, 0x73, 0x65, 0x79, 0x20, 0x45, 0x72, 0x61,
		0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x52, 0x49, 0x53, 0x45, 0x49, 0x6e, 0x74, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x52, 0x69, 0x73, 0x65, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20,
		0x48, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x48, 0x79, 0x70, 0x65,
		0x49, 0x4e, 0x54, 0x45, 0x4e, 0x53, 0x45, 0x20, 0x47, 0x41, 0x4d, 0x45, 0x49, 0x6e, 0x74, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x5a, 0x49, 0x46, 0x46, 0x4c, 0x45, 0x52, 0x5a,
		0x49, 0x46, 0x52, 0x4f, 0x5a, 0x49, 0x4b, 0x5a, 0x54, 0x45, 0x35, 0x47, 0x20, 0x55, 0x47, 0x20,
		0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x55, 0x32, 0x33, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20,
		0x31, 0x30, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x32, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x56,
		0x6f, 0x79, 0x61, 0x67, 0x65, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x2b, 0x56, 0x6f, 0x79,
		0x61, 0x67, 0x65, 0x20, 0x33, 0x30, 0x53, 0x53, 0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35,
		0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20,
		0x33, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f,
		0x20, 0x35, 0x47, 0x20, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20,
		0x49, 0x49, 0x49, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x20, 0x49, 0x56, 0x4c,
		0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x53, 0x31, 0x30, 0x41, 0x6e, 0x73, 0x68, 0x69, 0x6e, 0x20,
		0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x35, 0x30, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x46, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x37, 0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x37, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x70, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37,
		0x31, 0x5a, 0x54, 0x45, 0x20, 0x37, 0x30, 0x36, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x37, 0x33, 0x5a, 0x32, 0x33, 0x35, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x35,
		0x4e, 0x39, 0x33, 0x39, 0x53, 0x63, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x31, 0x31,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x76, 0x37, 0x35, 0x34, 0x30, 0x4e, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x32, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x37, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x37, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x31, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x41, 0x78,
		0x6f, 0x6e, 0x20, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x73, 0x20, 0x50,
		0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x35, 0x47, 0x41,
		0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x31, 0x20, 0x53, 0x45,
		0x20, 0x35, 0x47, 0x41, 0x32, 0x33, 0x32, 0x32, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30,
		0x20, 0x35, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x41, 0x32, 0x30, 0x32, 0x32, 0x48,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32,
		0x30, 0x32, 0x32, 0x50, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x41, 0x32, 0x30, 0x32, 0x32, 0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x33, 0x30, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30, 0x32, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x33, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x32, 0x30, 0x32, 0x33, 0x48, 0x41, 0x78, 0x6f, 0x6e,
		0x20, 0x41, 0x34, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x41, 0x32, 0x30,
		0x32, 0x33, 0x50, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61,
		0x41, 0x78, 0x6f, 0x6e, 0x20, 0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x34, 0x30, 0x20, 0x53, 0x45, 0x41, 0x32, 0x30, 0x31, 0x36, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x45,
		0x6c, 0x69, 0x74, 0x65, 0x5a, 0x32, 0x33, 0x35, 0x36, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x36, 0x30,
		0x5a, 0x32, 0x33, 0x35, 0x30, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x36, 0x30, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x41, 0x32, 0x30, 0x32, 0x34, 0x48, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x35, 0x30, 0x20, 0x55,
		0x6c, 0x74, 0x72, 0x61, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x45, 0x67, 0x41,
		0x6c, 0x6c, 0x73, 0x74, 0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x51, 0x75, 0x65, 0x73, 0x74, 0x20, 0x35, 0x43, 0x74, 0x79, 0x6f, 0x6e, 0x20, 0x41, 0x39, 0x56,
		0x35, 0x47, 0x56, 0x35, 0x53, 0x56, 0x35, 0x20, 0x4d, 0x61, 0x78, 0x49, 0x6d, 0x70, 0x65, 0x72,
		0x69, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x4d, 0x61, 0x78, 0x41,
		0x76, 0x69, 0x64, 0x41, 0x76, 0x69, 0x64, 0x20, 0x35, 0x37, 0x39, 0x41, 0x76, 0x69, 0x64, 0x20,
		0x35, 0x38, 0x39, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67, 0x65, 0x20, 0x32, 0x54, 0x65, 0x6d,
		0x70, 0x6f, 0x20, 0x58, 0x57, 0x61, 0x72, 0x70, 0x20, 0x34, 0x47, 0x56, 0x69, 0x73, 0x69, 0x62,
		0x6c, 0x65, 0x20, 0x52, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x54, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x2b,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x51, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x47, 0x46, 0x33, 0x57, 0x61, 0x72, 0x70, 0x20, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x72,
		0x70, 0x20, 0x37, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x73,
		0x74, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x4d, 0x61, 0x78, 0x20, 0x58, 0x4c, 0x56, 0x69, 0x74, 0x61,
		0x6c, 0x56, 0x35, 0x20, 0x52, 0x65, 0x64, 0x20, 0x42, 0x75, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x56, 0x37, 0x37, 0x39, 0x4d, 0x4a,
		0x6f, 0x65, 0x79, 0x20, 0x4a, 0x75, 0x6d, 0x70, 0x20, 0x32, 0x56, 0x38, 0x30, 0x37, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x43, 0x56, 0x38, 0x30, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x43,
		0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x35, 0x32, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x5a, 0x54, 0x45, 0x5f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x5f, 0x49, 0x49, 0x49,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x49, 0x49, 0x49, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x47,
		0x20, 0x50, 0x72, 0x6f, 0x56, 0x38, 0x38, 0x32, 0x4c, 0x6f, 0x72, 0x64, 0x56, 0x39, 0x36, 0x37,
		0x53, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x32, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x33, 0x56, 0x39, 0x36, 0x35, 0x56, 0x38, 0x30, 0x30,
		0x30, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x34, 0x5a, 0x39, 0x38, 0x37, 0x47, 0x72, 0x61,
		0x6e, 0x64, 0x20, 0x58, 0x20, 0x4d, 0x61, 0x78, 0x2b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x45,
		0x72, 0x61, 0x55, 0x5a, 0x54, 0x45, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x20, 0x56, 0x37, 0x47,
		0x72, 0x61, 0x6e, 0x64, 0x20, 0x56, 0x37, 0x56, 0x37, 0x38, 0x38, 0x44, 0x4b, 0x69, 0x73, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x5a, 0x33, 0x33, 0x31, 0x4e, 0x38, 0x31, 0x38, 0x53, 0x53, 0x6d, 0x61,
		0x6c, 0x6c, 0x20, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x35, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20,
		0x58, 0x20, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20,
		0x58, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x32, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58,
		0x20, 0x57, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x53, 0x74, 0x61,
		0x72, 0x74, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x30, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x32, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x32, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x4c, 0x33, 0x20, 0x41, 0x70, 0x65, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c,
		0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x34, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c,
		0x34, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x4c, 0x37, 0x41, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x24, 0x32, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x24, 0x31, 0x20, 0x28, 0x32, 0x30, 0x32,
		0x30, 0x29, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x41, 0x36, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x36, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x41, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53,
		0x37, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x44, 0x20, 0x4c, 0x75, 0x78, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x41, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x36, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x37, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x37, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x35,
		0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x35, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67,
		0x6e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x35, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67,
		0x6e, 0x20, 0x35, 0x47, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x35, 0x30, 0x20, 0x56, 0x69,
		0x74, 0x61, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x31, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x31, 0x20, 0x35, 0x47, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x58, 0x24, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x35, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x4c, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x51,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x53, 0x45, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x38, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x39,
		0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x33, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38,
		0x30, 0x33, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x32, 0x20, 0x34,
		0x47, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x53, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x33, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x56, 0x33, 0x30, 0x5a, 0x54, 0x45, 0x20, 0x41, 0x37, 0x30, 0x34, 0x30, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20,
		0x41, 0x37, 0x30, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64,
		0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x31,
		0x34, 0x30, 0x4e, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x31, 0x20, 0x56, 0x69, 0x74,
		0x61, 0x5a, 0x54, 0x45, 0x20, 0x39, 0x30, 0x34, 0x36, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x34, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x34, 0x36, 0x42, 0x6c,
		0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5a, 0x54,
		0x45, 0x20, 0x39, 0x30, 0x34, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x34, 0x30, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x24, 0x31, 0x20, 0x56, 0x69, 0x74, 0x61, 0x42, 0x6c, 0x61,
		0x64, 0x65, 0x20, 0x56, 0x38, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67,
		0x68, 0x74, 0x5a, 0x38, 0x32, 0x30, 0x4f, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x5a, 0x39,
		0x38, 0x36, 0x55, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x36,
		0x34, 0x31, 0x30, 0x53, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20, 0x32, 0x73,
		0x5a, 0x36, 0x31, 0x30, 0x44, 0x4c, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x5a, 0x39, 0x37, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x53, 0x70,
		0x61, 0x72, 0x6b, 0x5a, 0x39, 0x37, 0x38, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x5a, 0x38, 0x33, 0x39, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x61, 0x6e,
		0x74, 0x61, 0x67, 0x65, 0x5a, 0x33, 0x31, 0x35, 0x33, 0x56, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x56, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x32, 0x5a, 0x39, 0x33, 0x30, 0x4c, 0x55, 0x6e,
		0x69, 0x63, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x36, 0x35, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x58, 0x5a, 0x36, 0x34, 0x30, 0x30, 0x43, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x32,
		0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x31, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x5a, 0x20,
		0x4d, 0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x39, 0x38, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65,
		0x20, 0x5a, 0x20, 0x4d, 0x61, 0x78, 0x5a, 0x39, 0x38, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x58, 0x20, 0x4d, 0x61, 0x78, 0x43, 0x69, 0x74, 0x72, 0x69, 0x6e, 0x65, 0x20, 0x4c, 0x54, 0x45,
		0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x33,
		0x56, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x32, 0x33, 0x32, 0x54,
		0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x33, 0x35,
		0x33, 0x56, 0x4c, 0x43, 0x79, 0x6d, 0x62, 0x61, 0x6c, 0x2d, 0x54, 0x20, 0x4c, 0x54, 0x45, 0x5a,
		0x37, 0x31, 0x38, 0x54, 0x4c, 0x4a, 0x61, 0x73, 0x70, 0x65, 0x72, 0x20, 0x4c, 0x54, 0x45, 0x4b,
		0x49, 0x53, 0x20, 0x49, 0x49, 0x20, 0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x49, 0x49, 0x20,
		0x4d, 0x61, 0x78, 0x4b, 0x69, 0x73, 0x20, 0x33, 0x4d, 0x61, 0x6a, 0x65, 0x73, 0x74, 0x79, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x38, 0x39, 0x39, 0x56, 0x4c, 0x4d, 0x61, 0x6a,
		0x65, 0x73, 0x74, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x38, 0x32, 0x38, 0x54, 0x4c, 0x4d, 0x69, 0x64, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x4d, 0x61,
		0x76, 0x65, 0x6e, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x4f, 0x6e, 0x65, 0x5a, 0x4d, 0x61, 0x78, 0x20,
		0x35, 0x47, 0x5a, 0x38, 0x31, 0x35, 0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x32, 0x5a,
		0x38, 0x33, 0x31, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x32, 0x5a, 0x38, 0x33, 0x32, 0x53, 0x6f,
		0x6e, 0x61, 0x74, 0x61, 0x20, 0x33, 0x5a, 0x38, 0x33, 0x35, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x20,
		0x33, 0x50, 0x72, 0x65, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35,
		0x31, 0x4d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x35, 0x32,
		0x46, 0x61, 0x6e, 0x66, 0x61, 0x72, 0x65, 0x20, 0x33, 0x5a, 0x38, 0x32, 0x38, 0x41, 0x76, 0x69,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x38, 0x35, 0x35, 0x41, 0x76, 0x69, 0x64, 0x20, 0x34,
		0x5a, 0x38, 0x33, 0x33, 0x41, 0x76, 0x69, 0x64, 0x20, 0x54, 0x52, 0x49, 0x4f, 0x5a, 0x46, 0x69,
		0x76, 0x65, 0x20, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x38, 0x56, 0x4c, 0x5a, 0x46,
		0x69, 0x76, 0x65, 0x20, 0x43, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x35, 0x35, 0x37, 0x42, 0x4c, 0x5a,
		0x46, 0x69, 0x76, 0x65, 0x20, 0x47, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x46, 0x69, 0x76, 0x65, 0x20,
		0x4c, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x36, 0x42, 0x4c, 0x5a, 0x4d, 0x61, 0x78, 0x20,
		0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x39, 0x31, 0x37, 0x56, 0x4c, 0x5a,
		0x4d, 0x61, 0x78, 0x20, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x20, 0x4c, 0x54, 0x45, 0x5a, 0x4d, 0x61,
		0x78, 0x20, 0x32, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x33, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x31, 0x30,
		0x5a, 0x39, 0x36, 0x33, 0x56, 0x4c, 0x4d, 0x61, 0x78, 0x20, 0x44, 0x75, 0x6f, 0x20, 0x4c, 0x54,
		0x45, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x4d, 0x61, 0x78, 0x20, 0x5a, 0x39, 0x37, 0x30, 0x5a, 0x39,
		0x38, 0x36, 0x44, 0x4c, 0x4d, 0x41, 0x58, 0x20, 0x42, 0x6c, 0x75, 0x65, 0x20, 0x4c, 0x54, 0x45,
		0x41, 0x76, 0x61, 0x69, 0x6c, 0x20, 0x32, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x4d, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x32, 0x30, 0x31, 0x35, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x54, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x43, 0x32, 0x30, 0x31, 0x37, 0x41, 0x78, 0x6f, 0x6e, 0x20,
		0x37, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x32, 0x30, 0x31, 0x38, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37,
		0x73, 0x42, 0x32, 0x30, 0x31, 0x37, 0x47, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x37, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x41, 0x78, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x36, 0x36,
		0x37, 0x54, 0x5a, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x20, 0x32, 0x47,
		0x65, 0x65, 0x6b, 0x5a, 0x37, 0x31, 0x36, 0x42, 0x4c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x58, 0x35,
		0x30, 0x31, 0x47, 0x72, 0x6f, 0x6f, 0x76, 0x65, 0x46, 0x2d, 0x34, 0x35, 0x30, 0x41, 0x64, 0x61,
		0x6d, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x6f, 0x56, 0x38, 0x36,
		0x35, 0x4d, 0x4f, 0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x56, 0x69, 0x73, 0x74, 0x61, 0x4f,
		0x70, 0x74, 0x75, 0x73, 0x20, 0x58, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x65,
		0x6f, 0x20, 0x51, 0x32, 0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35,
		0x56, 0x65, 0x72, 0x67, 0x61, 0x74, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x56, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x32, 0x4e,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x31, 0x20, 0x35, 0x47, 0x5a, 0x54,
		0x45, 0x20, 0x39, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32,
		0x30, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x30, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x56,
		0x32, 0x30, 0x32, 0x30, 0x20, 0x56, 0x69, 0x74, 0x61, 0x4b, 0x49, 0x53, 0x20, 0x43, 0x33, 0x34,
		0x31, 0x4b, 0x69, 0x73, 0x20, 0x43, 0x33, 0x34, 0x31, 0x4d, 0x45, 0x4f, 0x20, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x20, 0x41, 0x24, 0x31, 0x41, 0x74, 0x6c, 0x61, 0x73, 0x20, 0x57, 0x41, 0x78, 0x6f,
		0x6e, 0x20, 0x32, 0x30, 0x20, 0x35, 0x47, 0x5a, 0x54, 0x45, 0x20, 0x38, 0x30, 0x31, 0x30, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x56, 0x32, 0x30, 0x32, 0x30, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x5a, 0x58, 0x56, 0x31, 0x30, 0x20, 0x42, 0x38, 0x36, 0x37, 0x52, 0x45, 0x47, 0x72, 0x61, 0x6e,
		0x64, 0x20, 0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20,
		0x58, 0x20, 0x56, 0x69, 0x65, 0x77, 0x20, 0x34, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x20,
		0x56, 0x69, 0x65, 0x77, 0x20, 0x33, 0x2e, 0x38, 0x54, 0x72, 0x65, 0x6b, 0x20, 0x32, 0x50, 0x72,
		0x69, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x31, 0x30,
		0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x58, 0x31, 0x30, 0x20, 0x49, 0x49, 0x20, 0x50, 0x72, 0x6f,
		0x2b, 0x41, 0x78, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x54, 0x45,
		0x20, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x32, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20,
		0x41, 0x35, 0x32, 0x5a, 0x32, 0x34, 0x35, 0x30, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35,
		0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x35, 0x33, 0x2b, 0x5a, 0x54, 0x45, 0x20, 0x42,
		0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33, 0x33, 0x73, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41,
		0x33, 0x33, 0x73, 0x5a, 0x32, 0x34, 0x35, 0x33, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x33,
		0x35, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x20, 0x41, 0x36, 0x31, 0x30, 0x5a, 0x59, 0x51, 0x51, 0x36,
		0x33, 0x38, 0x51, 0x32, 0x36, 0x32, 0x34, 0x43, 0x68, 0x65, 0x65, 0x72, 0x20, 0x33, 0x47, 0x51,
		0x32, 0x36, 0x30, 0x32, 0x54, 0x56, 0x20, 0x4e, 0x65, 0x78, 0x74, 0x51, 0x32, 0x37, 0x32, 0x38,
		0x5a, 0x6f, 0x6e, 0x65, 0x20, 0x33, 0x47, 0x51, 0x32, 0x37, 0x32, 0x39, 0x51, 0x32, 0x36, 0x38,
		0x38, 0x51, 0x32, 0x36, 0x32, 0x33, 0x57, 0x69, 0x6e, 0x20, 0x33, 0x47, 0x51, 0x32, 0x36, 0x32,
		0x36, 0x43, 0x61, 0x72, 0x65, 0x20, 0x33, 0x47, 0x51, 0x33, 0x36, 0x32, 0x33, 0x42, 0x72, 0x61,
		0x77, 0x20, 0x33, 0x47, 0x51, 0x33, 0x30, 0x32, 0x32, 0x51, 0x33, 0x32, 0x38, 0x20, 0x6d, 0x39,
		0x51, 0x33, 0x32, 0x38, 0x20, 0x4d, 0x39, 0x51, 0x33, 0x32, 0x38, 0x53, 0x70, 0x65, 0x65, 0x64,
		0x20, 0x33, 0x47, 0x51, 0x36, 0x36, 0x38, 0x54, 0x56, 0x20, 0x49, 0x34, 0x4a, 0x37, 0x37, 0x51,
		0x2e, 0x44, 0x65, 0x65, 0x51, 0x2e, 0x55, 0x70, 0x20, 0x43, 0x35, 0x51, 0x2e, 0x55, 0x70, 0x51,
		0x2e, 0x42, 0x6f, 0x73, 0x73, 0x20, 0x50, 0x39, 0x39, 0x51, 0x2e, 0x44, 0x65, 0x65, 0x20, 0x52,
		0x30, 0x39, 0x51, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x4d, 0x39, 0x51, 0x2e, 0x48, 0x69, 0x20,
		0x53, 0x31, 0x51, 0x2e, 0x48, 0x69, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x20, 0x50, 0x37, 0x20, 0x33,
		0x47, 0x51, 0x2e, 0x48, 0x6f, 0x74, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x68, 0x6f, 0x6e, 0x65,
		0x20, 0x37, 0x20, 0x33, 0x47, 0x51, 0x2e, 0x4d, 0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37,
		0x51, 0x2e, 0x4d, 0x65, 0x51, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x20, 0x52, 0x39, 0x39, 0x51, 0x2e,
		0x4e, 0x65, 0x78, 0x74, 0x20, 0x42, 0x37, 0x51, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4a, 0x32,
		0x51, 0x2e, 0x54, 0x6f, 0x70, 0x20, 0x58, 0x38, 0x51, 0x2e, 0x59, 0x6f, 0x75, 0x51, 0x54, 0x41,
		0x42, 0x20, 0x54, 0x61, 0x62, 0x34, 0x51, 0x54, 0x61, 0x62, 0x20, 0x54, 0x61, 0x62, 0x34, 0x5a,
		0x59, 0x51, 0x2d, 0x51, 0x38, 0x38, 0x51, 0x38, 0x38, 0x5a, 0x5a, 0x42, 0x5a, 0x61, 0x69, 0x74,
		0x68, 0x5a, 0x61, 0x6d, 0x6f, 0x6c, 0x78, 0x65, 0x5a, 0x61, 0x74, 0x65, 0x63, 0x57, 0x69, 0x6e,
		0x64, 0x5a, 0x50, 0x4c, 0x41, 0x59, 0x31, 0x5f, 0x32, 0x30, 0x31, 0x38, 0x5a, 0x70, 0x6c, 0x61,
		0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x32,
		0x30, 0x31, 0x38, 0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x28, 0x32, 0x30, 0x31, 0x38, 0x29,
		0x5a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x70, 0x6f, 0x77, 0x65,
		0x72, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x5a, 0x50, 0x41, 0x44, 0x5f, 0x31, 0x5a, 0x50, 0x61, 0x64,
		0x5a, 0x65, 0x61, 0x6c, 0x6f, 0x74, 0x5a, 0x65, 0x62, 0x6c, 0x61, 0x7a, 0x65, 0x54, 0x68, 0x6f,
		0x72, 0x20, 0x24, 0x31, 0x54, 0x48, 0x4f, 0x52, 0x20, 0x50, 0x52, 0x4f, 0x54, 0x68, 0x6f, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x5a, 0x65, 0x62, 0x72, 0x61, 0x5a, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x5a,
		0x45, 0x45, 0x4b, 0x45, 0x52, 0x5a, 0x65, 0x65, 0x6d, 0x69, 0x5a, 0x65, 0x6e, 0x41, 0x64, 0x6d,
		0x69, 0x72, 0x65, 0x47, 0x6c, 0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47, 0x6c,
		0x61, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x2b, 0x41,
		0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x77, 0x61, 0x64, 0x65, 0x73, 0x68, 0x2b, 0x41, 0x64,
		0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x44, 0x75, 0x6f, 0x41, 0x64,
		0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x20, 0x4e, 0x65, 0x6f, 0x41, 0x64,
		0x6d, 0x69, 0x72, 0x65, 0x20, 0x43, 0x75, 0x72, 0x76, 0x65, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x4e, 0x65, 0x6f, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x44, 0x75, 0x6f,
		0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69,
		0x72, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x72,
		0x65, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x53, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x72, 0x65, 0x20, 0x47, 0x6c, 0x6f, 0x72, 0x79,
		0x2b, 0x5a, 0x65, 0x6e, 0x65, 0x6b, 0x5a, 0x35, 0x35, 0x31, 0x37, 0x4c, 0x65, 0x6f, 0x70, 0x61,
		0x72, 0x64, 0x6f, 0x5a, 0x36, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x62, 0x65, 0x6c, 0x75, 0x6c, 0x61,
		0x5a, 0x35, 0x30, 0x30, 0x37, 0x4f, 0x73, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x39, 0x50, 0x69, 0x6e,
		0x67, 0xc3, 0xbb, 0x69, 0x6e, 0x6f, 0x5a, 0x35, 0x35, 0x31, 0x36, 0x5a, 0x65, 0x6e, 0x74, 0x61,
		0x6c, 0x69, 0x74, 0x79, 0x43, 0x2d, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x5a, 0x66,
		0x69, 0x6e, 0x65, 0x72, 0x59, 0x39, 0x30, 0x30, 0x5a, 0x69, 0x64, 0x6f, 0x6f, 0x5a, 0x69, 0x67,
		0x6f, 0x45, 0x6f, 0x6e, 0x34, 0x35, 0x69, 0x45, 0x6f, 0x6e, 0x20, 0x34, 0x35, 0x69, 0x5a, 0x69,
		0x6e, 0x6f, 0x78, 0x4b, 0x69, 0x64, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x61, 0x62,
		0x50, 0x72, 0x6f, 0x4b, 0x69, 0x64, 0x73, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x54,
		0x61, 0x62, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x70, 0x61, 0x64, 0x2d, 0x58, 0x38, 0x2d, 0x50, 0x52,
		0x4f, 0x5a, 0x70, 0x61, 0x64, 0x20, 0x58, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x5a, 0x69, 0x6f, 0x78,
		0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x34, 0x47, 0x41, 0x73, 0x74, 0x72, 0x61,
		0x20, 0x24, 0x31, 0x41, 0x73, 0x74, 0x72, 0x61, 0x20, 0x24, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x44,
		0x75, 0x6f, 0x70, 0x69, 0x78, 0x20, 0x46, 0x39, 0x20, 0x50, 0x72, 0x6f, 0x44, 0x75, 0x6f, 0x24,
		0x31, 0x20, 0x24, 0x32, 0x5a, 0x6f, 0x6e, 0x64, 0x61, 0x5a, 0x41, 0x34, 0x30, 0x39, 0x4d, 0x75,
		0x7a, 0x69, 0x63, 0x5a, 0x6f, 0x6e, 0x6b, 0x6f, 0x5a, 0x6f, 0x6f, 0x6d, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x5a, 0x6f, 0x70, 0x6f, 0x43, 0x32, 0x20, 0x49, 0x49, 0x39, 0x58, 0x58, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x5a, 0x50, 0x39, 0x38, 0x30, 0x2b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x37, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x32, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20,
		0x37, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x38, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x4c, 0x69, 0x62, 0x65, 0x72, 0x6f, 0x20, 0x48, 0x44, 0x4c, 0x69, 0x62, 0x65, 0x72,
		0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x53, 0x43,
		0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x46, 0x32, 0x46, 0x35, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
		0x4d, 0x35, 0x43, 0x32, 0x20, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x4d, 0x34, 0x43, 0x6f, 0x6c,
		0x6f, 0x72, 0x20, 0x58, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x43, 0x35, 0x69, 0x46, 0x69, 0x65,
		0x6c, 0x64, 0x53, 0x68, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x6c, 0x6f, 0x74, 0x46, 0x6c,
		0x61, 0x73, 0x68, 0x20, 0x58, 0x32, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x20, 0x47, 0x35, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4f, 0x6e, 0x65, 0x20, 0x24, 0x31, 0x5a, 0x75, 0x75, 0x6d, 0x41, 0x4b, 0x55,
		0x53, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6b, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6b, 0x75,
		0x73, 0x20, 0x24, 0x31, 0x41, 0x75, 0x72, 0x61, 0x20, 0x5a, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x5f,
		0x50, 0x52, 0x4f, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x50, 0x52, 0x4f, 0x43,
		0x6f, 0x76, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x4f, 0x56, 0x45, 0x54, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x43, 0x6f, 0x76, 0x65,
		0x74, 0x24, 0x31, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x61, 0x67,
		0x6e, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4d, 0x41, 0x47, 0x4e, 0x4f, 0x2d, 0x53, 0x4d, 0x61,
		0x67, 0x6e, 0x6f, 0x20, 0x53, 0x4d, 0x61, 0x67, 0x6e, 0x6f, 0x24, 0x31, 0x4f, 0x4e, 0x49, 0x58,
		0x20, 0x53, 0x4f, 0x6e, 0x69, 0x78, 0x20, 0x53, 0x4f, 0x4e, 0x49, 0x58, 0x53, 0x45, 0x4e, 0x53,
		0x20, 0x4d, 0x31, 0x53, 0x65, 0x6e, 0x73, 0x20, 0x4d, 0x31, 0x53, 0x54, 0x45, 0x44, 0x49, 0x53,
		0x74, 0x65, 0x64, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x50, 0x52, 0x4f, 0x53,
		0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41,
		0x52, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x24, 0x31, 0x53, 0x54, 0x45, 0x4c,
		0x4c, 0x41, 0x52, 0x20, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41, 0x52, 0x20, 0x4d, 0x61, 0x78, 0x53,
		0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x54, 0x45, 0x4c, 0x4c, 0x41,
		0x52, 0x53, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x20,
		0x4c, 0x69, 0x66, 0x65, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x4c, 0x55, 0x53, 0x20, 0x4a, 0x4c,
		0x4f, 0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41,
		0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x4a, 0x4c, 0x4f, 0x41, 0x75, 0x72, 0x61, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x4a, 0x2e, 0x4c, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x50, 0x52, 0x4f,
		0x41, 0x75, 0x72, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x55, 0x52, 0x41, 0x20, 0x58, 0x41, 0x75,
		0x72, 0x61, 0x20, 0x58, 0x52, 0x4f, 0x4e, 0x49, 0x52, 0x6f, 0x6e, 0x69, 0x55, 0x4c, 0x54, 0x52,
		0x41, 0x20, 0x5a, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x5a, 0x52, 0x6f, 0x63, 0x6b, 0x65, 0x74,
		0x20, 0x24, 0x31, 0x55, 0x6e, 0x69, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x47, 0x52, 0x41, 0x4e,
		0x54, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x5a, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x20,
		0x24, 0x31, 0x5a, 0x79, 0x72, 0x65, 0x78, 0x5a, 0x54, 0x32, 0x31, 0x36, 0x61, 0x63, 0x74, 0x69,
		0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x6b, 0x32, 0x31, 0x54, 0x2d, 0x30, 0x33,
		0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x65, 0x6e, 0x74, 0x65, 0x20, 0x31,
		0x61, 0x6c, 0x70, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x61, 0x6c, 0x74, 0x72, 0x6f, 0x6e, 0x41, 0x4c,
		0x2d, 0x35, 0x35, 0x35, 0x4f, 0x42, 0x2d, 0x24, 0x31, 0x47, 0x49, 0x2d, 0x36, 0x32, 0x36, 0x61,
		0x73, 0x74, 0x72, 0x6f, 0x20, 0x28, 0x4d, 0x59, 0x29, 0x62, 0x32, 0x6d, 0x44, 0x65, 0x63, 0x61,
		0x64, 0x65, 0x20, 0x35, 0x33, 0x62, 0x6f, 0x67, 0x6f, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50,
		0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x34, 0x44, 0x43, 0x42, 0x4f,
		0x2d, 0x4c, 0x46, 0x53, 0x50, 0x53, 0x4c, 0x34, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x34, 0x53, 0x4c, 0x42, 0x4f, 0x2d, 0x4c, 0x46, 0x53, 0x50, 0x42, 0x53, 0x35, 0x4c,
		0x69, 0x66, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x35, 0x42, 0x53, 0x42, 0x4f, 0x2d, 0x4c,
		0x46, 0x53, 0x50, 0x53, 0x4c, 0x36, 0x51, 0x43, 0x49, 0x4c, 0x69, 0x66, 0x65, 0x53, 0x74, 0x79,
		0x6c, 0x65, 0x20, 0x36, 0x51, 0x43, 0x62, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4c,
		0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x4d,
		0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x4f, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x43, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20, 0x53, 0x43, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x46, 0x75,
		0x6e, 0x41, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x20, 0x53, 0x45, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x50, 0x72, 0x6f,
		0x42, 0x51, 0x2d, 0x38, 0x30, 0x36, 0x37, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x35, 0x32, 0x47, 0x42, 0x51, 0x2d, 0x38, 0x30,
		0x34, 0x31, 0x4c, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x38, 0x34, 0x47, 0x53, 0x69, 0x6d, 0x70, 0x6c,
		0x65, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x36, 0x31, 0x47, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x73, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x35, 0x31, 0x47, 0x45, 0x6c, 0x62, 0x61,
		0x42, 0x51, 0x2d, 0x37, 0x30, 0x33, 0x36, 0x4c, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x61,
		0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x6e, 0x61, 0x63, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x46, 0x6e,
		0x61, 0x63, 0x20, 0x31, 0x30, 0x22, 0x20, 0x33, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x32, 0x31,
		0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x31, 0x30, 0x47, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x36,
		0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x51, 0x2d, 0x37, 0x30, 0x30, 0x33, 0x4a, 0x61, 0x6d,
		0x61, 0x69, 0x63, 0x61, 0x42, 0x51, 0x2d, 0x36, 0x36, 0x34, 0x35, 0x4c, 0x36, 0x36, 0x34, 0x35,
		0x4c, 0x20, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x51, 0x2d, 0x36, 0x30, 0x36, 0x31,
		0x4c, 0x36, 0x30, 0x36, 0x31, 0x4c, 0x20, 0x53, 0x6c, 0x69, 0x6d, 0x42, 0x51, 0x2d, 0x36, 0x30,
		0x32, 0x32, 0x47, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x50, 0x72, 0x61, 0x63, 0x74,
		0x69, 0x63, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4d, 0x75, 0x73, 0x69,
		0x63, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x4a, 0x65, 0x61, 0x6e, 0x73, 0x42, 0x51, 0x2d, 0x35,
		0x35, 0x32, 0x32, 0x53, 0x69, 0x6c, 0x6b, 0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x46, 0x61, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x77, 0x69, 0x6e, 0x20, 0x50, 0x72, 0x6f,
		0x54, 0x77, 0x69, 0x6e, 0x57, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x46,
		0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x69, 0x73, 0x73, 0x41, 0x6d, 0x73, 0x74, 0x65,
		0x72, 0x64, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72,
		0x20, 0x4d, 0x61, 0x78, 0x20, 0x34, 0x47, 0x4e, 0x65, 0x78, 0x74, 0x20, 0x4c, 0x54, 0x45, 0x49,
		0x72, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x20, 0x4d, 0x61, 0x78, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x32, 0x4e, 0x69,
		0x63, 0x65, 0x4e, 0x69, 0x63, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x61, 0x77, 0x61, 0x73,
		0x61, 0x6b, 0x69, 0x56, 0x61, 0x6e, 0x63, 0x6f, 0x75, 0x76, 0x65, 0x72, 0x56, 0x65, 0x6c, 0x76,
		0x65, 0x74, 0x20, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x56, 0x69, 0x65, 0x77, 0x56,
		0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65,
		0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x53, 0x65,
		0x6c, 0x66, 0x69, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x53, 0x65,
		0x6e, 0x73, 0x65, 0x20, 0x32, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x42,
		0x65, 0x6c, 0x69, 0x65, 0x66, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
		0x65, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65,
		0x72, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x45, 0x61,
		0x73, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x32, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x20,
		0x45, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x51, 0x2d, 0x35, 0x30,
		0x36, 0x30, 0x4c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x50,
		0x6f, 0x77, 0x65, 0x72, 0x20, 0x34, 0x47, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20, 0x52, 0x75, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68,
		0x20, 0x57, 0x61, 0x79, 0x42, 0x6f, 0x6e, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x69, 0x63,
		0x68, 0x52, 0x69, 0x63, 0x68, 0x20, 0x4d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x74, 0x65, 0x20, 0x43,
		0x61, 0x72, 0x6c, 0x6f, 0x53, 0x70, 0x6f, 0x74, 0x56, 0x65, 0x6c, 0x76, 0x65, 0x74, 0x20, 0x45,
		0x61, 0x73, 0x79, 0x50, 0x72, 0x61, 0x67, 0x75, 0x65, 0x42, 0x51, 0x2d, 0x35, 0x35, 0x36, 0x30,
		0x4c, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x42, 0x51, 0x2d,
		0x35, 0x35, 0x36, 0x35, 0x4c, 0x53, 0x79, 0x64, 0x6e, 0x65, 0x79, 0x4c, 0x6f, 0x73, 0x20, 0x41,
		0x6e, 0x67, 0x65, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x68, 0x61,
		0x72, 0x6b, 0x20, 0x50, 0x72, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x6c,
		0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x49, 0x49, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x69,
		0x6c, 0x61, 0x6e, 0x54, 0x6f, 0x6b, 0x79, 0x6f, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4d, 0x6f, 0x6e,
		0x74, 0x72, 0x65, 0x61, 0x6c, 0xd0, 0x9e, 0x73, 0x61, 0x6b, 0x61, 0x56, 0x65, 0x6e, 0x69, 0x63,
		0x65, 0x46, 0x6f, 0x78, 0x20, 0x56, 0x69, 0x65, 0x77, 0x46, 0x6f, 0x78, 0x20, 0x50, 0x6f, 0x77,
		0x65, 0x72, 0x47, 0x6f, 0x6c, 0x66, 0x52, 0x69, 0x63, 0x68, 0x6d, 0x6f, 0x6e, 0x64, 0x53, 0x69,
		0x6e, 0x67, 0x61, 0x70, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
		0x61, 0x6e, 0x74, 0x69, 0x61, 0x67, 0x6f, 0x44, 0x75, 0x62, 0x61, 0x69, 0x4b, 0x69, 0x6e, 0x67,
		0x73, 0x74, 0x6f, 0x6e, 0x42, 0x51, 0x53, 0x2d, 0x34, 0x35, 0x30, 0x31, 0x20, 0x42, 0x72, 0x69,
		0x73, 0x74, 0x6f, 0x6c, 0x42, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x6c, 0x46, 0x6f, 0x78, 0x20, 0x45,
		0x61, 0x73, 0x79, 0x46, 0x6f, 0x78, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x68, 0x61, 0x72, 0x6b, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x55,
		0x70, 0x21, 0x4f, 0x72, 0x6c, 0x65, 0x61, 0x6e, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61,
		0x69, 0x56, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x44, 0x75,
		0x73, 0x73, 0x65, 0x6c, 0x64, 0x6f, 0x72, 0x66, 0x56, 0x65, 0x72, 0x6f, 0x6e, 0x61, 0x43, 0x6f,
		0x6f, 0x6c, 0x4f, 0x78, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x73, 0x70, 0x65, 0x6e, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x6f, 0x6d, 0x62, 0x61, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x4d,
		0x61, 0x78, 0x20, 0x50, 0x72, 0x6f, 0x42, 0x51, 0x2d, 0x31, 0x30, 0x33, 0x36, 0x4c, 0x45, 0x78,
		0x69, 0x6f, 0x6e, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x48, 0x6f, 0x72, 0x6e, 0x65, 0x74,
		0x20, 0x4d, 0x61, 0x78, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x72, 0x6d, 0x6f, 0x72,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x50, 0x61, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
		0x6f, 0x72, 0x73, 0x69, 0x6b, 0x61, 0x48, 0x61, 0x77, 0x61, 0x69, 0x69, 0x47, 0x72, 0x61, 0x63,
		0x65, 0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x20, 0x24, 0x31, 0x41, 0x71, 0x75, 0x61, 0x72,
		0x69, 0x73, 0x20, 0x24, 0x31, 0x34, 0x2e, 0x35, 0x4a, 0x61, 0x76, 0x61, 0x42, 0x51, 0x2d, 0x39,
		0x30, 0x35, 0x35, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x42, 0x51, 0x2d, 0x38, 0x30, 0x38, 0x38, 0x4c, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20,
		0x53, 0x75, 0x72, 0x66, 0x46, 0x69, 0x6a, 0x69, 0x47, 0x72, 0x61, 0x63, 0x65, 0x20, 0x33, 0x47,
		0x4c, 0x75, 0x7a, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6c, 0x74,
		0x61, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x41, 0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x65, 0x63, 0x6b, 0x65,
		0x72, 0x4e, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x69, 0x6f,
		0x6e, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x37, 0x30, 0x38, 0x33, 0x31, 0x30, 0x35, 0x36, 0x4c, 0x41,
		0x72, 0x6d, 0x6f, 0x72, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4c, 0x54, 0x45, 0x2b, 0x45, 0x78, 0x69,
		0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4f, 0x6e, 0x65, 0x45,
		0x78, 0x69, 0x6f, 0x6e, 0x20, 0x4d, 0x61, 0x78, 0x45, 0x64, 0x69, 0x73, 0x6f, 0x6e, 0x20, 0x33,
		0x41, 0x71, 0x75, 0x61, 0x72, 0x69, 0x73, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x54, 0x56, 0x5f,
		0x42, 0x51, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x65, 0x4e, 0x4f, 0x56, 0x41, 0x20, 0x54, 0x41, 0x42,
		0x20, 0x31, 0x30, 0x20, 0x4c, 0x54, 0x45, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x22, 0x20, 0x4c,
		0x54, 0x45, 0x65, 0x53, 0x54, 0x41, 0x52, 0x24, 0x31, 0x20, 0x24, 0x32, 0x20, 0x51, 0x75, 0x61,
		0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x48,
		0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x24, 0x31, 0x65, 0x53, 0x54,
		0x41, 0x52, 0x20, 0x47, 0x52, 0x41, 0x4e, 0x44, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x4d, 0x45, 0x52,
		0x43, 0x55, 0x52, 0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72,
		0x65, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64,
		0x20, 0x63, 0x6f, 0x72, 0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54,
		0x59, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65,
		0x61, 0x75, 0x74, 0x79, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72,
		0x65, 0x65, 0x53, 0x54, 0x41, 0x52, 0x20, 0x4d, 0x4f, 0x4f, 0x4e, 0x20, 0x48, 0x44, 0x20, 0x51,
		0x75, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x6f, 0x6f, 0x6e, 0x20, 0x48, 0x44, 0x20,
		0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x33, 0x47, 0x65, 0x53, 0x54, 0x41,
		0x52, 0x20, 0x42, 0x45, 0x41, 0x55, 0x54, 0x59, 0x20, 0x32, 0x20, 0x48, 0x44, 0x20, 0x51, 0x75,
		0x61, 0x64, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x65, 0x61, 0x75, 0x74, 0x79, 0x20, 0x32, 0x20,
		0x48, 0x44, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x69,
		0x20, 0x33, 0x47, 0x74, 0x61, 0x6b, 0x65, 0x65, 0x20, 0x31, 0x54, 0x61, 0x6b, 0x65, 0x65, 0x20,
		0x31, 0x44, 0x69, 0x67, 0x6e, 0x69, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x44, 0x69, 0x67, 0x6e,
		0x69, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x63, 0x6f,
		0x6d, 0x65, 0x76, 0x76, 0x6f, 0x6c, 0x69, 0x66, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62,
		0x6f, 0x78, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x46, 0x72,
		0x65, 0x65, 0x5f, 0x57, 0x69, 0x2d, 0x4b, 0x69, 0x66, 0x34, 0x47, 0x5f, 0x34, 0x47, 0x57, 0x69,
		0x2d, 0x4b, 0x69, 0x66, 0x20, 0x34, 0x47, 0x68, 0x6f, 0x63, 0x6f, 0x69, 0x2d, 0x43, 0x68, 0x65,
		0x72, 0x72, 0x79, 0x69, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x43, 0x32, 0x35, 0x36, 0x43,
		0x32, 0x35, 0x36, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x20, 0x33, 0x47, 0x69, 0x2d, 0x4a, 0x6f, 0x79,
		0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x4d, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61,
		0x20, 0x4c, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72, 0x61, 0x20, 0x58, 0x4c, 0x45, 0x6c, 0x65, 0x6b,
		0x74, 0x72, 0x61, 0x20, 0x58, 0x58, 0x4c, 0x4e, 0x65, 0x6f, 0x6e, 0x20, 0x24, 0x31, 0x53, 0x79,
		0x67, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x6f, 0x78, 0x69, 0x2d, 0x43, 0x61, 0x6c, 0x6c, 0x20, 0x24,
		0x31, 0x69, 0x2d, 0x6d, 0x61, 0x74, 0x65, 0x69, 0x2d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69,
		0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x24, 0x31, 0x49, 0x51, 0x20, 0x58, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x32, 0x49, 0x51, 0x20, 0x42, 0x69, 0x67, 0x20, 0x32, 0x49, 0x51, 0x20, 0x24, 0x31,
		0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x52, 0x4f, 0x49, 0x51, 0x20, 0x5a, 0x20, 0x50, 0x72, 0x6f,
		0x49, 0x51, 0x20, 0x5a, 0x20, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x49, 0x51, 0x20, 0x5a, 0x20,
		0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x69, 0x42, 0x61, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x69, 0x20,
		0x57, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x41, 0x6e, 0x64, 0x69, 0x20, 0x35, 0x47, 0x20, 0x42,
		0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x34, 0x47, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x44, 0x44, 0x2d,
		0x31, 0x47, 0x42, 0x43, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x20, 0x41, 0x34, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x20, 0x43, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x20, 0x41, 0x34, 0x53, 0x6c, 0x69, 0x64, 0x65,
		0x20, 0x44, 0x61, 0x7a, 0x7a, 0x6c, 0x65, 0x20, 0x33, 0x35, 0x30, 0x30, 0x53, 0x6c, 0x69, 0x64,
		0x65, 0x20, 0x33, 0x47, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x5f, 0x58, 0x32, 0x53, 0x70, 0x69,
		0x72, 0x69, 0x74, 0x20, 0x58, 0x32, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x53, 0x6b, 0x79, 0x65,
		0x5f, 0x30, 0x33, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x20, 0x53, 0x6b, 0x79, 0x65, 0x20, 0x30, 0x33,
		0x42, 0x72, 0x61, 0x63, 0x65, 0x20, 0x58, 0x31, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a,
		0x6e, 0x69, 0x5a, 0x69, 0x54, 0x41, 0x42, 0x20, 0x42, 0x69, 0x7a, 0x6e, 0x69, 0x5a, 0x20, 0x4d,
		0x69, 0x6e, 0x69, 0x69, 0x54, 0x41, 0x42, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x7a, 0x20, 0x50,
		0x72, 0x6f, 0x69, 0x42, 0x65, 0x72, 0x72, 0x79, 0x69, 0x42, 0x72, 0x69, 0x74, 0x44, 0x69, 0x61,
		0x6d, 0x6f, 0x6e, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x35, 0x50, 0x6c,
		0x75, 0x73, 0x49, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x36,
		0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x64, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x58, 0x5a, 0x32, 0x4c, 0x69, 0x74, 0x65,
		0x5a, 0x32, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x46, 0x35, 0x31, 0x69, 0x44, 0x61, 0x74, 0x61,
		0x69, 0x44, 0x69, 0x6e, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x36, 0x69,
		0x44, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x50, 0x41, 0x43, 0x48, 0x45, 0x20, 0x47, 0x36, 0x41, 0x70,
		0x61, 0x63, 0x68, 0x65, 0x20, 0x47, 0x36, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x20, 0x56, 0x35, 0x42,
		0x61, 0x72, 0x6c, 0x20, 0x58, 0x37, 0x69, 0x46, 0x49, 0x54, 0x69, 0x47, 0x65, 0x74, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x20, 0x53, 0x31, 0x30, 0x30, 0x69, 0x48, 0x6f, 0x6d, 0x65, 0x20, 0x4c, 0x69,
		0x66, 0x65, 0x48, 0x4c, 0x51, 0x20, 0x4d, 0x41, 0x58, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x53, 0x74,
		0x72, 0x6f, 0x6e, 0x67, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x24, 0x31, 0x20, 0x50,
		0x72, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x52, 0x4f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x20, 0x50, 0x43, 0x20, 0x31, 0x30, 0x20, 0x50,
		0x72, 0x6f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x20, 0x44, 0x4f, 0x47, 0x20, 0x34, 0x47, 0x43, 0x79,
		0x62, 0x65, 0x72, 0x20, 0x44, 0x6f, 0x67, 0x20, 0x34, 0x47, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x48,
		0x69, 0x31, 0x30, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x31,
		0x30, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b,
		0x20, 0x28, 0x32, 0x30, 0x24, 0x31, 0x29, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b, 0x20,
		0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x30, 0x53, 0x31, 0x30, 0x20, 0x54, 0x61, 0x6e, 0x6b,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x6e, 0x65, 0x5f, 0x20,
		0x4c, 0x6f, 0x76, 0x65, 0x5f, 0x4f, 0x6e, 0x65, 0x20, 0x4c, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x61,
		0x6e, 0x20, 0x50, 0x33, 0x30, 0x30, 0x30, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x31, 0x31,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x49, 0x54, 0x41, 0x4e, 0x20, 0x50, 0x31, 0x35,
		0x30, 0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x35, 0x47, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20,
		0x50, 0x31, 0x35, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x35, 0x47, 0x54, 0x49, 0x54,
		0x41, 0x4e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32,
		0x31, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x34, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f,
		0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x38, 0x30,
		0x30, 0x30, 0x20, 0x50, 0x52, 0x4f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x54, 0x69, 0x74, 0x61, 0x6e,
		0x20, 0x50, 0x38, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x54, 0x69, 0x74, 0x61, 0x6e, 0x5f, 0x50, 0x36, 0x30, 0x30, 0x30, 0x5f, 0x50, 0x52, 0x4f,
		0x54, 0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x54,
		0x69, 0x74, 0x61, 0x6e, 0x20, 0x50, 0x36, 0x30, 0x30, 0x30, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x33,
		0x5f, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69,
		0x6b, 0x65, 0x20, 0x31, 0x32, 0x20, 0x50, 0x52, 0x4f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x32,
		0x20, 0x50, 0x72, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x48, 0x69, 0x35, 0x4c, 0x69, 0x6b, 0x65,
		0x20, 0x24, 0x31, 0x4c, 0x69, 0x6b, 0x65, 0x5f, 0x34, 0x55, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x34,
		0x55, 0x69, 0x48, 0x75, 0x6e, 0x74, 0x5f, 0x4c, 0x69, 0x6b, 0x65, 0x58, 0x33, 0x30, 0x30, 0x20,
		0x45, 0x6c, 0x69, 0x74, 0x65, 0x53, 0x36, 0x30, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
		0x72, 0x79, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f,
		0x76, 0x65, 0x72, 0x79, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x53, 0x36, 0x30, 0x20, 0x44,
		0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x30,
		0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32,
		0x30, 0x32, 0x32, 0x53, 0x36, 0x30, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
		0x20, 0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x58, 0x4c, 0x69, 0x74, 0x65, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x52, 0x4f, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6c, 0x69, 0x65,
		0x6e, 0x20, 0x58, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x31, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x20,
		0x50, 0x72, 0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x5f,
		0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x5f, 0x32, 0x30, 0x32, 0x30, 0x41, 0x6c, 0x69, 0x65, 0x6e,
		0x20, 0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x41, 0x6c,
		0x69, 0x65, 0x6e, 0x5f, 0x58, 0x5f, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20,
		0x58, 0x20, 0x41, 0x70, 0x65, 0x58, 0x53, 0x24, 0x31, 0x20, 0x41, 0x70, 0x65, 0x58, 0x41, 0x6c,
		0x69, 0x65, 0x6e, 0x5f, 0x58, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x20, 0x58, 0x53, 0x32, 0x31, 0x20,
		0x50, 0x6c, 0x75, 0x73, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32, 0x31, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72,
		0x61, 0x20, 0x41, 0x70, 0x65, 0x58, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31, 0x29, 0x53, 0x32, 0x31,
		0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x32, 0x30, 0x32, 0x31, 0x53, 0x32,
		0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x20, 0x34, 0x47, 0x20, 0x28, 0x32, 0x30, 0x32, 0x31,
		0x29, 0x53, 0x24, 0x31, 0x20, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31,
		0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72, 0x6f, 0x20, 0x32, 0x30, 0x32, 0x32,
		0x4c, 0x69, 0x6b, 0x65, 0x20, 0x31, 0x31, 0x20, 0x50, 0x61, 0x6e, 0x64, 0x61, 0x20, 0x50, 0x72,
		0x6f, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x69, 0x4b, 0x6f, 0x4d, 0x6f, 0x69, 0x4b, 0x6f,
		0x6e, 0x69, 0x4b, 0x6f, 0x6e, 0x69, 0x61, 0x4a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x20, 0x37, 0x2e,
		0x38, 0x35, 0x69, 0x4c, 0x41, 0x69, 0x4c, 0x65, 0x70, 0x6f, 0x69, 0x4c, 0x69, 0x66, 0x65, 0x4b,
		0x33, 0x31, 0x30, 0x32, 0x20, 0x57, 0x49, 0x46, 0x49, 0x4b, 0x33, 0x31, 0x30, 0x32, 0x20, 0x57,
		0x69, 0x46, 0x69, 0x57, 0x54, 0x41, 0x42, 0x20, 0x24, 0x31, 0x5a, 0x65, 0x64, 0x20, 0x42, 0x6f,
		0x6f, 0x6b, 0x20, 0x47, 0x46, 0x69, 0x76, 0x6f, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x69, 0x76,
		0x6f, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x4d, 0x49, 0x56, 0x69, 0x6e, 0x33, 0x20, 0x53, 0x56,
		0x69, 0x6e, 0x20, 0x33, 0x20, 0x53, 0x56, 0x69, 0x6e, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56,
		0x69, 0x6e, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x56, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4d,
		0x65, 0x73, 0x73, 0x69, 0x20, 0x24, 0x31, 0x69, 0x4d, 0x61, 0x6e, 0x69, 0x4d, 0x61, 0x72, 0x73,
		0x49, 0x4d, 0x41, 0x52, 0x53, 0x20, 0x56, 0x45, 0x47, 0x41, 0x20, 0x58, 0x37, 0x56, 0x65, 0x67,
		0x61, 0x20, 0x58, 0x37, 0x56, 0x49, 0x56, 0x49, 0x5f, 0x38, 0x56, 0x49, 0x56, 0x49, 0x20, 0x38,
		0x4d, 0x49, 0x4c, 0x4b, 0x59, 0x5f, 0x57, 0x41, 0x59, 0x5f, 0x4d, 0x32, 0x4d, 0x69, 0x6c, 0x6b,
		0x79, 0x20, 0x57, 0x61, 0x79, 0x20, 0x4d, 0x32, 0x69, 0x4d, 0x75, 0x7a, 0x6d, 0x75, 0x50, 0x41,
		0x44, 0x20, 0x24, 0x31, 0x69, 0x4e, 0x4f, 0x56, 0x41, 0x69, 0x4e, 0x61, 0x76, 0x69, 0x49, 0x54,
		0x50, 0x2d, 0x58, 0x44, 0x38, 0x30, 0x4c, 0x55, 0x2b, 0x20, 0x50, 0x61, 0x64, 0x38, 0x69, 0x4e,
		0x65, 0x77, 0x56, 0x33, 0x43, 0x56, 0x33, 0x2d, 0x45, 0x56, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x56, 0x37, 0x41, 0x46, 0x69, 0x72, 0x65, 0x20, 0x54, 0x61, 0x62, 0x20, 0x36, 0x69, 0x4e, 0x6f,
		0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x69, 0x4e, 0x4f, 0x20, 0x53, 0x43, 0x4f, 0x55, 0x54,
		0x20, 0x32, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x20, 0x32, 0x53, 0x47, 0x49, 0x4e, 0x4f, 0x36, 0x69,
		0x4e, 0x4f, 0x20, 0x53, 0x39, 0x69, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x58, 0x37, 0x53, 0x2d, 0x54,
		0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x20, 0x70, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x4d, 0x69,
		0x6e, 0x69, 0x20, 0x50, 0x72, 0x6f, 0x58, 0x38, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x58, 0x38, 0x20,
		0x4d, 0x69, 0x6e, 0x69, 0x58, 0x37, 0x53, 0x20, 0x45, 0x6c, 0x69, 0x74, 0x65, 0x69, 0x4f, 0x75,
		0x74, 0x64, 0x6f, 0x6f, 0x72, 0x69, 0x50, 0x45, 0x47, 0x54, 0x4f, 0x50, 0x49, 0x50, 0x45, 0x47,
		0x54, 0x4f, 0x50, 0x69, 0x50, 0x72, 0x6f, 0x49, 0x50, 0x52, 0x4f, 0x5f, 0x4b, 0x32, 0x5f, 0x33,
		0x47, 0x4b, 0x32, 0x20, 0x33, 0x47, 0x53, 0x35, 0x30, 0x31, 0x41, 0x50, 0x6c, 0x75, 0x73, 0x53,
		0x35, 0x30, 0x31, 0x41, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35,
		0x2e, 0x30, 0x53, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x24, 0x31, 0x4b, 0x79, 0x6c, 0x69, 0x6e,
		0x35, 0x30, 0x69, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x35, 0x30, 0x69, 0x4b, 0x59, 0x4c, 0x49,
		0x4e, 0x34, 0x30, 0x4b, 0x79, 0x6c, 0x69, 0x6e, 0x20, 0x34, 0x30, 0x4f, 0x70, 0x61, 0x6c, 0x20,
		0x34, 0x53, 0x4a, 0x61, 0x64, 0x65, 0x20, 0x24, 0x31, 0x73, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x35,
		0x53, 0x5f, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x35, 0x53, 0x20, 0x50, 0x72,
		0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x36, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x36, 0x41, 0x6d,
		0x62, 0x65, 0x72, 0x37, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x37, 0x53, 0x41, 0x6d, 0x62,
		0x65, 0x72, 0x38, 0x73, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38, 0x53,
		0x20, 0x50, 0x72, 0x6f, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72,
		0x20, 0x38, 0x53, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x38, 0x41, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x38,
		0x42, 0x65, 0x6e, 0x6e, 0x79, 0x31, 0x30, 0x42, 0x65, 0x6e, 0x6e, 0x79, 0x20, 0x31, 0x30, 0x50,
		0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x69, 0x78, 0x35, 0x30, 0x53, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6e,
		0x69, 0x78, 0x20, 0x35, 0x30, 0x53, 0x52, 0x75, 0x62, 0x79, 0x35, 0x53, 0x52, 0x75, 0x62, 0x79,
		0x20, 0x35, 0x53, 0x53, 0x41, 0x4d, 0x42, 0x41, 0x36, 0x35, 0x53, 0x53, 0x61, 0x6d, 0x62, 0x61,
		0x20, 0x36, 0x35, 0x53, 0x5a, 0x61, 0x66, 0x69, 0x72, 0x6f, 0x57, 0x61, 0x76, 0x65, 0x20, 0x34,
		0x2e, 0x30, 0x20, 0x49, 0x49, 0x57, 0x61, 0x76, 0x65, 0x20, 0x35, 0x2e, 0x30, 0x4d, 0x45, 0x47,
		0x41, 0x37, 0x4d, 0x65, 0x67, 0x61, 0x20, 0x37, 0x69, 0x51, 0x26, 0x54, 0x69, 0x52, 0x65, 0x70,
		0x6c, 0x61, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x67, 0x20, 0x4f, 0x6e, 0x65, 0x69, 0x52, 0x6f, 0x62,
		0x6f, 0x74, 0x69, 0x52, 0x6f, 0x6c, 0x61, 0x44, 0x58, 0x37, 0x35, 0x38, 0x20, 0x50, 0x72, 0x6f,
		0x69, 0x52, 0x75, 0x6c, 0x75, 0x69, 0x53, 0x57, 0x41, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76, 0x4b,
		0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x4c, 0x79, 0x6e, 0x78, 0x4d, 0x65, 0x67, 0x61, 0x4e, 0x65, 0x6d,
		0x65, 0x73, 0x69, 0x73, 0x69, 0x53, 0x61, 0x66, 0x65, 0x20, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
		0x24, 0x31, 0x2e, 0x52, 0x47, 0x69, 0x53, 0x74, 0x61, 0x72, 0x69, 0x54, 0x65, 0x6c, 0x57, 0x36,
		0x35, 0x30, 0x32, 0x4c, 0x36, 0x35, 0x30, 0x33, 0x57, 0x35, 0x35, 0x30, 0x35, 0x41, 0x35, 0x30,
		0x37, 0x4c, 0x56, 0x56, 0x35, 0x32, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x36, 0x33, 0x32, 0x57, 0x41,
		0x30, 0x34, 0x41, 0x36, 0x36, 0x33, 0x4c, 0x41, 0x30, 0x35, 0x73, 0x53, 0x36, 0x36, 0x37, 0x4c,
		0x4e, 0x53, 0x32, 0x34, 0x53, 0x32, 0x33, 0x53, 0x36, 0x38, 0x31, 0x4c, 0x4e, 0x53, 0x32, 0x33,
		0x2b, 0x41, 0x36, 0x36, 0x32, 0x4c, 0x4d, 0x41, 0x36, 0x30, 0x73, 0x41, 0x36, 0x36, 0x32, 0x4c,
		0x41, 0x36, 0x36, 0x37, 0x4c, 0x41, 0x36, 0x36, 0x35, 0x4c, 0x41, 0x37, 0x30, 0x57, 0x35, 0x35,
		0x30, 0x34, 0x50, 0x33, 0x33, 0x57, 0x35, 0x35, 0x30, 0x33, 0x57, 0x35, 0x30, 0x30, 0x32, 0x41,
		0x35, 0x37, 0x31, 0x57, 0x41, 0x33, 0x37, 0x41, 0x36, 0x33, 0x31, 0x4c, 0x41, 0x35, 0x30, 0x37,
		0x4c, 0x4d, 0x41, 0x43, 0x35, 0x30, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x20, 0x35, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x36, 0x36, 0x33, 0x4c,
		0x53, 0x36, 0x36, 0x31, 0x57, 0x41, 0x35, 0x35, 0x31, 0x4c, 0x50, 0x31, 0x35, 0x50, 0x35, 0x35,
		0x32, 0x57, 0x50, 0x31, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x35, 0x35, 0x31, 0x57, 0x50, 0x31,
		0x37, 0x41, 0x36, 0x36, 0x36, 0x4c, 0x50, 0x35, 0x35, 0x50, 0x36, 0x36, 0x33, 0x4c, 0x50, 0x35,
		0x35, 0x2b, 0x50, 0x36, 0x36, 0x35, 0x4c, 0x50, 0x35, 0x35, 0x54, 0x50, 0x36, 0x36, 0x31, 0x4e,
		0x50, 0x35, 0x35, 0x20, 0x35, 0x47, 0x50, 0x36, 0x37, 0x31, 0x4c, 0x50, 0x36, 0x35, 0x57, 0x35,
		0x30, 0x30, 0x33, 0x53, 0x33, 0x32, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x4c, 0x35, 0x35, 0x30, 0x32,
		0x41, 0x34, 0x34, 0x20, 0x41, 0x69, 0x72, 0x4c, 0x35, 0x35, 0x30, 0x35, 0x41, 0x34, 0x37, 0x57,
		0x35, 0x30, 0x30, 0x36, 0x58, 0x41, 0x35, 0x31, 0x30, 0x57, 0x41, 0x31, 0x36, 0x20, 0x50, 0x6c,
		0x75, 0x73, 0x4c, 0x36, 0x30, 0x30, 0x36, 0x41, 0x34, 0x38, 0x41, 0x35, 0x37, 0x31, 0x4c, 0x41,
		0x32, 0x36, 0x53, 0x36, 0x36, 0x36, 0x4c, 0x4e, 0x52, 0x53, 0x34, 0x50, 0x36, 0x35, 0x31, 0x57,
		0x50, 0x33, 0x37, 0x41, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x36, 0x38, 0x31, 0x4c,
		0x50, 0x33, 0x37, 0x20, 0x50, 0x72, 0x6f, 0x57, 0x36, 0x35, 0x30, 0x31, 0x50, 0x33, 0x36, 0x50,
		0x36, 0x36, 0x31, 0x57, 0x50, 0x33, 0x38, 0x4c, 0x35, 0x30, 0x30, 0x37, 0x41, 0x32, 0x34, 0x41,
		0x35, 0x31, 0x31, 0x4c, 0x50, 0x41, 0x32, 0x34, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x35, 0x31, 0x32,
		0x57, 0x41, 0x35, 0x31, 0x33, 0x57, 0x41, 0x31, 0x38, 0x73, 0x4c, 0x36, 0x30, 0x30, 0x33, 0x50,
		0x41, 0x35, 0x35, 0x20, 0x4c, 0x54, 0x45, 0x4c, 0x36, 0x30, 0x30, 0x32, 0x50, 0x41, 0x35, 0x31,
		0x31, 0x4c, 0x51, 0x41, 0x32, 0x33, 0x53, 0x41, 0x32, 0x33, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35,
		0x30, 0x30, 0x32, 0x50, 0x41, 0x32, 0x35, 0x20, 0x50, 0x72, 0x6f, 0x4c, 0x35, 0x30, 0x30, 0x32,
		0x41, 0x32, 0x35, 0x41, 0x35, 0x30, 0x37, 0x4c, 0x53, 0x4c, 0x35, 0x35, 0x30, 0x33, 0x41, 0x34,
		0x36, 0x41, 0x36, 0x36, 0x31, 0x4c, 0x41, 0x34, 0x39, 0x57, 0x36, 0x30, 0x30, 0x34, 0x50, 0x41,
		0x35, 0x36, 0x20, 0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x50, 0x41, 0x35, 0x38, 0x20,
		0x50, 0x72, 0x6f, 0x41, 0x36, 0x36, 0x31, 0x57, 0x41, 0x36, 0x33, 0x31, 0x57, 0x41, 0x35, 0x38,
		0x20, 0x4c, 0x69, 0x74, 0x65, 0x4c, 0x36, 0x30, 0x30, 0x34, 0x4c, 0x41, 0x43, 0x36, 0x30, 0x57,
		0x34, 0x30, 0x30, 0x31, 0x53, 0x56, 0x34, 0x31, 0x57, 0x34, 0x30, 0x30, 0x31, 0x41, 0x43, 0x31,
		0x33, 0x57, 0x34, 0x30, 0x30, 0x32, 0x41, 0x31, 0x34, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x34,
		0x30, 0x30, 0x33, 0x41, 0x31, 0x34, 0x20, 0x4d, 0x61, 0x78, 0x41, 0x35, 0x36, 0x20, 0x4c, 0x54,
		0x45, 0x57, 0x36, 0x30, 0x30, 0x31, 0x50, 0x33, 0x33, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x57, 0x35,
		0x30, 0x30, 0x31, 0x50, 0x57, 0x36, 0x30, 0x30, 0x33, 0x41, 0x36, 0x31, 0x31, 0x57, 0x50, 0x36,
		0x38, 0x33, 0x4c, 0x50, 0x34, 0x30, 0x2b, 0x4c, 0x36, 0x30, 0x30, 0x35, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x20, 0x31, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x20, 0x50, 0x6c, 0x75,
		0x73, 0x50, 0x36, 0x38, 0x32, 0x4c, 0x50, 0x33, 0x38, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x36, 0x35,
		0x31, 0x4c, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x53, 0x4c, 0x36, 0x35, 0x30, 0x31,
		0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x4c, 0x36, 0x35,
		0x30, 0x32, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x20, 0x50, 0x72, 0x6f, 0x53, 0x36,
		0x36, 0x31, 0x4c, 0x47, 0x50, 0x31, 0x30, 0x58, 0x32, 0x30, 0x31, 0x39, 0x69, 0x4e, 0x6f, 0x74,
		0x65, 0x20, 0x24, 0x31, 0x69, 0x74, 0x24, 0x31, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x50, 0x72,
		0x6f, 0x53, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x74, 0x65, 0x6c, 0x20, 0x69, 0x74,
		0x31, 0x37, 0x30, 0x31, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x69,
		0x74, 0x65, 0x6c, 0x20, 0x50, 0x31, 0x30, 0x30, 0x30, 0x31, 0x4c, 0x69, 0x74, 0x65, 0x6c, 0x20,
		0x57, 0x37, 0x30, 0x30, 0x31, 0x4b, 0x69, 0x64, 0x50, 0x61, 0x64, 0x20, 0x31, 0x69, 0x74, 0x65,
		0x6c, 0x20, 0x57, 0x37, 0x30, 0x30, 0x32, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x20,
		0x31, 0x50, 0x31, 0x30, 0x30, 0x30, 0x33, 0x4c, 0x56, 0x69, 0x73, 0x74, 0x61, 0x20, 0x54, 0x61,
		0x62, 0x20, 0x33, 0x30, 0x69, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20,
		0x24, 0x31, 0x69, 0x54, 0x72, 0x75, 0x63, 0x6b, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x69,
		0x56, 0x41, 0x4c, 0x61, 0x6d, 0x63, 0x79, 0x20, 0x24, 0x31, 0x69, 0x56, 0x69, 0x65, 0x77, 0x37,
		0x34, 0x34, 0x54, 0x50, 0x43, 0x20, 0x70, 0x6c, 0x75, 0x73, 0x37, 0x34, 0x34, 0x54, 0x50, 0x43,
		0x20, 0x50, 0x6c, 0x75, 0x73, 0x69, 0x56, 0x6f, 0x6f, 0x4d, 0x69, 0x49, 0x6e, 0x6e, 0x65, 0x6c,
		0x6f, 0x5f, 0x31, 0x49, 0x6e, 0x6e, 0x65, 0x6c, 0x6f, 0x20, 0x31, 0x69, 0x56, 0x20, 0x35, 0x30,
		0x35, 0x4d, 0x65, 0x20, 0x31, 0x69, 0x32, 0x5f, 0x4c, 0x69, 0x74, 0x65, 0x69, 0x32, 0x20, 0x4c,
		0x69, 0x74, 0x65, 0x69, 0x32, 0x4d, 0x65, 0x20, 0x31, 0x2b, 0x4d, 0x65, 0x20, 0x24, 0x31, 0x69,
		0x57, 0x61, 0x79, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x58, 0x54, 0x65, 0x63, 0x68, 0x69, 0x59, 0x6f,
		0x75, 0x69, 0x5a, 0x6f, 0x74, 0x72, 0x6f, 0x6e, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f,
		0x20, 0x42, 0x65, 0x74, 0x61, 0x4d, 0x49, 0x37, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x20, 0x54, 0x61,
		0x62, 0x69, 0x62, 0x6f, 0x77, 0x69, 0x6e, 0x69, 0x6e, 0x6f, 0x76, 0x6f, 0x49, 0x36, 0x31, 0x38,
		0x20, 0x41, 0x70, 0x70, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x2b, 0x69, 0x76, 0x76, 0x69, 0x69, 0x76,
		0x76, 0x69, 0x20, 0x50, 0x36, 0x30, 0x5f, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x50,
		0x36, 0x30, 0x2d, 0x58, 0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6b, 0x69, 0x64, 0x69, 0x62,
		0x79, 0x4b, 0x49, 0x44, 0x49, 0x42, 0x59, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x61,
		0x6e, 0x49, 0x54, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x58, 0x35,
		0x51, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x6d, 0x69, 0x70, 0x6f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
		0x62, 0x6f, 0x78, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x50, 0x4c, 0x29, 0x43,
		0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x69, 0x78, 0x43, 0x2d, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x20, 0x50, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x20, 0x4c, 0x54, 0x45, 0x46, 0x55, 0x4e,
		0x20, 0x24, 0x31, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x20, 0x4c,
		0x54, 0x45, 0x46, 0x55, 0x4e, 0x20, 0x24, 0x31, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41,
		0x58, 0x45, 0x20, 0x50, 0x72, 0x6f, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65,
		0x20, 0x50, 0x72, 0x6f, 0x6d, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x41, 0x58, 0x45, 0x20,
		0x33, 0x47, 0x48, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x33, 0x47, 0x48,
		0x61, 0x6d, 0x6d, 0x65, 0x72, 0x20, 0x41, 0x78, 0x65, 0x20, 0x4d, 0x20, 0x4c, 0x54, 0x45, 0x4c,
		0x55, 0x4e, 0x41, 0x5f, 0x49, 0x49, 0x4c, 0x75, 0x6e, 0x61, 0x20, 0x49, 0x49, 0x50, 0x6f, 0x63,
		0x6b, 0x65, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x31, 0x38,
		0x78, 0x39, 0x50, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x31, 0x38, 0x78, 0x39, 0x50, 0x72, 0x69,
		0x6d, 0x65, 0x20, 0x33, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x34,
		0x5f, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x34, 0x20, 0x4c, 0x69, 0x74,
		0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x20, 0x31, 0x38, 0x78, 0x39, 0x24, 0x31, 0x51, 0x2d, 0x53,
		0x6d, 0x61, 0x72, 0x74, 0x20, 0x42, 0x45, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x49, 0x49, 0x49, 0x5f, 0x50,
		0x6c, 0x75, 0x73, 0x51, 0x2d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x49, 0x49, 0x49, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x31, 0x30, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61,
		0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x5f, 0x31, 0x30, 0x49,
		0x49, 0x49, 0x6d, 0x79, 0x54, 0x61, 0x62, 0x20, 0x31, 0x30, 0x20, 0x49, 0x49, 0x49, 0x53, 0x6d,
		0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x5f, 0x37, 0x5f, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72,
		0x74, 0x56, 0x69, 0x65, 0x77, 0x20, 0x37, 0x22, 0x20, 0x33, 0x47, 0x53, 0x6d, 0x61, 0x72, 0x74,
		0x56, 0x69, 0x65, 0x77, 0x5f, 0x38, 0x5f, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x38, 0x22, 0x20, 0x4c, 0x54, 0x45, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x56,
		0x69, 0x65, 0x77, 0x20, 0x39, 0x2e, 0x36, 0x22, 0x20, 0x33, 0x47, 0x6d, 0x79, 0x54, 0x61, 0x62,
		0x20, 0x24, 0x31, 0x6e, 0x4a, 0x6f, 0x79, 0x6e, 0x65, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x4e, 0x31,
		0x20, 0x47, 0x31, 0x45, 0x31, 0x2b, 0x45, 0x31, 0x20, 0x52, 0x31, 0x45, 0x32, 0x6e, 0x6f, 0x44,
		0x52, 0x4f, 0x50, 0x4f, 0x55, 0x54, 0x6f, 0x6b, 0x2e, 0x41, 0x46, 0x54, 0x57, 0x49, 0x30, 0x30,
		0x31, 0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x30, 0x29, 0x4f, 0x4b, 0x20, 0x47, 0x6f, 0x6f,
		0x67, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x65, 0x72, 0x65,
		0x70, 0x68, 0x6f, 0x6e, 0x65, 0x32, 0x30, 0x30, 0x30, 0x5f, 0x30, 0x30, 0x30, 0x31, 0x37, 0x30,
		0x5f, 0x30, 0x30, 0x72, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x28, 0x47, 0x65, 0x6e, 0x20,
		0x31, 0x29, 0x73, 0x69, 0x6d, 0x66, 0x65, 0x72, 0x74, 0x65, 0x58, 0x65, 0x74, 0x54, 0x4d, 0x2d,
		0x39, 0x37, 0x34, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37,
		0x2e, 0x31, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x34, 0x36, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30,
		0x35, 0x31, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x69,
		0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x31, 0x30, 0x35, 0x38, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63,
		0x65, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x34, 0x38, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x38, 0x20, 0x33, 0x47, 0x54, 0x4d,
		0x2d, 0x37, 0x30, 0x35, 0x35, 0x48, 0x44, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x33,
		0x47, 0x54, 0x4d, 0x2d, 0x39, 0x37, 0x35, 0x38, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74,
		0x79, 0x6c, 0x65, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53,
		0x68, 0x69, 0x6e, 0x65, 0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x31, 0x30, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61,
		0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58,
		0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x55, 0x41, 0x44, 0x20, 0x37, 0x20, 0x33, 0x47, 0x58, 0x2d,
		0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47,
		0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x51, 0x75, 0x61, 0x64, 0x20, 0x37, 0x2e, 0x32, 0x22, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x20, 0x38, 0x20,
		0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x38, 0x2e,
		0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x49, 0x54, 0x20, 0x33,
		0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x48, 0x69, 0x74, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x4c, 0x69, 0x74, 0x65, 0x20, 0x24, 0x31, 0x22, 0x54, 0x4d, 0x2d, 0x39, 0x37,
		0x36, 0x37, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x31, 0x30,
		0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x74, 0x79, 0x6c,
		0x65, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20,
		0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e, 0x33, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37,
		0x30, 0x39, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x37, 0x2e,
		0x34, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20,
		0x37, 0x2e, 0x35, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x53, 0x6b, 0x79,
		0x20, 0x38, 0x2e, 0x31, 0x22, 0x20, 0x33, 0x47, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41,
		0x56, 0x49, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x38,
		0x35, 0x39, 0x58, 0x2d, 0x70, 0x61, 0x64, 0x20, 0x4e, 0x41, 0x56, 0x49, 0x20, 0x38, 0x2e, 0x32,
		0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x4e, 0x61, 0x76, 0x69, 0x50,
		0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37, 0x30, 0x34, 0x39, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d,
		0x37, 0x38, 0x38, 0x37, 0x4e, 0x61, 0x76, 0x69, 0x50, 0x61, 0x64, 0x20, 0x54, 0x4d, 0x2d, 0x37,
		0x38, 0x38, 0x37, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x38, 0x30, 0x36, 0x36, 0x58, 0x2d, 0x70,
		0x61, 0x64, 0x20, 0x52, 0x61, 0x70, 0x69, 0x64, 0x20, 0x38, 0x2e, 0x32, 0x22, 0x20, 0x34, 0x47,
		0x54, 0x4d, 0x2d, 0x34, 0x35, 0x30, 0x33, 0x58, 0x2d, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d,
		0x35, 0x30, 0x30, 0x36, 0x58, 0x2d, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x30,
		0x37, 0x58, 0x2d, 0x53, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x4d, 0x5f, 0x35, 0x30, 0x31, 0x31, 0x58,
		0x2d, 0x4f, 0x6d, 0x65, 0x67, 0x61, 0x50, 0x61, 0x79, 0x20, 0x24, 0x31, 0x47, 0x50, 0x61, 0x79,
		0x20, 0x35, 0x2e, 0x35, 0x22, 0x20, 0x24, 0x31, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37, 0x30, 0x32,
		0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x33, 0x47, 0x54, 0x4d, 0x2d, 0x35, 0x37,
		0x30, 0x33, 0x50, 0x61, 0x79, 0x20, 0x35, 0x2e, 0x37, 0x22, 0x20, 0x50, 0x72, 0x6f, 0x54, 0x4d,
		0x2d, 0x35, 0x32, 0x30, 0x31, 0x54, 0x4d, 0x2d, 0x34, 0x35, 0x31, 0x35, 0x58, 0x2d, 0x4d, 0x61,
		0x78, 0x69, 0x20, 0x32, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x37, 0x31, 0x58, 0x2d, 0x53, 0x6d, 0x61,
		0x72, 0x74, 0x54, 0x4d, 0x2d, 0x34, 0x39, 0x38, 0x32, 0x69, 0x58, 0x2d, 0x4d, 0x61, 0x78, 0x69,
		0x69, 0x58, 0x2d, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x4d, 0x2d, 0x35, 0x30, 0x31, 0x30, 0x58, 0x2d,
		0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x54, 0x4d, 0x2d, 0x34, 0x30, 0x38, 0x32, 0x52, 0x58, 0x2d,
		0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x51, 0x75, 0x61, 0x64, 0x54, 0x4d, 0x2d, 0x35, 0x35,
		0x30, 0x33, 0x58, 0x2d, 0x4d, 0x61, 0x67, 0x65, 0x54, 0x4d, 0x2d, 0x35, 0x35, 0x30, 0x38, 0x58,
		0x2d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x58, 0x2d, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x58, 0x2d, 0x50,
		0x6c, 0x75, 0x73, 0x58, 0x2d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x50, 0x6c, 0x75, 0x73,
		0x58, 0x20, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x2d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x76, 0x2d,
		0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x58, 0x53, 0x20, 0x50, 0x72, 0x6f, 0xc3, 0xb6, 0x77, 0x6e,
		0x46, 0x75, 0x6e, 0x20, 0x24, 0x31, 0x46, 0x75, 0x6e, 0x20, 0x35, 0x20, 0x34, 0x47, 0x4f, 0x6e,
		0x65, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20,
		0x4c, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x34, 0x47,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x45, 0x41, 0x73,
		0x70, 0x69, 0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x34, 0x32, 0x31, 0x47, 0x41, 0x73, 0x70, 0x69,
		0x72, 0x65, 0x20, 0x45, 0x35, 0x2d, 0x35, 0x31, 0x31, 0x4f, 0x6e, 0x65, 0x20, 0x31, 0x30, 0x41,
		0x6c, 0x69, 0x65, 0x6e, 0x77, 0x61, 0x72, 0x65, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x77, 0x61, 0x72,
		0x65, 0x20, 0x31, 0x35, 0x20, 0x52, 0x33, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x77, 0x61, 0x72, 0x65,
		0x20, 0x31, 0x37, 0x20, 0x52, 0x34, 0x41, 0x72, 0x65, 0x61, 0x2d, 0x35, 0x31, 0x6d, 0x41, 0x75,
		0x72, 0x6f, 0x72, 0x61, 0x20, 0x24, 0x31, 0x4b, 0x35, 0x30, 0x49, 0x4e, 0x4b, 0x35, 0x34, 0x4c,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x42, 0x6f, 0x6f, 0x6b,
		0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x20, 0x4d, 0x69, 0x6e, 0x69,
		0x5a, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x58, 0x35, 0x35, 0x30,
		0x4c, 0x42, 0x58, 0x35, 0x35, 0x33, 0x4d, 0x41, 0x58, 0x35, 0x35, 0x35, 0x4c, 0x4e, 0x58, 0x35,
		0x35, 0x36, 0x55, 0x51, 0x4b, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x45, 0x34,
		0x33, 0x30, 0x30, 0x49, 0x6e, 0x73, 0x70, 0x69, 0x72, 0x6f, 0x6e, 0x20, 0x33, 0x35, 0x34, 0x31,
		0x58, 0x50, 0x53, 0x20, 0x31, 0x35, 0x20, 0x39, 0x35, 0x33, 0x30, 0x58, 0x50, 0x53, 0x20, 0x31,
		0x35, 0x20, 0x39, 0x35, 0x35, 0x30, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65,
		0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62,
		0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x71, 0x20, 0x50, 0x72, 0x65,
		0x73, 0x61, 0x72, 0x69, 0x6f, 0x20, 0x43, 0x51, 0x36, 0x31, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76,
		0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x20, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x61,
		0x62, 0x6c, 0x65, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x78, 0x32, 0x48, 0x50,
		0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x73, 0x30, 0x78, 0x78,
		0x31, 0x35, 0x20, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x45,
		0x4e, 0x56, 0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
		0x69, 0x62, 0x6c, 0x65, 0x20, 0x31, 0x35, 0x2d, 0x62, 0x70, 0x30, 0x78, 0x78, 0x45, 0x4e, 0x56,
		0x59, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62,
		0x6c, 0x65, 0x20, 0x50, 0x43, 0x48, 0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e,
		0x20, 0x64, 0x76, 0x36, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x50, 0x43,
		0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x76, 0x36, 0x48, 0x50, 0x20, 0x50,
		0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
		0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x48, 0x50, 0x20, 0x53, 0x70, 0x65, 0x63, 0x74,
		0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69,
		0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x65, 0x20, 0x78, 0x33, 0x36, 0x30, 0x48,
		0x50, 0x20, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69,
		0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x50, 0x61, 0x76,
		0x69, 0x6c, 0x69, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x72, 0x30, 0x78, 0x78, 0x20, 0x41, 0x6c,
		0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
		0x20, 0x50, 0x43, 0x32, 0x33, 0x2d, 0x66, 0x33, 0x36, 0x34, 0x50, 0x61, 0x76, 0x69, 0x6c, 0x69,
		0x6f, 0x6e, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x32, 0x33,
		0x2d, 0x66, 0x33, 0x36, 0x34, 0x20, 0x41, 0x6c, 0x6c, 0x2d, 0x69, 0x6e, 0x2d, 0x4f, 0x6e, 0x65,
		0x20, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x20, 0x50, 0x43, 0x54, 0x68, 0x69, 0x6e, 0x6b,
		0x50, 0x61, 0x64, 0x20, 0x48, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x33, 0x37, 0x30, 0x32, 0x47, 0x35,
		0x30, 0x2d, 0x38, 0x30, 0x49, 0x64, 0x65, 0x61, 0x70, 0x61, 0x64, 0x20, 0x33, 0x31, 0x30, 0x2d,
		0x31, 0x35, 0x49, 0x53, 0x4b, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x20, 0x59, 0x37, 0x32, 0x30,
		0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x20, 0x31, 0x34, 0x22, 0x20, 0x43, 0x68, 0x65,
		0x72, 0x72, 0x79, 0x20, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x74, 0x69, 0x67,
		0x65, 0x20, 0x54, 0x48, 0x2d, 0x33, 0x36, 0x30, 0x52, 0x31, 0x32, 0x2e, 0x33, 0x32, 0x43, 0x54,
		0x57, 0x46, 0x42, 0x4d, 0x44, 0x2f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x20,
		0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x31, 0x47, 0x69, 0x50, 0x6f,
		0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x32, 0x47, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x33, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x20, 0x34, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x35, 0x69, 0x50,
		0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x20, 0x36, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54,
		0x6f, 0x75, 0x63, 0x68, 0x20, 0x37, 0x69, 0x50, 0x6f, 0x64, 0x20, 0x54, 0x6f, 0x75, 0x63, 0x68,
		0x43, 0x6f, 0x77, 0x6f, 0x6e, 0x44, 0x69, 0x6f, 0x66, 0x6f, 0x78, 0x46, 0x69, 0x69, 0x4f, 0x4d,
		0x31, 0x31, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x54, 0x44, 0x4b, 0x75, 0x47, 0x6f, 0x75,
		0x4d, 0x45, 0x43, 0x48, 0x45, 0x4e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20,
		0x5a, 0x75, 0x6e, 0x65, 0x48, 0x44, 0x5a, 0x75, 0x6e, 0x65, 0x20, 0x48, 0x44, 0x4f, 0x69, 0x6c,
		0x73, 0x6b, 0x79, 0x4d, 0x33, 0x30, 0x33, 0x2d, 0x50, 0x72, 0x6f, 0x4d, 0x33, 0x30, 0x33, 0x20,
		0x50, 0x72, 0x6f, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
		0x20, 0x34, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x37, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79,
		0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x53,
		0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x33,
		0x2e, 0x36, 0x59, 0x50, 0x2d, 0x47, 0x49, 0x31, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50,
		0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x34, 0x2e, 0x32, 0x59, 0x50, 0x2d, 0x47, 0x50, 0x31, 0x47,
		0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x35, 0x2e, 0x38,
		0x59, 0x50, 0x2d, 0x47, 0x35, 0x30, 0x47, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61,
		0x79, 0x65, 0x72, 0x20, 0x35, 0x30, 0x59, 0x50, 0x2d, 0x47, 0x42, 0x37, 0x30, 0x44, 0x47, 0x61,
		0x6c, 0x61, 0x78, 0x79, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x20, 0x37, 0x30, 0x20, 0x50,
		0x6c, 0x75, 0x73, 0x53, 0x68, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x6e, 0x6c,
		0x69, 0x6e, 0x67, 0x20, 0x4d, 0x36, 0x53, 0x75, 0x72, 0x66, 0x61, 0x6e, 0x73, 0x53, 0x79, 0x6c,
		0x76, 0x61, 0x6e, 0x69, 0x61, 0x57, 0x69, 0x7a, 0x7a, 0x41, 0x4b, 0x49, 0x52, 0x41, 0x41, 0x4b,
		0x49, 0x52, 0x41, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x41, 0x4d, 0x43, 0x56, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x42, 0x42, 0x4b, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x45, 0x58, 0x50,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x69, 0x67, 0x6d, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x45, 0x43, 0x4f, 0x4e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x48, 0x69, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x4a, 0x56, 0x43, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4b, 0x76, 0x61, 0x6e,
		0x74, 0x4b, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x62, 0x65,
		0x6e, 0x4c, 0x65, 0x62, 0x65, 0x6e, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x66,
		0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x6f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x6f, 0x76, 0x69,
		0x65, 0x77, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x4c, 0x55, 0x4d, 0x55, 0x53, 0x20, 0x53, 0x68,
		0x65, 0x6c, 0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c,
		0x4e, 0x6f, 0x76, 0x65, 0x78, 0x20, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x52,
		0x43, 0x41, 0x2d, 0x53, 0x74, 0x61, 0x72, 0x77, 0x69, 0x6e, 0x64, 0x20, 0x53, 0x68, 0x65, 0x6c,
		0x6c, 0x53, 0x75, 0x70, 0x72, 0x61, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f,
		0x54, 0x43, 0x4c, 0x2d, 0x54, 0x65, 0x6c, 0x65, 0x66, 0x75, 0x6e, 0x6b, 0x65, 0x6e, 0x20, 0x53,
		0x68, 0x65, 0x6c, 0x6c, 0x54, 0x43, 0x4c, 0x2f, 0x54, 0x48, 0x4f, 0x4d, 0x2d, 0x59, 0x75, 0x6e,
		0x6f, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x46, 0x53, 0x2d, 0x41, 0x52, 0x53, 0x2d, 0x30, 0x31,
		0x42, 0x4c, 0x47, 0x45, 0x2f, 0x58, 0x69, 0x61, 0x6e, 0x59, 0x6f, 0x75, 0x2f, 0x41, 0x57, 0x4f,
		0x58, 0x4c, 0x47, 0x45, 0x2f, 0x41, 0x54, 0x4d, 0x41, 0x43, 0x41, 0x2f, 0x41, 0x58, 0x45, 0x4e,
		0x41, 0x59, 0x41, 0x41, 0x69, 0x72, 0x74, 0x69, 0x65, 0x73, 0x4c, 0x47, 0x45, 0x2f, 0x53, 0x51,
		0x59, 0x2f, 0x52, 0x43, 0x41, 0x41, 0x6c, 0x74, 0x65, 0x63, 0x68, 0x20, 0x55, 0x45, 0x43, 0x41,
		0x6c, 0x74, 0x69, 0x6d, 0x6f, 0x41, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x20, 0x45, 0x6c,
		0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x73, 0x41, 0x54, 0x56, 0x49, 0x4f, 0x35, 0x35, 0x44, 0x31,
		0x36, 0x32, 0x30, 0x42, 0x61, 0x6e, 0x67, 0x4f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x61,
		0x6e, 0x67, 0x6f, 0x6c, 0x75, 0x66, 0x73, 0x65, 0x6e, 0x42, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69,
		0x6f, 0x6e, 0x4c, 0x43, 0x2d, 0x36, 0x35, 0x43, 0x55, 0x47, 0x38, 0x30, 0x35, 0x32, 0x45, 0x43,
		0x4c, 0x41, 0x59, 0x54, 0x4f, 0x4e, 0x43, 0x65, 0x63, 0x6f, 0x74, 0x65, 0x63, 0x43, 0x6f, 0x6e,
		0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x20, 0x45, 0x64, 0x69, 0x73, 0x6f, 0x6e, 0x43,
		0x72, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x43, 0x4e, 0x56, 0x30, 0x30, 0x31, 0x43, 0x75, 0x6c, 0x74,
		0x72, 0x61, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x47, 0x45, 0x2f, 0x53, 0x49, 0x4c, 0x49, 0x43, 0x4f,
		0x4e, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x2f, 0x44, 0x49, 0x4a, 0x49, 0x54, 0x53, 0x55, 0x44,
		0x49, 0x4b, 0x4f, 0x4d, 0x44, 0x49, 0x4f, 0x52, 0x41, 0x44, 0x4d, 0x4d, 0x44, 0x72, 0x65, 0x61,
		0x6d, 0x62, 0x6f, 0x78, 0x4c, 0x47, 0x45, 0x2f, 0x4b, 0x4f, 0x4e, 0x4b, 0x41, 0x2f, 0x44, 0x59,
		0x4f, 0x4e, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x2d, 0x33, 0x32, 0x2d, 0x58, 0x2d, 0x45, 0x4f, 0x53,
		0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x33, 0x32, 0x20, 0x58, 0x2d, 0x45, 0x4f, 0x53, 0x45, 0x41,
		0x53, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x52,
		0x4f, 0x4e, 0x49, 0x41, 0x45, 0x4e, 0x44, 0x55, 0x52, 0x4f, 0x45, 0x6c, 0x65, 0x6b, 0x74, 0x72,
		0x6f, 0x6c, 0x61, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x4c, 0x55, 0x43,
		0x4b, 0x24, 0x31, 0x20, 0x54, 0x56, 0x46, 0x26, 0x55, 0x46, 0x49, 0x4e, 0x49, 0x58, 0x46, 0x49,
		0x54, 0x43, 0x4f, 0x46, 0x55, 0x4a, 0x49, 0x43, 0x4f, 0x4d, 0x47, 0x4e, 0x20, 0x45, 0x6c, 0x65,
		0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x47, 0x6f, 0x47, 0x45, 0x4e, 0x47, 0x37, 0x48,
		0x49, 0x47, 0x48, 0x31, 0x4f, 0x4e, 0x45, 0x48, 0x4f, 0x46, 0x45, 0x52, 0x48, 0x4f, 0x54, 0x41,
		0x43, 0x4b, 0x48, 0x55, 0x4d, 0x45, 0x6c, 0x61, 0x62, 0x4c, 0x45, 0x35, 0x35, 0x58, 0x37, 0x30,
		0x30, 0x30, 0x55, 0x48, 0x61, 0x6e, 0x73, 0x65, 0x61, 0x74, 0x69, 0x63, 0x33, 0x32, 0x41, 0x33,
		0x35, 0x45, 0x45, 0x56, 0x53, 0x34, 0x30, 0x41, 0x33, 0x35, 0x45, 0x45, 0x56, 0x53, 0x35, 0x30,
		0x41, 0x44, 0x45, 0x56, 0x54, 0x4f, 0x4f, 0x4c, 0x35, 0x30, 0x41, 0x35, 0x33, 0x46, 0x45, 0x56,
		0x53, 0x35, 0x30, 0x41, 0x36, 0x31, 0x30, 0x31, 0x45, 0x58, 0x35, 0x30, 0x41, 0x36, 0x38, 0x33,
		0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x41, 0x36, 0x31, 0x30, 0x30, 0x45, 0x45, 0x35, 0x35, 0x41,
		0x36, 0x39, 0x46, 0x45, 0x56, 0x53, 0x35, 0x35, 0x55, 0x36, 0x32, 0x51, 0x47, 0x41, 0x56, 0x54,
		0x35, 0x30, 0x41, 0x36, 0x35, 0x30, 0x32, 0x45, 0x41, 0x35, 0x30, 0x41, 0x36, 0x30, 0x47, 0x45,
		0x56, 0x53, 0x37, 0x35, 0x55, 0x39, 0x4b, 0x41, 0x41, 0x54, 0x4d, 0x49, 0x43, 0x41, 0x4c, 0x49,
		0x44, 0x56, 0x42, 0x36, 0x38, 0x38, 0x36, 0x34, 0x39, 0x44, 0x32, 0x39, 0x30, 0x30, 0x48, 0x6f,
		0x74, 0x65, 0x6c, 0x48, 0x4d, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x4d, 0x53, 0x2d, 0x31,
		0x30, 0x30, 0x30, 0x53, 0x46, 0x56, 0x50, 0x34, 0x30, 0x30, 0x30, 0x54, 0x46, 0x56, 0x50, 0x2d,
		0x34, 0x30, 0x30, 0x30, 0x54, 0x48, 0x47, 0x53, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x47, 0x53,
		0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44,
		0x52, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x53, 0x48, 0x44, 0x52, 0x34, 0x30, 0x30, 0x30, 0x54, 0x48,
		0x44, 0x52, 0x2d, 0x34, 0x30, 0x30, 0x30, 0x54, 0x49, 0x6b, 0x65, 0x61, 0x49, 0x6e, 0x74, 0x65,
		0x6b, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x6f, 0x41, 0x46, 0x54, 0x53, 0x4f, 0x30, 0x30, 0x31,
		0x34, 0x4b, 0x20, 0x28, 0x32, 0x30, 0x31, 0x39, 0x29, 0x4b, 0x55, 0x42, 0x4f, 0x33, 0x32, 0x44,
		0x31, 0x36, 0x32, 0x30, 0x4b, 0x65, 0x6e, 0x64, 0x6f, 0x4b, 0x79, 0x64, 0x6f, 0x73, 0x58, 0x55,
		0x34, 0x33, 0x57, 0x54, 0x31, 0x38, 0x30, 0x4e, 0x34, 0x33, 0x4c, 0x4a, 0x36, 0x31, 0x34, 0x56,
		0x2d, 0x5a, 0x41, 0x35, 0x35, 0x53, 0x4b, 0x38, 0x35, 0x30, 0x56, 0x2d, 0x5a, 0x41, 0x4b, 0x45,
		0x59, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x31, 0x7a, 0x4b, 0x45, 0x59, 0x30, 0x30,
		0x30, 0x30, 0x32, 0x31, 0x33, 0x46, 0x4b, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x24,
		0x31, 0x4c, 0x4d, 0x32, 0x31, 0x55, 0x33, 0x32, 0x4c, 0x4d, 0x4c, 0x61, 0x75, 0x72, 0x75, 0x73,
		0x4c, 0x69, 0x6e, 0x73, 0x61, 0x72, 0x4d, 0x45, 0x47, 0x41, 0x20, 0x56, 0x49, 0x53, 0x49, 0x4f,
		0x4e, 0x24, 0x31, 0x4b, 0x54, 0x56, 0x31, 0x38, 0x24, 0x31, 0x4b, 0x20, 0x41, 0x6e, 0x64, 0x72,
		0x6f, 0x69, 0x64, 0x20, 0x54, 0x56, 0x4d, 0x61, 0x6e, 0x68, 0x61, 0x74, 0x74, 0x61, 0x6e, 0x4d,
		0x49, 0x52, 0x41, 0x59, 0x4c, 0x45, 0x44, 0x4d, 0x2d, 0x33, 0x32, 0x32, 0x4e, 0x49, 0x50, 0x4e,
		0x41, 0x42, 0x4f, 0x4e, 0x49, 0x4c, 0x41, 0x49, 0x54, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x44,
		0x45, 0x4f, 0x43, 0x45, 0x41, 0x4e, 0x49, 0x43, 0x4f, 0x72, 0x61, 0x76, 0x61, 0x50, 0x50, 0x44,
		0x53, 0x50, 0x52, 0x4f, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x54, 0x58, 0x2d, 0x35, 0x30, 0x4a, 0x58,
		0x37, 0x30, 0x30, 0x45, 0x56, 0x49, 0x45, 0x52, 0x41, 0x20, 0x28, 0x24, 0x31, 0x29, 0x44, 0x49,
		0x47, 0x41, 0x20, 0x24, 0x31, 0x53, 0x43, 0x48, 0x41, 0x55, 0x42, 0x20, 0x4c, 0x4f, 0x52, 0x45,
		0x4e, 0x5a, 0x53, 0x43, 0x48, 0x4f, 0x4e, 0x54, 0x45, 0x43, 0x48, 0x53, 0x45, 0x48, 0x4d, 0x41,
		0x58, 0x53, 0x55, 0x4c, 0x50, 0x49, 0x43, 0x45, 0x20, 0x54, 0x56, 0x4d, 0x61, 0x70, 0x6c, 0x65,
		0x5f, 0x32, 0x30, 0x31, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x54, 0x56, 0x20, 0x28, 0x32,
		0x30, 0x31, 0x31, 0x29, 0x53, 0x65, 0x6c, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x43,
		0x2d, 0x24, 0x31, 0x42, 0x4c, 0x41, 0x2d, 0x34, 0x33, 0x55, 0x4d, 0x43, 0x5f, 0x32, 0x4b, 0x41,
		0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x56, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x55, 0x4d, 0x43,
		0x5f, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x56, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x55,
		0x4d, 0x43, 0x5f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x56, 0x5f, 0x32, 0x30, 0x31, 0x39,
		0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x20, 0x54, 0x56, 0x53, 0x69, 0x6c, 0x76, 0x61, 0x20, 0x53,
		0x63, 0x68, 0x6e, 0x65, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x47, 0x45, 0x2f, 0x57, 0x41, 0x4c, 0x54,
		0x4f, 0x4e, 0x2f, 0x53, 0x4b, 0x59, 0x54, 0x45, 0x43, 0x48, 0x53, 0x4b, 0x57, 0x45, 0x32, 0x30,
		0x45, 0x32, 0x31, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x20, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
		0x6e, 0x69, 0x63, 0x53, 0x6f, 0x6c, 0x61, 0x73, 0x4b, 0x44, 0x4c, 0x2d, 0x47, 0x4e, 0x24, 0x31,
		0x42, 0x52, 0x41, 0x56, 0x49, 0x41, 0x20, 0x24, 0x31, 0x53, 0x74, 0x61, 0x72, 0x2d, 0x4c, 0x69,
		0x67, 0x68, 0x74, 0x54, 0x41, 0x4c, 0x42, 0x45, 0x52, 0x47, 0x54, 0x43, 0x4c, 0x20, 0x53, 0x43,
		0x42, 0x43, 0x53, 0x43, 0x42, 0x43, 0x35, 0x38, 0x36, 0x34, 0x33, 0x44, 0x31, 0x38, 0x35, 0x30,
		0x54, 0x4f, 0x4b, 0x59, 0x4f, 0x54, 0x4f, 0x4b, 0x54, 0x43, 0x4c, 0x45, 0x44, 0x33, 0x32, 0x53,
		0x54, 0x55, 0x43, 0x53, 0x4f, 0x4e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x6f, 0x6c, 0x6f,
		0x72, 0x75, 0x7a, 0x77, 0x34, 0x30, 0x35, 0x34, 0x74, 0x74, 0x67, 0x55, 0x5a, 0x57, 0x34, 0x30,
		0x35, 0x34, 0x54, 0x54, 0x47, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x6b, 0x61, 0x54, 0x65, 0x63,
		0x68, 0x6e, 0x6f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x24, 0x31, 0x20, 0x32, 0x38, 0x2e, 0x30, 0x22,
		0x24, 0x31, 0x20, 0x33, 0x32, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x33, 0x2e, 0x30, 0x22,
		0x24, 0x31, 0x20, 0x34, 0x30, 0x2e, 0x30, 0x22, 0x24, 0x31, 0x20, 0x34, 0x39, 0x2e, 0x30, 0x22,
		0x24, 0x31, 0x20, 0x35, 0x35, 0x2e, 0x30, 0x22, 0x34, 0x30, 0x46, 0x42, 0x35, 0x34, 0x32, 0x36,
		0x54, 0x6f, 0x70, 0x2d, 0x54, 0x65, 0x63, 0x68, 0x34, 0x30, 0x4c, 0x32, 0x36, 0x30, 0x30, 0x54,
		0x73, 0x69, 0x6e, 0x67, 0x68, 0x75, 0x61, 0x20, 0x54, 0x6f, 0x6e, 0x67, 0x66, 0x61, 0x6e, 0x67,
		0x4c, 0x45, 0x34, 0x30, 0x47, 0x59, 0x31, 0x35, 0x55, 0x4e, 0x49, 0x54, 0x45, 0x44, 0x56, 0x41,
		0x4e, 0x47, 0x55, 0x41, 0x52, 0x44, 0x56, 0x4f, 0x52, 0x54, 0x45, 0x58, 0x20, 0x28, 0x52, 0x4f,
		0x29, 0x56, 0x4f, 0x58, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x77, 0x65, 0x62, 0x56, 0x69, 0x64, 0x65,
		0x6f, 0x57, 0x65, 0x62, 0x20, 0x54, 0x56, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x63, 0x68, 0x57,
		0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x54, 0x4f, 0x4e, 0x57, 0x4f, 0x4e, 0x44, 0x45, 0x52, 0x57,
		0x61, 0x6c, 0x74, 0x68, 0x61, 0x6d, 0x57, 0x65, 0x2e, 0x20, 0x62, 0x79, 0x20, 0x4c, 0x6f, 0x65,
		0x77, 0x65, 0x2e, 0x34, 0x33, 0x41, 0x37, 0x31, 0x46, 0x45, 0x56, 0x53, 0x58, 0x2e, 0x56, 0x69,
		0x73, 0x69, 0x6f, 0x6e, 0x41, 0x46, 0x54, 0x41, 0x4e, 0x4e, 0x41, 0x30, 0x46, 0x32, 0x20, 0x34,
		0x4b, 0x20, 0x28, 0x32, 0x30, 0x32, 0x32, 0x29, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x73, 0x6f,
		0x6e, 0x63, 0x6f, 0x6f, 0x63, 0x61, 0x61, 0x65, 0x6c, 0x69, 0x74, 0x4c, 0x47, 0x45, 0x2f, 0x57,
		0x41, 0x4c, 0x54, 0x4f, 0x4e, 0x2f, 0x53, 0x49, 0x4d, 0x46, 0x45, 0x52,
	}
)
